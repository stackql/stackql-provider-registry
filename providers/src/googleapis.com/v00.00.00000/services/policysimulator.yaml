openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Policy Simulator API
  description: ' Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members'' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members'' access might change under the proposed policy.'
  version: v1
  x-discovery-doc-revision: '20240526'
  x-generated-date: '2024-06-02'
externalDocs:
  url: https://cloud.google.com/iam/docs/simulating-access
servers:
  - url: https://policysimulator.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview:
      properties:
        violationsCount:
          description: >-
            Output only. The number of OrgPolicyViolations in this
            `OrgPolicyViolationsPreview`. This count may differ from
            `resource_summary.noncompliant_count` because each
            OrgPolicyViolation is specific to a resource **and** constraint. If
            there are multiple constraints being evaluated (i.e. multiple
            policies in the overlay), a single resource may violate multiple
            constraints.
          readOnly: true
          type: integer
          format: int32
        state:
          description: Output only. The state of the `OrgPolicyViolationsPreview`.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          type: string
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          readOnly: true
        resourceCounts:
          description: >-
            Output only. A summary of the state of all resources scanned for
            compliance with the changed OrgPolicy.
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          description: >-
            Output only. Time when this `OrgPolicyViolationsPreview` was
            created.
          readOnly: true
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the `OrgPolicyViolationsPreview`.
            It has the following format:
            `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
            Example:
            `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        customConstraints:
          description: >-
            Output only. The names of the constraints against which all
            `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only
            contains `PolicyOverlay` then it contains the name of the configured
            custom constraint, applicable to the specified policies. Otherwise
            it contains the name of the constraint specified in
            `CustomConstraintOverlay`. Format:
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
          items:
            type: string
          type: array
          readOnly: true
        overlay:
          description: Required. The proposed changes we are previewing violations for.
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
      description: >-
        OrgPolicyViolationsPreview is a resource providing a preview of the
        violations that will exist if an OrgPolicy change is made. The list of
        violations are modeled as child resources and retrieved via a
        ListOrgPolicyViolations API call. There are potentially more
        OrgPolicyViolations than could fit in an embedded field. Thus, the use
        of a child resource instead of a field.
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview
      type: object
    GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts:
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts
      properties:
        compliant:
          type: integer
          readOnly: true
          format: int32
          description: Output only. Number of scanned resources with zero violations.
        errors:
          description: >-
            Output only. Number of resources that returned an error when
            scanned.
          type: integer
          format: int32
          readOnly: true
        noncompliant:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. Number of scanned resources with at least one
            violation.
        scanned:
          type: integer
          description: >-
            Output only. Number of resources checked for compliance. Must equal:
            unenforced + noncompliant + compliant + error
          readOnly: true
          format: int32
        unenforced:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. Number of resources where the constraint was not
            enforced, i.e. the Policy set `enforced: false` for that resource.
      type: object
      description: >-
        A summary of the state of all resources scanned for compliance with the
        changed OrgPolicy.
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Optional. The new or updated OrgPolicy.
        policyParent:
          description: >-
            Optional. The parent of the policy we are attaching to. Example:
            "projects/123456"
          type: string
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay
      description: A change to an OrgPolicy.
    GoogleCloudOrgpolicyV2PolicySpecPolicyRule:
      id: GoogleCloudOrgpolicyV2PolicySpecPolicyRule
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: >-
            A condition which determines whether this rule is used in the
            evaluation of the policy. When set, the `expression` field in the
            `Expr' must include from 1 to 10 subexpressions, joined by the "||"
            or "&&" operators. Each subexpression must be of the form
            "resource.matchTag('/tag_key_short_name, 'tag_value_short_name')".
            or "resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')".
            where key_name and value_name are the resource names for Label Keys
            and Values. These names are available from the Tag Manager Service.
            An example expression is: "resource.matchTag('123456789/environment,
            'prod')". or "resource.matchTagId('tagKeys/123', 'tagValues/456')".
        enforce:
          description: >-
            If `true`, then the policy is enforced. If `false`, then any
            configuration is acceptable. This field can be set only in policies
            for boolean constraints.
          type: boolean
        values:
          $ref: >-
            #/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
          description: >-
            List of values to be used for this policy rule. This field can be
            set only in policies for list constraints.
        denyAll:
          description: >-
            Setting this to true means that all values are denied. This field
            can be set only in policies for list constraints.
          type: boolean
        allowAll:
          description: >-
            Setting this to true means that all values are allowed. This field
            can be set only in policies for list constraints.
          type: boolean
      description: A rule used to express this policy.
    GoogleLongrunningListOperationsResponse:
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
    GoogleCloudOrgpolicyV2Policy:
      id: GoogleCloudOrgpolicyV2Policy
      type: object
      description: >-
        Defines an organization policy which is used to specify constraints for
        configurations of Google Cloud resources.
      properties:
        etag:
          type: string
          description: >-
            Optional. An opaque tag indicating the current state of the policy,
            used for concurrency control. This 'etag' is computed by the server
            based on the value of other fields, and may be sent on update and
            delete requests to ensure the client has an up-to-date value before
            proceeding.
        spec:
          description: Basic information about the Organization Policy.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
        name:
          type: string
          description: >-
            Immutable. The resource name of the policy. Must be one of the
            following forms, where `constraint_name` is the name of the
            constraint which this policy configures: *
            `projects/{project_number}/policies/{constraint_name}` *
            `folders/{folder_id}/policies/{constraint_name}` *
            `organizations/{organization_id}/policies/{constraint_name}` For
            example, `projects/123/policies/compute.disableSerialPortAccess`.
            Note: `projects/{project_id}/policies/{constraint_name}` is also an
            acceptable name for API requests, but responses will return the name
            using the equivalent project number.
        alternate:
          deprecated: true
          description: Deprecated.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2AlternatePolicySpec'
        dryRunSpec:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
          description: >-
            Dry-run policy. Audit-only policy, can be used to monitor how the
            policy would have impacted the existing and future resources if it's
            enforced.
    GoogleTypeExpr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
      id: GoogleTypeExpr
      type: object
    GoogleCloudPolicysimulatorV1OrgPolicyViolation:
      type: object
      id: GoogleCloudPolicysimulatorV1OrgPolicyViolation
      properties:
        customConstraint:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
          description: The custom constraint being violated.
        resource:
          description: The resource violating the constraint.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ResourceContext'
        error:
          description: Any error encountered during the evaluation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        name:
          type: string
          description: >-
            The name of the `OrgPolicyViolation`. Example:
            organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f/orgPolicyViolations/38ce`
      description: >-
        OrgPolicyViolation is a resource representing a single resource
        violating a single OrgPolicy constraint.
    GoogleCloudPolicysimulatorV1ReplayOperationMetadata:
      description: Metadata about a Replay operation.
      properties:
        startTime:
          format: google-datetime
          type: string
          description: Time when the request was received.
      id: GoogleCloudPolicysimulatorV1ReplayOperationMetadata
      type: object
    GoogleCloudPolicysimulatorV1betaCreateOrgPolicyViolationsPreviewOperationMetadata:
      id: >-
        GoogleCloudPolicysimulatorV1betaCreateOrgPolicyViolationsPreviewOperationMetadata
      properties:
        state:
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: Output only. The current state of the operation.
          type: string
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          readOnly: true
        resourcesScanned:
          type: integer
          description: Number of resources already scanned.
          format: int32
        resourcesFound:
          type: integer
          format: int32
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
        resourcesPending:
          type: integer
          description: Number of resources still to scan.
          format: int32
        requestTime:
          format: google-datetime
          type: string
          description: Time when the request was received.
        startTime:
          type: string
          format: google-datetime
          description: >-
            Time when the request started processing, i.e., when the state was
            set to RUNNING.
      description: >-
        CreateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      type: object
    GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview:
      description: >-
        OrgPolicyViolationsPreview is a resource providing a preview of the
        violations that will exist if an OrgPolicy change is made. The list of
        violations are modeled as child resources and retrieved via a
        ListOrgPolicyViolations API call. There are potentially more
        OrgPolicyViolations than could fit in an embedded field. Thus, the use
        of a child resource instead of a field.
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview
      type: object
      properties:
        createTime:
          description: >-
            Output only. Time when this `OrgPolicyViolationsPreview` was
            created.
          readOnly: true
          type: string
          format: google-datetime
        customConstraints:
          type: array
          items:
            type: string
          description: >-
            Output only. The names of the constraints against which all
            `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only
            contains `PolicyOverlay` then it contains the name of the configured
            custom constraint, applicable to the specified policies. Otherwise
            it contains the name of the constraint specified in
            `CustomConstraintOverlay`. Format:
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
          readOnly: true
        resourceCounts:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts
          description: >-
            Output only. A summary of the state of all resources scanned for
            compliance with the changed OrgPolicy.
          readOnly: true
        violationsCount:
          type: integer
          format: int32
          description: >-
            Output only. The number of OrgPolicyViolations in this
            `OrgPolicyViolationsPreview`. This count may differ from
            `resource_summary.noncompliant_count` because each
            OrgPolicyViolation is specific to a resource **and** constraint. If
            there are multiple constraints being evaluated (i.e. multiple
            policies in the overlay), a single resource may violate multiple
            constraints.
          readOnly: true
        overlay:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay
          description: Required. The proposed changes we are previewing violations for.
        state:
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          type: string
          description: Output only. The state of the `OrgPolicyViolationsPreview`.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          readOnly: true
        name:
          type: string
          description: >-
            Output only. The resource name of the `OrgPolicyViolationsPreview`.
            It has the following format:
            `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
            Example:
            `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
          readOnly: true
    GoogleCloudPolicysimulatorV1Replay:
      description: A resource describing a `Replay`, or simulation.
      properties:
        state:
          enumDescriptions:
            - Default value. This value is unused.
            - The `Replay` has not started yet.
            - The `Replay` is currently running.
            - The `Replay` has successfully completed.
            - The `Replay` has finished with an error.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          type: string
          readOnly: true
          description: Output only. The current state of the `Replay`.
        config:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayConfig'
          description: Required. The configuration used for the `Replay`.
        name:
          readOnly: true
          description: >-
            Output only. The resource name of the `Replay`, which has the
            following format:
            `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`,
            where `{resource-id}` is the ID of the project, folder, or
            organization that owns the Replay. Example:
            `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
          type: string
        resultsSummary:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1ReplayResultsSummary
          description: Output only. Summary statistics about the replayed log entries.
          readOnly: true
      id: GoogleCloudPolicysimulatorV1Replay
      type: object
    GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata:
      properties:
        requestTime:
          description: Time when the request was received.
          type: string
          format: google-datetime
        startTime:
          format: google-datetime
          description: >-
            Time when the request started processing, i.e. when the state was
            set to RUNNING.
          type: string
        state:
          description: The current state of the operation.
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          type: string
        resourcesPending:
          type: integer
          format: int32
          description: Number of resources still to scan.
        resourcesScanned:
          description: Number of resources already scanned.
          type: integer
          format: int32
        resourcesFound:
          format: int32
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
          type: integer
      description: >-
        GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      type: object
      id: >-
        GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata
    GoogleCloudPolicysimulatorV1BindingExplanation:
      description: >-
        Details about how a binding in a policy affects a principal's ability to
        use a permission.
      id: GoogleCloudPolicysimulatorV1BindingExplanation
      properties:
        condition:
          description: >-
            A condition expression that prevents this binding from granting
            access unless the expression evaluates to `true`. To learn about IAM
            Conditions, see
            https://cloud.google.com/iam/docs/conditions-overview.
          $ref: '#/components/schemas/GoogleTypeExpr'
        rolePermission:
          enum:
            - ROLE_PERMISSION_UNSPECIFIED
            - ROLE_PERMISSION_INCLUDED
            - ROLE_PERMISSION_NOT_INCLUDED
            - ROLE_PERMISSION_UNKNOWN_INFO_DENIED
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The permission is included in the role.
            - The permission is not included in the role.
            - >-
              The user who created the Replay is not allowed to access the
              binding.
          description: >-
            Indicates whether the role granted by this binding contains the
            specified permission.
        access:
          type: string
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          description: >-
            Required. Indicates whether _this binding_ provides the specified
            permission to the specified principal for the specified resource.
            This field does _not_ indicate whether the principal actually has
            the permission for the resource. There might be another binding that
            overrides this binding. To determine whether the principal actually
            has the permission, use the `access` field in the
            TroubleshootIamPolicyResponse.
        role:
          type: string
          description: >-
            The role that this binding grants. For example,
            `roles/compute.serviceAgent`. For a complete list of predefined IAM
            roles, as well as the permissions in each role, see
            https://cloud.google.com/iam/help/roles/reference.
        rolePermissionRelevance:
          type: string
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          description: >-
            The relevance of the permission's existence, or nonexistence, in the
            role to the overall determination for the entire policy.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
        memberships:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
          description: >-
            Indicates whether each principal in the binding includes the
            principal specified in the request, either directly or indirectly.
            Each key identifies a principal in the binding, and each value
            indicates whether the principal in the binding includes the
            principal in the request. For example, suppose that a binding
            includes the following principals: * `user:alice@example.com` *
            `group:product-eng@example.com` The principal in the replayed access
            tuple is `user:bob@example.com`. This user is a principal of the
            group `group:product-eng@example.com`. For the first principal in
            the binding, the key is `user:alice@example.com`, and the
            `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`.
            For the second principal in the binding, the key is
            `group:product-eng@example.com`, and the `membership` field in the
            value is set to `MEMBERSHIP_INCLUDED`.
        relevance:
          type: string
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          description: >-
            The relevance of this binding to the overall determination for the
            entire policy.
      type: object
    GoogleCloudPolicysimulatorV1AccessStateDiff:
      properties:
        accessChange:
          enum:
            - ACCESS_CHANGE_TYPE_UNSPECIFIED
            - NO_CHANGE
            - UNKNOWN_CHANGE
            - ACCESS_REVOKED
            - ACCESS_GAINED
            - ACCESS_MAYBE_REVOKED
            - ACCESS_MAYBE_GAINED
          description: >-
            How the principal's access, specified in the AccessState field,
            changed between the current (baseline) policies and proposed
            (simulated) policies.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The principal's access did not change. This includes the case
              where both baseline and simulated are UNKNOWN, but the unknown
              information is equivalent.
            - >-
              The principal's access under both the current policies and the
              proposed policies is `UNKNOWN`, but the unknown information
              differs between them.
            - >-
              The principal had access under the current policies (`GRANTED`),
              but will no longer have access after the proposed changes
              (`NOT_GRANTED`).
            - >-
              The principal did not have access under the current policies
              (`NOT_GRANTED`), but will have access after the proposed changes
              (`GRANTED`).
            - >-
              This result can occur for the following reasons: * The principal
              had access under the current policies (`GRANTED`), but their
              access after the proposed changes is `UNKNOWN`. * The principal's
              access under the current policies is `UNKNOWN`, but they will not
              have access after the proposed changes (`NOT_GRANTED`).
            - >-
              This result can occur for the following reasons: * The principal
              did not have access under the current policies (`NOT_GRANTED`),
              but their access after the proposed changes is `UNKNOWN`. * The
              principal's access under the current policies is `UNKNOWN`, but
              they will have access after the proposed changes (`GRANTED`).
          type: string
        simulated:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedAccess'
          description: >-
            The results of evaluating the access tuple under the proposed
            (simulated) policies. If the AccessState couldn't be fully
            evaluated, this field explains why.
        baseline:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedAccess'
          description: >-
            The results of evaluating the access tuple under the current
            (baseline) policies. If the AccessState couldn't be fully evaluated,
            this field explains why.
      id: GoogleCloudPolicysimulatorV1AccessStateDiff
      type: object
      description: >-
        A summary and comparison of the principal's access under the current
        (baseline) policies and the proposed (simulated) policies for a single
        access tuple.
    GoogleTypeDate:
      id: GoogleTypeDate
      properties:
        day:
          format: int32
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
        year:
          format: int32
          type: integer
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
        month:
          type: integer
          format: int32
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
      type: object
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
    GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership:
      description: Details about whether the binding includes the principal.
      type: object
      properties:
        relevance:
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          type: string
          description: >-
            The relevance of the principal's status to the overall determination
            for the binding.
        membership:
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The binding includes the principal. The principal can be included
              directly or indirectly. For example: * A principal is included
              directly if that principal is listed in the binding. * A principal
              is included indirectly if that principal is in a Google group or
              Google Workspace domain that is listed in the binding.
            - The binding does not include the principal.
            - >-
              The user who created the Replay is not allowed to access the
              binding.
            - >-
              The principal is an unsupported type. Only Google Accounts and
              service accounts are supported.
          type: string
          enum:
            - MEMBERSHIP_UNSPECIFIED
            - MEMBERSHIP_INCLUDED
            - MEMBERSHIP_NOT_INCLUDED
            - MEMBERSHIP_UNKNOWN_INFO_DENIED
            - MEMBERSHIP_UNKNOWN_UNSUPPORTED
          description: Indicates whether the binding includes the principal.
      id: GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
    GoogleCloudOrgpolicyV2AlternatePolicySpec:
      id: GoogleCloudOrgpolicyV2AlternatePolicySpec
      type: object
      description: >-
        Similar to PolicySpec but with an extra 'launch' field for launch
        reference. The PolicySpec here is specific for dry-run/darklaunch.
      properties:
        spec:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
          description: Specify constraint for configurations of Google Cloud resources.
        launch:
          type: string
          description: >-
            Reference to the launch that will be used while audit logging and to
            control the launch. Should be set only in the alternate policy.
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay:
      description: A change to an OrgPolicy custom constraint.
      type: object
      properties:
        customConstraintParent:
          type: string
          description: >-
            Optional. Resource the constraint is attached to. Example:
            "organization/987654"
        customConstraint:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
          description: Optional. The new or updated custom constraint.
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay
    GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreview:
      type: object
      id: GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreview
      properties:
        overlay:
          description: Required. The proposed changes we are previewing violations for.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyOverlay'
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the `OrgPolicyViolationsPreview`.
            It has the following format:
            `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
            Example:
            `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        violationsCount:
          description: >-
            Output only. The number of OrgPolicyViolations in this
            `OrgPolicyViolationsPreview`. This count may differ from
            `resource_summary.noncompliant_count` because each
            OrgPolicyViolation is specific to a resource **and** constraint. If
            there are multiple constraints being evaluated (i.e. multiple
            policies in the overlay), a single resource may violate multiple
            constraints.
          type: integer
          format: int32
          readOnly: true
        customConstraints:
          type: array
          items:
            type: string
          readOnly: true
          description: >-
            Output only. The names of the constraints against which all
            `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only
            contains `PolicyOverlay` then it contains the name of the configured
            custom constraint, applicable to the specified policies. Otherwise
            it contains the name of the constraint specified in
            `CustomConstraintOverlay`. Format:
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
        resourceCounts:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreviewResourceCounts
          description: >-
            Output only. A summary of the state of all resources scanned for
            compliance with the changed OrgPolicy.
          readOnly: true
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: Output only. The state of the `OrgPolicyViolationsPreview`.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
        createTime:
          type: string
          readOnly: true
          description: >-
            Output only. Time when this `OrgPolicyViolationsPreview` was
            created.
          format: google-datetime
      description: >-
        OrgPolicyViolationsPreview is a resource providing a preview of the
        violations that will exist if an OrgPolicy change is made. The list of
        violations are modeled as child resources and retrieved via a
        ListOrgPolicyViolations API call. There are potentially more
        OrgPolicyViolations than could fit in an embedded field. Thus, the use
        of a child resource instead of a field.
    GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata:
      type: object
      properties:
        requestTime:
          description: Time when the request was received.
          format: google-datetime
          type: string
        resourcesPending:
          type: integer
          description: Number of resources still to scan.
          format: int32
        state:
          type: string
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: The current state of the operation.
        resourcesScanned:
          description: Number of resources already scanned.
          type: integer
          format: int32
        startTime:
          type: string
          description: >-
            Time when the request started processing, i.e. when the state was
            set to RUNNING.
          format: google-datetime
        resourcesFound:
          type: integer
          format: int32
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
      description: >-
        GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      id: >-
        GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata
    GoogleCloudPolicysimulatorV1AccessTuple:
      id: GoogleCloudPolicysimulatorV1AccessTuple
      type: object
      description: Information about the principal, resource, and permission to check.
      properties:
        permission:
          type: string
          description: >-
            Required. The IAM permission to check for the specified principal
            and resource. For a complete list of IAM permissions, see
            https://cloud.google.com/iam/help/permissions/reference. For a
            complete list of predefined IAM roles and the permissions in each
            role, see https://cloud.google.com/iam/help/roles/reference.
        principal:
          type: string
          description: >-
            Required. The principal whose access you want to check, in the form
            of the email address that represents that principal. For example,
            `alice@example.com` or
            `my-service-account@my-project.iam.gserviceaccount.com`. The
            principal must be a Google Account or a service account. Other types
            of principals are not supported.
        fullResourceName:
          description: >-
            Required. The full resource name that identifies the resource. For
            example,
            `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
            For examples of full resource names for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
          type: string
    GoogleCloudPolicysimulatorV1OrgPolicyOverlayCustomConstraintOverlay:
      type: object
      description: A change to an OrgPolicy custom constraint.
      id: GoogleCloudPolicysimulatorV1OrgPolicyOverlayCustomConstraintOverlay
      properties:
        customConstraint:
          description: Optional. The new or updated custom constraint.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
        customConstraintParent:
          type: string
          description: >-
            Optional. Resource the constraint is attached to. Example:
            "organization/987654"
    GoogleCloudPolicysimulatorV1ExplainedAccess:
      properties:
        accessState:
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
          description: >-
            Whether the principal in the access tuple has permission to access
            the resource in the access tuple under the given policies.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            If the AccessState is `UNKNOWN`, this field contains a list of
            errors explaining why the result is `UNKNOWN`. If the `AccessState`
            is `GRANTED` or `NOT_GRANTED`, this field is omitted.
        policies:
          items:
            $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedPolicy'
          type: array
          description: >-
            If the AccessState is `UNKNOWN`, this field contains the policies
            that led to that result. If the `AccessState` is `GRANTED` or
            `NOT_GRANTED`, this field is omitted.
      description: >-
        Details about how a set of policies, listed in ExplainedPolicy, resulted
        in a certain AccessState when replaying an access tuple.
      id: GoogleCloudPolicysimulatorV1ExplainedAccess
      type: object
    GoogleIamV1Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      id: GoogleIamV1Policy
      properties:
        etag:
          format: byte
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
    GoogleCloudPolicysimulatorV1ReplayDiff:
      type: object
      properties:
        accessDiff:
          description: >-
            A summary and comparison of the principal's access under the current
            (baseline) policies and the proposed (simulated) policies for a
            single access tuple. The evaluation of the principal's access is
            reported in the AccessState field.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1AccessStateDiff'
      id: GoogleCloudPolicysimulatorV1ReplayDiff
      description: >-
        The difference between the results of evaluating an access tuple under
        the current (baseline) policies and under the proposed (simulated)
        policies. This difference explains how a principal's access could change
        if the proposed policies were applied.
    GoogleCloudPolicysimulatorV1ReplayResultsSummary:
      properties:
        oldestDate:
          $ref: '#/components/schemas/GoogleTypeDate'
          description: The date of the oldest log entry replayed.
        logCount:
          format: int32
          type: integer
          description: The total number of log entries replayed.
        unchangedCount:
          format: int32
          description: >-
            The number of replayed log entries with no difference between
            baseline and simulated policies.
          type: integer
        newestDate:
          $ref: '#/components/schemas/GoogleTypeDate'
          description: The date of the newest log entry replayed.
        errorCount:
          type: integer
          description: The number of log entries that could not be replayed.
          format: int32
        differenceCount:
          format: int32
          description: >-
            The number of replayed log entries with a difference between
            baseline and simulated policies.
          type: integer
      type: object
      description: Summary statistics about the replayed log entries.
      id: GoogleCloudPolicysimulatorV1ReplayResultsSummary
    GoogleCloudPolicysimulatorV1ReplayResult:
      description: The result of replaying a single access tuple against a simulated state.
      id: GoogleCloudPolicysimulatorV1ReplayResult
      properties:
        lastSeenDate:
          $ref: '#/components/schemas/GoogleTypeDate'
          description: The latest date this access tuple was seen in the logs.
        diff:
          description: >-
            The difference between the principal's access under the current
            (baseline) policies and the principal's access under the proposed
            (simulated) policies. This field is only included for access tuples
            that were successfully replayed and had different results under the
            current policies and the proposed policies.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayDiff'
        parent:
          type: string
          description: The Replay that the access tuple was included in.
        accessTuple:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1AccessTuple'
          description: >-
            The access tuple that was replayed. This field includes information
            about the principal, resource, and permission that were involved in
            the access attempt.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error that caused the access tuple replay to fail. This field is
            only included for access tuples that were not replayed successfully.
        name:
          description: >-
            The resource name of the `ReplayResult`, in the following format:
            `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`,
            where `{resource-id}` is the ID of the project, folder, or
            organization that owns the Replay. Example:
            `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
          type: string
      type: object
    GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay:
      type: object
      description: A change to an OrgPolicy.
      properties:
        policy:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Optional. The new or updated OrgPolicy.
        policyParent:
          type: string
          description: >-
            Optional. The parent of the policy we are attaching to. Example:
            "projects/123456"
      id: GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay
    GoogleIamV1AuditLogConfig:
      type: object
      id: GoogleIamV1AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          type: array
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
        logType:
          type: string
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
    GoogleIamV1Binding:
      description: Associates `members`, or principals, with a `role`.
      type: object
      id: GoogleIamV1Binding
      properties:
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
        members:
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay:
      type: object
      properties:
        customConstraintParent:
          type: string
          description: >-
            Optional. Resource the constraint is attached to. Example:
            "organization/987654"
        customConstraint:
          description: Optional. The new or updated custom constraint.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay
      description: A change to an OrgPolicy custom constraint.
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay:
      type: object
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay
      properties:
        customConstraints:
          description: >-
            Optional. The OrgPolicy CustomConstraint changes to preview
            violations for. Any existing CustomConstraints with the same name
            will be overridden in the simulation. That is, violations will be
            determined as if all custom constraints in the overlay were
            instantiated. Only a single custom_constraint is supported in the
            overlay at a time. For evaluating multiple constraints, multiple
            `GenerateOrgPolicyViolationsPreview` requests are made, where each
            request evaluates a single constraint.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay
          type: array
        policies:
          description: >-
            Optional. The OrgPolicy changes to preview violations for. Any
            existing OrgPolicies with the same name will be overridden in the
            simulation. That is, violations will be determined as if all
            policies in the overlay were created or updated.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay
          type: array
      description: The proposed changes to OrgPolicy.
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay:
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay
      description: A change to an OrgPolicy.
      properties:
        policy:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Optional. The new or updated OrgPolicy.
        policyParent:
          description: >-
            Optional. The parent of the policy we are attaching to. Example:
            "projects/123456"
          type: string
      type: object
    GoogleCloudPolicysimulatorV1ResourceContext:
      properties:
        assetType:
          type: string
          description: >-
            The asset type of the resource as defined by CAIS. Example:
            `compute.googleapis.com/Firewall` See [Supported asset
            types](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
            for more information.
        resource:
          type: string
          description: >-
            The full name of the resource. Example:
            `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`
            See [Resource
            names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
            for more information.
        ancestors:
          items:
            type: string
          type: array
          description: >-
            The ancestry path of the resource in Google Cloud [resource
            hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),
            represented as a list of relative resource names. An ancestry path
            starts with the closest ancestor in the hierarchy and ends at root.
            If the resource is a project, folder, or organization, the ancestry
            path starts from the resource itself. Example:
            `["projects/123456789", "folders/5432", "organizations/1234"]`
      id: GoogleCloudPolicysimulatorV1ResourceContext
      type: object
      description: >-
        ResourceContext provides the context we know about a resource. It is
        similar in concept to google.cloud.asset.v1.Resource, but focuses on the
        information specifically used by Simulator.
    GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsPreviewsResponse:
      id: GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsPreviewsResponse
      type: object
      properties:
        nextPageToken:
          description: >-
            A token that you can use to retrieve the next page of results. If
            this field is omitted, there are no subsequent pages.
          type: string
        orgPolicyViolationsPreviews:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreview
          description: The list of OrgPolicyViolationsPreview
      description: >-
        ListOrgPolicyViolationsPreviewsResponse is the response message for
        OrgPolicyViolationsPreviewService.ListOrgPolicyViolationsPreviews.
    GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues:
      properties:
        deniedValues:
          type: array
          items:
            type: string
          description: List of values denied at this resource.
        allowedValues:
          description: List of values allowed at this resource.
          items:
            type: string
          type: array
      id: GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
      type: object
      description: >-
        A message that holds specific allowed and denied values. This message
        can define specific values and subtrees of the Resource Manager resource
        hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or
        denied. This is achieved by using the `under:` and optional `is:`
        prefixes. The `under:` prefix is used to denote resource subtree values.
        The `is:` prefix is used to denote specific values, and is required only
        if the value contains a ":". Values prefixed with "is:" are treated the
        same as values with no prefix. Ancestry subtrees must be in one of the
        following formats: - `projects/` (for example,
        `projects/tokyo-rain-123`) - `folders/` (for example, `folders/1234`) -
        `organizations/` (for example, `organizations/1234`) The
        `supports_under` field of the associated `Constraint` defines whether
        ancestry prefixes can be used.
    GoogleCloudPolicysimulatorV1alphaCreateOrgPolicyViolationsPreviewOperationMetadata:
      description: >-
        CreateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      properties:
        resourcesScanned:
          description: Number of resources already scanned.
          format: int32
          type: integer
        resourcesFound:
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
          type: integer
          format: int32
        startTime:
          type: string
          description: >-
            Time when the request started processing, i.e., when the state was
            set to RUNNING.
          format: google-datetime
        requestTime:
          type: string
          format: google-datetime
          description: Time when the request was received.
        state:
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: Output only. The current state of the operation.
          readOnly: true
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          type: string
        resourcesPending:
          description: Number of resources still to scan.
          format: int32
          type: integer
      type: object
      id: >-
        GoogleCloudPolicysimulatorV1alphaCreateOrgPolicyViolationsPreviewOperationMetadata
    GoogleCloudOrgpolicyV2CustomConstraint:
      type: object
      id: GoogleCloudOrgpolicyV2CustomConstraint
      description: >-
        A custom constraint defined by customers which can *only* be applied to
        the given resource types and organization. By creating a custom
        constraint, customers can apply policies of this custom constraint.
        *Creating a custom constraint itself does NOT apply any policy
        enforcement*.
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The last time this custom constraint was updated. This
            represents the last time that the `CreateCustomConstraint` or
            `UpdateCustomConstraint` RPC was called
          type: string
        actionType:
          description: Allow or deny type.
          type: string
          enumDescriptions:
            - Unspecified. Results in an error.
            - Allowed action type.
            - Deny action type.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - ALLOW
            - DENY
        condition:
          type: string
          description: >-
            Org policy condition/expression. For example:
            `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
            `resource.management.auto_upgrade == true` The max length of the
            condition is 1000 characters.
        description:
          description: >-
            Detailed information about this custom policy constraint. The max
            length of the description is 2000 characters.
          type: string
        name:
          description: >-
            Immutable. Name of the constraint. This is unique within the
            organization. Format of the name should be *
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The
            max length is 70 characters and the minimum length is 1. Note that
            the prefix `organizations/{organization_id}/customConstraints/` is
            not counted.
          type: string
        methodTypes:
          description: All the operations being applied for this constraint.
          type: array
          items:
            enum:
              - METHOD_TYPE_UNSPECIFIED
              - CREATE
              - UPDATE
              - DELETE
              - REMOVE_GRANT
              - GOVERN_TAGS
            enumDescriptions:
              - Unspecified. Results in an error.
              - Constraint applied when creating the resource.
              - Constraint applied when updating the resource.
              - >-
                Constraint applied when deleting the resource. Not supported
                yet.
              - Constraint applied when removing an IAM grant.
              - Constraint applied when enforcing forced tagging.
            type: string
        resourceTypes:
          type: array
          description: >-
            Immutable. The resource instance type on which this policy applies.
            Format will be of the form : `/` Example: *
            `compute.googleapis.com/Instance`.
          items:
            type: string
        displayName:
          description: >-
            One line display name for the UI. The max length of the display_name
            is 200 characters.
          type: string
    GoogleCloudPolicysimulatorV1ExplainedPolicy:
      type: object
      id: GoogleCloudPolicysimulatorV1ExplainedPolicy
      properties:
        relevance:
          description: >-
            The relevance of this policy to the overall determination in the
            TroubleshootIamPolicyResponse. If the user who created the Replay
            does not have access to the policy, this field is omitted.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          type: string
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
        access:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          description: >-
            Indicates whether _this policy_ provides the specified permission to
            the specified principal for the specified resource. This field does
            _not_ indicate whether the principal actually has the permission for
            the resource. There might be another policy that overrides this
            policy. To determine whether the principal actually has the
            permission, use the `access` field in the
            TroubleshootIamPolicyResponse.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: >-
            The IAM policy attached to the resource. If the user who created the
            Replay does not have access to the policy, this field is empty.
        bindingExplanations:
          description: >-
            Details about how each binding in the policy affects the principal's
            ability, or inability, to use the permission for the resource. If
            the user who created the Replay does not have access to the policy,
            this field is omitted.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1BindingExplanation
        fullResourceName:
          type: string
          description: >-
            The full resource name that identifies the resource. For example,
            `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
            If the user who created the Replay does not have access to the
            policy, this field is omitted. For examples of full resource names
            for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
      description: Details about how a specific IAM Policy contributed to the access check.
    GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreviewResourceCounts:
      description: >-
        A summary of the state of all resources scanned for compliance with the
        changed OrgPolicy.
      type: object
      id: GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreviewResourceCounts
      properties:
        noncompliant:
          description: >-
            Output only. Number of scanned resources with at least one
            violation.
          readOnly: true
          format: int32
          type: integer
        scanned:
          readOnly: true
          format: int32
          type: integer
          description: >-
            Output only. Number of resources checked for compliance. Must equal:
            unenforced + noncompliant + compliant + error
        unenforced:
          readOnly: true
          type: integer
          description: >-
            Output only. Number of resources where the constraint was not
            enforced, i.e. the Policy set `enforced: false` for that resource.
          format: int32
        errors:
          readOnly: true
          type: integer
          format: int32
          description: >-
            Output only. Number of resources that returned an error when
            scanned.
        compliant:
          readOnly: true
          format: int32
          type: integer
          description: Output only. Number of scanned resources with zero violations.
    GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts:
      id: >-
        GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
      description: >-
        A summary of the state of all resources scanned for compliance with the
        changed OrgPolicy.
      properties:
        unenforced:
          readOnly: true
          description: >-
            Output only. Number of resources where the constraint was not
            enforced, i.e. the Policy set `enforced: false` for that resource.
          format: int32
          type: integer
        errors:
          type: integer
          description: >-
            Output only. Number of resources that returned an error when
            scanned.
          format: int32
          readOnly: true
        compliant:
          type: integer
          format: int32
          readOnly: true
          description: Output only. Number of scanned resources with zero violations.
        noncompliant:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. Number of scanned resources with at least one
            violation.
        scanned:
          format: int32
          readOnly: true
          description: >-
            Output only. Number of resources checked for compliance. Must equal:
            unenforced + noncompliant + compliant + error
          type: integer
      type: object
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleIamV1AuditConfig:
      type: object
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: GoogleIamV1AuditConfig
      properties:
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
    GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token that you can use to retrieve the next page of results. If
            this field is omitted, there are no subsequent pages.
        orgPolicyViolations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyViolation
          description: The list of OrgPolicyViolations
          type: array
      description: >-
        ListOrgPolicyViolationsResponse is the response message for
        OrgPolicyViolationsPreviewService.ListOrgPolicyViolations
      type: object
      id: GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsResponse
    GoogleCloudPolicysimulatorV1ListReplayResultsResponse:
      id: GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      description: Response message for Simulator.ListReplayResults.
      type: object
      properties:
        replayResults:
          description: The results of running a Replay.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayResult'
        nextPageToken:
          type: string
          description: >-
            A token that you can use to retrieve the next page of ReplayResult
            objects. If this field is omitted, there are no subsequent pages.
    GoogleCloudPolicysimulatorV1OrgPolicyOverlay:
      id: GoogleCloudPolicysimulatorV1OrgPolicyOverlay
      description: The proposed changes to OrgPolicy.
      properties:
        policies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyOverlayPolicyOverlay
          description: >-
            Optional. The OrgPolicy changes to preview violations for. Any
            existing OrgPolicies with the same name will be overridden in the
            simulation. That is, violations will be determined as if all
            policies in the overlay were created or updated.
          type: array
        customConstraints:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyOverlayCustomConstraintOverlay
          description: >-
            Optional. The OrgPolicy CustomConstraint changes to preview
            violations for. Any existing CustomConstraints with the same name
            will be overridden in the simulation. That is, violations will be
            determined as if all custom constraints in the overlay were
            instantiated. Only a single custom_constraint is supported in the
            overlay at a time. For evaluating multiple constraints, multiple
            `GenerateOrgPolicyViolationsPreview` requests are made, where each
            request evaluates a single constraint.
      type: object
    GoogleCloudOrgpolicyV2PolicySpec:
      type: object
      description: >-
        Defines a Google Cloud policy specification which is used to specify
        constraints for configurations of Google Cloud resources.
      properties:
        inheritFromParent:
          description: >-
            Determines the inheritance behavior for this policy. If
            `inherit_from_parent` is true, policy rules set higher up in the
            hierarchy (up to the closest root) are inherited and present in the
            effective policy. If it is false, then no rules are inherited, and
            this policy becomes the new root for evaluation. This field can be
            set only for policies which configure list constraints.
          type: boolean
        etag:
          type: string
          description: >-
            An opaque tag indicating the current version of the policySpec, used
            for concurrency control. This field is ignored if used in a
            `CreatePolicy` request. When the policy is returned from either a
            `GetPolicy` or a `ListPolicies` request, this `etag` indicates the
            version of the current policySpec to use when executing a
            read-modify-write loop. When the policy is returned from a
            `GetEffectivePolicy` request, the `etag` will be unset.
        rules:
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRule'
          type: array
          description: >-
            In policies for boolean constraints, the following requirements
            apply: - There must be one and only one policy rule where condition
            is unset. - Boolean policy rules with conditions must set `enforced`
            to the opposite of the policy rule without a condition. - During
            policy evaluation, policy rules with conditions that are true for a
            target resource take precedence.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The time stamp this was previously updated. This
            represents the last time a call to `CreatePolicy` or `UpdatePolicy`
            was made for that policy.
        reset:
          description: >-
            Ignores policies set above this resource and restores the
            `constraint_default` enforcement behavior of the specific constraint
            at this resource. This field can be set in policies for either list
            or boolean constraints. If set, `rules` must be empty and
            `inherit_from_parent` must be set to false.
          type: boolean
      id: GoogleCloudOrgpolicyV2PolicySpec
    GoogleCloudPolicysimulatorV1ReplayConfig:
      id: GoogleCloudPolicysimulatorV1ReplayConfig
      description: The configuration used for a Replay.
      properties:
        policyOverlay:
          additionalProperties:
            $ref: '#/components/schemas/GoogleIamV1Policy'
          type: object
          description: >-
            A mapping of the resources that you want to simulate policies for
            and the policies that you want to simulate. Keys are the full
            resource names for the resources. For example,
            `//cloudresourcemanager.googleapis.com/projects/my-project`. For
            examples of full resource names for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
            Values are Policy objects representing the policies that you want to
            simulate. Replays automatically take into account any IAM policies
            inherited through the resource hierarchy, and any policies set on
            descendant resources. You do not need to include these policies in
            the policy overlay.
        logSource:
          enum:
            - LOG_SOURCE_UNSPECIFIED
            - RECENT_ACCESSES
          description: The logs to use as input for the Replay.
          enumDescriptions:
            - >-
              An unspecified log source. If the log source is unspecified, the
              Replay defaults to using `RECENT_ACCESSES`.
            - >-
              All access logs from the last 90 days. These logs may not include
              logs from the most recent 7 days.
          type: string
      type: object
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay:
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
      properties:
        customConstraints:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay
          description: >-
            Optional. The OrgPolicy CustomConstraint changes to preview
            violations for. Any existing CustomConstraints with the same name
            will be overridden in the simulation. That is, violations will be
            determined as if all custom constraints in the overlay were
            instantiated. Only a single custom_constraint is supported in the
            overlay at a time. For evaluating multiple constraints, multiple
            `GenerateOrgPolicyViolationsPreview` requests are made, where each
            request evaluates a single constraint.
          type: array
        policies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay
          description: >-
            Optional. The OrgPolicy changes to preview violations for. Any
            existing OrgPolicies with the same name will be overridden in the
            simulation. That is, violations will be determined as if all
            policies in the overlay were created or updated.
          type: array
      type: object
      description: The proposed changes to OrgPolicy.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      properties:
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    operations:
      id: policysimulator.operations
      name: operations
      title: Operations
      methods:
        projects_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_replays_operations_list:
          operation: &ref_1
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_replays_operations_list:
          operation: *ref_1
          response: *ref_2
        projects_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _operations_list:
          operation: &ref_3
            $ref: '#/paths/~1v1~1operations/get'
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        operations_list:
          operation: *ref_3
          response: *ref_4
        folders_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _folders_locations_replays_operations_list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        folders_locations_replays_operations_list:
          operation: *ref_5
          response: *ref_6
        folders_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _organizations_locations_replays_operations_list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        organizations_locations_replays_operations_list:
          operation: *ref_7
          response: *ref_8
        organizations_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_org_policy_violations_previews_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_replays_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_replays_operations_get
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_get'
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_org_policy_violations_previews_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_replays_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_replays_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_replays_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_replays_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_org_policy_violations_previews_operations_get
        insert: []
        update: []
        delete: []
    results:
      id: policysimulator.results
      name: results
      title: Results
      methods:
        _projects_locations_replays_results_list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
        projects_locations_replays_results_list:
          operation: *ref_9
          response: *ref_10
        _folders_locations_replays_results_list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
        folders_locations_replays_results_list:
          operation: *ref_11
          response: *ref_12
        _organizations_locations_replays_results_list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
        organizations_locations_replays_results_list:
          operation: *ref_13
          response: *ref_14
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/projects_locations_replays_results_list
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/folders_locations_replays_results_list
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/organizations_locations_replays_results_list
        insert: []
        update: []
        delete: []
    replays:
      id: policysimulator.replays
      name: replays
      title: Replays
      methods:
        projects_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/projects_locations_replays_get
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/folders_locations_replays_get
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/organizations_locations_replays_get
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/projects_locations_replays_create
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/folders_locations_replays_create
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/organizations_locations_replays_create
        update: []
        delete: []
    org_policy_violations_previews:
      id: policysimulator.org_policy_violations_previews
      name: org_policy_violations_previews
      title: Org_policy_violations_previews
      methods:
        organizations_locations_org_policy_violations_previews_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _organizations_locations_org_policy_violations_previews_list:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.orgPolicyViolationsPreviews
        organizations_locations_org_policy_violations_previews_list:
          operation: *ref_15
          response: *ref_16
        organizations_locations_org_policy_violations_previews_create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/org_policy_violations_previews/methods/organizations_locations_org_policy_violations_previews_get
          - $ref: >-
              #/components/x-stackQL-resources/org_policy_violations_previews/methods/organizations_locations_org_policy_violations_previews_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/org_policy_violations_previews/methods/organizations_locations_org_policy_violations_previews_create
        update: []
        delete: []
    org_policy_violations:
      id: policysimulator.org_policy_violations
      name: org_policy_violations
      title: Org_policy_violations
      methods:
        _organizations_locations_org_policy_violations_previews_org_policy_violations_list:
          operation: &ref_17
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1orgPolicyViolations/get
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.orgPolicyViolations
        organizations_locations_org_policy_violations_previews_org_policy_violations_list:
          operation: *ref_17
          response: *ref_18
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/org_policy_violations/methods/organizations_locations_org_policy_violations_previews_org_policy_violations_list
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: &ref_19
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.projects.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_19
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.projects.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.projects.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: *ref_19
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.projects.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/replays:
    parameters: *ref_19
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.projects.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.projects.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/operations:
    parameters: *ref_19
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.folders.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.folders.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays:
    parameters: *ref_19
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.folders.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: *ref_19
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.folders.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_19
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.folders.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.folders.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: *ref_19
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.organizations.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.organizations.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_19
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.organizations.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays:
    parameters: *ref_19
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.organizations.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.organizations.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}:
    parameters: *ref_19
    get:
      description: >-
        GetOrgPolicyViolationsPreview gets the specified
        OrgPolicyViolationsPreview. Each OrgPolicyViolationsPreview is available
        for at least 7 days.
      operationId: policysimulator.organizations.locations.orgPolicyViolationsPreviews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreview
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/orgPolicyViolationsPreviews:
    parameters: *ref_19
    get:
      description: >-
        ListOrgPolicyViolationsPreviews lists each OrgPolicyViolationsPreview in
        an organization. Each OrgPolicyViolationsPreview is available for at
        least 7 days.
      operationId: policysimulator.organizations.locations.orgPolicyViolationsPreviews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsPreviewsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: >-
        CreateOrgPolicyViolationsPreview creates an OrgPolicyViolationsPreview
        for the proposed changes in the provided
        OrgPolicyViolationsPreview.OrgPolicyOverlay. The changes to OrgPolicy
        are specified by this `OrgPolicyOverlay`. The resources to scan are
        inferred from these specified changes.
      operationId: >-
        policysimulator.organizations.locations.orgPolicyViolationsPreviews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreview
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orgPolicyViolationsPreviewId
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: *ref_19
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.organizations.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/orgPolicyViolations:
    parameters: *ref_19
    get:
      description: >-
        ListOrgPolicyViolations lists the OrgPolicyViolations that are present
        in an OrgPolicyViolationsPreview.
      operationId: >-
        policysimulator.organizations.locations.orgPolicyViolationsPreviews.orgPolicyViolations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListOrgPolicyViolationsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
