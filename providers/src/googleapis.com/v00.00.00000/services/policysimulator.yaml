openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Policy Simulator API
  description: ' Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members'' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members'' access might change under the proposed policy.'
  version: v1
  x-discovery-doc-revision: '20240908'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/iam/docs/simulating-access
servers:
  - url: https://policysimulator.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudPolicysimulatorV1ReplayOperationMetadata:
      description: Metadata about a Replay operation.
      properties:
        startTime:
          format: google-datetime
          type: string
          description: Time when the request was received.
      id: GoogleCloudPolicysimulatorV1ReplayOperationMetadata
      type: object
    GoogleCloudPolicysimulatorV1AccessTuple:
      type: object
      properties:
        fullResourceName:
          type: string
          description: >-
            Required. The full resource name that identifies the resource. For
            example,
            `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
            For examples of full resource names for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
        principal:
          description: >-
            Required. The principal whose access you want to check, in the form
            of the email address that represents that principal. For example,
            `alice@example.com` or
            `my-service-account@my-project.iam.gserviceaccount.com`. The
            principal must be a Google Account or a service account. Other types
            of principals are not supported.
          type: string
        permission:
          type: string
          description: >-
            Required. The IAM permission to check for the specified principal
            and resource. For a complete list of IAM permissions, see
            https://cloud.google.com/iam/help/permissions/reference. For a
            complete list of predefined IAM roles and the permissions in each
            role, see https://cloud.google.com/iam/help/roles/reference.
      id: GoogleCloudPolicysimulatorV1AccessTuple
      description: Information about the principal, resource, and permission to check.
    GoogleLongrunningListOperationsResponse:
      type: object
      id: GoogleLongrunningListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
      description: The response message for Operations.ListOperations.
    GoogleTypeDate:
      properties:
        day:
          format: int32
          type: integer
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
        month:
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
        year:
          format: int32
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      id: GoogleTypeDate
    GoogleCloudPolicysimulatorV1ReplayConfig:
      id: GoogleCloudPolicysimulatorV1ReplayConfig
      properties:
        policyOverlay:
          description: >-
            A mapping of the resources that you want to simulate policies for
            and the policies that you want to simulate. Keys are the full
            resource names for the resources. For example,
            `//cloudresourcemanager.googleapis.com/projects/my-project`. For
            examples of full resource names for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
            Values are Policy objects representing the policies that you want to
            simulate. Replays automatically take into account any IAM policies
            inherited through the resource hierarchy, and any policies set on
            descendant resources. You do not need to include these policies in
            the policy overlay.
          additionalProperties:
            $ref: '#/components/schemas/GoogleIamV1Policy'
          type: object
        logSource:
          description: The logs to use as input for the Replay.
          enum:
            - LOG_SOURCE_UNSPECIFIED
            - RECENT_ACCESSES
          enumDescriptions:
            - >-
              An unspecified log source. If the log source is unspecified, the
              Replay defaults to using `RECENT_ACCESSES`.
            - >-
              All access logs from the last 90 days. These logs may not include
              logs from the most recent 7 days.
          type: string
      type: object
      description: The configuration used for a Replay.
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay:
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay
      type: object
      description: The proposed changes to OrgPolicy.
      properties:
        customConstraints:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay
          description: >-
            Optional. The OrgPolicy CustomConstraint changes to preview
            violations for. Any existing CustomConstraints with the same name
            will be overridden in the simulation. That is, violations will be
            determined as if all custom constraints in the overlay were
            instantiated. Only a single custom_constraint is supported in the
            overlay at a time. For evaluating multiple constraints, multiple
            `GenerateOrgPolicyViolationsPreview` requests are made, where each
            request evaluates a single constraint.
        policies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay
          description: >-
            Optional. The OrgPolicy changes to preview violations for. Any
            existing OrgPolicies with the same name will be overridden in the
            simulation. That is, violations will be determined as if all
            policies in the overlay were created or updated.
          type: array
    GoogleCloudPolicysimulatorV1alphaCreateOrgPolicyViolationsPreviewOperationMetadata:
      type: object
      id: >-
        GoogleCloudPolicysimulatorV1alphaCreateOrgPolicyViolationsPreviewOperationMetadata
      description: >-
        CreateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      properties:
        resourcesScanned:
          type: integer
          format: int32
          description: Number of resources already scanned.
        startTime:
          description: >-
            Time when the request started processing, i.e., when the state was
            set to RUNNING.
          format: google-datetime
          type: string
        resourcesPending:
          format: int32
          description: Number of resources still to scan.
          type: integer
        resourcesFound:
          format: int32
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
          type: integer
        state:
          type: string
          readOnly: true
          description: Output only. The current state of the operation.
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
        requestTime:
          format: google-datetime
          type: string
          description: Time when the request was received.
    GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview:
      type: object
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview
      description: >-
        OrgPolicyViolationsPreview is a resource providing a preview of the
        violations that will exist if an OrgPolicy change is made. The list of
        violations are modeled as child resources and retrieved via a
        ListOrgPolicyViolations API call. There are potentially more
        OrgPolicyViolations than could fit in an embedded field. Thus, the use
        of a child resource instead of a field.
      properties:
        resourceCounts:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts
          description: >-
            Output only. A summary of the state of all resources scanned for
            compliance with the changed OrgPolicy.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of the `OrgPolicyViolationsPreview`.
            It has the following format:
            `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
            Example:
            `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        state:
          type: string
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          readOnly: true
          description: Output only. The state of the `OrgPolicyViolationsPreview`.
        overlay:
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay
          description: Required. The proposed changes we are previewing violations for.
        createTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. Time when this `OrgPolicyViolationsPreview` was
            created.
          type: string
        customConstraints:
          items:
            type: string
          description: >-
            Output only. The names of the constraints against which all
            `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only
            contains `PolicyOverlay` then it contains the name of the configured
            custom constraint, applicable to the specified policies. Otherwise
            it contains the name of the constraint specified in
            `CustomConstraintOverlay`. Format:
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
          readOnly: true
          type: array
        violationsCount:
          description: >-
            Output only. The number of OrgPolicyViolations in this
            `OrgPolicyViolationsPreview`. This count may differ from
            `resource_summary.noncompliant_count` because each
            OrgPolicyViolation is specific to a resource **and** constraint. If
            there are multiple constraints being evaluated (i.e. multiple
            policies in the overlay), a single resource may violate multiple
            constraints.
          type: integer
          readOnly: true
          format: int32
    GoogleCloudPolicysimulatorV1ListReplayResultsResponse:
      type: object
      properties:
        replayResults:
          description: The results of running a Replay.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayResult'
        nextPageToken:
          type: string
          description: >-
            A token that you can use to retrieve the next page of ReplayResult
            objects. If this field is omitted, there are no subsequent pages.
      id: GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      description: Response message for Simulator.ListReplayResults.
    GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts:
      description: >-
        A summary of the state of all resources scanned for compliance with the
        changed OrgPolicy.
      properties:
        noncompliant:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. Number of scanned resources with at least one
            violation.
        errors:
          readOnly: true
          description: >-
            Output only. Number of resources that returned an error when
            scanned.
          format: int32
          type: integer
        scanned:
          format: int32
          description: >-
            Output only. Number of resources checked for compliance. Must equal:
            unenforced + noncompliant + compliant + error
          type: integer
          readOnly: true
        compliant:
          description: Output only. Number of scanned resources with zero violations.
          readOnly: true
          type: integer
          format: int32
        unenforced:
          description: >-
            Output only. Number of resources where the constraint was not
            enforced, i.e. the Policy set `enforced: false` for that resource.
          format: int32
          readOnly: true
          type: integer
      type: object
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts
    GoogleCloudOrgpolicyV2Policy:
      type: object
      properties:
        alternate:
          description: Deprecated.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2AlternatePolicySpec'
          deprecated: true
        etag:
          type: string
          description: >-
            Optional. An opaque tag indicating the current state of the policy,
            used for concurrency control. This 'etag' is computed by the server
            based on the value of other fields, and may be sent on update and
            delete requests to ensure the client has an up-to-date value before
            proceeding.
        dryRunSpec:
          description: >-
            Dry-run policy. Audit-only policy, can be used to monitor how the
            policy would have impacted the existing and future resources if it's
            enforced.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
        spec:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
          description: Basic information about the Organization Policy.
        name:
          description: >-
            Immutable. The resource name of the policy. Must be one of the
            following forms, where `constraint_name` is the name of the
            constraint which this policy configures: *
            `projects/{project_number}/policies/{constraint_name}` *
            `folders/{folder_id}/policies/{constraint_name}` *
            `organizations/{organization_id}/policies/{constraint_name}` For
            example, `projects/123/policies/compute.disableSerialPortAccess`.
            Note: `projects/{project_id}/policies/{constraint_name}` is also an
            acceptable name for API requests, but responses will return the name
            using the equivalent project number.
          type: string
      id: GoogleCloudOrgpolicyV2Policy
      description: >-
        Defines an organization policy which is used to specify constraints for
        configurations of Google Cloud resources.
    GoogleCloudPolicysimulatorV1Replay:
      id: GoogleCloudPolicysimulatorV1Replay
      description: A resource describing a `Replay`, or simulation.
      properties:
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the `Replay`, which has the
            following format:
            `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`,
            where `{resource-id}` is the ID of the project, folder, or
            organization that owns the Replay. Example:
            `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
        config:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayConfig'
          description: Required. The configuration used for the `Replay`.
        resultsSummary:
          readOnly: true
          description: Output only. Summary statistics about the replayed log entries.
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1ReplayResultsSummary
        state:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The `Replay` has not started yet.
            - The `Replay` is currently running.
            - The `Replay` has successfully completed.
            - The `Replay` has finished with an error.
          readOnly: true
          description: Output only. The current state of the `Replay`.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
      type: object
    GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the `OrgPolicyViolationsPreview`.
            It has the following format:
            `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
            Example:
            `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        customConstraints:
          type: array
          description: >-
            Output only. The names of the constraints against which all
            `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only
            contains `PolicyOverlay` then it contains the name of the configured
            custom constraint, applicable to the specified policies. Otherwise
            it contains the name of the constraint specified in
            `CustomConstraintOverlay`. Format:
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
          readOnly: true
          items:
            type: string
        state:
          type: string
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          readOnly: true
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: Output only. The state of the `OrgPolicyViolationsPreview`.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Time when this `OrgPolicyViolationsPreview` was
            created.
        overlay:
          description: Required. The proposed changes we are previewing violations for.
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
        resourceCounts:
          readOnly: true
          description: >-
            Output only. A summary of the state of all resources scanned for
            compliance with the changed OrgPolicy.
          $ref: >-
            #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
        violationsCount:
          description: >-
            Output only. The number of OrgPolicyViolations in this
            `OrgPolicyViolationsPreview`. This count may differ from
            `resource_summary.noncompliant_count` because each
            OrgPolicyViolation is specific to a resource **and** constraint. If
            there are multiple constraints being evaluated (i.e. multiple
            policies in the overlay), a single resource may violate multiple
            constraints.
          format: int32
          type: integer
          readOnly: true
      description: >-
        OrgPolicyViolationsPreview is a resource providing a preview of the
        violations that will exist if an OrgPolicy change is made. The list of
        violations are modeled as child resources and retrieved via a
        ListOrgPolicyViolations API call. There are potentially more
        OrgPolicyViolations than could fit in an embedded field. Thus, the use
        of a child resource instead of a field.
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview
    GoogleCloudOrgpolicyV2PolicySpec:
      description: >-
        Defines a Google Cloud policy specification which is used to specify
        constraints for configurations of Google Cloud resources.
      properties:
        rules:
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRule'
          type: array
          description: >-
            In policies for boolean constraints, the following requirements
            apply: - There must be one and only one policy rule where condition
            is unset. - Boolean policy rules with conditions must set `enforced`
            to the opposite of the policy rule without a condition. - During
            policy evaluation, policy rules with conditions that are true for a
            target resource take precedence.
        etag:
          description: >-
            An opaque tag indicating the current version of the policySpec, used
            for concurrency control. This field is ignored if used in a
            `CreatePolicy` request. When the policy is returned from either a
            `GetPolicy` or a `ListPolicies` request, this `etag` indicates the
            version of the current policySpec to use when executing a
            read-modify-write loop. When the policy is returned from a
            `GetEffectivePolicy` request, the `etag` will be unset.
          type: string
        reset:
          type: boolean
          description: >-
            Ignores policies set above this resource and restores the
            `constraint_default` enforcement behavior of the specific constraint
            at this resource. This field can be set in policies for either list
            or boolean constraints. If set, `rules` must be empty and
            `inherit_from_parent` must be set to false.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The time stamp this was previously updated. This
            represents the last time a call to `CreatePolicy` or `UpdatePolicy`
            was made for that policy.
        inheritFromParent:
          description: >-
            Determines the inheritance behavior for this policy. If
            `inherit_from_parent` is true, policy rules set higher up in the
            hierarchy (up to the closest root) are inherited and present in the
            effective policy. If it is false, then no rules are inherited, and
            this policy becomes the new root for evaluation. This field can be
            set only for policies which configure list constraints.
          type: boolean
      type: object
      id: GoogleCloudOrgpolicyV2PolicySpec
    GoogleCloudPolicysimulatorV1betaCreateOrgPolicyViolationsPreviewOperationMetadata:
      properties:
        requestTime:
          type: string
          format: google-datetime
          description: Time when the request was received.
        resourcesPending:
          description: Number of resources still to scan.
          type: integer
          format: int32
        resourcesFound:
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
          type: integer
          format: int32
        state:
          description: Output only. The current state of the operation.
          readOnly: true
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          type: string
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
        resourcesScanned:
          format: int32
          description: Number of resources already scanned.
          type: integer
        startTime:
          description: >-
            Time when the request started processing, i.e., when the state was
            set to RUNNING.
          type: string
          format: google-datetime
      id: >-
        GoogleCloudPolicysimulatorV1betaCreateOrgPolicyViolationsPreviewOperationMetadata
      type: object
      description: >-
        CreateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
    GoogleCloudPolicysimulatorV1ExplainedPolicy:
      id: GoogleCloudPolicysimulatorV1ExplainedPolicy
      properties:
        relevance:
          type: string
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          description: >-
            The relevance of this policy to the overall determination in the
            TroubleshootIamPolicyResponse. If the user who created the Replay
            does not have access to the policy, this field is omitted.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
        bindingExplanations:
          description: >-
            Details about how each binding in the policy affects the principal's
            ability, or inability, to use the permission for the resource. If
            the user who created the Replay does not have access to the policy,
            this field is omitted.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1BindingExplanation
        policy:
          description: >-
            The IAM policy attached to the resource. If the user who created the
            Replay does not have access to the policy, this field is empty.
          $ref: '#/components/schemas/GoogleIamV1Policy'
        access:
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          type: string
          description: >-
            Indicates whether _this policy_ provides the specified permission to
            the specified principal for the specified resource. This field does
            _not_ indicate whether the principal actually has the permission for
            the resource. There might be another policy that overrides this
            policy. To determine whether the principal actually has the
            permission, use the `access` field in the
            TroubleshootIamPolicyResponse.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
        fullResourceName:
          description: >-
            The full resource name that identifies the resource. For example,
            `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
            If the user who created the Replay does not have access to the
            policy, this field is omitted. For examples of full resource names
            for Google Cloud services, see
            https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
          type: string
      type: object
      description: Details about how a specific IAM Policy contributed to the access check.
    GoogleCloudPolicysimulatorV1ReplayResultsSummary:
      id: GoogleCloudPolicysimulatorV1ReplayResultsSummary
      type: object
      properties:
        unchangedCount:
          format: int32
          description: >-
            The number of replayed log entries with no difference between
            baseline and simulated policies.
          type: integer
        oldestDate:
          description: The date of the oldest log entry replayed.
          $ref: '#/components/schemas/GoogleTypeDate'
        errorCount:
          format: int32
          type: integer
          description: The number of log entries that could not be replayed.
        newestDate:
          $ref: '#/components/schemas/GoogleTypeDate'
          description: The date of the newest log entry replayed.
        logCount:
          description: The total number of log entries replayed.
          format: int32
          type: integer
        differenceCount:
          format: int32
          description: >-
            The number of replayed log entries with a difference between
            baseline and simulated policies.
          type: integer
      description: Summary statistics about the replayed log entries.
    GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata:
      properties:
        resourcesPending:
          description: Number of resources still to scan.
          format: int32
          type: integer
        state:
          type: string
          description: The current state of the operation.
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
        requestTime:
          description: Time when the request was received.
          type: string
          format: google-datetime
        startTime:
          format: google-datetime
          description: >-
            Time when the request started processing, i.e. when the state was
            set to RUNNING.
          type: string
        resourcesFound:
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
          type: integer
          format: int32
        resourcesScanned:
          description: Number of resources already scanned.
          type: integer
          format: int32
      description: >-
        GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      type: object
      id: >-
        GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata
    GoogleCloudOrgpolicyV2PolicySpecPolicyRule:
      properties:
        values:
          $ref: >-
            #/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
          description: >-
            List of values to be used for this policy rule. This field can be
            set only in policies for list constraints.
        denyAll:
          type: boolean
          description: >-
            Setting this to true means that all values are denied. This field
            can be set only in policies for list constraints.
        allowAll:
          description: >-
            Setting this to true means that all values are allowed. This field
            can be set only in policies for list constraints.
          type: boolean
        enforce:
          type: boolean
          description: >-
            If `true`, then the policy is enforced. If `false`, then any
            configuration is acceptable. This field can be set only in policies
            for boolean constraints.
        condition:
          description: >-
            A condition which determines whether this rule is used in the
            evaluation of the policy. When set, the `expression` field in the
            `Expr' must include from 1 to 10 subexpressions, joined by the "||"
            or "&&" operators. Each subexpression must be of the form
            "resource.matchTag('/tag_key_short_name, 'tag_value_short_name')".
            or "resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')".
            where key_name and value_name are the resource names for Label Keys
            and Values. These names are available from the Tag Manager Service.
            An example expression is: "resource.matchTag('123456789/environment,
            'prod')". or "resource.matchTagId('tagKeys/123', 'tagValues/456')".
          $ref: '#/components/schemas/GoogleTypeExpr'
      description: A rule used to express this policy.
      type: object
      id: GoogleCloudOrgpolicyV2PolicySpecPolicyRule
    GoogleCloudPolicysimulatorV1ExplainedAccess:
      description: >-
        Details about how a set of policies, listed in ExplainedPolicy, resulted
        in a certain AccessState when replaying an access tuple.
      id: GoogleCloudPolicysimulatorV1ExplainedAccess
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedPolicy'
          description: >-
            If the AccessState is `UNKNOWN`, this field contains the policies
            that led to that result. If the `AccessState` is `GRANTED` or
            `NOT_GRANTED`, this field is omitted.
        errors:
          description: >-
            If the AccessState is `UNKNOWN`, this field contains a list of
            errors explaining why the result is `UNKNOWN`. If the `AccessState`
            is `GRANTED` or `NOT_GRANTED`, this field is omitted.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        accessState:
          type: string
          description: >-
            Whether the principal in the access tuple has permission to access
            the resource in the access tuple under the given policies.
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
    GoogleIamV1Policy:
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          type: array
        bindings:
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        etag:
          format: byte
          type: string
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: GoogleIamV1Policy
      type: object
    GoogleLongrunningOperation:
      properties:
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
      id: GoogleLongrunningOperation
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleCloudPolicysimulatorV1AccessStateDiff:
      description: >-
        A summary and comparison of the principal's access under the current
        (baseline) policies and the proposed (simulated) policies for a single
        access tuple.
      id: GoogleCloudPolicysimulatorV1AccessStateDiff
      type: object
      properties:
        simulated:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedAccess'
          description: >-
            The results of evaluating the access tuple under the proposed
            (simulated) policies. If the AccessState couldn't be fully
            evaluated, this field explains why.
        baseline:
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ExplainedAccess'
          description: >-
            The results of evaluating the access tuple under the current
            (baseline) policies. If the AccessState couldn't be fully evaluated,
            this field explains why.
        accessChange:
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The principal's access did not change. This includes the case
              where both baseline and simulated are UNKNOWN, but the unknown
              information is equivalent.
            - >-
              The principal's access under both the current policies and the
              proposed policies is `UNKNOWN`, but the unknown information
              differs between them.
            - >-
              The principal had access under the current policies (`GRANTED`),
              but will no longer have access after the proposed changes
              (`NOT_GRANTED`).
            - >-
              The principal did not have access under the current policies
              (`NOT_GRANTED`), but will have access after the proposed changes
              (`GRANTED`).
            - >-
              This result can occur for the following reasons: * The principal
              had access under the current policies (`GRANTED`), but their
              access after the proposed changes is `UNKNOWN`. * The principal's
              access under the current policies is `UNKNOWN`, but they will not
              have access after the proposed changes (`NOT_GRANTED`).
            - >-
              This result can occur for the following reasons: * The principal
              did not have access under the current policies (`NOT_GRANTED`),
              but their access after the proposed changes is `UNKNOWN`. * The
              principal's access under the current policies is `UNKNOWN`, but
              they will have access after the proposed changes (`GRANTED`).
          type: string
          enum:
            - ACCESS_CHANGE_TYPE_UNSPECIFIED
            - NO_CHANGE
            - UNKNOWN_CHANGE
            - ACCESS_REVOKED
            - ACCESS_GAINED
            - ACCESS_MAYBE_REVOKED
            - ACCESS_MAYBE_GAINED
          description: >-
            How the principal's access, specified in the AccessState field,
            changed between the current (baseline) policies and proposed
            (simulated) policies.
    GoogleCloudPolicysimulatorV1BindingExplanation:
      description: >-
        Details about how a binding in a policy affects a principal's ability to
        use a permission.
      id: GoogleCloudPolicysimulatorV1BindingExplanation
      properties:
        access:
          description: >-
            Required. Indicates whether _this binding_ provides the specified
            permission to the specified principal for the specified resource.
            This field does _not_ indicate whether the principal actually has
            the permission for the resource. There might be another binding that
            overrides this binding. To determine whether the principal actually
            has the permission, use the `access` field in the
            TroubleshootIamPolicyResponse.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The principal has the permission.
            - The principal does not have the permission.
            - >-
              The principal has the permission only if a condition expression
              evaluates to `true`.
            - >-
              The user who created the Replay does not have access to all of the
              policies that Policy Simulator needs to evaluate.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
        rolePermission:
          enumDescriptions:
            - Default value. This value is unused.
            - The permission is included in the role.
            - The permission is not included in the role.
            - >-
              The user who created the Replay is not allowed to access the
              binding.
          enum:
            - ROLE_PERMISSION_UNSPECIFIED
            - ROLE_PERMISSION_INCLUDED
            - ROLE_PERMISSION_NOT_INCLUDED
            - ROLE_PERMISSION_UNKNOWN_INFO_DENIED
          type: string
          description: >-
            Indicates whether the role granted by this binding contains the
            specified permission.
        role:
          description: >-
            The role that this binding grants. For example,
            `roles/compute.serviceAgent`. For a complete list of predefined IAM
            roles, as well as the permissions in each role, see
            https://cloud.google.com/iam/help/roles/reference.
          type: string
        relevance:
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          type: string
          description: >-
            The relevance of this binding to the overall determination for the
            entire policy.
        memberships:
          description: >-
            Indicates whether each principal in the binding includes the
            principal specified in the request, either directly or indirectly.
            Each key identifies a principal in the binding, and each value
            indicates whether the principal in the binding includes the
            principal in the request. For example, suppose that a binding
            includes the following principals: * `user:alice@example.com` *
            `group:product-eng@example.com` The principal in the replayed access
            tuple is `user:bob@example.com`. This user is a principal of the
            group `group:product-eng@example.com`. For the first principal in
            the binding, the key is `user:alice@example.com`, and the
            `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`.
            For the second principal in the binding, the key is
            `group:product-eng@example.com`, and the `membership` field in the
            value is set to `MEMBERSHIP_INCLUDED`.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: >-
            A condition expression that prevents this binding from granting
            access unless the expression evaluates to `true`. To learn about IAM
            Conditions, see
            https://cloud.google.com/iam/docs/conditions-overview.
        rolePermissionRelevance:
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          type: string
          description: >-
            The relevance of the permission's existence, or nonexistence, in the
            role to the overall determination for the entire policy.
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
      type: object
    GoogleIamV1AuditConfig:
      type: object
      id: GoogleIamV1AuditConfig
      properties:
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          description: The configuration for logging of each type of permission.
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay:
      type: object
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay
      properties:
        policyParent:
          type: string
          description: >-
            Optional. The parent of the policy we are attaching to. Example:
            "projects/123456"
        policy:
          description: Optional. The new or updated OrgPolicy.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      description: A change to an OrgPolicy.
    GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata:
      id: >-
        GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata
      description: >-
        GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
        OrgPolicyViolationsPreview generations operation.
      properties:
        state:
          enum:
            - PREVIEW_STATE_UNSPECIFIED
            - PREVIEW_PENDING
            - PREVIEW_RUNNING
            - PREVIEW_SUCCEEDED
            - PREVIEW_FAILED
          type: string
          enumDescriptions:
            - The state is unspecified.
            - The OrgPolicyViolationsPreview has not been created yet.
            - The OrgPolicyViolationsPreview is currently being created.
            - The OrgPolicyViolationsPreview creation finished successfully.
            - The OrgPolicyViolationsPreview creation failed with an error.
          description: The current state of the operation.
        resourcesFound:
          type: integer
          format: int32
          description: >-
            Total number of resources that need scanning. Should equal
            resource_scanned + resources_pending
        resourcesPending:
          format: int32
          description: Number of resources still to scan.
          type: integer
        resourcesScanned:
          format: int32
          type: integer
          description: Number of resources already scanned.
        requestTime:
          description: Time when the request was received.
          type: string
          format: google-datetime
        startTime:
          description: >-
            Time when the request started processing, i.e. when the state was
            set to RUNNING.
          format: google-datetime
          type: string
      type: object
    GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay:
      id: GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay
      properties:
        customConstraint:
          description: Optional. The new or updated custom constraint.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
        customConstraintParent:
          type: string
          description: >-
            Optional. Resource the constraint is attached to. Example:
            "organization/987654"
      description: A change to an OrgPolicy custom constraint.
      type: object
    GoogleRpcStatus:
      id: GoogleRpcStatus
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    GoogleCloudPolicysimulatorV1ReplayResult:
      description: The result of replaying a single access tuple against a simulated state.
      id: GoogleCloudPolicysimulatorV1ReplayResult
      properties:
        diff:
          description: >-
            The difference between the principal's access under the current
            (baseline) policies and the principal's access under the proposed
            (simulated) policies. This field is only included for access tuples
            that were successfully replayed and had different results under the
            current policies and the proposed policies.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1ReplayDiff'
        accessTuple:
          description: >-
            The access tuple that was replayed. This field includes information
            about the principal, resource, and permission that were involved in
            the access attempt.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1AccessTuple'
        lastSeenDate:
          description: The latest date this access tuple was seen in the logs.
          $ref: '#/components/schemas/GoogleTypeDate'
        name:
          type: string
          description: >-
            The resource name of the `ReplayResult`, in the following format:
            `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`,
            where `{resource-id}` is the ID of the project, folder, or
            organization that owns the Replay. Example:
            `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
        parent:
          type: string
          description: The Replay that the access tuple was included in.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error that caused the access tuple replay to fail. This field is
            only included for access tuples that were not replayed successfully.
      type: object
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      type: object
      description: Associates `members`, or principals, with a `role`.
      properties:
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          items:
            type: string
          type: array
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
    GoogleCloudPolicysimulatorV1ReplayDiff:
      id: GoogleCloudPolicysimulatorV1ReplayDiff
      type: object
      description: >-
        The difference between the results of evaluating an access tuple under
        the current (baseline) policies and under the proposed (simulated)
        policies. This difference explains how a principal's access could change
        if the proposed policies were applied.
      properties:
        accessDiff:
          description: >-
            A summary and comparison of the principal's access under the current
            (baseline) policies and the proposed (simulated) policies for a
            single access tuple. The evaluation of the principal's access is
            reported in the AccessState field.
          $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1AccessStateDiff'
    GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership:
      properties:
        relevance:
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          description: >-
            The relevance of the principal's status to the overall determination
            for the binding.
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The data point has a limited effect on the result. Changing the
              data point is unlikely to affect the overall determination.
            - >-
              The data point has a strong effect on the result. Changing the
              data point is likely to affect the overall determination.
          type: string
        membership:
          description: Indicates whether the binding includes the principal.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - >-
              The binding includes the principal. The principal can be included
              directly or indirectly. For example: * A principal is included
              directly if that principal is listed in the binding. * A principal
              is included indirectly if that principal is in a Google group or
              Google Workspace domain that is listed in the binding.
            - The binding does not include the principal.
            - >-
              The user who created the Replay is not allowed to access the
              binding.
            - >-
              The principal is an unsupported type. Only Google Accounts and
              service accounts are supported.
          enum:
            - MEMBERSHIP_UNSPECIFIED
            - MEMBERSHIP_INCLUDED
            - MEMBERSHIP_NOT_INCLUDED
            - MEMBERSHIP_UNKNOWN_INFO_DENIED
            - MEMBERSHIP_UNKNOWN_UNSUPPORTED
      description: Details about whether the binding includes the principal.
      id: GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership
      type: object
    GoogleTypeExpr:
      id: GoogleTypeExpr
      properties:
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay:
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay
      properties:
        customConstraint:
          description: Optional. The new or updated custom constraint.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2CustomConstraint'
        customConstraintParent:
          type: string
          description: >-
            Optional. Resource the constraint is attached to. Example:
            "organization/987654"
      description: A change to an OrgPolicy custom constraint.
      type: object
    GoogleCloudOrgpolicyV2AlternatePolicySpec:
      properties:
        spec:
          description: Specify constraint for configurations of Google Cloud resources.
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
        launch:
          description: >-
            Reference to the launch that will be used while audit logging and to
            control the launch. Should be set only in the alternate policy.
          type: string
      type: object
      description: >-
        Similar to PolicySpec but with an extra 'launch' field for launch
        reference. The PolicySpec here is specific for dry-run/darklaunch.
      id: GoogleCloudOrgpolicyV2AlternatePolicySpec
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay:
      description: A change to an OrgPolicy.
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay
      type: object
      properties:
        policyParent:
          description: >-
            Optional. The parent of the policy we are attaching to. Example:
            "projects/123456"
          type: string
        policy:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Optional. The new or updated OrgPolicy.
    GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay:
      type: object
      description: The proposed changes to OrgPolicy.
      properties:
        policies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay
          description: >-
            Optional. The OrgPolicy changes to preview violations for. Any
            existing OrgPolicies with the same name will be overridden in the
            simulation. That is, violations will be determined as if all
            policies in the overlay were created or updated.
          type: array
        customConstraints:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay
          type: array
          description: >-
            Optional. The OrgPolicy CustomConstraint changes to preview
            violations for. Any existing CustomConstraints with the same name
            will be overridden in the simulation. That is, violations will be
            determined as if all custom constraints in the overlay were
            instantiated. Only a single custom_constraint is supported in the
            overlay at a time. For evaluating multiple constraints, multiple
            `GenerateOrgPolicyViolationsPreview` requests are made, where each
            request evaluates a single constraint.
      id: GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
    GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues:
      id: GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
      description: >-
        A message that holds specific allowed and denied values. This message
        can define specific values and subtrees of the Resource Manager resource
        hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or
        denied. This is achieved by using the `under:` and optional `is:`
        prefixes. The `under:` prefix is used to denote resource subtree values.
        The `is:` prefix is used to denote specific values, and is required only
        if the value contains a ":". Values prefixed with "is:" are treated the
        same as values with no prefix. Ancestry subtrees must be in one of the
        following formats: - `projects/` (for example,
        `projects/tokyo-rain-123`) - `folders/` (for example, `folders/1234`) -
        `organizations/` (for example, `organizations/1234`) The
        `supports_under` field of the associated `Constraint` defines whether
        ancestry prefixes can be used.
      type: object
      properties:
        deniedValues:
          type: array
          items:
            type: string
          description: List of values denied at this resource.
        allowedValues:
          description: List of values allowed at this resource.
          type: array
          items:
            type: string
    GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts:
      id: >-
        GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
      description: >-
        A summary of the state of all resources scanned for compliance with the
        changed OrgPolicy.
      type: object
      properties:
        scanned:
          description: >-
            Output only. Number of resources checked for compliance. Must equal:
            unenforced + noncompliant + compliant + error
          type: integer
          format: int32
          readOnly: true
        unenforced:
          readOnly: true
          description: >-
            Output only. Number of resources where the constraint was not
            enforced, i.e. the Policy set `enforced: false` for that resource.
          type: integer
          format: int32
        errors:
          format: int32
          readOnly: true
          description: >-
            Output only. Number of resources that returned an error when
            scanned.
          type: integer
        noncompliant:
          readOnly: true
          format: int32
          type: integer
          description: >-
            Output only. Number of scanned resources with at least one
            violation.
        compliant:
          format: int32
          description: Output only. Number of scanned resources with zero violations.
          readOnly: true
          type: integer
    GoogleCloudOrgpolicyV2CustomConstraint:
      id: GoogleCloudOrgpolicyV2CustomConstraint
      properties:
        condition:
          type: string
          description: >-
            Org policy condition/expression. For example:
            `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
            `resource.management.auto_upgrade == true` The max length of the
            condition is 1000 characters.
        actionType:
          enumDescriptions:
            - Unspecified. Results in an error.
            - Allowed action type.
            - Deny action type.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - ALLOW
            - DENY
          description: Allow or deny type.
          type: string
        resourceTypes:
          items:
            type: string
          type: array
          description: >-
            Immutable. The resource instance type on which this policy applies.
            Format will be of the form : `/` Example: *
            `compute.googleapis.com/Instance`.
        displayName:
          description: >-
            One line display name for the UI. The max length of the display_name
            is 200 characters.
          type: string
        methodTypes:
          description: All the operations being applied for this constraint.
          items:
            enumDescriptions:
              - Unspecified. Results in an error.
              - Constraint applied when creating the resource.
              - Constraint applied when updating the resource.
              - >-
                Constraint applied when deleting the resource. Not supported
                yet.
              - Constraint applied when removing an IAM grant.
              - Constraint applied when enforcing forced tagging.
            type: string
            enum:
              - METHOD_TYPE_UNSPECIFIED
              - CREATE
              - UPDATE
              - DELETE
              - REMOVE_GRANT
              - GOVERN_TAGS
          type: array
        name:
          type: string
          description: >-
            Immutable. Name of the constraint. This is unique within the
            organization. Format of the name should be *
            `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
            Example:
            `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The
            max length is 70 characters and the minimum length is 1. Note that
            the prefix `organizations/{organization_id}/customConstraints/` is
            not counted.
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: >-
            Output only. The last time this custom constraint was updated. This
            represents the last time that the `CreateCustomConstraint` or
            `UpdateCustomConstraint` RPC was called
        description:
          type: string
          description: >-
            Detailed information about this custom policy constraint. The max
            length of the description is 2000 characters.
      type: object
      description: >-
        A custom constraint defined by customers which can *only* be applied to
        the given resource types and organization. By creating a custom
        constraint, customers can apply policies of this custom constraint.
        *Creating a custom constraint itself does NOT apply any policy
        enforcement*.
    GoogleIamV1AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: GoogleIamV1AuditLogConfig
      properties:
        exemptedMembers:
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
      type: object
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    results:
      id: google.policysimulator.results
      name: results
      title: Results
      methods:
        organizations_locations_replays_results_list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
        projects_locations_replays_results_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
        folders_locations_replays_results_list:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1results/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replayResults
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/organizations_locations_replays_results_list
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/projects_locations_replays_results_list
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/folders_locations_replays_results_list
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.policysimulator.operations
      name: operations
      title: Operations
      methods:
        organizations_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_replays_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        organizations_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_replays_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_replays_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        folders_locations_replays_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_org_policy_violations_previews_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1orgPolicyViolationsPreviews~1{orgPolicyViolationsPreviewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operations_list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_replays_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_org_policy_violations_previews_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_replays_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_org_policy_violations_previews_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_replays_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_org_policy_violations_previews_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_replays_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_replays_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/folders_locations_replays_operations_list
          - $ref: '#/components/x-stackQL-resources/operations/methods/operations_get'
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/operations_list
        insert: []
        update: []
        replace: []
        delete: []
    replays:
      id: google.policysimulator.replays
      name: replays
      title: Replays
      methods:
        organizations_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_replays_create:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_locations_replays_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1locations~1{locationsId}~1replays~1{replaysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/organizations_locations_replays_get
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/projects_locations_replays_get
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/folders_locations_replays_get
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/organizations_locations_replays_create
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/projects_locations_replays_create
          - $ref: >-
              #/components/x-stackQL-resources/replays/methods/folders_locations_replays_create
        update: []
        replace: []
        delete: []
paths:
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.organizations.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.organizations.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.organizations.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays:
    parameters: *ref_1
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.organizations.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.organizations.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.organizations.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays:
    parameters: *ref_1
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.projects.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.projects.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.projects.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.projects.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: *ref_1
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.projects.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.projects.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays:
    parameters: *ref_1
    post:
      description: Creates and starts a Replay using the given ReplayConfig.
      operationId: policysimulator.folders.locations.replays.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified Replay. Each `Replay` is available for at least 7
        days.
      operationId: policysimulator.folders.locations.replays.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudPolicysimulatorV1Replay'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.folders.locations.replays.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.folders.locations.replays.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/results:
    parameters: *ref_1
    get:
      description: Lists the results of running a Replay.
      operationId: policysimulator.folders.locations.replays.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudPolicysimulatorV1ListReplayResultsResponse
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: replaysId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/folders/{foldersId}/locations/{locationsId}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreviewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        policysimulator.folders.locations.orgPolicyViolationsPreviews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: orgPolicyViolationsPreviewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: policysimulator.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: policysimulator.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
