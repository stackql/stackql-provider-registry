openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240910'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      description: The response for a bulk analyze conversations operation.
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
        bucketObjectType:
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          description: Optional. Specifies the type of the objects in `bucket_uri`.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
          type: string
        customMetadataKeys:
          type: array
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          items:
            type: string
        metadataBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      type: object
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      properties:
        activationUpdateTime:
          description: >-
            Output only. The most recent time at which the activation status was
            updated.
          format: google-datetime
          type: string
          readOnly: true
        name:
          type: string
          description: >-
            The resource name of the phrase matcher. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        revisionCreateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The timestamp of when the revision was created. It is
            also the create time when a new matcher is added.
          type: string
        roleMatch:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: >-
            The role whose utterances the phrase matcher should be matched
            against. If the role is ROLE_UNSPECIFIED it will be matched against
            any utterances in the transcript.
        updateTime:
          description: >-
            Output only. The most recent time at which the phrase matcher was
            updated.
          type: string
          readOnly: true
          format: google-datetime
        phraseMatchRuleGroups:
          type: array
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
        revisionId:
          readOnly: true
          description: >-
            Output only. Immutable. The revision ID of the phrase matcher. A new
            revision is committed whenever the matcher is changed, except when
            it is activated or deactivated. A server generated random ID will be
            used. Example:
            locations/global/phraseMatchers/my-first-matcher@1234567
          type: string
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        type:
          type: string
          description: Required. The type of this phrase matcher.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
        versionTag:
          description: >-
            The customized version tag to use for the phrase matcher. If not
            specified, it will default to `revision_id`.
          type: string
      description: The phrase matcher resource.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadata:
      description: Conversation metadata related to quality management.
      type: object
      properties:
        waitDuration:
          format: google-duration
          description: The amount of time the customer waited to connect with an agent.
          type: string
        agentInfo:
          description: Information about agents involved in the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
        menuPath:
          type: string
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
        customerSatisfactionRating:
          type: integer
          format: int32
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      description: The data for a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      properties:
        query:
          type: string
          description: Required. The phrase to be matched.
        negated:
          description: >-
            Specifies whether the phrase must be missing from the transcript
            segment or present in the transcript segment.
          type: boolean
        config:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
          description: >-
            Provides additional information about the rule that specifies how to
            apply the rule.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      type: object
      description: A message representing a rule in the phrase matcher.
      properties:
        type:
          description: Required. The type of this phrase match rule group.
          type: string
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
        phraseMatchRules:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule
          type: array
          description: A list of phrase match rules that are included in this group.
    GoogleCloudContactcenterinsightsV1Analysis:
      type: object
      properties:
        requestTime:
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          type: string
          readOnly: true
        name:
          type: string
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
        analysisResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
        createTime:
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          type: string
          readOnly: true
          format: google-datetime
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      properties:
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
        confidenceScore:
          format: float
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        title:
          type: string
          description: Article title.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        uri:
          description: Article URI.
          type: string
      type: object
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      properties:
        wordIndex:
          format: int32
          type: integer
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
        transcriptIndex:
          type: integer
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          format: int32
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      properties:
        currentStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          description: >-
            The latest label statistics for the queried issue model. Includes
            results on both training data and data labeled after deployment.
    GoogleCloudContactcenterinsightsV1SpeechConfig:
      id: GoogleCloudContactcenterinsightsV1SpeechConfig
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      properties:
        speechRecognizer:
          type: string
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
      description: A message representing the transcript of a conversation.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        dialogflowConversation:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      properties: {}
      description: The response to deploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource:
      description: Google Cloud Storage Object URI to get the issue model file from.
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
      type: object
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      type: object
      properties:
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
        deidentifyTemplate:
          type: string
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      properties:
        intentUniqueId:
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      properties:
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
        issueStats:
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
        analyzedConversationsCount:
          format: int64
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
      type: object
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      description: Response from import issue model
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      type: object
      properties:
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        transcriptObjectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
          description: Configuration for when `source` contains conversation transcripts.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        gcsSource:
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
        sampleSize:
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          format: int32
          type: integer
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      description: The request to create an issue model.
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata:
      type: object
      properties:
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        request:
          description: The original request for bulk delete.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      type: object
      properties:
        analysisResult:
          readOnly: true
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
        name:
          type: string
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
        requestTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          type: string
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1EncryptionSpec:
      id: GoogleCloudContactcenterinsightsV1EncryptionSpec
      type: object
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      properties:
        kmsKey:
          type: string
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        name:
          type: string
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          type: string
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
        conversationProfile:
          type: string
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      properties:
        projectId:
          type: string
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
        table:
          type: string
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
        dataset:
          type: string
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      properties: {}
      description: Response from export issue model
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        startOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
        confidence:
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          format: float
        endOffset:
          format: google-duration
          type: string
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        conversation:
          readOnly: true
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      type: object
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        confidence:
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          format: float
          type: number
        dialogflowIntentId:
          type: string
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
      type: object
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      properties:
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
          description: The original request for deletion.
      description: Metadata for deleting an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      type: object
      description: The response of listing issues.
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
          description: The issues that match the request.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest:
      description: Request to export an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to export.
        gcsDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
          description: Google Cloud Storage URI to export the issue model to.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest:
      properties:
        filter:
          type: string
          description: Filter used to select the subset of conversations to delete.
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
        maxDeleteCount:
          format: int32
          description: Maximum number of conversations to delete.
          type: integer
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
      type: object
      description: The request to delete conversations in bulk.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      type: object
      description: The response to undeploy an issue model.
      properties: {}
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      description: The response to list analyses.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        analyses:
          type: array
          description: The analyses that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      type: object
      description: Call-specific metadata created during analysis.
      properties:
        annotations:
          type: array
          description: A list of call annotations that apply to this call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
          type: object
        intents:
          description: All the matched intents in the call.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent
          type: object
        sentiments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity
          type: object
        issueModelResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
          description: Overall conversation-level issue modeling result.
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence:
      description: Conversation-level silence data.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
      properties:
        silencePercentage:
          format: float
          type: number
          description: Percentage of the total conversation spent in silence.
        silenceDuration:
          type: string
          description: Amount of time calculated to be in silence.
          format: google-duration
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata:
      description: Conversation metadata related to quality management.
      properties:
        menuPath:
          type: string
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
        agentInfo:
          type: array
          description: Information about agents involved in the call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
        customerSatisfactionRating:
          type: integer
          format: int32
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
        waitDuration:
          format: google-duration
          type: string
          description: The amount of time the customer waited to connect with an agent.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      type: object
      description: Metadata for an export insights operation.
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      description: The response to an IngestConversations operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      properties:
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
          description: The correctness level of an answer.
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata
      type: object
      properties:
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
      description: Metadata used for import issue model.
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      type: object
      properties:
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          additionalProperties:
            type: string
          type: object
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: float
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
        question:
          description: The corresponding FAQ question.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      properties:
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        issueModels:
          type: array
          items:
            type: string
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        summarizationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
          description: Configuration for the summarization annotator.
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
          items:
            type: string
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      properties:
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
          description: The original request for bulk delete.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
      type: object
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
          description: Information about the issue's assignment.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      type: object
      properties:
        dialogflowSegmentMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
          description: CCAI metadata relating to the current transcript segment.
        text:
          description: The text of this segment.
          type: string
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: The sentiment for this transcript segment.
        words:
          description: >-
            A list of the word-specific information for each word in the
            segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        languageCode:
          type: string
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
          description: The participant of this segment.
        confidence:
          format: float
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
        channelTag:
          type: integer
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          format: int32
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      properties:
        displayName:
          type: string
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
        score:
          format: double
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          type: number
        issue:
          description: Resource name of the assigned issue.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      type: object
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
        analysisPercentage:
          type: number
          format: float
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      properties:
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      properties:
        issueModel:
          type: string
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      properties:
        annotationStartBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        intentMatchData:
          description: Data specifying an intent match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
          description: Data specifying an issue match.
        holdData:
          description: Data specifying a hold.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        annotationEndBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        entityMentionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
          description: Data specifying an entity mention.
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData
          description: Data specifying an interruption.
        silenceData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData
          description: Data specifying silence.
        phraseMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
          description: Data specifying a phrase match.
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          format: int32
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource:
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
      type: object
      description: Google Cloud Storage Object URI to get the issue model file from.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      properties:
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
          additionalProperties:
            type: string
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        question:
          description: The corresponding FAQ question.
          type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          deprecated: true
          type: string
        trainingConversationsCount:
          format: int64
          type: string
          readOnly: true
          description: Output only. Number of conversations used in training. Output only.
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
      type: object
      description: Information about an agent involved in the conversation.
      properties:
        displayName:
          type: string
          description: The agent's name.
        agentId:
          type: string
          description: A user-specified string representing the agent.
        team:
          type: string
          description: A user-specified string representing the agent's team.
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
    GoogleCloudContactcenterinsightsV1Settings:
      type: object
      description: >-
        The CCAI Insights project wide settings. Use these settings to configure
        the behavior of Insights. View these settings with
        [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings)
        and change the settings with
        [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).
      id: GoogleCloudContactcenterinsightsV1Settings
      properties:
        analysisConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
          description: Default analysis settings.
        conversationTtl:
          description: >-
            The default TTL for newly-created conversations. If a conversation
            has a specified expiration, that value will be used instead.
            Changing this value will not change the expiration of existing
            conversations. Conversations with no expire time persist until they
            are deleted.
          type: string
          format: google-duration
        redactionConfig:
          description: >-
            Default DLP redaction resources to be applied while ingesting
            conversations. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time at which the settings were last updated.
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text resources to use while ingesting
            audio files. Optional, CCAI Insights will create a default if not
            provided. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
        pubsubNotificationSettings:
          additionalProperties:
            type: string
          type: object
          description: >-
            A map that maps a notification trigger to a Pub/Sub topic. Each time
            a specified trigger occurs, Insights will notify the corresponding
            Pub/Sub topic. Keys are notification triggers. Supported keys are: *
            "all-triggers": Notify each time any of the supported triggers
            occurs. * "create-analysis": Notify each time an analysis is
            created. * "create-conversation": Notify each time a conversation is
            created. * "export-insights-data": Notify each time an export is
            complete. * "ingest-conversations": Notify each time an
            IngestConversations LRO is complete. * "update-conversation": Notify
            each time a conversation is updated via UpdateConversation. *
            "upload-conversation": Notify when an UploadConversation LRO is
            complete. Values are Pub/Sub topics. The format of each Pub/Sub
            topic is: projects/{project}/topics/{topic}
        languageCode:
          description: >-
            A language code to be applied to each transcript segment unless the
            segment already specifies a language code. Language code defaults to
            "en-US" if it is neither specified on the segment nor here.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time at which the settings was created.
          readOnly: true
        name:
          description: >-
            Immutable. The resource name of the settings resource. Format:
            projects/{project}/locations/{location}/settings
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      type: object
      description: Configuration information of a phrase match rule.
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: Metadata for deleting an issue model.
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      properties:
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        faqAnswer:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
          description: Agent Assist FAQ answer data.
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        annotationId:
          type: string
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        createTime:
          type: string
          description: The time at which this annotation was created.
          format: google-datetime
        conversationSummarizationSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Conversation summarization suggestion data.
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
          description: Dialogflow interaction data.
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1Issue:
      type: object
      description: The issue resource.
      properties:
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The most recent time that this issue was updated.
        createTime:
          readOnly: true
          description: Output only. The time at which this issue was created.
          type: string
          format: google-datetime
        sampleUtterances:
          items:
            type: string
          type: array
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
          readOnly: true
        displayDescription:
          type: string
          description: Representative description of the issue.
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
        displayName:
          description: The representative name for the issue.
          type: string
      id: GoogleCloudContactcenterinsightsV1Issue
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          type: number
          format: float
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      type: object
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      properties:
        metadataBucketUri:
          type: string
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          items:
            type: string
          type: array
        bucketObjectType:
          type: string
          description: Optional. Specifies the type of the objects in `bucket_uri`.
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      type: object
    GoogleCloudContactcenterinsightsV1Conversation:
      id: GoogleCloudContactcenterinsightsV1Conversation
      description: The conversation resource.
      type: object
      properties:
        transcript:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript
          description: Output only. The conversation transcript.
        latestSummary:
          description: Output only. Latest summary of the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
          readOnly: true
        expireTime:
          format: google-datetime
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          type: string
        startTime:
          format: google-datetime
          description: The time at which the conversation started.
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
        runtimeAnnotations:
          type: array
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          readOnly: true
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
        turnCount:
          description: Output only. The number of turns in the conversation.
          type: integer
          readOnly: true
          format: int32
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
        duration:
          type: string
          description: Output only. The duration of the conversation.
          readOnly: true
          format: google-duration
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          readOnly: true
        metadataJson:
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
          type: string
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which the conversation was created.
          format: google-datetime
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata
          description: Call-specific metadata.
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
        dialogflowIntents:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent
          readOnly: true
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: object
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        ttl:
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          type: string
          format: google-duration
        agentId:
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      properties:
        wordIndex:
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          format: int32
          type: integer
        transcriptIndex:
          format: int32
          type: integer
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      properties:
        processedObjectCount:
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          format: int32
          type: integer
          readOnly: true
        successfulIngestCount:
          format: int32
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          type: integer
          readOnly: true
        duplicatesSkippedCount:
          format: int32
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          type: integer
          readOnly: true
        failedIngestCount:
          format: int32
          readOnly: true
          type: integer
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      type: object
      description: Statistics for IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      type: object
      description: Statistics for IngestConversations operation.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      properties:
        failedIngestCount:
          readOnly: true
          format: int32
          type: integer
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
        processedObjectCount:
          type: integer
          readOnly: true
          format: int32
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
        duplicatesSkippedCount:
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          readOnly: true
          type: integer
          format: int32
        successfulIngestCount:
          type: integer
          readOnly: true
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata:
      type: object
      description: Metadata used for export issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata
      properties:
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest:
      type: object
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      properties:
        channelTag:
          format: int32
          type: integer
          description: The channel of the audio that the data applies to.
        sentimentData:
          description: Data specifying sentiment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      description: The data for a silence annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1SilenceData
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      properties:
        trainingConversationsCount:
          readOnly: true
          type: string
          description: Output only. Number of conversations used in training. Output only.
          format: int64
        filter:
          type: string
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
        medium:
          deprecated: true
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      type: object
    GoogleLongrunningOperation:
      type: object
      id: GoogleLongrunningOperation
      properties:
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        response:
          type: object
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      description: The response to undeploy an issue model.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      properties:
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      properties: {}
      description: The data for an interruption annotation.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      type: object
      description: Word-level info for words in a transcript.
      properties:
        confidence:
          type: number
          format: float
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        endOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
        startOffset:
          type: string
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          format: google-duration
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      type: object
      description: Agent Assist Article Suggestion data.
      properties:
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          type: number
          format: float
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        uri:
          description: Article URI.
          type: string
        metadata:
          type: object
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
          additionalProperties:
            type: string
        title:
          type: string
          description: Article title.
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      properties:
        sampleSize:
          type: integer
          format: int32
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
        conversationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
          description: Configuration that applies to all conversations.
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        transcriptObjectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
          description: Configuration for when `source` contains conversation transcripts.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
      type: object
      description: The request to ingest conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
          description: The original request for creation.
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      type: object
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      properties:
        endTime:
          description: The time at which the analysis ended.
          format: google-datetime
          type: string
        callAnalysisMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
          description: Call-specific metadata created by the analysis.
      type: object
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      description: A single interval in a time series.
      properties:
        conversationCount:
          description: The number of conversations created in this interval.
          type: integer
          format: int32
        startTime:
          type: string
          format: google-datetime
          description: The start time of this interval.
      id: >-
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      type: object
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        type:
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          type: string
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      type: object
      description: Information about the issue.
      properties:
        issue:
          type: string
          description: Resource name of the assigned issue.
        displayName:
          type: string
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
        score:
          type: number
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          format: double
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      type: object
      description: Call-specific metadata.
      properties:
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
        customerChannel:
          format: int32
          type: integer
          description: The audio channel that contains the customer.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to export.
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
      description: Request to export an issue model.
    GoogleCloudContactcenterinsightsV1Intent:
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          type: string
          description: The human-readable name of the intent.
      type: object
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      id: GoogleCloudContactcenterinsightsV1Intent
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      description: The conversation source, which is a combination of transcript and audio.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          type: string
          description: Default summarization model to be used.
        conversationProfile:
          type: string
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      description: Response from export issue model
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
      description: Explicit input used for generating the answer
      type: object
      properties:
        querySource:
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          type: string
          description: Query source for the answer.
        generatorName:
          type: string
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
        query:
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
          type: string
    GoogleCloudContactcenterinsightsV1Entity:
      id: GoogleCloudContactcenterinsightsV1Entity
      type: object
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
        metadata:
          type: object
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          additionalProperties:
            type: string
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
        salience:
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
          type: number
          format: float
        displayName:
          type: string
          description: The representative name for the entity.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        appliedRedactionConfig:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        analysisOperation:
          readOnly: true
          type: string
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
        request:
          readOnly: true
          description: Output only. The original request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      description: The metadata for an `UploadConversation` operation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      type: object
      properties:
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
          description: The original request for export.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1HoldData:
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      type: object
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      properties:
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
        salience:
          type: number
          format: float
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
        displayName:
          description: The representative name for the entity.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      properties:
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
        deidentifyTemplate:
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      type: object
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      description: Exact match configuration.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
      type: object
      description: Google Cloud Storage Object URI to save the issue model to.
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      type: object
      properties:
        displayed:
          type: boolean
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        correctnessLevel:
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      type: object
      description: Default configuration when creating Analyses in Insights.
      properties:
        runtimeIntegrationAnalysisPercentage:
          format: double
          description: >-
            Percentage of conversations created using Dialogflow runtime
            integration to analyze automatically, between [0, 100].
          type: number
        uploadConversationAnalysisPercentage:
          type: number
          format: double
          description: >-
            Percentage of conversations created using the UploadConversation
            endpoint to analyze automatically, between [0, 100].
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      type: object
      properties:
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        textSections:
          additionalProperties:
            type: string
          type: object
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        confidence:
          type: number
          format: float
          description: The confidence score of the summarization.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
        conversationModel:
          type: string
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
      description: Conversation summarization suggestion data.
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        transcriptUri:
          type: string
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      properties:
        partialErrors:
          type: array
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        totalRequestedAnalysesCount:
          format: int32
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
        completedAnalysesCount:
          format: int32
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          type: integer
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      description: The data for an issue match annotation.
      type: object
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          description: Information about the issue's assignment.
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      type: object
      properties:
        turnCount:
          format: int32
          type: integer
          description: Output only. The number of turns in the conversation.
          readOnly: true
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis
          readOnly: true
        agentId:
          type: string
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        updateTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          type: string
        latestSummary:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Output only. Latest summary of the conversation.
        expireTime:
          format: google-datetime
          type: string
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
        medium:
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
          description: Call-specific metadata.
        metadataJson:
          type: string
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
        transcript:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
          readOnly: true
          description: Output only. The conversation transcript.
        ttl:
          format: google-duration
          type: string
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
        duration:
          readOnly: true
          format: google-duration
          type: string
          description: Output only. The duration of the conversation.
        dataSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
          description: The source of the audio and transcription for the conversation.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time at which the conversation was created.
        dialogflowIntents:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          readOnly: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
        runtimeAnnotations:
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
          readOnly: true
        qualityMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
          description: Conversation metadata related to quality management.
        startTime:
          description: The time at which the conversation started.
          type: string
          format: google-datetime
        name:
          type: string
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      properties:
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        issueModels:
          type: array
          items:
            type: string
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        phraseMatchers:
          items:
            type: string
          type: array
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        transcriptUri:
          type: string
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
      description: A Cloud Storage source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      description: The data for a sentiment annotation.
      properties:
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
          type: number
        magnitude:
          type: number
          format: float
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      type: object
      description: The response for calculating conversation statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      properties:
        smartHighlighterMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: >-
            A map associating each smart highlighter display name with its
            respective number of matches in the set of conversations.
        customHighlighterMatches:
          additionalProperties:
            type: integer
            format: int32
          description: >-
            A map associating each custom highlighter resource name with its
            respective number of matches in the set of conversations.
          type: object
        conversationCount:
          format: int32
          description: The total number of conversations.
          type: integer
        issueMatchesStats:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/`
          type: object
        conversationCountTimeSeries:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
          description: >-
            A time series representing the count of conversations created over
            time that match that requested filter criteria.
        averageTurnCount:
          format: int32
          description: The average number of turns per conversation.
          type: integer
        averageDuration:
          description: >-
            The average duration of all conversations. The average is calculated
            using only conversations that have a time duration.
          type: string
          format: google-duration
        issueMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/` Deprecated, use
            `issue_matches_stats` field instead.
          deprecated: true
    GoogleProtobufEmpty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: GoogleProtobufEmpty
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        issues:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          type: array
          description: All the matched issues.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
      properties:
        transcriptSegments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
      type: object
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
          type: array
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
          readOnly: true
          description: Output only. The original request for initialization.
    GoogleCloudContactcenterinsightsV1View:
      type: object
      id: GoogleCloudContactcenterinsightsV1View
      description: The View resource.
      properties:
        value:
          type: string
          description: String with specific view properties, must be non-empty.
        name:
          description: >-
            Immutable. The resource name of the view. Format:
            projects/{project}/locations/{location}/views/{view}
          type: string
        displayName:
          type: string
          description: The human-readable display name of the view.
        createTime:
          readOnly: true
          description: Output only. The time at which this view was created.
          format: google-datetime
          type: string
        updateTime:
          type: string
          description: Output only. The most recent time at which the view was updated.
          format: google-datetime
          readOnly: true
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      properties:
        issueMatchData:
          description: Data specifying an issue match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        channelTag:
          type: integer
          format: int32
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
        annotationEndBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData
          description: Data specifying an interruption.
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        intentMatchData:
          description: Data specifying an intent match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      properties:
        answerRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        textSections:
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          type: object
          additionalProperties:
            type: string
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        confidence:
          type: number
          format: float
          description: The confidence score of the summarization.
        metadata:
          additionalProperties:
            type: string
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      type: object
      properties:
        dialogflowParticipantName:
          type: string
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
        dialogflowParticipant:
          deprecated: true
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        role:
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        userId:
          type: string
          description: A user-specified ID representing the participant.
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      type: object
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          type: string
          description: The unique identifier of the intent.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      properties:
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role of the participant.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          type: string
          deprecated: true
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
        dialogflowParticipantName:
          type: string
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      type: object
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      properties: {}
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec:
      properties:
        kmsKey:
          type: string
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
      type: object
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      id: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
          description: The original import request.
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata
      description: Metadata used for import issue model.
    GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata:
      type: object
      description: Metadata used for export issue model.
      properties:
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      type: object
      properties:
        metadata:
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
          additionalProperties:
            type: string
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          format: double
      description: Agent Assist Smart Compose suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse:
      description: The response to initialize a location-level encryption specification.
      type: object
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      properties: {}
      type: object
      description: Response from import issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
    GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
      type: object
      properties:
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
        querySource:
          description: Query source for the answer.
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          type: string
        query:
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
          type: string
      description: Explicit input used for generating the answer
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource to export data from.
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          type: string
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
        filter:
          type: string
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      type: object
      description: A BigQuery Table Reference.
      id: >-
        GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      properties:
        table:
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
          type: string
        projectId:
          type: string
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
    GoogleCloudContactcenterinsightsV1ConversationLevelSilence:
      description: Conversation-level silence data.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSilence
      properties:
        silenceDuration:
          format: google-duration
          description: Amount of time calculated to be in silence.
          type: string
        silencePercentage:
          type: number
          description: Percentage of the total conversation spent in silence.
          format: float
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: Required. The medium transcript objects represent.
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      type: object
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      properties:
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        displayName:
          description: Display name of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      properties:
        completedAnalysesCount:
          type: integer
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          format: int32
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
          description: The original request for bulk analyze.
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          type: array
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        totalRequestedAnalysesCount:
          type: integer
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          format: int32
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      type: object
      properties:
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: double
        reply:
          description: The content of the reply.
          type: string
        metadata:
          type: object
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          additionalProperties:
            type: string
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequest:
      type: object
      description: Request to import an issue model.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      properties:
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
          description: Google Cloud Storage source message.
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        createNewModel:
          type: boolean
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
    GoogleCloudContactcenterinsightsV1IssueModel:
      properties:
        languageCode:
          type: string
          description: Language of the model.
        createTime:
          readOnly: true
          description: Output only. The time at which this issue model was created.
          type: string
          format: google-datetime
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
        inputDataConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
          description: Configs for the input data that used to create the issue model.
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        issueCount:
          format: int64
          readOnly: true
          description: Output only. Number of issues in this issue model.
          type: string
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          description: Output only. State of the model.
        trainingStats:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
        modelType:
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          type: string
        displayName:
          description: The representative name for the issue model.
          type: string
      type: object
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      type: object
      properties:
        conversation:
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          type: string
          readOnly: true
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
      description: Metadata for a create analysis operation.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo:
      properties:
        agentId:
          type: string
          description: A user-specified string representing the agent.
        team:
          type: string
          description: A user-specified string representing the agent's team.
        displayName:
          type: string
          description: The agent's name.
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      properties:
        channelTag:
          format: int32
          description: The channel of the audio that the data applies to.
          type: integer
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      type: object
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      properties:
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
        speechConfig:
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        conversationId:
          type: string
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
        conversation:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation
          description: Required. The conversation resource to create.
        parent:
          description: Required. The parent resource of the conversation.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata:
      properties:
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
          readOnly: true
          description: Output only. The original request for initialization.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
          type: array
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest:
      description: The request to initialize a location-level encryption specification.
      properties:
        encryptionSpec:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
      type: object
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      description: Agent Assist Smart Compose suggestion data.
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          format: double
          type: number
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      description: The request to export insights.
      type: object
      properties:
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        points:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
          description: >-
            An ordered list of intervals from earliest to latest, where each
            interval represents the number of conversations that transpired
            during the time window.
          type: array
        intervalDuration:
          description: The duration of each interval.
          format: google-duration
          type: string
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
      description: Google Cloud Storage Object URI to save the issue model to.
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        request:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
          description: Output only. The original request for ingest.
        partialErrors:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
        ingestConversationsStats:
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      properties:
        intentUniqueId:
          type: string
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
      type: object
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        views:
          description: The views that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      type: object
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      description: Call-specific metadata.
      properties:
        agentChannel:
          type: integer
          description: The audio channel that contains the agent.
          format: int32
        customerChannel:
          description: The audio channel that contains the customer.
          format: int32
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
      type: object
      description: The response for a bulk delete conversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      type: object
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      description: The metadata for an `UploadConversation` operation.
      type: object
      properties:
        request:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
          description: Output only. The original request.
        appliedRedactionConfig:
          readOnly: true
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        analysisOperation:
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          type: string
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      properties:
        confidence:
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          type: number
          format: float
        dialogflowIntentId:
          type: string
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      type: object
      properties:
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: double
          type: number
        metadata:
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
          additionalProperties:
            type: string
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      description: The conversation source, which is a combination of transcript and audio.
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      type: object
      description: Metadata for undeploying an issue model.
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      properties:
        analyzedConversationsCount:
          format: int64
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
          format: int64
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      type: object
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          type: string
        languageCode:
          type: string
          description: Language of the model.
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        inputDataConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
          description: Configs for the input data that used to create the issue model.
        trainingStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          readOnly: true
        issueCount:
          type: string
          format: int64
          description: Output only. Number of issues in this issue model.
          readOnly: true
        modelType:
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          description: Type of the model.
        displayName:
          type: string
          description: The representative name for the issue model.
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          description: Output only. State of the model.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this issue model was created.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      type: object
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
          description: Required. The issue model to create.
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      type: object
      properties:
        issueModels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: The issue models that match the request.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      description: The response of listing issue models.
    GoogleCloudContactcenterinsightsV1alpha1SpeechConfig:
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
      properties: {}
      type: object
      description: The response for a bulk delete conversations operation.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      properties:
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
      type: object
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      properties:
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        createTime:
          type: string
          format: google-datetime
          description: The time at which this annotation was created.
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
        answerFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback
          description: The feedback that the customer has about the answer in `data`.
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData
          description: Dialogflow interaction data.
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
        annotationId:
          type: string
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        startBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest:
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
        createNewModel:
          type: boolean
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      description: Request to import an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          type: string
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
        agentChannel:
          type: integer
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          format: int32
        customerChannel:
          format: int32
          type: integer
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      type: object
      description: A segment of a full transcript.
      properties:
        words:
          description: >-
            A list of the word-specific information for each word in the
            segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
        confidence:
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          format: float
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        channelTag:
          format: int32
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
        segmentParticipant:
          description: The participant of this segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant
        text:
          type: string
          description: The text of this segment.
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          description: Output only. The original request for ingest.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
          readOnly: true
        ingestConversationsStats:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
          description: Output only. Statistics for IngestConversations operation.
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        partialErrors:
          type: array
          readOnly: true
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      type: object
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      properties:
        type:
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          type: string
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Sentiment expressed for this mention of the entity.
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
      properties:
        endTime:
          format: google-datetime
          description: The time at which the analysis ended.
          type: string
        callAnalysisMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
          description: Call-specific metadata created by the analysis.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      properties:
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      description: Configuration for processing transcript objects.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
      properties:
        conversations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
          description: The conversations that match the request.
          type: array
        nextPageToken:
          type: string
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is set, it means there is another page available. If
            it is not set, it means no other pages are available.
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      properties:
        force:
          type: boolean
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          type: integer
          format: int32
        filter:
          type: string
          description: Filter used to select the subset of conversations to delete.
        parent:
          type: string
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
      type: object
      description: The request to delete conversations in bulk.
    GoogleCloudContactcenterinsightsV1SentimentData:
      properties:
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
          type: number
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
          format: float
          type: number
      description: The data for a sentiment annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        dialogflowConversation:
          readOnly: true
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
      type: object
      description: A Dialogflow source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      type: object
      properties:
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        sentiments:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
          description: Overall conversation-level sentiment for each channel of the call.
        annotations:
          description: A list of call annotations that apply to this call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation
          type: array
        phraseMatchers:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: All the matched phrase matchers in the call.
          type: object
        entities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      type: object
      properties:
        displayName:
          description: Display name of the issue.
          type: string
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          format: int64
          type: string
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      description: Request to upload a conversation.
      type: object
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      properties:
        conversationId:
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
          type: string
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        agentChannel:
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
        customerChannel:
          type: integer
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
  parameters:
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        bulk_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/bulk_delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    encryption_spec:
      id: google.contactcenterinsights.encryption_spec
      name: encryption_spec
      title: Encryption_spec
      methods:
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_encryption_spec:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_spec/methods/get_encryption_spec
        insert: []
        update: []
        replace: []
        delete: []
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/settings/methods/update_settings'
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a conversation. Does not support audio transcription or DLP
        redaction. Use `conversations.upload` instead.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:initialize:
    parameters: *ref_1
    post:
      description: >-
        Initializes a location-level encryption key specification. An error will
        be thrown if the location has resources already created before the
        initialization. Once the encryption specification is initialized at a
        location, it is immutable and all newly created resources under the
        location will be encrypted with the existing specification.
      operationId: contactcenterinsights.projects.locations.encryptionSpec.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an issue model. An issue model can not be used in analysis
        after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export:
    parameters: *ref_1
    post:
      description: Exports an issue model to the provided destination.
      operationId: contactcenterinsights.projects.locations.issueModels.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: >-
        Deploys an issue model. Returns an error if a model is already deployed.
        An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:import:
    parameters: *ref_1
    post:
      description: Imports an issue model from a Cloud Storage bucket.
      operationId: contactcenterinsights.projects.locations.issueModels.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: >-
        contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: *ref_1
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:
    parameters: *ref_1
    get:
      description: Gets location-level encryption key specification.
      operationId: contactcenterinsights.projects.locations.getEncryptionSpec
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
