openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230822'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        appliedRedactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          readOnly: true
          description: Output only. The redaction config applied to the uploaded conversation.
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          readOnly: true
          type: string
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
      description: The metadata for an UploadConversation operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      properties:
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        type:
          description: The type of the entity mention.
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      description: The data for a phrase match rule.
      properties:
        negated:
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
          type: boolean
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
        query:
          type: string
          description: Required. The phrase to be matched.
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      properties:
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        smartReply:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
          description: Agent Assist Smart Reply data.
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
          description: Dialogflow interaction data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      type: object
      description: An annotation that was generated during the customer and agent interaction.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
          description: The original request for creation.
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      description: The response to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      properties:
        startTime:
          description: The start time of this interval.
          type: string
          format: google-datetime
        conversationCount:
          type: integer
          format: int32
          description: The number of conversations created in this interval.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
      type: object
    GoogleCloudContactcenterinsightsV1SentimentData:
      type: object
      properties:
        magnitude:
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          type: number
          format: float
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
      description: 'The conversation source, which is a combination of transcript and audio.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      type: object
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      properties:
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
        customerChannel:
          type: integer
          description: The audio channel that contains the customer.
          format: int32
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        conversations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: The conversations that match the request.
          type: array
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
      type: object
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      properties:
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
          items:
            type: string
        phraseMatchers:
          items:
            type: string
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
      description: Selector of all available annotators and phrase matchers to run.
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      type: object
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: Required. The issue model to create.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      type: object
      properties:
        correctnessLevel:
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          description: The correctness level of an answer.
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
      description: The feedback that the customer has about a certain answer in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      properties:
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
          description: Data specifying an issue match.
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
          description: Data specifying an intent match.
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
          description: Data specifying an interruption.
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
          description: Data specifying silence.
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        channelTag:
          type: integer
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      type: object
      description: A piece of metadata that applies to a window of a call.
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      properties:
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        parent:
          description: Required. The parent resource of the conversation.
          type: string
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      type: object
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: Information about the issue's assignment.
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      type: object
      properties:
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        issueModels:
          items:
            type: string
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: All the matched issues.
          type: array
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      description: Issue Modeling result on a conversation.
      type: object
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        dialogflowIntents:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        latestSummary:
          description: Output only. Latest summary of the conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        latestAnalysis:
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the conversation was updated.
          type: string
        createTime:
          description: Output only. The time at which the conversation was created.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        runtimeAnnotations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          description: Output only. The annotations that were generated during the customer and agent interaction.
          type: array
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          readOnly: true
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        duration:
          format: google-duration
          type: string
          description: Output only. The duration of the conversation.
          readOnly: true
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
        turnCount:
          type: integer
          format: int32
          description: Output only. The number of turns in the conversation.
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        ttl:
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
          type: string
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      properties:
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          deprecated: true
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        trainingConversationsCount:
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        uploadConversationAnalysisPercentage:
          type: number
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
          format: double
        runtimeIntegrationAnalysisPercentage:
          format: double
          type: number
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      description: Default configuration when creating Analyses in Insights.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        endOffset:
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
      type: object
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      properties:
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
          description: Call-specific metadata.
        turnCount:
          format: int32
          description: Output only. The number of turns in the conversation.
          type: integer
          readOnly: true
        latestAnalysis:
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        ttl:
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        runtimeAnnotations:
          description: Output only. The annotations that were generated during the customer and agent interaction.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
          type: array
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        medium:
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        duration:
          format: google-duration
          type: string
          readOnly: true
          description: Output only. The duration of the conversation.
        dialogflowIntents:
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          readOnly: true
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          type: object
          additionalProperties:
            type: string
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        latestSummary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          readOnly: true
          description: Output only. Latest summary of the conversation.
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          description: Output only. The conversation transcript.
          readOnly: true
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        createTime:
          type: string
          description: Output only. The time at which the conversation was created.
          format: google-datetime
          readOnly: true
      type: object
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      type: object
      description: A message representing the transcript of a conversation.
      properties:
        transcriptSegments:
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        conversation:
          type: string
          readOnly: true
          description: Output only. The Conversation that this Analysis Operation belongs to.
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      type: object
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      properties:
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
          description: Required. The conversation resource to create.
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
        parent:
          description: Required. The parent resource of the conversation.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
      properties:
        successfulAnalysisCount:
          format: int32
          description: Count of successful analyses.
          type: integer
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
        intervalDuration:
          type: string
          format: google-duration
          description: The duration of each interval.
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      properties:
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      description: A Dialogflow source of conversation data.
      type: object
      properties:
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
          readOnly: true
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      description: The request to ingest conversations.
      type: object
      properties:
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      type: object
      properties:
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
        summarizationModel:
          type: string
          description: Default summarization model to be used.
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      properties:
        unclassifiedConversationsCount:
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          format: int64
        issueStats:
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        analyzedConversationsCount:
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
          format: int64
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      properties:
        averageDuration:
          type: string
          format: google-duration
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
        smartHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
          type: object
        averageTurnCount:
          type: integer
          format: int32
          description: The average number of turns per conversation.
        issueMatchesStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
        customHighlighterMatches:
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          type: object
          additionalProperties:
            type: integer
            format: int32
        conversationCount:
          format: int32
          description: The total number of conversations.
          type: integer
        issueMatches:
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          additionalProperties:
            type: integer
            format: int32
          deprecated: true
        conversationCountTimeSeries:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
      description: The response for calculating conversation statistics.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      properties:
        summarizationModel:
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          description: Default summarization model to be used.
          type: string
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      type: object
      properties:
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          type: string
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase match rule group.
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
      description: A message representing a rule in the phrase matcher.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      type: object
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
      description: Aggregated statistics about an issue.
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      description: The request to delete an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      description: Configuration for Cloud Storage bucket sources.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1View:
      type: object
      properties:
        displayName:
          description: The human-readable display name of the view.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which this view was created.
        name:
          type: string
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          format: google-datetime
          readOnly: true
          type: string
        value:
          type: string
          description: 'String with specific view properties, must be non-empty.'
      description: The View resource.
      id: GoogleCloudContactcenterinsightsV1View
    GoogleCloudContactcenterinsightsV1Settings:
      id: GoogleCloudContactcenterinsightsV1Settings
      type: object
      description: The settings resource.
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which the settings were last updated.
          type: string
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
        languageCode:
          type: string
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
        pubsubNotificationSettings:
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
          type: object
        createTime:
          format: google-datetime
          description: Output only. The time at which the settings was created.
          type: string
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
        conversationTtl:
          format: google-duration
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          type: string
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: Default DLP redaction resources to be applied while ingesting conversations.
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: GoogleLongrunningOperation
    GoogleRpcStatus:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: GoogleRpcStatus
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      description: Response from import issue model
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      properties:
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        annotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
          type: array
          description: A list of call annotations that apply to this call.
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
          description: All the matched intents in the call.
      type: object
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      properties:
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
          description: A list of the word-specific information for each word in the segment.
        text:
          type: string
          description: The text of this segment.
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        channelTag:
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          type: integer
          format: int32
        messageTime:
          description: 'The time that the message occurred, if provided.'
          type: string
          format: google-datetime
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
          description: The participant of this segment.
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      type: object
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      properties:
        wordIndex:
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          type: integer
          format: int32
        transcriptIndex:
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
    GoogleCloudContactcenterinsightsV1SilenceData:
      description: The data for a silence annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1SilenceData
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      type: object
      description: The data for an issue match annotation.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      properties:
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: A list of operations that matches the specified filter in the request.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      type: object
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      description: The data for a sentiment annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      properties:
        score:
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
        magnitude:
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      type: object
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          deprecated: true
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        trainingConversationsCount:
          format: int64
          readOnly: true
          description: Output only. Number of conversations used in training. Output only.
          type: string
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      description: Agent Assist Smart Compose suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      properties:
        suggestion:
          description: The content of the suggestion.
          type: string
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
    GoogleCloudContactcenterinsightsV1Entity:
      id: GoogleCloudContactcenterinsightsV1Entity
      properties:
        displayName:
          type: string
          description: The representative name for the entity.
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        type:
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
          type: object
        salience:
          format: float
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
      type: object
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      type: object
      properties:
        processedObjectCount:
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
          readOnly: true
          format: int32
        duplicatesSkippedCount:
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          type: integer
          format: int32
          readOnly: true
        failedIngestCount:
          readOnly: true
          format: int32
          type: integer
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
        successfulIngestCount:
          description: Output only. The number of new conversations added during this ingest operation.
          format: int32
          readOnly: true
          type: integer
      description: Statistics for IngestConversations operation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      properties: {}
      type: object
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      properties:
        totalRequestedAnalysesCount:
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      type: object
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      properties:
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        question:
          type: string
          description: The corresponding FAQ question.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
      type: object
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      description: Response from export issue model
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
      description: A BigQuery Table Reference.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      properties:
        transcriptIndex:
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
          format: int32
        wordIndex:
          format: int32
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      properties:
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      properties: {}
      type: object
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      description: The phrase matcher resource.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      type: object
      properties:
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase matcher.
          type: string
        phraseMatchRuleGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          type: array
          description: A list of phase match rule groups that are included in this matcher.
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        activationUpdateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the activation status was updated.
        roleMatch:
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
        revisionId:
          readOnly: true
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
          type: string
        revisionCreateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the phrase matcher was updated.
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        versionTag:
          type: string
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
      description: Metadata for deploying an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      properties:
        score:
          type: number
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          format: double
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        issue:
          description: Resource name of the assigned issue.
          type: string
      description: Information about the issue.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      description: Agent Assist Smart Compose suggestion data.
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
          additionalProperties:
            type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
      properties:
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      type: object
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          type: string
          description: The time at which the analysis ended.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      type: object
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        answerFeedback:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
          description: The feedback that the customer has about the answer in `data`.
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        createTime:
          format: google-datetime
          description: The time at which this annotation was created.
          type: string
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      description: The data for a silence annotation.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          description: Output only. The original request for ingest.
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        partialErrors:
          type: array
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        labeledConversationsCount:
          format: int64
          description: Number of conversations attached to the issue at this point in time.
          type: string
      type: object
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          type: string
          format: google-duration
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        endOffset:
          type: string
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          format: google-duration
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        writeDisposition:
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          description: Options for what to do if the destination table already exists.
        parent:
          type: string
          description: Required. The parent resource to export data from.
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      type: object
      description: A Dialogflow source of conversation data.
      properties:
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
          readOnly: true
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      properties:
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        confidence:
          type: number
          format: float
          description: The confidence score of the summarization.
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        metadata:
          description: A map that contains metadata about the summarization and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        answerRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      description: Conversation summarization suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      properties:
        currentStats:
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      description: Response of querying an issue model's statistics.
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      properties:
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this issue model was created.
          readOnly: true
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        updateTime:
          description: Output only. The most recent time at which the issue model was updated.
          type: string
          readOnly: true
          format: google-datetime
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
        trainingStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
          format: int64
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          description: Output only. State of the model.
          type: string
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
        languageCode:
          type: string
          description: Language of the model.
        displayName:
          type: string
          description: The representative name for the issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      type: object
      description: DLP resources used for redaction while ingesting conversations.
      properties:
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
        deidentifyTemplate:
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      properties:
        successfulIngestCount:
          type: integer
          format: int32
          description: Output only. The number of new conversations added during this ingest operation.
          readOnly: true
        duplicatesSkippedCount:
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          type: integer
          readOnly: true
          format: int32
        processedObjectCount:
          type: integer
          description: Output only. The number of objects processed during the ingest operation.
          readOnly: true
          format: int32
        failedIngestCount:
          type: integer
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          format: int32
      description: Statistics for IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      type: object
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1GcsSource:
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
      type: object
    GoogleProtobufEmpty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      properties:
        analyzedConversationsCount:
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
        unclassifiedConversationsCount:
          format: int64
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
          description: The original request for export.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      properties:
        issueModels:
          description: The issue models that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      type: object
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      type: object
      description: The request to analyze conversations in bulk.
      properties:
        analysisPercentage:
          type: number
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      type: object
      properties:
        parent:
          description: Required. The parent resource to export data from.
          type: string
        writeDisposition:
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          type: string
          description: Required. The medium transcript objects represent.
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      type: object
      description: Configuration for processing transcript objects.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      properties:
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      description: The response of listing views.
      type: object
      properties:
        views:
          type: array
          description: The views that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      description: Response from import issue model
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      type: object
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      description: The response of listing phrase matchers.
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      type: object
      properties:
        issue:
          type: string
          description: Resource name of the assigned issue.
        score:
          format: double
          type: number
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          description: All the matched issues.
          type: array
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      properties:
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      type: object
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      description: Exact match configuration.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      properties:
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        totalRequestedAnalysesCount:
          type: integer
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          format: int32
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1IssueModel:
      description: The issue model resource.
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this issue model was created.
          readOnly: true
        issueCount:
          format: int64
          readOnly: true
          type: string
          description: Output only. Number of issues in this issue model.
        languageCode:
          description: Language of the model.
          type: string
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          type: string
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
        state:
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          description: Output only. State of the model.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          readOnly: true
        displayName:
          type: string
          description: The representative name for the issue model.
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        updateTime:
          format: google-datetime
          description: Output only. The most recent time at which the issue model was updated.
          readOnly: true
          type: string
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      properties:
        userId:
          type: string
          description: A user-specified ID representing the participant.
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        dialogflowParticipant:
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        role:
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
      description: The call participant speaking for a given utterance.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
    GoogleCloudContactcenterinsightsV1Analysis:
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
      properties:
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        requestTime:
          type: string
          format: google-datetime
          description: Output only. The time at which the analysis was requested.
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          readOnly: true
        analysisResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          readOnly: true
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      description: The request to undeploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      type: object
      properties:
        deidentifyTemplate:
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
          type: string
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      type: object
      description: The response to list analyses.
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        analyses:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: The analyses that match the request.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      type: object
      description: The call participant speaking for a given utterance.
      properties:
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        dialogflowParticipantName:
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
          deprecated: true
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
        endTime:
          type: string
          format: google-datetime
          description: The time at which the analysis ended.
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      type: object
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      type: object
      description: The data for an interruption annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1InterruptionData
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          readOnly: true
          description: Output only. The original request.
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
          readOnly: true
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
      description: The metadata for an UploadConversation operation.
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          type: string
          description: The human-readable name of the intent.
      type: object
      id: GoogleCloudContactcenterinsightsV1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1HoldData:
      type: object
      id: GoogleCloudContactcenterinsightsV1HoldData
      properties: {}
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      properties:
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
        confidence:
          type: number
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      properties: {}
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      properties:
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        reply:
          type: string
          description: The content of the reply.
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The sentiment for this transcript segment.
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        messageTime:
          description: 'The time that the message occurred, if provided.'
          type: string
          format: google-datetime
        channelTag:
          format: int32
          type: integer
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
        text:
          description: The text of this segment.
          type: string
        words:
          type: array
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      type: object
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A map that contains metadata about the summarization and the document from which it originates.
        answerRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          description: The human-readable name of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      type: object
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      properties:
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
          description: Data specifying an interruption.
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
          format: int32
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
      type: object
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
        reply:
          description: The content of the reply.
          type: string
        metadata:
          type: object
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          additionalProperties:
            type: string
      type: object
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1Issue:
      properties:
        displayName:
          description: The representative name for the issue.
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The most recent time that this issue was updated.
        sampleUtterances:
          type: array
          readOnly: true
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          items:
            type: string
        name:
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time at which this issue was created.
      description: The issue resource.
      id: GoogleCloudContactcenterinsightsV1Issue
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      type: object
      description: The request to delete an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        uri:
          type: string
          description: Article URI.
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        metadata:
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
          additionalProperties:
            type: string
        title:
          type: string
          description: Article title.
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
      description: Agent Assist Article Suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      type: object
      properties:
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        uri:
          description: Article URI.
          type: string
        title:
          type: string
          description: Article title.
        metadata:
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
          additionalProperties:
            type: string
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      properties:
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
        customerChannel:
          description: The audio channel that contains the customer.
          format: int32
          type: integer
      description: Call-specific metadata.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      type: object
      properties:
        issues:
          type: array
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      type: object
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      type: object
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      type: object
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        confidenceScore:
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: float
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        question:
          type: string
          description: The corresponding FAQ question.
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
      type: object
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      properties:
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        channelTag:
          format: int32
          type: integer
          description: The channel of the audio that the data applies to.
      description: One channel of conversation-level sentiment data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      type: object
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      description: 'The conversation source, which is a combination of transcript and audio.'
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      type: object
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
          type: string
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      type: object
      properties:
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        correctnessLevel:
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      description: The feedback that the customer has about a certain answer in the conversation.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
      description: Configuration information of a phrase match rule.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
          type: array
          description: A list of call annotations that apply to this call.
        sentiments:
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          description: All the matched intents in the call.
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          type: object
      description: Call-specific metadata created during analysis.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      type: object
      description: The response to an IngestConversations operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      properties:
        salience:
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
          format: float
        metadata:
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        type:
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          description: The entity type.
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      description: Metadata for creating an issue model.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
        annotatorSelector:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
        conversation:
          readOnly: true
          type: string
          description: Output only. The Conversation that this Analysis Operation belongs to.
      description: Metadata for a create analysis operation.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      properties:
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        analysisPercentage:
          format: float
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          type: number
      description: The request to analyze conversations in bulk.
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        analysisResult:
          readOnly: true
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
        requestTime:
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
