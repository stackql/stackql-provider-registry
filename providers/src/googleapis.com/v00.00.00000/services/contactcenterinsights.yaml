openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230822'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          description: The unique identifier of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      type: object
      properties:
        totalRequestedAnalysesCount:
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          format: int32
          type: integer
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          format: int32
          type: integer
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        reply:
          type: string
          description: The content of the reply.
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        confidence:
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          format: float
        startOffset:
          format: google-duration
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          type: string
        endOffset:
          format: google-duration
          type: string
          description: Time offset of the end of this word relative to the beginning of the total conversation.
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
      description: Word-level info for words in a transcript.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      properties: {}
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      properties:
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          deprecated: true
          type: string
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        role:
          description: The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      description: The call participant speaking for a given utterance.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
      type: object
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      type: object
      description: The response of listing issues.
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
          description: The issues that match the request.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      properties:
        partialErrors:
          readOnly: true
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        request:
          readOnly: true
          description: Output only. The original request for ingest.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        ingestConversationsStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
          description: Output only. Statistics for IngestConversations operation.
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
      type: object
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
      type: object
      description: A Cloud Storage source of conversation data.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
      type: object
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      description: The request to export insights.
      properties:
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          type: string
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      description: Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      properties:
        failedIngestCount:
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          format: int32
          readOnly: true
          type: integer
        duplicatesSkippedCount:
          readOnly: true
          type: integer
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          format: int32
        successfulIngestCount:
          type: integer
          description: Output only. The number of new conversations added during this ingest operation.
          readOnly: true
          format: int32
        processedObjectCount:
          format: int32
          description: Output only. The number of objects processed during the ingest operation.
          readOnly: true
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      type: object
      properties:
        customHighlighterMatches:
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
          type: object
        issueMatches:
          additionalProperties:
            type: integer
            format: int32
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          type: object
          deprecated: true
        issueMatchesStats:
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        smartHighlighterMatches:
          type: object
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
          additionalProperties:
            type: integer
            format: int32
        averageDuration:
          type: string
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          format: google-duration
        conversationCountTimeSeries:
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
        conversationCount:
          type: integer
          description: The total number of conversations.
          format: int32
        averageTurnCount:
          description: The average number of turns per conversation.
          format: int32
          type: integer
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      description: The response for calculating conversation statistics.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      type: object
      description: The response to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      type: object
      description: Word-level info for words in a transcript.
      properties:
        startOffset:
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        endOffset:
          format: google-duration
          type: string
          description: Time offset of the end of this word relative to the beginning of the total conversation.
        confidence:
          format: float
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      properties:
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      type: object
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      type: object
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          description: Default summarization model to be used.
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
      description: Configuration for summarization.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        runtimeIntegrationAnalysisPercentage:
          format: double
          type: number
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
        uploadConversationAnalysisPercentage:
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
          type: number
          format: double
      description: Default configuration when creating Analyses in Insights.
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      properties:
        metadata:
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
        displayName:
          description: The representative name for the entity.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        salience:
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          format: float
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      type: object
    GoogleCloudContactcenterinsightsV1Conversation:
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
      description: The conversation resource.
      properties:
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        runtimeAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          readOnly: true
          description: Output only. The annotations that were generated during the customer and agent interaction.
          type: array
        duration:
          description: Output only. The duration of the conversation.
          format: google-duration
          type: string
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        latestSummary:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          description: Output only. The conversation transcript.
          readOnly: true
        ttl:
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
          type: string
        expireTime:
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          format: google-datetime
          type: string
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
        dialogflowIntents:
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          type: object
          readOnly: true
        createTime:
          description: Output only. The time at which the conversation was created.
          format: google-datetime
          readOnly: true
          type: string
        latestAnalysis:
          readOnly: true
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
          description: Call-specific metadata.
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        updateTime:
          description: Output only. The most recent time at which the conversation was updated.
          readOnly: true
          type: string
          format: google-datetime
        turnCount:
          description: Output only. The number of turns in the conversation.
          type: integer
          format: int32
          readOnly: true
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          additionalProperties:
            type: string
          type: object
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      type: object
      description: A piece of metadata that applies to a window of a call.
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      properties:
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
          description: Data specifying an entity mention.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
        intentMatchData:
          description: Data specifying an intent match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
        channelTag:
          type: integer
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      description: Response for an export insights operation.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      type: object
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      type: object
      properties:
        phraseMatchers:
          type: object
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        intents:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
          description: All the matched intents in the call.
          type: object
        sentiments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
          type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      description: Metadata for a create analysis operation.
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      properties:
        medium:
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          deprecated: true
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          readOnly: true
          type: string
          format: int64
          description: Output only. Number of conversations used in training. Output only.
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
      type: object
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      type: object
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      properties:
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          type: number
          format: float
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
      type: object
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      type: object
      properties:
        issueAssignment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          description: Information about the issue's assignment.
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      properties:
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1Intent:
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
        id:
          description: The unique identifier of the intent.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        transcriptIndex:
          type: integer
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
        wordIndex:
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          format: int32
          type: integer
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      properties:
        medium:
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: Required. The medium transcript objects represent.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        dialogflowConversation:
          type: string
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          readOnly: true
      type: object
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      description: Configuration information of a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      properties:
        exactMatchConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
          description: The configuration for the exact match rule.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      type: object
      description: An annotation that was generated during the customer and agent interaction.
      properties:
        createTime:
          description: The time at which this annotation was created.
          type: string
          format: google-datetime
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
          description: Dialogflow interaction data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        smartReply:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
          description: Agent Assist Smart Reply data.
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      properties:
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          type: string
          description: Default summarization model to be used.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      type: object
      properties:
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        confidence:
          description: The confidence score of the summarization.
          format: float
          type: number
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        metadata:
          description: A map that contains metadata about the summarization and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        textSections:
          additionalProperties:
            type: string
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          type: object
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1SilenceData
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      type: object
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      properties:
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        totalRequestedAnalysesCount:
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          format: int32
          type: integer
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          format: int32
          type: integer
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      description: Call-specific metadata.
      properties:
        customerChannel:
          description: The audio channel that contains the customer.
          format: int32
          type: integer
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      type: object
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      type: object
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      description: Agent Assist Smart Compose suggestion data.
      properties:
        confidenceScore:
          type: number
          format: double
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        suggestion:
          description: The content of the suggestion.
          type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        metadata:
          type: object
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      type: object
      properties:
        wordIndex:
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          type: integer
        transcriptIndex:
          type: integer
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      properties:
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        points:
          type: array
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
        intervalDuration:
          format: google-duration
          type: string
          description: The duration of each interval.
      type: object
      description: A time series representing conversations over time.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      description: The data for a sentiment annotation.
      type: object
      properties:
        score:
          type: number
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
        magnitude:
          type: number
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          format: float
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      type: object
      properties:
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        channelTag:
          format: int32
          type: integer
          description: The channel of the audio that the data applies to.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
      type: object
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      properties: {}
      description: Response from import issue model
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      description: Metadata for a create analysis operation.
      type: object
      properties:
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1HoldData:
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
      properties: {}
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      properties:
        entities:
          type: object
          description: All the entities in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          type: array
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        annotations:
          type: array
          description: A list of call annotations that apply to this call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
        phraseMatchers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: All the matched phrase matchers in the call.
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      type: object
      description: Call-specific metadata created during analysis.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      properties:
        endTime:
          format: google-datetime
          description: The time at which the analysis ended.
          type: string
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
      type: object
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      properties:
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      properties: {}
      description: The data for an interruption annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      properties:
        currentStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      description: Response of querying an issue model's statistics.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      type: object
      properties:
        phraseMatchRules:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          description: A list of phrase match rules that are included in this group.
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase match rule group.
      description: A message representing a rule in the phrase matcher.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      type: object
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        ingestConversationsStats:
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
        partialErrors:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          description: Output only. The original request for ingest.
          readOnly: true
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1Entity:
      type: object
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      id: GoogleCloudContactcenterinsightsV1Entity
      properties:
        salience:
          format: float
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
          description: The entity type.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      properties:
        requestTime:
          description: Output only. The time at which the analysis was requested.
          type: string
          format: google-datetime
          readOnly: true
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        analysisResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
        createTime:
          readOnly: true
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          format: google-datetime
          type: string
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      description: The response of listing phrase matchers.
      properties:
        phraseMatchers:
          type: array
          description: The phrase matchers that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      type: object
      description: The request to ingest conversations.
      properties:
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
        parent:
          type: string
          description: Required. The parent resource for new conversations.
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      properties: {}
      type: object
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      description: The response to undeploy an issue model.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      properties: {}
      type: object
      description: Response from import issue model
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      description: The request to create an issue model.
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
        parent:
          type: string
          description: Required. The parent resource of the issue model.
    GoogleCloudContactcenterinsightsV1IssueModel:
      id: GoogleCloudContactcenterinsightsV1IssueModel
      description: The issue model resource.
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time at which this issue model was created.
          type: string
          readOnly: true
        trainingStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: Output only. Immutable. The issue model's label statistics on its training data.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        issueCount:
          readOnly: true
          format: int64
          type: string
          description: Output only. Number of issues in this issue model.
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
          type: string
          format: google-datetime
        displayName:
          type: string
          description: The representative name for the issue model.
        modelType:
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        state:
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          description: Output only. State of the model.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
        languageCode:
          type: string
          description: Language of the model.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      properties:
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      properties:
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        issues:
          type: array
          description: All the matched issues.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      type: object
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      description: Dialogflow interaction data.
      properties:
        confidence:
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      description: The conversation resource.
      type: object
      properties:
        expireTime:
          format: google-datetime
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          type: string
        dialogflowIntents:
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
          description: Call-specific metadata.
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the conversation was updated.
          type: string
        duration:
          type: string
          description: Output only. The duration of the conversation.
          format: google-duration
          readOnly: true
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        ttl:
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
        createTime:
          format: google-datetime
          description: Output only. The time at which the conversation was created.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          readOnly: true
          description: Output only. The conversation transcript.
        turnCount:
          type: integer
          format: int32
          description: Output only. The number of turns in the conversation.
          readOnly: true
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        latestAnalysis:
          readOnly: true
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
        latestSummary:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
        runtimeAnnotations:
          readOnly: true
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      type: object
      properties:
        analyzedConversationsCount:
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
          format: int64
        issueStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      type: object
      properties:
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Sentiment expressed for this mention of the entity.
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
      properties:
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
          description: Data specifying an entity mention.
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
          description: Data specifying an intent match.
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: Data specifying a phrase match.
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
          description: Data specifying an issue match.
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
          description: Data specifying silence.
        channelTag:
          format: int32
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      type: object
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Partial errors during export operation that might cause the operation output to be incomplete.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      properties:
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          deprecated: true
        trainingConversationsCount:
          readOnly: true
          format: int64
          type: string
          description: Output only. Number of conversations used in training. Output only.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      type: object
      description: A BigQuery Table Reference.
      properties:
        projectId:
          type: string
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      description: Issue Modeling result on a conversation.
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: All the matched issues.
          type: array
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      type: object
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      properties:
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
        type:
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      type: object
      properties:
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        correctnessLevel:
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      properties:
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          type: string
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      properties:
        transcriptSegments:
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      properties:
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      type: object
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        appliedRedactionConfig:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: Output only. The redaction config applied to the uploaded conversation.
        analysisOperation:
          readOnly: true
          type: string
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
        request:
          readOnly: true
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      description: The metadata for an UploadConversation operation.
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      type: object
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
          type: object
      description: Agent Assist Smart Compose suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      type: object
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      properties:
        confidenceScore:
          type: number
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        question:
          type: string
          description: The corresponding FAQ question.
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      type: object
      properties:
        revisionId:
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
          readOnly: true
        versionTag:
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
          type: string
        activationUpdateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The most recent time at which the activation status was updated.
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The most recent time at which the phrase matcher was updated.
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        revisionCreateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
          type: string
        type:
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
          description: Required. The type of this phrase matcher.
          type: string
        phraseMatchRuleGroups:
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          type: array
        roleMatch:
          type: string
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
      description: The phrase matcher resource.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      description: Configuration for Cloud Storage bucket sources.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          format: int32
          description: The channel of the audio that the data applies to.
          type: integer
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      properties:
        failedAnalysisCount:
          description: Count of failed analyses.
          type: integer
          format: int32
        successfulAnalysisCount:
          format: int32
          description: Count of successful analyses.
          type: integer
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      properties:
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
        channelTag:
          type: integer
          format: int32
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        words:
          description: A list of the word-specific information for each word in the segment.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
        messageTime:
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
          type: string
        text:
          type: string
          description: The text of this segment.
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1SentimentData:
      id: GoogleCloudContactcenterinsightsV1SentimentData
      description: The data for a sentiment annotation.
      type: object
      properties:
        magnitude:
          format: float
          type: number
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
    GoogleRpcStatus:
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: GoogleRpcStatus
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
          type: number
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
      description: The data for an issue match annotation.
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        uri:
          type: string
          description: Article URI.
        title:
          description: Article title.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      description: 'The conversation source, which is a combination of transcript and audio.'
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      description: Exact match configuration.
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      type: object
      properties:
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
        query:
          type: string
          description: Required. The phrase to be matched.
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1Settings:
      id: GoogleCloudContactcenterinsightsV1Settings
      description: The settings resource.
      type: object
      properties:
        createTime:
          readOnly: true
          description: Output only. The time at which the settings was created.
          type: string
          format: google-datetime
        pubsubNotificationSettings:
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
          type: object
        languageCode:
          type: string
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: Default DLP redaction resources to be applied while ingesting conversations.
        updateTime:
          description: Output only. The time at which the settings were last updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
          type: string
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
        conversationTtl:
          type: string
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          format: google-duration
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      type: object
      description: The response of listing views.
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        views:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          description: The views that match the request.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      description: The request to undeploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      properties:
        issueStats:
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
        analyzedConversationsCount:
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
          format: int64
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
          description: Required. The issue model to create.
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      properties:
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A map that contains metadata about the summarization and the document from which it originates.
        textSections:
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
          type: object
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      properties:
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      properties:
        analysisOperation:
          readOnly: true
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
        request:
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
          readOnly: true
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
      description: The metadata for an UploadConversation operation.
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      type: object
      description: Metadata for undeploying an issue model.
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      type: object
      properties:
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
          description: Required. The conversation resource to create.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      type: object
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      properties:
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
          description: The original request for creation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      type: object
      properties:
        issue:
          type: string
          description: Resource name of the assigned issue.
        score:
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
          format: double
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
      type: object
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      properties:
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        phraseMatchers:
          items:
            type: string
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
          items:
            type: string
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      type: object
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: The analyses that match the request.
          type: array
      description: The response to list analyses.
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      type: object
      properties:
        transcriptSegments:
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      type: object
      properties:
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        userId:
          type: string
          description: A user-specified ID representing the participant.
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role of the participant.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        dialogflowParticipant:
          type: string
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
      description: The call participant speaking for a given utterance.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      properties:
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        correctnessLevel:
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
      type: object
      description: The feedback that the customer has about a certain answer in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      description: The response to an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        confidenceScore:
          format: float
          type: number
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        metadata:
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          additionalProperties:
            type: string
        title:
          description: Article title.
          type: string
        uri:
          type: string
          description: Article URI.
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      type: object
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      properties:
        conversations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          type: array
          description: The conversations that match the request.
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      type: object
      id: GoogleCloudContactcenterinsightsV1GcsSource
      description: A Cloud Storage source of conversation data.
    GoogleCloudContactcenterinsightsV1Issue:
      description: The issue resource.
      properties:
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        createTime:
          description: Output only. The time at which this issue was created.
          type: string
          format: google-datetime
          readOnly: true
        sampleUtterances:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. Resource names of the sample representative utterances that match to this issue.
        displayName:
          type: string
          description: The representative name for the issue.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time that this issue was updated.
      id: GoogleCloudContactcenterinsightsV1Issue
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      type: object
      properties:
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      properties:
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          items:
            type: string
          type: array
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
      properties:
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        issue:
          type: string
          description: Resource name of the assigned issue.
        score:
          format: double
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      description: Statistics for IngestConversations operation.
      type: object
      properties:
        processedObjectCount:
          readOnly: true
          format: int32
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
        duplicatesSkippedCount:
          format: int32
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          readOnly: true
          type: integer
        successfulIngestCount:
          readOnly: true
          format: int32
          type: integer
          description: Output only. The number of new conversations added during this ingest operation.
        failedIngestCount:
          type: integer
          readOnly: true
          format: int32
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      type: object
      properties:
        issueModels:
          description: The issue models that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          type: array
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      description: The response of listing issue models.
    GoogleCloudContactcenterinsightsV1View:
      type: object
      properties:
        name:
          type: string
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
        displayName:
          type: string
          description: The human-readable display name of the view.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this view was created.
          type: string
        updateTime:
          type: string
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
          format: google-datetime
        value:
          type: string
          description: 'String with specific view properties, must be non-empty.'
      description: The View resource.
      id: GoogleCloudContactcenterinsightsV1View
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
      properties:
        startTime:
          description: The start time of this interval.
          type: string
          format: google-datetime
        conversationCount:
          type: integer
          description: The number of conversations created in this interval.
          format: int32
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      properties:
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      type: object
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      description: Agent Assist Smart Reply data.
      properties:
        reply:
          description: The content of the reply.
          type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
        confidenceScore:
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1Analysis:
      type: object
      description: The analysis resource.
      properties:
        requestTime:
          format: google-datetime
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
        analysisResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
      id: GoogleCloudContactcenterinsightsV1Analysis
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      type: object
      description: 'The conversation source, which is a combination of transcript and audio.'
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      description: Configuration for Cloud Storage bucket sources.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
      properties:
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issueCount:
          readOnly: true
          format: int64
          description: Output only. Number of issues in this issue model.
          type: string
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          description: Output only. State of the model.
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
        displayName:
          type: string
          description: The representative name for the issue model.
        languageCode:
          description: Language of the model.
          type: string
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which this issue model was created.
          format: google-datetime
        updateTime:
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      type: object
      description: A segment of a full transcript.
      properties:
        messageTime:
          type: string
          description: 'The time that the message occurred, if provided.'
          format: google-datetime
        channelTag:
          type: integer
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          format: int32
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
          description: The participant of this segment.
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        words:
          description: A list of the word-specific information for each word in the segment.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        text:
          description: The text of this segment.
          type: string
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The sentiment for this transcript segment.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: An annotation that was generated during the customer and agent interaction.
      properties:
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        createTime:
          type: string
          format: google-datetime
          description: The time at which this annotation was created.
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      description: Call-specific metadata.
      type: object
      properties:
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
