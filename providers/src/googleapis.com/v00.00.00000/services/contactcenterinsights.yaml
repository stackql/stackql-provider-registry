openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230115'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  schemas:
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      type: object
      properties:
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          type: integer
          description: The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
          format: int32
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: The boundary in the conversation where the annotation ends, inclusive.
        annotationStartBoundary:
          description: The boundary in the conversation where the annotation starts, inclusive.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
      description: A piece of metadata that applies to a window of a call.
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      type: object
      properties:
        startBoundary:
          description: The boundary in the conversation where the annotation starts, inclusive.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
          description: Dialogflow interaction data.
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        createTime:
          format: google-datetime
          type: string
          description: The time at which this annotation was created.
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: The boundary in the conversation where the annotation ends, inclusive.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
      description: An annotation that was generated during the customer and agent interaction.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      description: The request to create an issue model.
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      type: object
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time at which the analysis ended.
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      type: object
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
        analysisPercentage:
          type: number
          format: float
          description: Required. Percentage of selected conversation to analyze, between [0, 100].
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
      type: object
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      properties:
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        annotatorSelector:
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        analysisPercentage:
          description: Required. Percentage of selected conversation to analyze, between [0, 100].
          format: float
          type: number
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      properties:
        request:
          description: The original request for undeployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
      type: object
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      type: object
      description: Agent Assist frequently-asked-question answer data.
      properties:
        confidenceScore:
          description: The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      type: object
      properties:
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
        query:
          type: string
          description: Required. The phrase to be matched.
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      properties:
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
          description: The original request for deployment.
      description: Metadata for deploying an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      description: A BigQuery Table Reference.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      properties:
        table:
          description: The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
        dataset:
          description: Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
        projectId:
          type: string
          description: A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          description: The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
        projectId:
          type: string
          description: A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
        dataset:
          type: string
          description: Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      type: object
      description: Dialogflow interaction data.
      properties:
        confidence:
          type: number
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      description: Metadata from Dialogflow relating to the current transcript segment.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      properties:
        issueModels:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          type: array
          description: The issue models that match the request.
      type: object
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      type: object
      description: The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
    GoogleCloudContactcenterinsightsV1SilenceData:
      properties: {}
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1SilenceData
      type: object
    GoogleLongrunningOperation:
      type: object
      properties:
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
      description: This resource represents a long-running operation that is the result of a network API call.
      id: GoogleLongrunningOperation
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      type: object
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: A list of operations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: GoogleLongrunningListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
          description: Call-specific metadata.
        agentId:
          description: An opaque, user-specified string representing the human agent who handled the conversation.
          type: string
        dialogflowIntents:
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          readOnly: true
          type: object
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        ttl:
          format: google-duration
          type: string
          description: Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          readOnly: true
          description: Output only. The conversation transcript.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time at which the conversation was updated.
          readOnly: true
        createTime:
          type: string
          description: Output only. The time at which the conversation was created.
          readOnly: true
          format: google-datetime
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          readOnly: true
        turnCount:
          type: integer
          description: Output only. The number of turns in the conversation.
          readOnly: true
          format: int32
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
        duration:
          format: google-duration
          description: Output only. The duration of the conversation.
          readOnly: true
          type: string
        startTime:
          type: string
          format: google-datetime
          description: The time at which the conversation started.
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        runtimeAnnotations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
        expireTime:
          format: google-datetime
          type: string
          description: The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
      type: object
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleCloudContactcenterinsightsV1Settings:
      properties:
        languageCode:
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
          type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
        createTime:
          description: Output only. The time at which the settings was created.
          format: google-datetime
          type: string
          readOnly: true
        pubsubNotificationSettings:
          additionalProperties:
            type: string
          type: object
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
        name:
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
          type: string
        conversationTtl:
          type: string
          format: google-duration
          description: The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.
        updateTime:
          type: string
          description: Output only. The time at which the settings were last updated.
          readOnly: true
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1Settings
      description: The settings resource.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        partialErrors:
          type: array
          readOnly: true
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      type: object
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      properties:
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        correctnessLevel:
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
      type: object
      description: The feedback that the customer has about a certain answer in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      description: The request to ingest conversations.
      properties:
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      type: object
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1Issue:
      type: object
      description: The issue resource.
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time at which this issue was created.
        sampleUtterances:
          type: array
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          items:
            type: string
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        displayName:
          type: string
          description: The representative name for the issue.
        updateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time that this issue was updated.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1Issue
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
      description: Metadata for deploying an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      description: The response for calculating conversation statistics.
      properties:
        smartHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
          type: object
        issueMatchesStats:
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        conversationCountTimeSeries:
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
        customHighlighterMatches:
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
          type: object
        averageTurnCount:
          type: integer
          description: The average number of turns per conversation.
          format: int32
        issueMatches:
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          additionalProperties:
            type: integer
            format: int32
          type: object
        averageDuration:
          format: google-duration
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          type: string
        conversationCount:
          format: int32
          description: The total number of conversations.
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      properties:
        analyzedConversationsCount:
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
        unclassifiedConversationsCount:
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          format: int64
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          type: object
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      description: Response for an export insights operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      properties:
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
          type: object
        unclassifiedConversationsCount:
          format: int64
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
        analyzedConversationsCount:
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      properties:
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      type: object
      description: The conversation source, which is a combination of transcript and audio.
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      properties:
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
          description: The original request for export.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1Entity:
      id: GoogleCloudContactcenterinsightsV1Entity
      description: The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
      type: object
      properties:
        type:
          description: The entity type.
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        metadata:
          type: object
          description: Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
          additionalProperties:
            type: string
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        salience:
          type: number
          format: float
          description: The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      type: object
      properties:
        labeledConversationsCount:
          type: string
          format: int64
          description: Number of conversations attached to the issue at this point in time.
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        displayName:
          description: Display name of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
          description: Required. The issue model to create.
      type: object
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      properties: {}
      type: object
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      type: object
      properties:
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        parent:
          description: Required. The parent resource to export data from.
          type: string
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - If the table already exists, BigQuery will overwrite the table data and use the schema from the load.
            - If the table already exists, BigQuery will append data to the table.
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1SentimentData:
      properties:
        magnitude:
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          format: float
          type: number
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
      description: The data for a sentiment annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource to export data from.
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - If the table already exists, BigQuery will overwrite the table data and use the schema from the load.
            - If the table already exists, BigQuery will append data to the table.
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      type: object
      properties:
        agentChannel:
          format: int32
          type: integer
          description: The audio channel that contains the agent.
        customerChannel:
          format: int32
          type: integer
          description: The audio channel that contains the customer.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      properties:
        phraseMatchers:
          type: array
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          items:
            type: string
        issueModels:
          type: array
          description: The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
          items:
            type: string
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        conversations:
          description: The conversations that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        nextPageToken:
          type: string
          description: A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      description: The response of listing conversations.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      type: object
      description: Metadata for an export insights operation.
      properties:
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          type: array
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      type: object
      properties:
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      properties:
        displayName:
          type: string
          description: The representative name for the issue model.
        trainingStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        state:
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          readOnly: true
          description: Output only. State of the model.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
        updateTime:
          type: string
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
          format: int64
        createTime:
          description: Output only. The time at which this issue model was created.
          type: string
          format: google-datetime
          readOnly: true
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      type: object
    GoogleRpcStatus:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: GoogleRpcStatus
      type: object
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          description: An opaque, user-specified string representing the human agent who handled the conversations.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      properties:
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
          description: A list of the word-specific information for each word in the segment.
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        channelTag:
          format: int32
          description: For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
          type: integer
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        text:
          description: The text of this segment.
          type: string
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      properties:
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        userId:
          type: string
          description: A user-specified ID representing the participant.
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        phraseMatchers:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
          type: array
          description: The phrase matchers that match the request.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        type:
          description: The type of the entity mention.
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          type: string
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      properties: {}
      type: object
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        views:
          description: The views that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          type: array
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      type: object
      description: The response of listing views.
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      description: A Dialogflow source of conversation data.
      type: object
      properties:
        dialogflowConversation:
          type: string
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          readOnly: true
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      properties:
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        annotations:
          type: array
          description: A list of call annotations that apply to this call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          type: object
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          type: object
          description: All the entities in the call.
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      type: object
    GoogleCloudContactcenterinsightsV1IssueModel:
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the issue model was updated.
          type: string
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        createTime:
          description: Output only. The time at which this issue model was created.
          type: string
          readOnly: true
          format: google-datetime
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          format: int64
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          readOnly: true
          description: Output only. State of the model.
        displayName:
          description: The representative name for the issue model.
          type: string
        trainingStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: Output only. Immutable. The issue model's label statistics on its training data.
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      type: object
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          format: double
          type: number
          description: The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      description: Agent Assist Smart Compose suggestion data.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      type: object
      description: The response for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      properties:
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      description: A single interval in a time series.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      type: object
      properties:
        conversationCount:
          type: integer
          description: The number of conversations created in this interval.
          format: int32
        startTime:
          type: string
          format: google-datetime
          description: The start time of this interval.
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      type: object
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      properties:
        confidenceScore:
          format: float
          description: The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
        uri:
          description: Article URI.
          type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        title:
          type: string
          description: Article title.
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          description: An opaque, user-specified string representing the human agent who handled the conversations.
          type: string
      type: object
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      description: Word-level info for words in a transcript.
      type: object
      properties:
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        endOffset:
          type: string
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        startOffset:
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          type: integer
          format: int32
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        totalRequestedAnalysesCount:
          format: int32
          type: integer
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1Analysis:
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
      properties:
        annotatorSelector:
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time at which the analysis was created, which occurs when the long-running operation completes.
          readOnly: true
        analysisResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
          description: Output only. The result of the analysis, which is populated when the analysis finishes.
          readOnly: true
        requestTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which the analysis was requested.
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      description: The phrase matcher resource.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      properties:
        phraseMatchRuleGroups:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          description: A list of phase match rule groups that are included in this matcher.
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        revisionId:
          readOnly: true
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
        activationUpdateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the activation status was updated.
          type: string
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        versionTag:
          type: string
          description: The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
          description: Required. The type of this phrase matcher.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time at which the phrase matcher was updated.
          readOnly: true
        roleMatch:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        revisionCreateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      description: Configs for the input data used to create the issue model.
      properties:
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          format: int64
          type: string
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      type: object
      properties:
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      description: The request to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      type: object
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      properties:
        channelTag:
          type: integer
          format: int32
          description: The channel of the audio that the data applies to.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      properties:
        annotatorSelector:
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        runtimeIntegrationAnalysisPercentage:
          description: Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].
          type: number
          format: double
      description: Default configuration when creating Analyses in Insights.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
          type: array
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
      description: Metadata for deleting an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
        reply:
          description: The content of the reply.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          type: number
          description: The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: double
      description: Agent Assist Smart Reply data.
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      properties:
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        totalRequestedAnalysesCount:
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
          format: int32
      type: object
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        intervalDuration:
          description: The duration of each interval.
          format: google-duration
          type: string
        points:
          description: An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
      type: object
      description: A time series representing conversations over time.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      type: object
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
      description: Configuration information of a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      properties:
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
        score:
          type: number
          description: Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
          format: double
        issue:
          description: Resource name of the assigned issue.
          type: string
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      properties:
        caseSensitive:
          type: boolean
          description: Whether to consider case sensitivity when performing an exact match.
      description: Exact match configuration.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1Intent:
      description: The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          type: string
          description: The human-readable name of the intent.
      id: GoogleCloudContactcenterinsightsV1Intent
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      type: object
      description: The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      type: object
      description: The request to deploy an issue model.
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1HoldData:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1HoldData
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issues:
          type: array
          description: All the matched issues.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      description: Issue Modeling result on a conversation.
    GoogleCloudContactcenterinsightsV1View:
      id: GoogleCloudContactcenterinsightsV1View
      type: object
      properties:
        value:
          description: String with specific view properties, must be non-empty.
          type: string
        createTime:
          description: Output only. The time at which this view was created.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the view was updated.
          format: google-datetime
          type: string
        name:
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
          type: string
        displayName:
          type: string
          description: The human-readable display name of the view.
      description: The View resource.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      type: object
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
          description: The issues that match the request.
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      properties:
        issueModels:
          type: array
          description: The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
          items:
            type: string
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        phraseMatchers:
          items:
            type: string
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      properties:
        wordIndex:
          format: int32
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
        transcriptIndex:
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
          format: int32
      description: A point in a conversation that marks the start or the end of an annotation.
      type: object
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      properties:
        analyses:
          description: The analyses that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          type: array
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      type: object
      description: The response to list analyses.
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      type: object
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          description: Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
        trainingConversationsCount:
          type: string
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        displayName:
          description: Display name of the issue.
          type: string
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          format: int64
          type: string
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      properties:
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
      description: The request to ingest conversations.
      type: object
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      properties:
        failedAnalysisCount:
          type: integer
          format: int32
          description: Count of failed analyses.
        successfulAnalysisCount:
          format: int32
          description: Count of successful analyses.
          type: integer
      type: object
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      description: Configuration for Cloud Storage bucket sources.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      properties:
        type:
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase match rule group.
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
        phraseMatchRules:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
          description: A list of phase match rules that are included in this group.
      description: A message representing a rule in the phrase matcher.
      type: object
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      properties:
        currentStats:
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      properties:
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          readOnly: true
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
          type: string
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
      description: Metadata for a create analysis operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.contactcenterinsights.locations
      name: locations
      title: Locations
      methods:
        projects_locations_updateSettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    locations_settings:
      id: google.contactcenterinsights.locations_settings
      name: locations_settings
      title: Locations_settings
      methods:
        projects_locations_getSettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_settings/methods/projects_locations_getSettings'
        insert: []
        update: []
        delete: []
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        projects_locations_insightsdata_export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        projects_locations_views_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_get'
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        projects_locations_issueModels_issues_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        projects_locations_issueModels_calculateIssueModelStats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete: []
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        projects_locations_phraseMatchers_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        projects_locations_conversations_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_bulkAnalyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_calculateStats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        projects_locations_conversations_analyses_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations_settings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: select
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: select
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: delete
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: select
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: delete
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: exec
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: select
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: insert
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-verb: delete
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: select
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: select
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: insert
