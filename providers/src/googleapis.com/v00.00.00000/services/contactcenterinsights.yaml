openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230725'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1HoldData:
      properties: {}
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      type: object
      properties:
        agentChannel:
          type: integer
          description: The audio channel that contains the agent.
          format: int32
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
      description: Call-specific metadata.
    GoogleCloudContactcenterinsightsV1Issue:
      properties:
        sampleUtterances:
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          items:
            type: string
          type: array
          readOnly: true
        displayName:
          type: string
          description: The representative name for the issue.
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which this issue was created.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time that this issue was updated.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1Issue
      description: The issue resource.
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      type: object
      description: A piece of metadata that applies to a window of a call.
      properties:
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
          description: Data specifying an issue match.
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
          format: int32
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
          description: Data specifying an interruption.
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      properties:
        deidentifyTemplate:
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
          type: string
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      properties:
        type:
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          type: string
          description: The type of the entity mention.
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      type: object
      properties:
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          type: integer
          format: int32
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        totalRequestedAnalysesCount:
          format: int32
          type: integer
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          type: number
          format: double
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
      description: Agent Assist Smart Reply data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        phraseMatchers:
          type: array
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          items:
            type: string
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          items:
            type: string
          type: array
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      type: object
    GoogleCloudContactcenterinsightsV1Analysis:
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        createTime:
          format: google-datetime
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        analysisResult:
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
        requestTime:
          format: google-datetime
          type: string
          description: Output only. The time at which the analysis was requested.
          readOnly: true
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      description: Word-level info for words in a transcript.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
        endOffset:
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          type: string
          format: google-duration
        startOffset:
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: The feedback that the customer has about a certain answer in the conversation.
      properties:
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      properties:
        unclassifiedConversationsCount:
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          type: string
          format: int64
        issueStats:
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
        analyzedConversationsCount:
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      type: object
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      properties:
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          type: string
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          deprecated: true
        dialogflowParticipantName:
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        role:
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      properties:
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        parent:
          description: Required. The parent resource to export data from.
          type: string
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
      type: object
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      properties:
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
          description: The original request for deletion.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      type: object
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      properties: {}
      description: The response to undeploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      description: A point in a conversation that marks the start or the end of an annotation.
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      type: object
      properties:
        transcriptIndex:
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
        wordIndex:
          type: integer
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      description: 'The conversation source, which is a combination of transcript and audio.'
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      type: object
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          type: string
          description: The time at which the analysis ended.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      properties: {}
      type: object
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      description: The request to ingest conversations.
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      properties:
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
        parent:
          description: Required. The parent resource for new conversations.
          type: string
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      type: object
      properties:
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        transcriptIndex:
          type: integer
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
        wordIndex:
          type: integer
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      properties:
        successfulIngestCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of new conversations added during this ingest operation.
        duplicatesSkippedCount:
          readOnly: true
          format: int32
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          type: integer
        processedObjectCount:
          description: Output only. The number of objects processed during the ingest operation.
          readOnly: true
          type: integer
          format: int32
        failedIngestCount:
          format: int32
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          type: integer
      type: object
      description: Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          readOnly: true
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
      description: A Dialogflow source of conversation data.
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      type: object
      description: The request to deploy an issue model.
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      type: object
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      description: Request to upload a conversation.
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      properties:
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
          description: All the matched intents in the call.
        annotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
          type: array
          description: A list of call annotations that apply to this call.
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        entities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
          description: All the entities in the call.
      description: Call-specific metadata created during analysis.
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      type: object
      description: Issue Modeling result on a conversation.
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          type: array
          description: All the matched issues.
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      properties:
        textSections:
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          type: object
          additionalProperties:
            type: string
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        answerRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A map that contains metadata about the summarization and the document from which it originates.
      description: Conversation summarization suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      properties: {}
      description: The response to undeploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1View:
      properties:
        displayName:
          description: The human-readable display name of the view.
          type: string
        updateTime:
          format: google-datetime
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
          type: string
        name:
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
          type: string
        value:
          type: string
          description: 'String with specific view properties, must be non-empty.'
        createTime:
          description: Output only. The time at which this view was created.
          format: google-datetime
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1View
      description: The View resource.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      properties: {}
      description: Response for an export insights operation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      type: object
      properties:
        labeledConversationsCount:
          format: int64
          type: string
          description: Number of conversations attached to the issue at this point in time.
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        displayName:
          type: string
          description: Display name of the issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      description: Default configuration when creating Analyses in Insights.
      type: object
      properties:
        runtimeIntegrationAnalysisPercentage:
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
          type: number
          format: double
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        uploadConversationAnalysisPercentage:
          format: double
          type: number
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      type: object
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      description: The data for an interruption annotation.
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      properties:
        conversationCount:
          type: integer
          format: int32
          description: The number of conversations created in this interval.
        startTime:
          format: google-datetime
          type: string
          description: The start time of this interval.
      description: A single interval in a time series.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
      description: The response for a bulk analyze conversations operation.
      properties:
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      properties: {}
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1SilenceData
    GoogleCloudContactcenterinsightsV1Settings:
      properties:
        conversationTtl:
          format: google-duration
          type: string
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
        pubsubNotificationSettings:
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
          type: object
        redactionConfig:
          description: Default DLP redaction resources to be applied while ingesting conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        languageCode:
          type: string
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
        name:
          type: string
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
        updateTime:
          description: Output only. The time at which the settings were last updated.
          type: string
          readOnly: true
          format: google-datetime
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the settings was created.
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
      description: The settings resource.
      id: GoogleCloudContactcenterinsightsV1Settings
      type: object
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
          readOnly: true
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        appliedRedactionConfig:
          readOnly: true
          description: Output only. The redaction config applied to the uploaded conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
          description: Output only. The original request.
          readOnly: true
      description: The metadata for an UploadConversation operation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      type: object
      properties:
        channelTag:
          type: integer
          format: int32
          description: The channel of the audio that the data applies to.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
      description: One channel of conversation-level sentiment data.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      properties:
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          type: array
          description: All the matched issues.
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      type: object
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      properties:
        agentChannel:
          type: integer
          format: int32
          description: The audio channel that contains the agent.
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      description: The result of an analysis.
      type: object
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          format: google-datetime
          type: string
          description: The time at which the analysis ended.
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
      description: The response of listing conversations.
      properties:
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
          type: string
        conversations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: The conversations that match the request.
          type: array
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      type: object
      properties:
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      type: object
      properties: {}
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
      properties:
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      properties:
        unclassifiedConversationsCount:
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          type: string
        analyzedConversationsCount:
          format: int64
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
        issueStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          description: Statistics on each issue. Key is the issue's resource name.
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
    GoogleProtobufEmpty:
      properties: {}
      id: GoogleProtobufEmpty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      type: object
      properties:
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
        type:
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          type: string
          description: Required. The type of this phrase match rule group.
      description: A message representing a rule in the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      properties:
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        confidenceScore:
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: float
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        title:
          type: string
          description: Article title.
        uri:
          type: string
          description: Article URI.
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
      description: Agent Assist Article Suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          type: string
        salience:
          format: float
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          type: object
          additionalProperties:
            type: string
        displayName:
          type: string
          description: The representative name for the entity.
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      properties:
        reply:
          type: string
          description: The content of the reply.
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        confidenceScore:
          format: double
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      description: Agent Assist Smart Reply data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      description: The data for a sentiment annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      properties:
        magnitude:
          type: number
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        analysisPercentage:
          type: number
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      type: object
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      description: The feedback that the customer has about a certain answer in the conversation.
      type: object
      properties:
        correctnessLevel:
          type: string
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      description: 'The conversation source, which is a combination of transcript and audio.'
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        question:
          description: The corresponding FAQ question.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: float
          type: number
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
      description: Agent Assist frequently-asked-question answer data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      properties:
        id:
          description: The unique identifier of the intent.
          type: string
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: double
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
        suggestion:
          description: The content of the suggestion.
          type: string
      description: Agent Assist Smart Compose suggestion data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      type: object
      properties:
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
        confidence:
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
        channelTag:
          format: int32
          type: integer
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
        messageTime:
          type: string
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        text:
          description: The text of this segment.
          type: string
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        words:
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      description: The request to create an issue model.
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      description: A time series representing conversations over time.
      properties:
        intervalDuration:
          format: google-duration
          type: string
          description: The duration of each interval.
        points:
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      type: object
      properties: {}
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      properties:
        medium:
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          deprecated: true
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          type: string
          description: Output only. Number of conversations used in training. Output only.
          format: int64
          readOnly: true
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
    GoogleCloudContactcenterinsightsV1Intent:
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      type: object
      id: GoogleCloudContactcenterinsightsV1Intent
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
      description: A Cloud Storage source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      description: Configuration for processing transcript objects.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
          type: number
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      description: The phrase matcher resource.
      type: object
      properties:
        roleMatch:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        phraseMatchRuleGroups:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          description: A list of phase match rule groups that are included in this matcher.
        revisionId:
          readOnly: true
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
        versionTag:
          type: string
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the phrase matcher was updated.
          readOnly: true
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        revisionCreateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
        type:
          description: Required. The type of this phrase matcher.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
        activationUpdateTime:
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the activation status was updated.
          readOnly: true
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        request:
          description: The original request for undeployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      type: object
      description: The metadata for an IngestConversations operation.
      properties:
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        partialErrors:
          readOnly: true
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        request:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
          description: Output only. The original request for ingest.
        ingestConversationsStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
          description: Output only. Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      type: object
      description: Conversation summarization suggestion data.
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      properties:
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        metadata:
          description: A map that contains metadata about the summarization and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidence:
          type: number
          description: The confidence score of the summarization.
          format: float
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      description: The data for a silence annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      properties:
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      type: object
      description: The request to create an issue model.
      properties:
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: Required. The issue model to create.
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          format: int64
          type: string
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      type: object
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      properties:
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          description: All the matched intents in the call.
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
          description: A list of call annotations that apply to this call.
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
      description: Call-specific metadata created during analysis.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          type: string
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      type: object
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      properties:
        question:
          type: string
          description: The corresponding FAQ question.
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        metadata:
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: float
      description: Agent Assist frequently-asked-question answer data.
      type: object
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      properties:
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
        summarizationModel:
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          description: Default summarization model to be used.
      type: object
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        views:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          description: The views that match the request.
          type: array
      type: object
      description: The response of listing views.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      description: The response for calculating conversation statistics.
      properties:
        averageDuration:
          type: string
          format: google-duration
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
        averageTurnCount:
          format: int32
          type: integer
          description: The average number of turns per conversation.
        issueMatchesStats:
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        conversationCount:
          type: integer
          description: The total number of conversations.
          format: int32
        issueMatches:
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          type: object
          deprecated: true
          additionalProperties:
            format: int32
            type: integer
        customHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          type: object
        smartHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          type: object
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
        conversationCountTimeSeries:
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
      type: object
    GoogleRpcStatus:
      id: GoogleRpcStatus
      type: object
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      properties:
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          deprecated: true
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          type: string
          readOnly: true
          format: int64
      type: object
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1Entity:
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      properties:
        type:
          description: The entity type.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
          type: object
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        salience:
          format: float
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
      id: GoogleCloudContactcenterinsightsV1Entity
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      properties:
        medium:
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: Required. The medium transcript objects represent.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      type: object
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      type: object
      properties:
        ttl:
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
          type: string
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        expireTime:
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          format: google-datetime
        transcript:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          description: Output only. The conversation transcript.
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        dialogflowIntents:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
          readOnly: true
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
          format: google-datetime
          type: string
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
        latestAnalysis:
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
          readOnly: true
        runtimeAnnotations:
          readOnly: true
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
        latestSummary:
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          readOnly: true
        duration:
          description: Output only. The duration of the conversation.
          type: string
          format: google-duration
          readOnly: true
        startTime:
          type: string
          format: google-datetime
          description: The time at which the conversation started.
        turnCount:
          type: integer
          description: Output only. The number of turns in the conversation.
          readOnly: true
          format: int32
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        createTime:
          description: Output only. The time at which the conversation was created.
          readOnly: true
          format: google-datetime
          type: string
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          additionalProperties:
            type: string
          type: object
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      properties:
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        totalRequestedAnalysesCount:
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      type: object
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      properties:
        confidence:
          format: float
          type: number
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      description: Dialogflow interaction data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        request:
          description: The original request for undeployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      description: The request to undeploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      description: A message representing the transcript of a conversation.
      type: object
      properties:
        transcriptSegments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      properties:
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          type: string
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      properties:
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        issueModels:
          type: array
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          items:
            type: string
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          items:
            type: string
          type: array
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
      description: Selector of all available annotators and phrase matchers to run.
      type: object
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          type: array
          description: The analyses that match the request.
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      type: object
      description: The response to list analyses.
    GoogleLongrunningOperation:
      properties:
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
      id: GoogleLongrunningOperation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      description: The request to export insights.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      properties:
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        parent:
          type: string
          description: Required. The parent resource to export data from.
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      type: object
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      properties:
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
      properties:
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
          readOnly: true
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          readOnly: true
          description: Output only. The original request for ingest.
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        phraseMatchers:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
          description: The phrase matchers that match the request.
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      type: object
      description: The request to delete an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
        endOffset:
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          type: string
          format: google-duration
      description: Word-level info for words in a transcript.
      type: object
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      properties:
        caseSensitive:
          type: boolean
          description: Whether to consider case sensitivity when performing an exact match.
      description: Exact match configuration.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      type: object
    GoogleLongrunningListOperationsResponse:
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      properties:
        createTime:
          type: string
          readOnly: true
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          format: google-datetime
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        analysisResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          readOnly: true
        requestTime:
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          type: string
          readOnly: true
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
    GoogleCloudContactcenterinsightsV1IssueModel:
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
      type: object
      properties:
        displayName:
          type: string
          description: The representative name for the issue model.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this issue model was created.
        trainingStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: Output only. Immutable. The issue model's label statistics on its training data.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        state:
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          readOnly: true
          description: Output only. State of the model.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
        languageCode:
          description: Language of the model.
          type: string
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
        issueCount:
          description: Output only. Number of issues in this issue model.
          format: int64
          type: string
          readOnly: true
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      properties:
        text:
          type: string
          description: The text of this segment.
        words:
          type: array
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        messageTime:
          type: string
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
          description: The participant of this segment.
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        channelTag:
          type: integer
          format: int32
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      properties:
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      type: object
      description: DLP resources used for redaction while ingesting conversations.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      description: A Dialogflow source of conversation data.
      properties:
        dialogflowConversation:
          readOnly: true
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      type: object
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      type: object
      description: The metadata for an UploadConversation operation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      properties:
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          description: Output only. The original request.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        appliedRedactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          readOnly: true
          description: Output only. The redaction config applied to the uploaded conversation.
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      description: The response of listing issues.
      type: object
      properties:
        issues:
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      properties:
        exactMatchConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
          description: The configuration for the exact match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      type: object
      description: Configuration information of a phrase match rule.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      properties:
        role:
          description: The role of the participant.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
          deprecated: true
        userId:
          description: A user-specified ID representing the participant.
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      description: The data for a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      type: object
      properties:
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
        query:
          description: Required. The phrase to be matched.
          type: string
        negated:
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
          type: boolean
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      properties:
        currentStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      type: object
      properties:
        score:
          format: double
          type: number
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
        issue:
          type: string
          description: Resource name of the assigned issue.
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      properties:
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
          format: double
      description: Information about the issue.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
          type: array
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1Conversation:
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
      description: The conversation resource.
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        duration:
          description: Output only. The duration of the conversation.
          type: string
          readOnly: true
          format: google-duration
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        dialogflowIntents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          readOnly: true
        latestSummary:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
        ttl:
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the conversation was updated.
          readOnly: true
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          type: object
          additionalProperties:
            type: string
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          readOnly: true
        turnCount:
          format: int32
          description: Output only. The number of turns in the conversation.
          type: integer
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which the conversation was created.
          format: google-datetime
        latestAnalysis:
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        expireTime:
          format: google-datetime
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          type: string
        runtimeAnnotations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          description: Output only. The annotations that were generated during the customer and agent interaction.
          type: array
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      description: The response of listing issue models.
      properties:
        issueModels:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: The issue models that match the request.
          type: array
      type: object
    GoogleCloudContactcenterinsightsV1SentimentData:
      description: The data for a sentiment annotation.
      type: object
      properties:
        score:
          format: float
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
        magnitude:
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          type: number
      id: GoogleCloudContactcenterinsightsV1SentimentData
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      properties:
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          type: string
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      properties:
        confidenceScore:
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        title:
          type: string
          description: Article title.
        uri:
          description: Article URI.
          type: string
        metadata:
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          additionalProperties:
            type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      properties:
        issueCount:
          description: Output only. Number of issues in this issue model.
          format: int64
          type: string
          readOnly: true
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the issue model was updated.
          readOnly: true
        languageCode:
          description: Language of the model.
          type: string
        state:
          description: Output only. State of the model.
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
        createTime:
          type: string
          description: Output only. The time at which this issue model was created.
          format: google-datetime
          readOnly: true
        displayName:
          description: The representative name for the issue model.
          type: string
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          type: string
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      type: object
      description: The issue model resource.
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      type: object
      description: Metadata for deploying an issue model.
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        suggestion:
          description: The content of the suggestion.
          type: string
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
      description: Agent Assist Smart Compose suggestion data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        annotatorSelector:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
        conversation:
          readOnly: true
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      type: object
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
          description: Required. The conversation resource to create.
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      properties:
        processedObjectCount:
          format: int32
          type: integer
          description: Output only. The number of objects processed during the ingest operation.
          readOnly: true
        duplicatesSkippedCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
        failedIngestCount:
          type: integer
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          format: int32
        successfulIngestCount:
          type: integer
          description: Output only. The number of new conversations added during this ingest operation.
          format: int32
          readOnly: true
      description: Statistics for IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
          description: Data specifying an entity mention.
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: Data specifying a phrase match.
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
          description: Data specifying a hold.
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
          description: Data specifying silence.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
          format: int32
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
          description: Data specifying an intent match.
      type: object
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
