openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230813'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      type: object
      properties:
        uri:
          description: Article URI.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
        title:
          type: string
          description: Article title.
        confidenceScore:
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
          type: number
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        runtimeAnnotations:
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
        startTime:
          type: string
          format: google-datetime
          description: The time at which the conversation started.
        medium:
          type: string
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        latestAnalysis:
          readOnly: true
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        dialogflowIntents:
          readOnly: true
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
        createTime:
          description: Output only. The time at which the conversation was created.
          readOnly: true
          format: google-datetime
          type: string
        duration:
          readOnly: true
          type: string
          format: google-duration
          description: Output only. The duration of the conversation.
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        ttl:
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          type: string
          format: google-duration
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time at which the conversation was updated.
          readOnly: true
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          readOnly: true
        turnCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of turns in the conversation.
        latestSummary:
          readOnly: true
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
      type: object
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: An annotation that was generated during the customer and agent interaction.
      properties:
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
          description: Dialogflow interaction data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        createTime:
          format: google-datetime
          type: string
          description: The time at which this annotation was created.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      type: object
      description: The request to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      properties:
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
        parent:
          type: string
          description: Required. The parent resource of the conversation.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      description: A message representing the transcript of a conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
      type: object
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      description: Exact match configuration.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
      properties:
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
          description: The participant of this segment.
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        text:
          description: The text of this segment.
          type: string
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
          description: A list of the word-specific information for each word in the segment.
        channelTag:
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          type: integer
          format: int32
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
        messageTime:
          type: string
          description: 'The time that the message occurred, if provided.'
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      properties:
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
          description: Required. The issue model to create.
        parent:
          type: string
          description: Required. The parent resource of the issue model.
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
      type: object
      properties:
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
        suggestion:
          description: The content of the suggestion.
          type: string
    GoogleCloudContactcenterinsightsV1GcsSource:
      id: GoogleCloudContactcenterinsightsV1GcsSource
      properties:
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      description: A Cloud Storage source of conversation data.
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      description: Metadata for a create analysis operation.
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      properties:
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        conversation:
          readOnly: true
          type: string
          description: Output only. The Conversation that this Analysis Operation belongs to.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      description: The response to deploy an issue model.
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      properties: {}
      description: Response for an export insights operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      type: object
      description: DLP resources used for redaction while ingesting conversations.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      properties:
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      properties:
        successfulIngestCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of new conversations added during this ingest operation.
        failedIngestCount:
          format: int32
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          type: integer
          readOnly: true
        duplicatesSkippedCount:
          type: integer
          format: int32
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          readOnly: true
        processedObjectCount:
          readOnly: true
          description: Output only. The number of objects processed during the ingest operation.
          format: int32
          type: integer
      type: object
      description: Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      properties:
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        dialogflowParticipant:
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      description: The call participant speaking for a given utterance.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      type: object
      properties:
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: DLP resources used for redaction while ingesting conversations.
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      properties:
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
        query:
          type: string
          description: Required. The phrase to be matched.
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        labeledConversationsCount:
          format: int64
          type: string
          description: Number of conversations attached to the issue at this point in time.
        displayName:
          type: string
          description: Display name of the issue.
      description: Aggregated statistics about an issue.
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      type: object
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
      type: object
      description: Metadata for deploying an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      properties:
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        totalRequestedAnalysesCount:
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          format: int32
          type: integer
        failedAnalysesCount:
          format: int32
          description: The number of requested analyses that have failed so far.
          type: integer
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      description: The metadata for a bulk analyze conversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1HoldData:
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1HoldData
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      type: object
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
      description: Configuration information of a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      type: object
      properties:
        analyzedConversationsCount:
          format: int64
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
        unclassifiedConversationsCount:
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          format: int64
        issueStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
      description: Aggregated statistics about an issue model.
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        views:
          description: The views that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      type: object
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      description: The phrase matcher resource.
      properties:
        versionTag:
          type: string
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
        activationUpdateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time at which the activation status was updated.
          format: google-datetime
        revisionId:
          readOnly: true
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        phraseMatchRuleGroups:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          type: array
          description: A list of phase match rule groups that are included in this matcher.
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        updateTime:
          description: Output only. The most recent time at which the phrase matcher was updated.
          type: string
          format: google-datetime
          readOnly: true
        revisionCreateTime:
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
          format: google-datetime
          readOnly: true
          type: string
        roleMatch:
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        type:
          description: Required. The type of this phrase matcher.
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      type: object
      properties:
        issueAssignment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: Information about the issue's assignment.
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      type: object
      description: The metadata for an IngestConversations operation.
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        ingestConversationsStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          readOnly: true
          description: Output only. The original request for ingest.
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      type: object
      description: Response for an export insights operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      type: object
      properties:
        question:
          description: The corresponding FAQ question.
          type: string
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        metadata:
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          additionalProperties:
            type: string
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          description: The issues that match the request.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      description: The analysis resource.
      properties:
        analysisResult:
          readOnly: true
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
        requestTime:
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      type: object
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        wordIndex:
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          format: int32
        transcriptIndex:
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        points:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          type: array
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
        intervalDuration:
          description: The duration of each interval.
          type: string
          format: google-duration
      type: object
      description: A time series representing conversations over time.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      properties: {}
      description: The data for an interruption annotation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      properties:
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
      description: One channel of conversation-level sentiment data.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      properties:
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        endOffset:
          type: string
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      properties:
        smartHighlighterMatches:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
        conversationCountTimeSeries:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
        conversationCount:
          format: int32
          description: The total number of conversations.
          type: integer
        averageDuration:
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          type: string
          format: google-duration
        averageTurnCount:
          type: integer
          format: int32
          description: The average number of turns per conversation.
        customHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          type: object
        issueMatchesStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
        issueMatches:
          additionalProperties:
            type: integer
            format: int32
          deprecated: true
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          type: object
      description: The response for calculating conversation statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      properties: {}
      type: object
      description: Response from export issue model
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          format: double
          type: number
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
      description: Information about the issue.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      type: object
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
          type: string
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time at which the issue model was updated.
          readOnly: true
        displayName:
          type: string
          description: The representative name for the issue model.
        state:
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          description: Output only. State of the model.
        createTime:
          type: string
          description: Output only. The time at which this issue model was created.
          format: google-datetime
          readOnly: true
        languageCode:
          type: string
          description: Language of the model.
        modelType:
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
        issueCount:
          readOnly: true
          type: string
          format: int64
          description: Output only. Number of issues in this issue model.
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      properties:
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
        confidence:
          type: number
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1Entity:
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      type: object
      id: GoogleCloudContactcenterinsightsV1Entity
      properties:
        displayName:
          type: string
          description: The representative name for the entity.
        metadata:
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        salience:
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          format: float
          type: number
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      properties:
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          type: number
          format: float
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
      type: object
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
      properties:
        score:
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
          format: double
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
        issue:
          type: string
          description: Resource name of the assigned issue.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
        endTime:
          format: google-datetime
          description: The time at which the analysis ended.
          type: string
      type: object
      description: The result of an analysis.
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      description: A Dialogflow source of conversation data.
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1Intent
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      description: The request to export insights.
      type: object
      properties:
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        writeDisposition:
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        parent:
          type: string
          description: Required. The parent resource to export data from.
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      properties:
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
          items:
            type: string
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        phraseMatchers:
          type: array
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          items:
            type: string
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
      type: object
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: The feedback that the customer has about a certain answer in the conversation.
      properties:
        correctnessLevel:
          description: The correctness level of an answer.
          type: string
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        question:
          type: string
          description: The corresponding FAQ question.
        confidenceScore:
          format: float
          type: number
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
      description: Agent Assist frequently-asked-question answer data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      properties:
        unclassifiedConversationsCount:
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          type: string
        analyzedConversationsCount:
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
        issueStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
          description: Statistics on each issue. Key is the issue's resource name.
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      type: object
      properties:
        summarizationModel:
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          type: string
          description: Default summarization model to be used.
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      properties:
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          description: The unique identifier of the intent.
          type: string
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      type: object
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      description: The response of listing phrase matchers.
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      properties:
        currentStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
      type: object
      description: Response of querying an issue model's statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      type: object
      description: A piece of metadata that applies to a window of a call.
      properties:
        channelTag:
          type: integer
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
        intentMatchData:
          description: Data specifying an intent match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
          description: Data specifying an entity mention.
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
          description: Data specifying an interruption.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      description: The response to an IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1View:
      type: object
      properties:
        name:
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
          type: string
        displayName:
          description: The human-readable display name of the view.
          type: string
        value:
          description: 'String with specific view properties, must be non-empty.'
          type: string
        createTime:
          description: Output only. The time at which this view was created.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
          format: google-datetime
          type: string
      id: GoogleCloudContactcenterinsightsV1View
      description: The View resource.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      type: object
      properties:
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
        confidence:
          type: number
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      properties:
        transcriptIndex:
          format: int32
          type: integer
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
        wordIndex:
          format: int32
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      type: object
      properties:
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
      description: Metadata for a create analysis operation.
    GoogleLongrunningOperation:
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: GoogleLongrunningOperation
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      type: object
      properties:
        dialogflowConversation:
          readOnly: true
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      properties:
        medium:
          type: string
          deprecated: true
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        trainingConversationsCount:
          format: int64
          readOnly: true
          type: string
          description: Output only. Number of conversations used in training. Output only.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
          description: The original request for deletion.
      type: object
      description: Metadata for deleting an issue model.
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      description: Agent Assist Smart Reply data.
      properties:
        reply:
          description: The content of the reply.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          description: All the matched issues.
          type: array
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      type: object
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      properties:
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: A map that contains metadata about the summarization and the document from which it originates.
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        textSections:
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
        text:
          description: The summarization content that is concatenated into one string.
          type: string
      type: object
      description: Conversation summarization suggestion data.
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      description: 'The conversation source, which is a combination of transcript and audio.'
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
          readOnly: true
          description: Output only. The original request.
        analysisOperation:
          readOnly: true
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
      description: The metadata for an UploadConversation operation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      properties:
        medium:
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          deprecated: true
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          format: int64
          type: string
          readOnly: true
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
      type: object
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          description: Default summarization model to be used.
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
      description: Configuration for summarization.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      type: object
      description: 'The conversation source, which is a combination of transcript and audio.'
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      description: Metadata for creating an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
      type: object
      description: The response for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
    GoogleCloudContactcenterinsightsV1SilenceData:
      id: GoogleCloudContactcenterinsightsV1SilenceData
      type: object
      properties: {}
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      properties:
        issueModels:
          description: The issue models that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
      description: Configuration for processing transcript objects.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1Settings:
      description: The settings resource.
      id: GoogleCloudContactcenterinsightsV1Settings
      type: object
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which the settings were last updated.
        conversationTtl:
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          type: string
          format: google-duration
        name:
          type: string
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
        pubsubNotificationSettings:
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
          type: object
        redactionConfig:
          description: Default DLP redaction resources to be applied while ingesting conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        languageCode:
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
          type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which the settings was created.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        analyses:
          description: The analyses that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      type: object
      description: The response to list analyses.
    GoogleCloudContactcenterinsightsV1Analysis:
      id: GoogleCloudContactcenterinsightsV1Analysis
      properties:
        requestTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          type: string
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
        analysisResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
      description: The analysis resource.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      type: object
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: An annotation that was generated during the customer and agent interaction.
      properties:
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
          description: Dialogflow interaction data.
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      properties:
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        annotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
          type: array
          description: A list of call annotations that apply to this call.
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
          type: object
        phraseMatchers:
          type: object
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      type: object
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
      properties:
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        channelTag:
          type: integer
          format: int32
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
          description: Data specifying an issue match.
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      description: Agent Assist Smart Reply data.
      type: object
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        reply:
          type: string
          description: The content of the reply.
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      type: object
      properties:
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
          type: object
          description: All the entities in the call.
        sentiments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
          description: A list of call annotations that apply to this call.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      description: Response from import issue model
      properties: {}
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      type: object
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        type:
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      properties:
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
          description: Required. The conversation resource to create.
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
      description: Request to upload a conversation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      properties: {}
      type: object
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      type: object
      description: Conversation summarization suggestion data.
      properties:
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the summarization and the document from which it originates.
          type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      type: object
      description: Statistics for IngestConversations operation.
      properties:
        successfulIngestCount:
          description: Output only. The number of new conversations added during this ingest operation.
          format: int32
          readOnly: true
          type: integer
        processedObjectCount:
          description: Output only. The number of objects processed during the ingest operation.
          readOnly: true
          format: int32
          type: integer
        duplicatesSkippedCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
        failedIngestCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      description: Metadata for deleting an issue model.
      properties:
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      type: object
      properties:
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
      description: A BigQuery Table Reference.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      type: object
      properties:
        magnitude:
          type: number
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
          type: number
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      type: object
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      description: Response from import issue model
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          description: The original request for undeployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      properties:
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      type: object
      description: Call-specific metadata.
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      type: object
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1IssueModel:
      properties:
        languageCode:
          type: string
          description: Language of the model.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          description: Output only. State of the model.
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
        displayName:
          type: string
          description: The representative name for the issue model.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
          format: int64
        createTime:
          description: Output only. The time at which this issue model was created.
          format: google-datetime
          type: string
          readOnly: true
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
          type: string
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      description: The request to ingest conversations.
      properties:
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      type: object
      description: The response for a bulk analyze conversations operation.
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
        failedAnalysisCount:
          format: int32
          description: Count of failed analyses.
          type: integer
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        runtimeIntegrationAnalysisPercentage:
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
          type: number
          format: double
        uploadConversationAnalysisPercentage:
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
          format: double
          type: number
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      description: Default configuration when creating Analyses in Insights.
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      description: The call participant speaking for a given utterance.
      properties:
        dialogflowParticipant:
          type: string
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        userId:
          type: string
          description: A user-specified ID representing the participant.
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      type: object
      description: A segment of a full transcript.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      properties:
        messageTime:
          format: google-datetime
          type: string
          description: 'The time that the message occurred, if provided.'
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        channelTag:
          format: int32
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          type: integer
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        words:
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
          description: The participant of this segment.
        text:
          type: string
          description: The text of this segment.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
          description: The original request for export.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
      description: Metadata for an export insights operation.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        issueModels:
          items:
            type: string
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        phraseMatchers:
          items:
            type: string
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      properties:
        startOffset:
          format: google-duration
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        confidence:
          format: float
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
        endOffset:
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          type: string
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        completedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have completed successfully so far.
        totalRequestedAnalysesCount:
          type: integer
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          readOnly: true
          description: Output only. The original request.
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      type: object
      description: The metadata for an UploadConversation operation.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      description: The request to create an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1SentimentData:
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1SentimentData
      properties:
        magnitude:
          type: number
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          format: float
        score:
          type: number
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      description: A message representing a rule in the phrase matcher.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      properties:
        type:
          description: Required. The type of this phrase match rule group.
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        phraseMatchRules:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          description: A list of phrase match rules that are included in this group.
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      type: object
      description: Agent Assist Article Suggestion data.
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        uri:
          description: Article URI.
          type: string
        title:
          description: Article title.
          type: string
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          description: The channel of the audio that the data applies to.
          format: int32
          type: integer
      type: object
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      properties:
        issueAssignment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          description: Information about the issue's assignment.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      description: The data for an issue match annotation.
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      description: The result of an analysis.
      type: object
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          type: string
          description: The time at which the analysis ended.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      type: object
      description: A single interval in a time series.
      properties:
        startTime:
          description: The start time of this interval.
          type: string
          format: google-datetime
        conversationCount:
          format: int32
          type: integer
          description: The number of conversations created in this interval.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      properties:
        displayName:
          description: Display name of the issue.
          type: string
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
      description: Aggregated statistics about an issue.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      description: The data for a silence annotation.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      type: object
      description: A message representing the transcript of a conversation.
      properties:
        transcriptSegments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      properties:
        salience:
          format: float
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        type:
          type: string
          description: The entity type.
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        displayName:
          description: The representative name for the entity.
          type: string
        metadata:
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      description: The conversation resource.
      properties:
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        dialogflowIntents:
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          type: object
          readOnly: true
        duration:
          description: Output only. The duration of the conversation.
          type: string
          format: google-duration
          readOnly: true
        startTime:
          format: google-datetime
          description: The time at which the conversation started.
          type: string
        expireTime:
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          type: string
          format: google-datetime
        ttl:
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the conversation was created.
          type: string
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          readOnly: true
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
        latestAnalysis:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
          description: 'Output only. The conversation''s latest analysis, if one exists.'
        runtimeAnnotations:
          readOnly: true
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        turnCount:
          readOnly: true
          format: int32
          type: integer
          description: Output only. The number of turns in the conversation.
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        medium:
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        latestSummary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
          readOnly: true
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
      type: object
      description: A BigQuery Table Reference.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      type: object
      properties:
        correctnessLevel:
          description: The correctness level of an answer.
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
      description: Agent Assist Smart Compose suggestion data.
    GoogleCloudContactcenterinsightsV1Issue:
      id: GoogleCloudContactcenterinsightsV1Issue
      description: The issue resource.
      type: object
      properties:
        name:
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        sampleUtterances:
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          type: array
          readOnly: true
          items:
            type: string
        updateTime:
          format: google-datetime
          description: Output only. The most recent time that this issue was updated.
          readOnly: true
          type: string
        displayName:
          type: string
          description: The representative name for the issue.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time at which this issue was created.
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      description: Call-specific metadata.
      properties:
        customerChannel:
          type: integer
          description: The audio channel that contains the customer.
          format: int32
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        partialErrors:
          type: array
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
        request:
          description: Output only. The original request for ingest.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
          readOnly: true
      type: object
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      description: The request to ingest conversations.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      properties:
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      properties:
        medium:
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      description: Configuration for processing transcript objects.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          type: string
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        parent:
          description: Required. The parent resource to export data from.
          type: string
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      description: The response of listing conversations.
      properties:
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
          type: string
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: The conversations that match the request.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
    GoogleRpcStatus:
      properties:
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      type: object
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
          type: number
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
      type: object
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      properties: {}
      description: The data for a hold annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
