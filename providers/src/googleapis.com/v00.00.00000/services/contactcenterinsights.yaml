openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240916'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      type: object
      description: The result of an analysis.
      properties:
        callAnalysisMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
          description: Call-specific metadata created by the analysis.
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      properties:
        negated:
          description: >-
            Specifies whether the phrase must be missing from the transcript
            segment or present in the transcript segment.
          type: boolean
        config:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
          description: >-
            Provides additional information about the rule that specifies how to
            apply the rule.
        query:
          type: string
          description: Required. The phrase to be matched.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          description: Default summarization model to be used.
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      type: object
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      description: Request to upload a conversation.
      type: object
      properties:
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        conversationId:
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
          type: string
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      properties:
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
          description: The original request for deployment.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      type: object
      description: Metadata for deploying an issue model.
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      type: object
      description: The metadata for an `UploadConversation` operation.
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
          readOnly: true
          description: Output only. The original request.
        appliedRedactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        analysisOperation:
          readOnly: true
          type: string
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
      type: object
      properties:
        name:
          description: Required. The issue model to export.
          type: string
        gcsDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
          description: Google Cloud Storage URI to export the issue model to.
      description: Request to export an issue model.
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      properties:
        textSections:
          type: object
          additionalProperties:
            type: string
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
        metadata:
          additionalProperties:
            type: string
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        confidence:
          type: number
          description: The confidence score of the summarization.
          format: float
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        text:
          type: string
          description: The summarization content that is concatenated into one string.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      type: object
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        confidence:
          format: float
          type: number
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
        dialogflowIntentId:
          type: string
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        dialogflowConversation:
          readOnly: true
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      description: The conversation resource.
      properties:
        latestAnalysis:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis
          description: Output only. The conversation's latest analysis, if one exists.
        medium:
          type: string
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
        createTime:
          description: Output only. The time at which the conversation was created.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        duration:
          description: Output only. The duration of the conversation.
          type: string
          readOnly: true
          format: google-duration
        name:
          type: string
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
        dataSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
          description: The source of the audio and transcription for the conversation.
        transcript:
          description: Output only. The conversation transcript.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
        runtimeAnnotations:
          type: array
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
          readOnly: true
        agentId:
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
          type: string
        labels:
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          additionalProperties:
            type: string
          type: object
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
          description: Call-specific metadata.
        metadataJson:
          type: string
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
        dialogflowIntents:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
          type: object
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          readOnly: true
        expireTime:
          type: string
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          format: google-datetime
        ttl:
          format: google-duration
          type: string
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        turnCount:
          description: Output only. The number of turns in the conversation.
          type: integer
          readOnly: true
          format: int32
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        latestSummary:
          readOnly: true
          description: Output only. Latest summary of the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      type: object
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      type: object
      properties:
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        uri:
          description: Article URI.
          type: string
        title:
          description: Article title.
          type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidenceScore:
          format: float
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      properties:
        issueModels:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          type: array
          description: The issue models that match the request.
      type: object
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          type: string
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
        labeledConversationsCount:
          format: int64
          description: Number of conversations attached to the issue at this point in time.
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      properties:
        agentChannel:
          type: integer
          format: int32
          description: The audio channel that contains the agent.
        customerChannel:
          format: int32
          type: integer
          description: The audio channel that contains the customer.
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      description: Call-specific metadata.
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          description: The human-readable name of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1Intent
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      type: object
      properties:
        annotationEndBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        silenceData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData
          description: Data specifying silence.
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        holdData:
          description: Data specifying a hold.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData
        intentMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
          description: Data specifying an intent match.
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        interruptionData:
          description: Data specifying an interruption.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
          description: Data specifying an issue match.
        entityMentionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
          description: Data specifying an entity mention.
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          format: int32
          type: integer
      description: A piece of metadata that applies to a window of a call.
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: float
        question:
          type: string
          description: The corresponding FAQ question.
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
          additionalProperties:
            type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination:
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
      description: Google Cloud Storage Object URI to save the issue model to.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
          description: The original request for bulk delete.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      properties:
        trainingConversationsCount:
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          type: string
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          deprecated: true
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
        filter:
          type: string
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
      description: Configs for the input data used to create the issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      properties:
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        question:
          description: The corresponding FAQ question.
          type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
      type: object
      description: Agent Assist frequently-asked-question answer data.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      type: object
      description: The request to analyze conversations in bulk.
      properties:
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          type: number
          format: float
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      properties:
        completedAnalysesCount:
          format: int32
          type: integer
          description: >-
            The number of requested analyses that have completed successfully so
            far.
        totalRequestedAnalysesCount:
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          format: int32
          type: integer
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          type: array
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
          description: The original request for bulk analyze.
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
      type: object
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      properties:
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        userId:
          type: string
          description: A user-specified ID representing the participant.
        dialogflowParticipant:
          deprecated: true
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
      description: The call participant speaking for a given utterance.
      type: object
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
      description: The response for a bulk delete conversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1SpeechConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
      type: object
      properties:
        speechRecognizer:
          type: string
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      properties:
        appliedRedactionConfig:
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
          readOnly: true
          description: Output only. The original request.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        analysisOperation:
          readOnly: true
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          type: string
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      description: The metadata for an `UploadConversation` operation.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      properties: {}
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      properties:
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          type: array
          items:
            type: string
        metadataBucketUri:
          type: string
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
        bucketObjectType:
          type: string
          description: Optional. Specifies the type of the objects in `bucket_uri`.
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      type: object
      properties:
        phraseMatchRuleGroups:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
          description: A list of phase match rule groups that are included in this matcher.
        name:
          type: string
          description: >-
            The resource name of the phrase matcher. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        active:
          description: Applies the phrase matcher only when it is active.
          type: boolean
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        type:
          description: Required. The type of this phrase matcher.
          type: string
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
        revisionCreateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. The timestamp of when the revision was created. It is
            also the create time when a new matcher is added.
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. The most recent time at which the phrase matcher was
            updated.
        revisionId:
          readOnly: true
          type: string
          description: >-
            Output only. Immutable. The revision ID of the phrase matcher. A new
            revision is committed whenever the matcher is changed, except when
            it is activated or deactivated. A server generated random ID will be
            used. Example:
            locations/global/phraseMatchers/my-first-matcher@1234567
        versionTag:
          description: >-
            The customized version tag to use for the phrase matcher. If not
            specified, it will default to `revision_id`.
          type: string
        activationUpdateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The most recent time at which the activation status was
            updated.
          type: string
        roleMatch:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          description: >-
            The role whose utterances the phrase matcher should be matched
            against. If the role is ROLE_UNSPECIFIED it will be matched against
            any utterances in the transcript.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      description: The phrase matcher resource.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      properties: {}
    GoogleCloudContactcenterinsightsV1HoldData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1HoldData
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      properties:
        deidentifyTemplate:
          type: string
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      properties:
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        channelTag:
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
          format: int32
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        text:
          type: string
          description: The text of this segment.
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant
          description: The participant of this segment.
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        words:
          description: >-
            A list of the word-specific information for each word in the
            segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
        confidence:
          format: float
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
        messageTime:
          format: google-datetime
          type: string
          description: The time that the message occurred, if provided.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      type: object
      properties:
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      description: Response from import issue model
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      properties: {}
      description: The data for an interruption annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to export.
          type: string
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      type: object
      description: Request to export an issue model.
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      type: object
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      properties:
        sampleSize:
          type: integer
          format: int32
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      description: The request to ingest conversations.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource:
      type: object
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
      description: Google Cloud Storage Object URI to get the issue model file from.
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
      properties:
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          format: double
          type: number
        displayName:
          type: string
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
        issue:
          description: Resource name of the assigned issue.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
      properties:
        team:
          description: A user-specified string representing the agent's team.
          type: string
        agentId:
          description: A user-specified string representing the agent.
          type: string
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
        displayName:
          description: The agent's name.
          type: string
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      type: object
      properties: {}
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      description: The response for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      type: object
      properties:
        failedAnalysisCount:
          type: integer
          format: int32
          description: Count of failed analyses.
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
    GoogleCloudContactcenterinsightsV1InterruptionData:
      properties: {}
      description: The data for an interruption annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1InterruptionData
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          type: string
          description: The unique identifier of the intent.
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      type: object
      properties:
        intentUniqueId:
          type: string
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      type: object
      description: The request to deploy an issue model.
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        issue:
          type: string
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      description: A message representing a rule in the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      properties:
        phraseMatchRules:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule
          type: array
          description: A list of phrase match rules that are included in this group.
        type:
          description: Required. The type of this phrase match rule group.
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      properties:
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
        intents:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent
          description: All the matched intents in the call.
          type: object
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity
          type: object
        sentiments:
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        silence:
          description: Overall conversation-level silence during the call.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
        issueModelResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
          description: Overall conversation-level issue modeling result.
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      type: object
      properties:
        deidentifyTemplate:
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
          type: string
        inspectTemplate:
          type: string
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      properties:
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        updateTime:
          type: string
          readOnly: true
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          format: google-datetime
        trainingStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
          readOnly: true
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time at which this issue model was created.
          type: string
        languageCode:
          type: string
          description: Language of the model.
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          readOnly: true
          type: string
          description: Output only. State of the model.
        issueCount:
          readOnly: true
          type: string
          description: Output only. Number of issues in this issue model.
          format: int64
        inputDataConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
          description: Configs for the input data that used to create the issue model.
        displayName:
          type: string
          description: The representative name for the issue model.
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          description: Type of the model.
          type: string
      description: The issue model resource.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata:
      description: Conversation metadata related to quality management.
      properties:
        waitDuration:
          type: string
          format: google-duration
          description: The amount of time the customer waited to connect with an agent.
        agentInfo:
          type: array
          description: Information about agents involved in the call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
        customerSatisfactionRating:
          type: integer
          format: int32
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
        menuPath:
          type: string
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          format: double
          type: number
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      type: object
      description: The request to ingest conversations.
      properties:
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
        sampleSize:
          type: integer
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          format: int32
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      properties:
        confidence:
          description: The confidence score of the summarization.
          format: float
          type: number
        metadata:
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
          additionalProperties:
            type: string
        textSections:
          additionalProperties:
            type: string
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          type: object
        conversationModel:
          type: string
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        answerRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      properties:
        customMetadataKeys:
          items:
            type: string
          type: array
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
        metadataBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        bucketObjectType:
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          type: string
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
          description: Optional. Specifies the type of the objects in `bucket_uri`.
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      properties: {}
      description: Response from import issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      properties:
        endOffset:
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
          type: string
          format: google-duration
        startOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
        confidence:
          format: float
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          type: number
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      properties:
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          type: array
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
          description: The original request for export.
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
      type: object
      properties:
        silencePercentage:
          type: number
          format: float
          description: Percentage of the total conversation spent in silence.
        silenceDuration:
          format: google-duration
          description: Amount of time calculated to be in silence.
          type: string
      description: Conversation-level silence data.
    GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput:
      description: Explicit input used for generating the answer
      properties:
        querySource:
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          type: string
          description: Query source for the answer.
        query:
          type: string
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1EncryptionSpec:
      properties:
        kmsKey:
          type: string
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        name:
          type: string
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      id: GoogleCloudContactcenterinsightsV1EncryptionSpec
      type: object
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
      properties:
        agentId:
          type: string
          description: A user-specified string representing the agent.
        displayName:
          type: string
          description: The agent's name.
        team:
          type: string
          description: A user-specified string representing the agent's team.
        dispositionCode:
          type: string
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      properties: {}
      type: object
      description: Response for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      properties:
        smartReply:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
          description: Agent Assist Smart Reply data.
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
          description: Dialogflow interaction data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        conversationSummarizationSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Conversation summarization suggestion data.
        faqAnswer:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
          description: Agent Assist FAQ answer data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          description: Information about the issue's assignment.
      type: object
      description: The data for an issue match annotation.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata
      type: object
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
          description: The original import request.
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
      description: Metadata used for import issue model.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      properties:
        issueModel:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
          description: Required. The issue model to create.
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      type: object
      description: The request to create an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      type: object
      properties:
        sentimentData:
          description: Data specifying sentiment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
      description: One channel of conversation-level sentiment data.
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      type: object
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequest:
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
        createNewModel:
          type: boolean
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      description: Request to import an issue model.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      type: object
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      properties:
        wordIndex:
          format: int32
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
        transcriptIndex:
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest:
      type: object
      description: The request to initialize a location-level encryption specification.
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      description: The conversation source, which is a combination of transcript and audio.
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      type: object
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      properties:
        text:
          type: string
          description: The text of this segment.
        messageTime:
          format: google-datetime
          type: string
          description: The time that the message occurred, if provided.
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: The sentiment for this transcript segment.
        languageCode:
          type: string
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
        channelTag:
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          format: int32
          type: integer
        words:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
          description: >-
            A list of the word-specific information for each word in the
            segment.
        dialogflowSegmentMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
          description: CCAI metadata relating to the current transcript segment.
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
          description: The participant of this segment.
        confidence:
          format: float
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      properties: {}
      description: Response for an export insights operation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest:
      properties:
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
          description: Google Cloud Storage source message.
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        createNewModel:
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
          type: boolean
      description: Request to import an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      type: object
      description: The request to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1Settings:
      type: object
      properties:
        createTime:
          description: Output only. The time at which the settings was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          type: string
          description: >-
            Immutable. The resource name of the settings resource. Format:
            projects/{project}/locations/{location}/settings
        analysisConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
          description: Default analysis settings.
        languageCode:
          type: string
          description: >-
            A language code to be applied to each transcript segment unless the
            segment already specifies a language code. Language code defaults to
            "en-US" if it is neither specified on the segment nor here.
        redactionConfig:
          description: >-
            Default DLP redaction resources to be applied while ingesting
            conversations. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text resources to use while ingesting
            audio files. Optional, CCAI Insights will create a default if not
            provided. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
        updateTime:
          description: Output only. The time at which the settings were last updated.
          type: string
          format: google-datetime
          readOnly: true
        conversationTtl:
          type: string
          format: google-duration
          description: >-
            The default TTL for newly-created conversations. If a conversation
            has a specified expiration, that value will be used instead.
            Changing this value will not change the expiration of existing
            conversations. Conversations with no expire time persist until they
            are deleted.
        pubsubNotificationSettings:
          type: object
          additionalProperties:
            type: string
          description: >-
            A map that maps a notification trigger to a Pub/Sub topic. Each time
            a specified trigger occurs, Insights will notify the corresponding
            Pub/Sub topic. Keys are notification triggers. Supported keys are: *
            "all-triggers": Notify each time any of the supported triggers
            occurs. * "create-analysis": Notify each time an analysis is
            created. * "create-conversation": Notify each time a conversation is
            created. * "export-insights-data": Notify each time an export is
            complete. * "ingest-conversations": Notify each time an
            IngestConversations LRO is complete. * "update-conversation": Notify
            each time a conversation is updated via UpdateConversation. *
            "upload-conversation": Notify when an UploadConversation LRO is
            complete. Values are Pub/Sub topics. The format of each Pub/Sub
            topic is: projects/{project}/topics/{topic}
      id: GoogleCloudContactcenterinsightsV1Settings
      description: >-
        The CCAI Insights project wide settings. Use these settings to configure
        the behavior of Insights. View these settings with
        [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings)
        and change the settings with
        [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      type: object
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      properties:
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          type: integer
          format: int32
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData
          description: Data specifying an interruption.
        phraseMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: Data specifying a phrase match.
        annotationEndBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData
          description: Data specifying an issue match.
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        intentMatchData:
          description: Data specifying an intent match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
      type: object
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
    GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata:
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      description: Metadata used for import issue model.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      description: Statistics for IngestConversations operation.
      type: object
      properties:
        processedObjectCount:
          format: int32
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          readOnly: true
          type: integer
        successfulIngestCount:
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          format: int32
          type: integer
        failedIngestCount:
          readOnly: true
          format: int32
          type: integer
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
        duplicatesSkippedCount:
          type: integer
          format: int32
          readOnly: true
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
    GoogleCloudContactcenterinsightsV1GcsSource:
      description: A Cloud Storage source of conversation data.
      type: object
      id: GoogleCloudContactcenterinsightsV1GcsSource
      properties:
        transcriptUri:
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
          type: string
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        phraseMatchers:
          type: array
          description: The phrase matchers that match the request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      description: The response of listing phrase matchers.
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      description: A BigQuery Table Reference.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      properties:
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
        dataset:
          type: string
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
        table:
          type: string
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      description: Default configuration when creating Analyses in Insights.
      type: object
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      properties:
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        uploadConversationAnalysisPercentage:
          description: >-
            Percentage of conversations created using the UploadConversation
            endpoint to analyze automatically, between [0, 100].
          type: number
          format: double
        runtimeIntegrationAnalysisPercentage:
          description: >-
            Percentage of conversations created using Dialogflow runtime
            integration to analyze automatically, between [0, 100].
          type: number
          format: double
    GoogleLongrunningOperation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        response:
          type: object
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
      id: GoogleLongrunningOperation
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issues:
          description: All the matched issues.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
          type: array
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      description: The request to delete an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
      description: The response of listing conversations.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is set, it means there is another page available. If
            it is not set, it means no other pages are available.
        conversations:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
          description: The conversations that match the request.
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      description: The conversation source, which is a combination of transcript and audio.
      type: object
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      type: object
      properties:
        endTime:
          format: google-datetime
          type: string
          description: The time at which the analysis ended.
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData
          description: Dialogflow interaction data.
        conversationSummarizationSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
          description: Conversation summarization suggestion data.
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time at which this annotation was created.
        smartReply:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData
          description: Agent Assist Smart Reply data.
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        answerFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback
          description: The feedback that the customer has about the answer in `data`.
        userInput:
          description: Explicit input used for generating the answer
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1SentimentData:
      properties:
        score:
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
        magnitude:
          type: number
          format: float
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1SentimentData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      type: object
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      properties:
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        title:
          description: Article title.
          type: string
        uri:
          description: Article URI.
          type: string
        metadata:
          type: object
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
          additionalProperties:
            type: string
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      type: object
      description: A Dialogflow source of conversation data.
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        dialogflowConversation:
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
    GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec:
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
      type: object
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      id: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      properties:
        transcriptSegments:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      properties:
        metadata:
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          additionalProperties:
            type: string
          type: object
        confidenceScore:
          type: number
          format: double
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        reply:
          type: string
          description: The content of the reply.
      type: object
      description: Agent Assist Smart Reply data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      type: object
      description: Metadata for deploying an issue model.
      properties:
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      properties:
        conversationId:
          type: string
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        speechConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
        conversation:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation
          description: Required. The conversation resource to create.
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      type: object
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      properties:
        magnitude:
          format: float
          type: number
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
        score:
          format: float
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
      type: object
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      description: The response to an IngestConversations operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      properties:
        intentUniqueId:
          type: string
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
      type: object
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          description: The issues that match the request.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse:
      type: object
      properties: {}
      description: The response to initialize a location-level encryption specification.
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        conversation:
          readOnly: true
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Metadata for a create analysis operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      properties:
        transcriptUri:
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
          type: string
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
      description: Explicit input used for generating the answer
      type: object
      properties:
        query:
          type: string
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
        querySource:
          description: Query source for the answer.
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          type: string
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      description: Exact match configuration.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      properties:
        agentChannel:
          format: int32
          type: integer
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
        customerChannel:
          type: integer
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      type: object
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      properties:
        duplicatesSkippedCount:
          type: integer
          format: int32
          readOnly: true
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
        processedObjectCount:
          type: integer
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          readOnly: true
          format: int32
        failedIngestCount:
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          format: int32
          type: integer
          readOnly: true
        successfulIngestCount:
          type: integer
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          format: int32
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      description: Statistics for IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      properties:
        partialErrors:
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          readOnly: true
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
          readOnly: true
          description: Output only. The original request for ingest.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      type: object
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1View:
      description: The View resource.
      id: GoogleCloudContactcenterinsightsV1View
      type: object
      properties:
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the view was updated.
        name:
          description: >-
            Immutable. The resource name of the view. Format:
            projects/{project}/locations/{location}/views/{view}
          type: string
        displayName:
          type: string
          description: The human-readable display name of the view.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which this view was created.
          format: google-datetime
        value:
          type: string
          description: String with specific view properties, must be non-empty.
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse:
      description: The response for a bulk delete conversations operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata:
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1SpeechConfig:
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      id: GoogleCloudContactcenterinsightsV1SpeechConfig
      type: object
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      properties:
        medium:
          deprecated: true
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          format: int64
          readOnly: true
          description: Output only. Number of conversations used in training. Output only.
          type: string
        filter:
          type: string
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      properties:
        correctnessLevel:
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          description: The correctness level of an answer.
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
      type: object
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      description: The response for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
      properties:
        failedAnalysisCount:
          description: Count of failed analyses.
          type: integer
          format: int32
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          format: float
          type: number
        filter:
          type: string
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
      description: The request to analyze conversations in bulk.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationLevelSilence:
      description: Conversation-level silence data.
      properties:
        silenceDuration:
          type: string
          description: Amount of time calculated to be in silence.
          format: google-duration
        silencePercentage:
          type: number
          format: float
          description: Percentage of the total conversation spent in silence.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSilence
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest:
      description: The request to delete conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
      properties:
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
        parent:
          type: string
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
        filter:
          type: string
          description: Filter used to select the subset of conversations to delete.
        maxDeleteCount:
          format: int32
          description: Maximum number of conversations to delete.
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1Entity:
      id: GoogleCloudContactcenterinsightsV1Entity
      type: object
      properties:
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          description: The entity type.
          type: string
        salience:
          type: number
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
          format: float
        metadata:
          type: object
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          additionalProperties:
            type: string
        displayName:
          type: string
          description: The representative name for the entity.
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
          description: The original request for creation.
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        startOffset:
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          type: string
          format: google-duration
        endOffset:
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
          type: string
          format: google-duration
        confidence:
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          format: float
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
      description: Word-level info for words in a transcript.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource to export data from.
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
        filter:
          type: string
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        analysisResult:
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
          readOnly: true
        requestTime:
          format: google-datetime
          type: string
          description: Output only. The time at which the analysis was requested.
          readOnly: true
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      type: object
      description: Agent Assist Smart Compose suggestion data.
      properties:
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        metadata:
          type: object
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          additionalProperties:
            type: string
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          format: double
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      properties:
        suggestion:
          description: The content of the suggestion.
          type: string
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          type: object
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          additionalProperties:
            type: string
        confidenceScore:
          type: number
          format: double
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
      description: Agent Assist Smart Compose suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest:
      properties:
        force:
          type: boolean
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          format: int32
          type: integer
        filter:
          description: Filter used to select the subset of conversations to delete.
          type: string
        parent:
          type: string
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      description: The request to delete conversations in bulk.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      properties:
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
        displayed:
          type: boolean
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      description: A BigQuery Table Reference.
      id: >-
        GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
      properties:
        table:
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
          type: string
        projectId:
          type: string
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
        dataset:
          type: string
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      properties:
        salience:
          type: number
          format: float
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          type: string
          description: The entity type.
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      properties:
        wordIndex:
          format: int32
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
        transcriptIndex:
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          format: int32
          type: integer
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      type: object
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      type: object
      properties:
        sentiments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          type: object
        issueModelResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult
          description: Overall conversation-level issue modeling result.
        phraseMatchers:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          type: object
          description: All the matched phrase matchers in the call.
        annotations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation
          description: A list of call annotations that apply to this call.
          type: array
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
        ingestConversationsStats:
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
        request:
          readOnly: true
          description: Output only. The original request for ingest.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      properties:
        confidence:
          format: float
          type: number
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
        dialogflowIntentId:
          type: string
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      properties:
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
        filter:
          type: string
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
        parent:
          description: Required. The parent resource to export data from.
          type: string
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
      description: The request to export insights.
      type: object
    GoogleCloudContactcenterinsightsV1Conversation:
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
      properties:
        latestSummary:
          description: Output only. Latest summary of the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
          readOnly: true
        dialogflowIntents:
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent
          readOnly: true
        agentId:
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
          type: string
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        expireTime:
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          type: string
          format: google-datetime
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        ttl:
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          format: google-duration
          type: string
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time at which the conversation was created.
          type: string
          readOnly: true
        transcript:
          readOnly: true
          description: Output only. The conversation transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript
        metadataJson:
          type: string
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
        callMetadata:
          description: Call-specific metadata.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata
        runtimeAnnotations:
          type: array
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        qualityMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
          description: Conversation metadata related to quality management.
        updateTime:
          format: google-datetime
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          readOnly: true
          type: string
        turnCount:
          description: Output only. The number of turns in the conversation.
          type: integer
          readOnly: true
          format: int32
        labels:
          additionalProperties:
            type: string
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          type: object
        dataSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource
          description: The source of the audio and transcription for the conversation.
        duration:
          format: google-duration
          type: string
          description: Output only. The duration of the conversation.
          readOnly: true
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          readOnly: true
          description: Output only. The conversation's latest analysis, if one exists.
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      description: The response to list analyses.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          type: array
          description: The analyses that match the request.
    GoogleCloudContactcenterinsightsV1Issue:
      description: The issue resource.
      properties:
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
        sampleUtterances:
          readOnly: true
          items:
            type: string
          type: array
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
        updateTime:
          description: Output only. The most recent time that this issue was updated.
          format: google-datetime
          type: string
          readOnly: true
        displayDescription:
          type: string
          description: Representative description of the issue.
        displayName:
          description: The representative name for the issue.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time at which this issue was created.
          type: string
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1Issue
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
      properties:
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        conversation:
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      properties:
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          format: int64
          type: string
        issueStats:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
        analyzedConversationsCount:
          format: int64
          type: string
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      type: object
      description: One channel of conversation-level sentiment data.
      properties:
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      properties:
        exactMatchConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig
          description: The configuration for the exact match rule.
      description: Configuration information of a phrase match rule.
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        issueModels:
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          items:
            type: string
          type: array
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        summarizationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
          description: Configuration for the summarization annotator.
        phraseMatchers:
          items:
            type: string
          type: array
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      type: object
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          description: Required. The medium transcript objects represent.
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      description: Information about the issue.
      properties:
        issue:
          type: string
          description: Resource name of the assigned issue.
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          format: double
          type: number
        displayName:
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
          description: The original request for undeployment.
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
      type: object
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      description: Google Cloud Storage Object URI to get the issue model file from.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
          description: The original request for deletion.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      type: object
      description: Metadata for deleting an issue model.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      id: >-
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      type: object
      properties:
        startTime:
          format: google-datetime
          description: The start time of this interval.
          type: string
        conversationCount:
          description: The number of conversations created in this interval.
          format: int32
          type: integer
      description: A single interval in a time series.
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        views:
          type: array
          description: The views that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      type: object
      description: The response of listing views.
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      properties:
        analyzedConversationsCount:
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
          format: int64
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          format: int64
          type: string
        issueStats:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1IssueModel:
      type: object
      description: The issue model resource.
      properties:
        languageCode:
          description: Language of the model.
          type: string
        displayName:
          type: string
          description: The representative name for the issue model.
        issueCount:
          readOnly: true
          format: int64
          description: Output only. Number of issues in this issue model.
          type: string
        createTime:
          type: string
          description: Output only. The time at which this issue model was created.
          readOnly: true
          format: google-datetime
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        updateTime:
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          type: string
          format: google-datetime
          readOnly: true
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          readOnly: true
        modelType:
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          description: Type of the model.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        state:
          description: Output only. State of the model.
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1IssueModel
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      type: object
      description: The call participant speaking for a given utterance.
      properties:
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        dialogflowParticipant:
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
        userId:
          type: string
          description: A user-specified ID representing the participant.
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
        dialogflowParticipantName:
          type: string
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SilenceData
      properties: {}
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      type: object
      properties:
        entityUniqueId:
          type: string
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
          description: The original request for bulk delete.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      description: Call-specific metadata.
      properties:
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      type: object
      properties: {}
      description: Response from export issue model
    GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata:
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      type: object
      description: Metadata used for export issue model.
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest:
      properties:
        encryptionSpec:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
      type: object
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        points:
          type: array
          description: >-
            An ordered list of intervals from earliest to latest, where each
            interval represents the number of conversations that transpired
            during the time window.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
        intervalDuration:
          format: google-duration
          type: string
          description: The duration of each interval.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      properties:
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        issueModels:
          items:
            type: string
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        phraseMatchers:
          items:
            type: string
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
      type: object
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
      description: Metadata used for export issue model.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      properties:
        agentChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        customerChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          format: int32
          type: integer
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      type: object
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      type: object
      properties:
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        failedAnalysesCount:
          type: integer
          description: The number of requested analyses that have failed so far.
          format: int32
        completedAnalysesCount:
          format: int32
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          type: integer
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
        partialErrors:
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        totalRequestedAnalysesCount:
          format: int32
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata:
      type: object
      description: Metadata for initializing a location-level encryption specification.
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata
      properties:
        request:
          readOnly: true
          description: Output only. The original request for initialization.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        partialErrors:
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      type: object
      properties:
        summarizationModel:
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          description: Default summarization model to be used.
          type: string
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1Analysis:
      properties:
        analysisResult:
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult
        name:
          type: string
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
        createTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          type: string
        requestTime:
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          type: string
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
      type: object
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
    GoogleLongrunningListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      properties:
        entityUniqueId:
          type: string
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Sentiment expressed for this mention of the entity.
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      properties:
        issueModel:
          type: string
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        issues:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          type: array
          description: All the matched issues.
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      properties:
        transcriptSegments:
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      description: The request to create an issue model.
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      type: object
      description: The request to deploy an issue model.
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      id: GoogleRpcStatus
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      type: object
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadata:
      properties:
        agentInfo:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
          description: Information about agents involved in the call.
        waitDuration:
          description: The amount of time the customer waited to connect with an agent.
          format: google-duration
          type: string
        menuPath:
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
          type: string
        customerSatisfactionRating:
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
          type: integer
          format: int32
      description: Conversation metadata related to quality management.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination:
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
      description: Google Cloud Storage Object URI to save the issue model to.
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      properties: {}
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          type: array
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      description: The response for calculating conversation statistics.
      properties:
        conversationCountTimeSeries:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
          description: >-
            A time series representing the count of conversations created over
            time that match that requested filter criteria.
        issueMatches:
          deprecated: true
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/` Deprecated, use
            `issue_matches_stats` field instead.
          additionalProperties:
            type: integer
            format: int32
          type: object
        smartHighlighterMatches:
          description: >-
            A map associating each smart highlighter display name with its
            respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
          type: object
        conversationCount:
          type: integer
          format: int32
          description: The total number of conversations.
        issueMatchesStats:
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/`
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          type: object
        averageTurnCount:
          description: The average number of turns per conversation.
          type: integer
          format: int32
        averageDuration:
          type: string
          description: >-
            The average duration of all conversations. The average is calculated
            using only conversations that have a time duration.
          format: google-duration
        customHighlighterMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: >-
            A map associating each custom highlighter resource name with its
            respective number of matches in the set of conversations.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      type: object
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      type: object
      properties:
        currentStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          description: >-
            The latest label statistics for the queried issue model. Includes
            results on both training data and data labeled after deployment.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      properties:
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: Required. The medium transcript objects represent.
          type: string
      description: Configuration for processing transcript objects.
  parameters:
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/bulk_delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    encryption_spec:
      id: google.contactcenterinsights.encryption_spec
      name: encryption_spec
      title: Encryption_spec
      methods:
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_encryption_spec:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_spec/methods/get_encryption_spec
        insert: []
        update: []
        replace: []
        delete: []
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/settings/methods/update_settings'
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    post:
      description: >-
        Creates a conversation. Does not support audio transcription or DLP
        redaction. Use `conversations.upload` instead.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an issue model. An issue model can not be used in analysis
        after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: >-
        Deploys an issue model. Returns an error if a model is already deployed.
        An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:import:
    parameters: *ref_1
    post:
      description: Imports an issue model from a Cloud Storage bucket.
      operationId: contactcenterinsights.projects.locations.issueModels.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export:
    parameters: *ref_1
    post:
      description: Exports an issue model to the provided destination.
      operationId: contactcenterinsights.projects.locations.issueModels.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: >-
        contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:initialize:
    parameters: *ref_1
    post:
      description: >-
        Initializes a location-level encryption key specification. An error will
        be thrown if the location has resources already created before the
        initialization. Once the encryption specification is initialized at a
        location, it is immutable and all newly created resources under the
        location will be encrypted with the existing specification.
      operationId: contactcenterinsights.projects.locations.encryptionSpec.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:
    parameters: *ref_1
    get:
      description: Gets location-level encryption key specification.
      operationId: contactcenterinsights.projects.locations.getEncryptionSpec
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
