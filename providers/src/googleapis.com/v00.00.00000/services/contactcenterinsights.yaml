openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20241028'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata:
      type: object
      properties:
        issueModelId:
          type: string
          description: The parent issue model ID.
        issueId:
          type: string
          description: The issue ID.
        issueDisplayName:
          type: string
          description: The issue display name.
      id: GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata
      description: Metadata about the issue dimension.
    GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse:
      description: The response from a ListQaQuestions request.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        qaQuestions:
          description: The QaQuestions under the parent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion'
      id: GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec:
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. `Conversation`).
      properties:
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by our default encryption key. Only the key in the same
            location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
      type: object
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest:
      properties:
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
        maxDeleteCount:
          format: int32
          description: Maximum number of conversations to delete.
          type: integer
        filter:
          description: Filter used to select the subset of conversations to delete.
          type: string
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      type: object
      description: The request to delete conversations in bulk.
    GoogleIamV1SetIamPolicyRequest:
      id: GoogleIamV1SetIamPolicyRequest
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
      type: object
      description: Request message for `SetIamPolicy` method.
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      type: object
      description: Metadata for creating an issue model.
      properties:
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
      properties:
        entityMentionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData
          description: Data specifying an entity mention.
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        channelTag:
          type: integer
          format: int32
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
        phraseMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: Data specifying a phrase match.
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData
          description: Data specifying an issue match.
        interruptionData:
          description: Data specifying an interruption.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        intentMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData
          description: Data specifying an intent match.
        annotationEndBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
    GoogleCloudContactcenterinsightsV1Issue:
      description: The issue resource.
      type: object
      properties:
        updateTime:
          description: Output only. The most recent time that this issue was updated.
          format: google-datetime
          readOnly: true
          type: string
        sampleUtterances:
          type: array
          items:
            type: string
          readOnly: true
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
        displayDescription:
          description: Representative description of the issue.
          type: string
        displayName:
          type: string
          description: The representative name for the issue.
        name:
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time at which this issue was created.
      id: GoogleCloudContactcenterinsightsV1Issue
    GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse:
      description: The response from a ListQaScorecards request.
      properties:
        qaScorecards:
          type: array
          description: The QaScorecards under the parent.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
      properties:
        words:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
          description: >-
            A list of the word-specific information for each word in the
            segment.
        channelTag:
          type: integer
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          format: int32
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
          description: The participant of this segment.
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
        text:
          description: The text of this segment.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        dialogflowSegmentMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
          description: CCAI metadata relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource:
      type: object
      description: >-
        A question may have multiple answers from varying sources, one of which
        becomes the "main" answer above. AnswerSource represents each individual
        answer.
      id: GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource
      properties:
        answerValue:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
          description: The answer value from this source.
        sourceType:
          enumDescriptions:
            - Source type is unspecified.
            - Answer was system-generated; created during an Insights analysis.
            - Answer was created by a human via manual edit.
          description: What created the answer.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED
            - MANUAL_EDIT
          type: string
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice:
      properties:
        timeSeries:
          description: >-
            A time series of metric values. This is only populated if the
            request specifies a time granularity other than NONE.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dimension'
          description: A unique combination of dimensions that this slice represents.
        total:
          description: >-
            The total metric value. The interval of this data point is [starting
            create time, ending create time) from the request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
      type: object
      description: >-
        A slice contains a total and (if the request specified a time
        granularity) a time series of metric values. Each slice contains a
        unique combination of the cardinality of dimensions from the request.
        For example, if the request specifies a single ISSUE dimension and it
        has a cardinality of 2 (i.e. the data used to compute the metrics has 2
        issues in total), the response will have 2 slices: * Slice 1 ->
        dimensions=[Issue 1] * Slice 2 -> dimensions=[Issue 2]
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      type: object
      description: The response of listing views.
      properties:
        views:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          description: The views that match the request.
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        answerRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidence:
          type: number
          format: float
          description: The confidence score of the summarization.
        textSections:
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          additionalProperties:
            type: string
          type: object
    GoogleCloudContactcenterinsightsV1QueryMetricsRequest:
      type: object
      description: The request for querying metrics.
      id: GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      properties:
        measureMask:
          type: string
          description: >-
            Measures to return. Defaults to all measures if this field is
            unspecified. A valid mask should traverse from the `measure` field
            from the response. For example, a path from a measure mask to get
            the conversation count is "conversation_measure.count".
          format: google-fieldmask
        timeGranularity:
          description: >-
            The time granularity of each data point in the time series. Defaults
            to NONE if this field is unspecified.
          enumDescriptions:
            - The time granularity is unspecified and will default to NONE.
            - >-
              No time granularity. The response won't contain a time series.
              This is the default value if no time granularity is specified.
            - >-
              Data points in the time series will aggregate at a daily
              granularity. 1 day means [midnight to midnight).
            - >-
              Data points in the time series will aggregate at a daily
              granularity. 1 HOUR means [01:00 to 02:00).
            - >-
              Data points in the time series will aggregate at a daily
              granularity. PER_MINUTE means [01:00 to 01:01).
            - >-
              Data points in the time series will aggregate at a 1 minute
              granularity. PER_5_MINUTES means [01:00 to 01:05).
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - NONE
            - DAILY
            - HOURLY
            - PER_MINUTE
            - PER_5_MINUTES
          type: string
        dimensions:
          type: array
          description: >-
            The dimensions that determine the grouping key for the query.
            Defaults to no dimension if this field is unspecified. If a
            dimension is specified, its key must also be specified. Each
            dimension's key must be unique. If a time granularity is also
            specified, metric values in the dimension will be bucketed by this
            granularity. Up to one dimension is supported for now.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dimension'
        filter:
          description: >-
            Required. Filter to select a subset of conversations to compute the
            metrics. Must specify a window of the conversation create time to
            compute the metrics. The returned metrics will be from the range
            [DATE(starting create time), DATE(ending create time)). 
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      description: The data for an issue match annotation.
    GoogleCloudContactcenterinsightsV1QueryMetricsMetadata:
      type: object
      description: The metadata from querying metrics.
      id: GoogleCloudContactcenterinsightsV1QueryMetricsMetadata
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata:
      type: object
      description: Conversation metadata related to quality management.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
      properties:
        agentInfo:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
          description: Information about agents involved in the call.
        customerSatisfactionRating:
          type: integer
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
          format: int32
        menuPath:
          type: string
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
        waitDuration:
          format: google-duration
          description: The amount of time the customer waited to connect with an agent.
          type: string
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint:
      description: A data point contains the metric values mapped to an interval.
      properties:
        interval:
          $ref: '#/components/schemas/GoogleTypeInterval'
          description: >-
            The interval that this data point represents. * If this is the total
            data point, the interval is [starting create time, ending create
            time) from the request. * If this a data point from the time series,
            the interval is [time, time + time granularity from the request).
        conversationMeasure:
          description: The measure related to conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure
      type: object
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
    GoogleCloudContactcenterinsightsV1HoldData:
      description: The data for a hold annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata
      description: Metadata about the agent dimension.
      properties:
        agentTeam:
          description: Optional. A user-specified string representing the agent's team.
          type: string
        agentId:
          description: Optional. A user-specified string representing the agent.
          type: string
        agentDisplayName:
          description: Optional. The agent's name
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      description: The request to ingest conversations.
      properties:
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
        sampleSize:
          type: integer
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          format: int32
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
        gcsSource:
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      properties:
        userId:
          type: string
          description: A user-specified ID representing the participant.
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
        dialogflowParticipant:
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
          type: string
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      type: object
      properties:
        inspectTemplate:
          type: string
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
        deidentifyTemplate:
          type: string
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      description: Statistics for IngestConversations operation.
      properties:
        duplicatesSkippedCount:
          type: integer
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          format: int32
          readOnly: true
        failedIngestCount:
          format: int32
          type: integer
          readOnly: true
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
        successfulIngestCount:
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          format: int32
          type: integer
        processedObjectCount:
          type: integer
          readOnly: true
          format: int32
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      type: object
    GoogleCloudContactcenterinsightsV1QueryMetricsResponse:
      properties:
        slices:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
          description: >-
            A slice contains a total and (if the request specified a time
            granularity) a time series of metric values. Each slice contains a
            unique combination of the cardinality of dimensions from the
            request.
        macroAverageSlice:
          description: >-
            The macro average slice contains aggregated averages across the
            selected dimension. i.e. if group_by agent is specified this field
            will contain the average across all agents. This field is only
            populated if the request specifies a Dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
        updateTime:
          description: The metrics last update time.
          format: google-datetime
          type: string
        location:
          description: >-
            Required. The location of the data.
            "projects/{project}/locations/{location}"
          type: string
      type: object
      description: The response for querying metrics.
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponse
    GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource:
      description: Google Cloud Storage Object details to get the feedback label file from.
      type: object
      properties:
        format:
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - JSON
          type: string
          description: Required. File format which will be ingested.
          enumDescriptions:
            - Unspecified format.
            - CSV format.
            - JSON format.
        objectUri:
          description: >-
            Required. The Google Cloud Storage URI of the file to import.
            Format: `gs://bucket_name/object_name`
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource
    GoogleCloudContactcenterinsightsV1alpha1Dimension:
      properties:
        agentDimensionMetadata:
          description: Output only. Metadata about the agent dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata
          readOnly: true
        qaQuestionAnswerDimensionMetadata:
          description: Output only. Metadata about the QA question-answer dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata
          readOnly: true
        qaQuestionDimensionMetadata:
          description: Output only. Metadata about the QA question dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata
        dimensionKey:
          enumDescriptions:
            - The key of the dimension is unspecified.
            - The dimension is keyed by issues.
            - The dimension is keyed by agents.
            - The dimension is keyed by agent teams.
            - >-
              The dimension is keyed by QaQuestionIds. Note that: We only group
              by the QuestionId and not the revision-id of the scorecard this
              question is a part of. This allows for showing stats for the same
              question across different scorecard revisions.
            - >-
              The dimension is keyed by QaQuestionIds-Answer value pairs. Note
              that: We only group by the QuestionId and not the revision-id of
              the scorecard this question is a part of. This allows for showing
              distribution of answers per question across different scorecard
              revisions.
            - The dimension is keyed by the conversation profile ID.
          type: string
          enum:
            - DIMENSION_KEY_UNSPECIFIED
            - ISSUE
            - AGENT
            - AGENT_TEAM
            - QA_QUESTION_ID
            - QA_QUESTION_ANSWER_VALUE
            - CONVERSATION_PROFILE_ID
          description: The key of the dimension.
        issueDimensionMetadata:
          readOnly: true
          description: Output only. Metadata about the issue dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata
      id: GoogleCloudContactcenterinsightsV1alpha1Dimension
      type: object
      description: >-
        A dimension determines the grouping key for the query. In SQL terms,
        these would be part of both the "SELECT" and "GROUP BY" clauses.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      properties:
        totalRequestedAnalysesCount:
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          format: int32
          type: integer
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        completedAnalysesCount:
          format: int32
          type: integer
          description: >-
            The number of requested analyses that have completed successfully so
            far.
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1Dimension:
      type: object
      description: >-
        A dimension determines the grouping key for the query. In SQL terms,
        these would be part of both the "SELECT" and "GROUP BY" clauses.
      id: GoogleCloudContactcenterinsightsV1Dimension
      properties:
        qaQuestionDimensionMetadata:
          readOnly: true
          description: Output only. Metadata about the QA question dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata
        issueDimensionMetadata:
          readOnly: true
          description: Output only. Metadata about the issue dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata
        dimensionKey:
          description: The key of the dimension.
          type: string
          enumDescriptions:
            - The key of the dimension is unspecified.
            - The dimension is keyed by issues.
            - The dimension is keyed by agents.
            - The dimension is keyed by agent teams.
            - >-
              The dimension is keyed by QaQuestionIds. Note that: We only group
              by the QuestionId and not the revision-id of the scorecard this
              question is a part of. This allows for showing stats for the same
              question across different scorecard revisions.
            - >-
              The dimension is keyed by QaQuestionIds-Answer value pairs. Note
              that: We only group by the QuestionId and not the revision-id of
              the scorecard this question is a part of. This allows for showing
              distribution of answers per question across different scorecard
              revisions.
            - The dimension is keyed by the conversation profile ID.
          enum:
            - DIMENSION_KEY_UNSPECIFIED
            - ISSUE
            - AGENT
            - AGENT_TEAM
            - QA_QUESTION_ID
            - QA_QUESTION_ANSWER_VALUE
            - CONVERSATION_PROFILE_ID
        qaQuestionAnswerDimensionMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata
          description: Output only. Metadata about the QA question-answer dimension.
          readOnly: true
        agentDimensionMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata
          readOnly: true
          description: Output only. Metadata about the agent dimension.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      type: object
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      properties:
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
        writeDisposition:
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        parent:
          description: Required. The parent resource to export data from.
          type: string
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      type: object
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
          type: object
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        phraseMatchers:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: All the matched phrase matchers in the call.
        annotations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation
          type: array
          description: A list of call annotations that apply to this call.
        qaScorecardResults:
          description: Results of scoring QaScorecards.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResult
          type: array
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult
        sentiments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
        intents:
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          type: object
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      type: object
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          type: number
          format: double
        displayName:
          type: string
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1QaAnswer:
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswer
      type: object
      description: An answer to a QaQuestion.
      properties:
        answerValue:
          description: The main answer value, incorporating any manual edits if they exist.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
        answerSources:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource
          description: List of all individual answers given to the question.
        questionBody:
          description: Question text. E.g., "Did the agent greet the customer?"
          type: string
        qaQuestion:
          type: string
          description: The QaQuestion answered by this answer.
        tags:
          type: array
          items:
            type: string
          description: >-
            User-defined list of arbitrary tags. Matches the value from
            QaScorecard.ScorecardQuestion.tags. Used for grouping/organization
            and for weighting the score of each answer.
        conversation:
          description: The conversation the answer applies to.
          type: string
        potentialScore:
          format: double
          deprecated: true
          type: number
          description: >-
            The maximum potential score of the question. If the question was
            answered using `na_value`, this field will be zero. Deprecated: Use
            AnswerValue.potential_score instead.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
          description: The original request for undeployment.
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
      type: object
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      description: Exact match configuration.
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      properties:
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      id: GoogleProtobufEmpty
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata:
      type: object
      properties:
        questionBody:
          type: string
          description: Optional. The full body of the question.
        answerValue:
          description: Optional. The full body of the question.
          type: string
        qaScorecardId:
          type: string
          description: Optional. The QA scorecard ID.
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata
      description: >-
        Metadata about the QA question-answer dimension. This is useful for
        showing the answer distribution for questions for a given scorecard.
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      type: object
      description: The data for an interruption annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      properties: {}
    GoogleCloudContactcenterinsightsV1IssueModel:
      id: GoogleCloudContactcenterinsightsV1IssueModel
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          description: Output only. State of the model.
          type: string
        issueCount:
          type: string
          readOnly: true
          description: Output only. Number of issues in this issue model.
          format: int64
        modelType:
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          type: string
        displayName:
          type: string
          description: The representative name for the issue model.
        languageCode:
          description: Language of the model.
          type: string
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time at which this issue model was created.
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
      description: The issue model resource.
      type: object
    GoogleCloudContactcenterinsightsV1QaScorecardResult:
      id: GoogleCloudContactcenterinsightsV1QaScorecardResult
      description: >-
        The results of scoring a single conversation against a QaScorecard.
        Contains a collection of QaAnswers and aggregate score.
      properties:
        createTime:
          readOnly: true
          description: Output only. The timestamp that the revision was created.
          type: string
          format: google-datetime
        scoreSources:
          description: List of all individual score sets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource
        conversation:
          type: string
          description: The conversation scored by this result.
        name:
          description: >-
            Identifier. The name of the scorecard result. Format:
            projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result}
          type: string
        qaScorecardRevision:
          description: The QaScorecardRevision scored by this result.
          type: string
        qaTagResults:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
          type: array
          description: Collection of tags and their scores.
        score:
          type: number
          description: >-
            The overall numerical score of the result, incorporating any manual
            edits if they exist.
          format: double
        agentId:
          description: ID of the agent that handled the conversation.
          type: string
        normalizedScore:
          format: double
          type: number
          description: >-
            The normalized score, which is the score divided by the potential
            score. Any manual edits are included if they exist.
        potentialScore:
          type: number
          format: double
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
        qaAnswers:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswer'
          description: Set of QaAnswers represented in the result.
      type: object
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
      type: object
      description: The response for a bulk delete conversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse:
      description: The response for listing all feedback labels.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        feedbackLabels:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
          description: The feedback labels that match the request.
          type: array
      type: object
      id: GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      properties:
        filter:
          type: string
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          deprecated: true
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          type: string
          format: int64
      type: object
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
          description: The original request for undeployment.
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      type: object
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest:
      description: Request to export an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
      properties:
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
        name:
          description: Required. The issue model to export.
          type: string
    GoogleIamV1AuditLogConfig:
      type: object
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: GoogleIamV1AuditLogConfig
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
        logType:
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidenceScore:
          format: float
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          type: object
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          additionalProperties:
            type: string
        question:
          description: The corresponding FAQ question.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      type: object
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      type: object
      description: The request to undeploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      type: object
    GoogleTypeExpr:
      properties:
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
      id: GoogleTypeExpr
      type: object
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
    GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata
      type: object
      properties:
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
        questionBody:
          type: string
          description: Optional. The full body of the question.
        qaQuestionId:
          type: string
          description: Optional. The QA question ID.
      description: Metadata about the QA question dimension.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      properties:
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
          description: Required. The type of this phrase match rule group.
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule
      description: A message representing a rule in the phrase matcher.
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      type: object
      description: Metadata for a create analysis operation.
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        conversation:
          type: string
          readOnly: true
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
      description: Request for the BulkDownloadFeedbackLabel endpoint.
      properties:
        gcsDestination:
          description: A cloud storage bucket destination.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination
        parent:
          type: string
          description: Required. The parent resource for new feedback labels.
        feedbackLabelType:
          enum:
            - FEEDBACK_LABEL_TYPE_UNSPECIFIED
            - QUALITY_AI
            - TOPIC_MODELING
          description: Optional. The type of feedback labels that will be downloaded.
          type: string
          enumDescriptions:
            - Unspecified format
            - >-
              Downloaded file will contain all Quality AI labels from the latest
              scorecard revision.
            - Downloaded file will contain only Topic Modeling labels.
        templateQaScorecardId:
          description: >-
            Optional. If set, a template for labeling conversations and
            scorecard questions will be created from the conversation_filter and
            the questions under the scorecard(s). The feedback label `filter`
            will be ignored.
          items:
            type: string
          type: array
        conversationFilter:
          description: >-
            Optional. Filter parent conversations to download feedback labels
            for. When specified, the feedback labels will be downloaded for the
            conversations that match the filter. If `template_qa_scorecard_id`
            is set, all the conversations that match the filter will be paired
            with the questions under the scorecard for labeling.
          type: string
        filter:
          description: >-
            Optional. A filter to reduce results to a specific subset. Supports
            disjunctions (OR) and conjunctions (AND). Supported fields: *
            `issue_model_id` * `qa_question_id` * `qa_scorecard_id` *
            `min_create_time` * `max_create_time` * `min_update_time` *
            `max_update_time` * `feedback_label_type`: QUALITY_AI,
            TOPIC_MODELING
          type: string
        maxDownloadCount:
          format: int32
          description: >-
            Optional. Limits the maximum number of feedback labels that will be
            downloaded. The first `N` feedback labels will be downloaded.
          type: integer
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest:
      description: The request to delete conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
      properties:
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
        maxDeleteCount:
          type: integer
          description: Maximum number of conversations to delete.
          format: int32
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
        filter:
          type: string
          description: Filter used to select the subset of conversations to delete.
      type: object
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      type: object
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      properties:
        appliedRedactionConfig:
          readOnly: true
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        analysisOperation:
          type: string
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        request:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
          description: Output only. The original request.
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      type: object
      description: The metadata for an `UploadConversation` operation.
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      type: object
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      properties:
        wordIndex:
          type: integer
          format: int32
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
        transcriptIndex:
          format: int32
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo:
      type: object
      properties:
        displayName:
          type: string
          description: The agent's name.
        team:
          type: string
          description: A user-specified string representing the agent's team.
        agentId:
          type: string
          description: A user-specified string representing the agent.
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource
      properties:
        sourceType:
          type: string
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED
            - MANUAL_EDIT
          enumDescriptions:
            - Source type is unspecified.
            - Answer was system-generated; created during an Insights analysis.
            - Answer was created by a human via manual edit.
          description: What created the answer.
        answerValue:
          description: The answer value from this source.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
      description: >-
        A question may have multiple answers from varying sources, one of which
        becomes the "main" answer above. AnswerSource represents each individual
        answer.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      description: The response of listing phrase matchers.
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      type: object
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        phraseMatchers:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
          type: array
          description: The phrase matchers that match the request.
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      type: object
      properties:
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        correctnessLevel:
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          description: The correctness level of an answer.
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
    GoogleCloudContactcenterinsightsV1alpha1ListFeedbackLabelsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: The next page token.
        feedbackLabels:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
          description: The feedback labels that match the request.
          type: array
      description: The response for listing feedback labels.
      id: GoogleCloudContactcenterinsightsV1alpha1ListFeedbackLabelsResponse
    GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse:
      properties:
        qaScorecardRevisions:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
          type: array
          description: The QaScorecards under the parent.
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
      description: The response from a ListQaScorecardRevisions request.
      id: GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
          description: The original request for deletion.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        failedAnalysesCount:
          type: integer
          description: The number of requested analyses that have failed so far.
          format: int32
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
          description: The original request for bulk analyze.
        totalRequestedAnalysesCount:
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
          format: int32
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          readOnly: true
        completedAnalysesCount:
          type: integer
          format: int32
          description: >-
            The number of requested analyses that have completed successfully so
            far.
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource:
      description: >-
        A scorecard result may have multiple sets of scores from varying
        sources, one of which becomes the "main" answer above. A ScoreSource
        represents each individual set of scores.
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource
      properties:
        normalizedScore:
          description: >-
            The normalized score, which is the score divided by the potential
            score.
          format: double
          type: number
        score:
          description: The overall numerical score of the result.
          type: number
          format: double
        qaTagResults:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
          description: Collection of tags and their scores.
          type: array
        sourceType:
          description: What created the score.
          type: string
          enumDescriptions:
            - Source type is unspecified.
            - Score is derived only from system-generated answers.
            - >-
              Score is derived from both system-generated answers, and includes
              any manual edits if they exist.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED_ONLY
            - INCLUDES_MANUAL_EDITS
        potentialScore:
          type: number
          format: double
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
      type: object
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure:
      properties:
        averageClientSentimentScore:
          format: float
          type: number
          description: The average client's sentiment score.
        averageQaQuestionNormalizedScore:
          format: double
          description: >-
            Average QA normalized score averaged for questions averaged across
            all revisions of the parent scorecard. Will be only populated if the
            request specifies a dimension of QA_QUESTION_ID.
          type: number
        averageCustomerSatisfactionRating:
          format: double
          description: The average customer satisfaction rating.
          type: number
        averageQaNormalizedScore:
          format: double
          description: >-
            Average QA normalized score. Will exclude 0's in average
            calculation.
          type: number
        averageDuration:
          format: google-duration
          type: string
          description: The average duration.
        averageTurnCount:
          description: The average turn count.
          type: number
          format: float
        qaTagScores:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
          description: Average QA normalized score for all the tags.
          type: array
        conversationCount:
          description: The conversation count.
          format: int32
          type: integer
        averageAgentSentimentScore:
          type: number
          description: The average agent's sentiment score.
          format: float
        averageSilencePercentage:
          format: float
          description: The average silence percentage.
          type: number
      id: >-
        GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure
      type: object
      description: The measure related to conversations.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
      type: object
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData
          description: Dialogflow interaction data.
        createTime:
          format: google-datetime
          description: The time at which this annotation was created.
          type: string
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        endBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        smartReply:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData
          description: Agent Assist Smart Reply data.
        startBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        userInput:
          description: Explicit input used for generating the answer
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
    GoogleCloudContactcenterinsightsV1alpha1ListAllFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ListAllFeedbackLabelsResponse
      description: The response for listing all feedback labels.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        feedbackLabels:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
          description: The feedback labels that match the request.
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      description: Google Cloud Storage Object URI to save the issue model to.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      type: object
      description: Word-level info for words in a transcript.
      properties:
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        startOffset:
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          type: string
          format: google-duration
        endOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      properties:
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
        speechConfig:
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
        conversationId:
          type: string
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
        parent:
          type: string
          description: Required. The parent resource of the conversation.
      type: object
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo:
      properties:
        agentId:
          description: A user-specified string representing the agent.
          type: string
        dispositionCode:
          type: string
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
        team:
          description: A user-specified string representing the agent's team.
          type: string
        displayName:
          description: The agent's name.
          type: string
      type: object
      description: Information about an agent involved in the conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult:
      properties:
        createTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          format: google-datetime
          type: string
        scoreSources:
          description: List of all individual score sets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource
        potentialScore:
          format: double
          type: number
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
        name:
          description: >-
            Identifier. The name of the scorecard result. Format:
            projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result}
          type: string
        normalizedScore:
          type: number
          format: double
          description: >-
            The normalized score, which is the score divided by the potential
            score. Any manual edits are included if they exist.
        agentId:
          description: ID of the agent that handled the conversation.
          type: string
        qaAnswers:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswer
          type: array
          description: Set of QaAnswers represented in the result.
        qaTagResults:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
          type: array
          description: Collection of tags and their scores.
        conversation:
          type: string
          description: The conversation scored by this result.
        qaScorecardRevision:
          description: The QaScorecardRevision scored by this result.
          type: string
        score:
          type: number
          format: double
          description: >-
            The overall numerical score of the result, incorporating any manual
            edits if they exist.
      description: >-
        The results of scoring a single conversation against a QaScorecard.
        Contains a collection of QaAnswers and aggregate score.
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      description: The response for calculating conversation statistics.
      type: object
      properties:
        averageTurnCount:
          type: integer
          format: int32
          description: The average number of turns per conversation.
        averageDuration:
          format: google-duration
          description: >-
            The average duration of all conversations. The average is calculated
            using only conversations that have a time duration.
          type: string
        issueMatches:
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/` Deprecated, use
            `issue_matches_stats` field instead.
          deprecated: true
          type: object
          additionalProperties:
            format: int32
            type: integer
        conversationCountTimeSeries:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
          description: >-
            A time series representing the count of conversations created over
            time that match that requested filter criteria.
        issueMatchesStats:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/`
        customHighlighterMatches:
          type: object
          description: >-
            A map associating each custom highlighter resource name with its
            respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
        conversationCount:
          type: integer
          format: int32
          description: The total number of conversations.
        smartHighlighterMatches:
          description: >-
            A map associating each smart highlighter display name with its
            respective number of matches in the set of conversations.
          additionalProperties:
            type: integer
            format: int32
          type: object
    GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata
      description: Metadata about the issue dimension.
      type: object
      properties:
        issueDisplayName:
          type: string
          description: The issue display name.
        issueId:
          type: string
          description: The issue ID.
        issueModelId:
          type: string
          description: The parent issue model ID.
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      description: The data for a phrase match rule.
      properties:
        negated:
          description: >-
            Specifies whether the phrase must be missing from the transcript
            segment or present in the transcript segment.
          type: boolean
        config:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
          description: >-
            Provides additional information about the rule that specifies how to
            apply the rule.
        query:
          type: string
          description: Required. The phrase to be matched.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      type: object
      properties:
        dialogflowIntentId:
          type: string
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
        confidence:
          type: number
          format: float
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      properties:
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice:
      type: object
      description: Message representing a possible answer to the question.
      id: GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice
      properties:
        strValue:
          description: String value.
          type: string
        naValue:
          type: boolean
          description: >-
            A value of "Not Applicable (N/A)". If provided, this field may only
            be set to `true`. If a question receives this answer, it will be
            excluded from any score calculations.
        numValue:
          format: double
          type: number
          description: Numerical value.
        key:
          description: A short string used as an identifier.
          type: string
        score:
          type: number
          format: double
          description: >-
            Numerical score of the answer, used for generating the overall score
            of a QaScorecardResult. If the answer uses na_value, this field is
            unused.
        boolValue:
          type: boolean
          description: Boolean value.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      type: object
      description: Response from import issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        type:
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      description: One channel of conversation-level sentiment data.
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          format: int32
          description: The channel of the audio that the data applies to.
          type: integer
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
        analysisPercentage:
          type: number
          format: float
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      type: object
    GoogleCloudContactcenterinsightsV1QaScorecardRevision:
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. The timestamp that the revision was created.
          format: google-datetime
        snapshot:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard'
          description: >-
            The snapshot of the scorecard at the time of this revision's
            creation.
        alternateIds:
          description: >-
            Output only. Alternative IDs for this revision of the scorecard,
            e.g., `latest`.
          type: array
          readOnly: true
          items:
            type: string
        name:
          type: string
          description: >-
            Identifier. The name of the scorecard revision. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}
        state:
          readOnly: true
          description: >-
            Output only. State of the scorecard revision, indicating whether
            it's ready to be used in analysis.
          enum:
            - STATE_UNSPECIFIED
            - EDITABLE
            - TRAINING
            - TRAINING_FAILED
            - READY
            - DELETING
            - TRAINING_CANCELLED
          enumDescriptions:
            - Unspecified.
            - The scorecard revision can be edited.
            - Scorecard model training is in progress.
            - Scorecard revision model training failed.
            - The revision can be used in analysis.
            - Scorecard is being deleted.
            - Scorecard model training was explicitly cancelled by the user.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1QaScorecardRevision
      description: >-
        A revision of a QaScorecard. Modifying published scorecard fields would
        invalidate existing scorecard results — the questions may have changed,
        or the score weighting will make existing scores impossible to
        understand. So changes must create a new revision, rather than modifying
        the existing resource.
    GoogleIamV1Policy:
      id: GoogleIamV1Policy
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
        version:
          format: int32
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
      type: object
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      properties:
        sentiments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
        qaScorecardResults:
          description: Results of scoring QaScorecards.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult
        entities:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity
          description: All the entities in the call.
          type: object
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent
        phraseMatchers:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
          type: object
          description: All the matched phrase matchers in the call.
        annotations:
          type: array
          description: A list of call annotations that apply to this call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
      properties:
        transcriptSegments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        transcriptUri:
          type: string
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SpeechConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig:
      properties:
        scorecardList:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList
          description: A manual list of scorecards to score.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig
      description: Configuration for the QA feature.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      properties:
        entityMentionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
          description: Data specifying an entity mention.
        holdData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData
          description: Data specifying a hold.
        annotationEndBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        intentMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
          description: Data specifying an intent match.
        annotationStartBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        phraseMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
          description: Data specifying a phrase match.
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
          description: Data specifying an issue match.
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData
          description: Data specifying an interruption.
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          type: integer
          format: int32
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        silenceData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData
          description: Data specifying silence.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      type: object
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          format: double
      description: Agent Assist Smart Compose suggestion data.
    GoogleCloudContactcenterinsightsV1Settings:
      properties:
        name:
          description: >-
            Immutable. The resource name of the settings resource. Format:
            projects/{project}/locations/{location}/settings
          type: string
        createTime:
          readOnly: true
          description: Output only. The time at which the settings was created.
          format: google-datetime
          type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
        conversationTtl:
          type: string
          description: >-
            The default TTL for newly-created conversations. If a conversation
            has a specified expiration, that value will be used instead.
            Changing this value will not change the expiration of existing
            conversations. Conversations with no expire time persist until they
            are deleted.
          format: google-duration
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text resources to use while ingesting
            audio files. Optional, CCAI Insights will create a default if not
            provided. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
        pubsubNotificationSettings:
          type: object
          description: >-
            A map that maps a notification trigger to a Pub/Sub topic. Each time
            a specified trigger occurs, Insights will notify the corresponding
            Pub/Sub topic. Keys are notification triggers. Supported keys are: *
            "all-triggers": Notify each time any of the supported triggers
            occurs. * "create-analysis": Notify each time an analysis is
            created. * "create-conversation": Notify each time a conversation is
            created. * "export-insights-data": Notify each time an export is
            complete. * "ingest-conversations": Notify each time an
            IngestConversations LRO is complete. * "update-conversation": Notify
            each time a conversation is updated via UpdateConversation. *
            "upload-conversation": Notify when an UploadConversation LRO is
            complete. Values are Pub/Sub topics. The format of each Pub/Sub
            topic is: projects/{project}/topics/{topic}
          additionalProperties:
            type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time at which the settings were last updated.
          readOnly: true
        redactionConfig:
          description: >-
            Default DLP redaction resources to be applied while ingesting
            conversations. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        languageCode:
          type: string
          description: >-
            A language code to be applied to each transcript segment unless the
            segment already specifies a language code. Language code defaults to
            "en-US" if it is neither specified on the segment nor here.
      type: object
      id: GoogleCloudContactcenterinsightsV1Settings
      description: >-
        The CCAI Insights project wide settings. Use these settings to configure
        the behavior of Insights. View these settings with
        [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings)
        and change the settings with
        [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      properties:
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
          type: string
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        title:
          type: string
          description: Article title.
        uri:
          type: string
          description: Article URI.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      properties:
        metadata:
          type: object
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          additionalProperties:
            type: string
        type:
          description: The entity type.
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
        salience:
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
          type: number
          format: float
        displayName:
          description: The representative name for the entity.
          type: string
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      type: object
    GoogleCloudContactcenterinsightsV1QaScorecard:
      properties:
        createTime:
          type: string
          description: Output only. The time at which this scorecard was created.
          readOnly: true
          format: google-datetime
        displayName:
          type: string
          description: The user-specified display name of the scorecard.
        updateTime:
          format: google-datetime
          description: >-
            Output only. The most recent time at which the scorecard was
            updated.
          readOnly: true
          type: string
        name:
          type: string
          description: >-
            Identifier. The scorecard name. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}
        description:
          description: A text description explaining the intent of the scorecard.
          type: string
      id: GoogleCloudContactcenterinsightsV1QaScorecard
      description: >-
        A QaScorecard represents a collection of questions to be scored during
        analysis.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource:
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      type: object
      description: Google Cloud Storage Object URI to get the issue model file from.
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      properties:
        medium:
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          deprecated: true
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
          type: string
        trainingConversationsCount:
          format: int64
          type: string
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
      type: object
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      type: object
      properties:
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        request:
          description: The original request for bulk delete.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        confidence:
          type: number
          format: float
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
        endOffset:
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
          type: string
          format: google-duration
        startOffset:
          type: string
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          format: google-duration
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      type: object
      description: Aggregated statistics about an issue model.
      properties:
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
          format: int64
        analyzedConversationsCount:
          format: int64
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      properties: {}
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          type: string
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
        dataset:
          type: string
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
      type: object
      description: A BigQuery Table Reference.
      id: >-
        GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      properties:
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          type: number
          format: double
        displayName:
          type: string
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
        issue:
          description: Resource name of the assigned issue.
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence:
      type: object
      properties:
        silenceDuration:
          format: google-duration
          type: string
          description: Amount of time calculated to be in silence.
        silencePercentage:
          type: number
          description: Percentage of the total conversation spent in silence.
          format: float
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
      description: Conversation-level silence data.
    GoogleIamV1Binding:
      properties:
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
        members:
          items:
            type: string
          type: array
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
      id: GoogleIamV1Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest:
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the `kms_key_name` field is left empty, no
            encryption will be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      properties:
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
        agentChannel:
          description: The audio channel that contains the agent.
          format: int32
          type: integer
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      type: object
    GoogleCloudContactcenterinsightsV1SpeechConfig:
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
      id: GoogleCloudContactcenterinsightsV1SpeechConfig
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata:
      properties:
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during initializing operation that might cause the
            operation output to be incomplete.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
      description: Metadata for initializing a location-level encryption specification.
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      properties:
        wordIndex:
          type: integer
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          format: int32
        transcriptIndex:
          format: int32
          type: integer
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
      type: object
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
      type: object
      properties:
        querySource:
          type: string
          description: Query source for the answer.
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
        query:
          type: string
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
        generatorName:
          type: string
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
      description: Explicit input used for generating the answer
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
      properties: {}
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        displayName:
          description: Display name of the issue.
          type: string
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      properties:
        permissions:
          items:
            type: string
          type: array
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      type: object
      description: Response message for `TestIamPermissions` method.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      description: The analysis resource.
      properties:
        name:
          type: string
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
        requestTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          type: string
        analysisResult:
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
        createTime:
          type: string
          format: google-datetime
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          readOnly: true
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
    GoogleCloudContactcenterinsightsV1FeedbackLabel:
      properties:
        name:
          description: >-
            Immutable. Resource name of the FeedbackLabel. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label}
          type: string
        qaAnswerLabel:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
          description: QaAnswer label.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Create time of the label.
          type: string
        label:
          description: String label.
          type: string
        updateTime:
          readOnly: true
          description: Output only. Update time of the label.
          format: google-datetime
          type: string
        labeledResource:
          description: Resource name of the resource to be labeled.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1FeedbackLabel
      description: Represents a conversation, resource, and label provided by the user.
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      type: object
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
          description: The original request for bulk delete.
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        partialErrors:
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
      type: object
      properties:
        request:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
          description: Output only. The original request for ingest.
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
        ingestConversationsStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
    GoogleLongrunningOperation:
      type: object
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest
      properties:
        validateOnly:
          description: >-
            Optional. Run in validate only mode, no fine tuning will actually
            run. Data quality validations like training data distributions will
            run. Even when set to false, the data quality validations will still
            run but once the validations complete we will proceed with the fine
            tune, if applicable.
          type: boolean
        filter:
          description: >-
            Required. Filter for selecting the feedback labels that needs to be
            used for training. This filter can be used to limit the feedback
            labels used for tuning to a feedback labels created or updated for a
            specific time-window etc.
          type: string
      description: Request for TuneQaScorecardRevision endpoint.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      description: The request to ingest conversations.
      type: object
      properties:
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        gcsSource:
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
        conversationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
          description: Configuration that applies to all conversations.
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        sampleSize:
          format: int32
          type: integer
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        transcriptObjectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
          description: Configuration for when `source` contains conversation transcripts.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      properties:
        metadataBucketUri:
          type: string
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
        customMetadataKeys:
          type: array
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          items:
            type: string
        bucketObjectType:
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          type: string
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
          description: Optional. Specifies the type of the objects in `bucket_uri`.
      type: object
      description: Configuration for Cloud Storage bucket sources.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      description: Configuration for processing transcript objects.
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination:
      description: Google Cloud Storage Object details to write the feedback labels to.
      type: object
      properties:
        recordsPerFileCount:
          description: >-
            Optional. The number of records per file. Applicable for either
            format.
          format: int64
          type: string
        alwaysPrintEmptyFields:
          description: >-
            Optional. Always print fields with no presence. This is useful for
            printing fields that are not set, like implicit 0 value or empty
            lists/maps. Only applicable for JSON format.
          type: boolean
        addWhitespace:
          type: boolean
          description: >-
            Optional. Add whitespace to the JSON file. Makes easier to read, but
            increases file size. Only applicable for JSON format.
        format:
          description: Required. File format in which the labels will be exported.
          enumDescriptions:
            - Unspecified format.
            - CSV format. 1,000 labels are stored per CSV file by default.
            - JSON format. 1 label stored per JSON file by default.
          type: string
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - JSON
        objectUri:
          type: string
          description: >-
            Required. The Google Cloud Storage URI to write the feedback labels
            to. The file name will be used as a prefix for the files written to
            the bucket if the output needs to be split across multiple files,
            otherwise it will be used as is. The file extension will be appended
            to the file name based on the format selected. E.g.
            `gs://bucket_name/object_uri_prefix`
      id: >-
        GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination
    GoogleTypeInterval:
      id: GoogleTypeInterval
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
      type: object
      properties:
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
        startTime:
          type: string
          format: google-datetime
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      type: object
      description: A Dialogflow source of conversation data.
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        dialogflowConversation:
          type: string
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          readOnly: true
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource
      type: object
      description: The conversation source, which is a combination of transcript and audio.
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      description: The data for a silence annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      properties: {}
      description: Response from import issue model
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
    GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest:
      properties:
        validateOnly:
          type: boolean
          description: >-
            Optional. If set, upload will not happen and the labels will be
            validated. If not set, then default behavior will be to upload the
            labels after validation is complete.
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource
          description: A cloud storage bucket source.
      id: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest
      description: The request for bulk uploading feedback labels.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
          description: The original import request.
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata
      description: Metadata used for import issue model.
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequest:
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        createNewModel:
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
          type: boolean
      description: Request to import an issue model.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      description: The response of listing issues.
      properties:
        issues:
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      properties:
        agentChannel:
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
        customerChannel:
          format: int32
          type: integer
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
      description: Configuration that applies to all conversations.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1AnalysisRule:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisRule
      properties:
        createTime:
          description: Output only. The time at which this analysis rule was created.
          readOnly: true
          format: google-datetime
          type: string
        updateTime:
          type: string
          readOnly: true
          description: >-
            Output only. The most recent time at which this analysis rule was
            updated.
          format: google-datetime
        annotatorSelector:
          description: >-
            Selector of annotators to run and the phrase matchers to use for
            conversations that matches the conversation_filter. If not
            specified, NO annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        analysisPercentage:
          format: double
          description: >-
            Percentage of conversations that we should apply this analysis
            setting automatically, between [0, 1]. For example, 0.1 means 10%.
            Conversations are sampled in a determenestic way. The original
            runtime_percentage & upload percentage will be replaced by defining
            filters on the conversation.
          type: number
        active:
          type: boolean
          description: >-
            If true, apply this rule to conversations. Otherwise, this rule is
            inactive and saved as a draft.
        name:
          type: string
          description: >-
            Identifier. The resource name of the analysis rule. Format:
            projects/{project}/locations/{location}/analysisRules/{analysis_rule}
        displayName:
          type: string
          description: Display Name of the analysis rule.
        conversationFilter:
          description: >-
            Filter for the conversations that should apply this analysis rule.
            An empty filter means this analysis rule applies to all
            conversations.
          type: string
      description: >-
        The CCAI Insights project wide analysis rule. This rule will be applied
        to all conversations that match the filter defined in the rule. For a
        conversation matches the filter, the annotators specified in the rule
        will be run. If a conversation matches multiple rules, a union of all
        the annotators will be run. One project can have multiple analysis
        rules.
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsResponse
      description: Response for the BulkDownloadFeedbackLabel endpoint.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      properties:
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
        table:
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
          type: string
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      type: object
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          type: string
        conversationProfile:
          type: string
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      type: object
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      properties:
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
        question:
          description: The corresponding FAQ question.
          type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        confidenceScore:
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: float
          type: number
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        nextPageToken:
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is set, it means there is another page available. If
            it is not set, it means no other pages are available.
          type: string
        conversations:
          type: array
          description: The conversations that match the request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
      description: The response of listing conversations.
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the `kms_key_name` field is left empty, no
            encryption will be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      description: The request to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        issues:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          description: All the matched issues.
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
      description: Average QA normalized score for the tag.
      properties:
        averageTagNormalizedScore:
          type: number
          format: double
          description: Average tag normalized score per tag.
        tag:
          type: string
          description: Tag name.
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponse:
      properties:
        slices:
          description: >-
            A slice contains a total and (if the request specified a time
            granularity) a time series of metric values. Each slice contains a
            unique combination of the cardinality of dimensions from the
            request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
          type: array
        updateTime:
          type: string
          format: google-datetime
          description: The metrics last update time.
        location:
          type: string
          description: >-
            Required. The location of the data.
            "projects/{project}/locations/{location}"
        macroAverageSlice:
          description: >-
            The macro average slice contains aggregated averages across the
            selected dimension. i.e. if group_by agent is specified this field
            will contain the average across all agents. This field is only
            populated if the request specifies a Dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
      description: The response for querying metrics.
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponse
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      properties:
        conversationCount:
          type: integer
          description: The number of conversations created in this interval.
          format: int32
        startTime:
          description: The start time of this interval.
          format: google-datetime
          type: string
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      description: Request to export an issue model.
      properties:
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
        name:
          description: Required. The issue model to export.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
          description: The original request for deployment.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      type: object
      description: Metadata for deploying an issue model.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      properties:
        intentUniqueId:
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList
      properties:
        qaScorecardRevisions:
          items:
            type: string
          type: array
          description: List of QaScorecardRevisions.
      type: object
      description: Container for a list of scorecards.
    GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest
      description: The request to undeploy a QaScorecardRevision
    GoogleCloudContactcenterinsightsV1QaQuestionMetrics:
      description: >-
        A wrapper representing metrics calculated against a test-set on a LLM
        that was fine tuned for this question.
      id: GoogleCloudContactcenterinsightsV1QaQuestionMetrics
      type: object
      properties:
        accuracy:
          description: >-
            Output only. Accuracy of the model. Measures the percentage of
            correct answers the model gave on the test set.
          format: double
          type: number
          readOnly: true
    GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
          description: The original export request.
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata
      type: object
      description: Metadata used for export issue model.
    GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata
      properties:
        tuningError:
          description: >-
            Error status of the tuning operation for the question. Will only be
            set if the tuning operation failed.
          type: string
        datasetValidationWarnings:
          type: array
          description: >-
            A list of any applicable data validation warnings about the
            question's feedback labels.
          items:
            type: string
            enumDescriptions:
              - Unspecified data validation warning.
              - A non-trivial percentage of the feedback labels are invalid.
              - >-
                The quantity of valid feedback labels provided is less than the
                recommended minimum.
              - >-
                One or more of the answers have less than the recommended
                minimum of feedback labels.
              - All the labels in the dataset come from a single answer choice.
            enum:
              - DATASET_VALIDATION_WARNING_UNSPECIFIED
              - TOO_MANY_INVALID_FEEDBACK_LABELS
              - INSUFFICIENT_FEEDBACK_LABELS
              - INSUFFICIENT_FEEDBACK_LABELS_PER_ANSWER
              - ALL_FEEDBACK_LABELS_HAVE_THE_SAME_ANSWER
        totalValidLabelCount:
          description: >-
            Total number of valid labels provided for the question at the time
            of tuining.
          type: string
          format: int64
      description: >-
        Metadata about the tuning operation for the question. Will only be set
        if a scorecard containing this question has been tuned.
    GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse:
      type: object
      properties:
        analysisRules:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
          type: array
          description: The analysis_rule that match the request.
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      id: GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse
      description: The response of listing views.
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
        id:
          description: The unique identifier of the intent.
          type: string
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      type: object
      properties:
        score:
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
          type: number
          format: float
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1SentimentData:
      id: GoogleCloudContactcenterinsightsV1SentimentData
      properties:
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
          format: float
          type: number
        score:
          format: float
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
      description: The data for a sentiment annotation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      properties:
        labeledConversationsCount:
          format: int64
          description: Number of conversations attached to the issue at this point in time.
          type: string
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          type: string
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
      type: object
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata:
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        request:
          description: Output only. The original request for initialization.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
          readOnly: true
        partialErrors:
          description: >-
            Partial errors during initializing operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
      type: object
      description: Metadata for initializing a location-level encryption specification.
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        request:
          description: Output only. The original request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
          readOnly: true
        analysisOperation:
          readOnly: true
          type: string
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
        appliedRedactionConfig:
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          readOnly: true
      description: The metadata for an `UploadConversation` operation.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      type: object
      description: The response to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1EncryptionSpec:
      id: GoogleCloudContactcenterinsightsV1EncryptionSpec
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          type: string
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by our default encryption key. Only the key in the same
            location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. `Conversation`).
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      type: object
      description: Aggregated statistics about an issue model.
      properties:
        issueStats:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
        analyzedConversationsCount:
          type: string
          format: int64
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
          format: int64
    GoogleCloudContactcenterinsightsV1QaAnswer:
      description: An answer to a QaQuestion.
      id: GoogleCloudContactcenterinsightsV1QaAnswer
      type: object
      properties:
        tags:
          description: >-
            User-defined list of arbitrary tags. Matches the value from
            QaScorecard.ScorecardQuestion.tags. Used for grouping/organization
            and for weighting the score of each answer.
          type: array
          items:
            type: string
        conversation:
          type: string
          description: The conversation the answer applies to.
        answerSources:
          description: List of all individual answers given to the question.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource
        answerValue:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
          description: The main answer value, incorporating any manual edits if they exist.
        qaQuestion:
          type: string
          description: The QaQuestion answered by this answer.
        potentialScore:
          deprecated: true
          type: number
          format: double
          description: >-
            The maximum potential score of the question. If the question was
            answered using `na_value`, this field will be zero. Deprecated: Use
            AnswerValue.potential_score instead.
        questionBody:
          description: Question text. E.g., "Did the agent greet the customer?"
          type: string
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      properties:
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
      type: object
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      properties:
        summarizationModel:
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput:
      properties:
        query:
          type: string
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
        querySource:
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          description: Query source for the answer.
          type: string
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
      type: object
      description: Explicit input used for generating the answer
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      properties:
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
      description: The response for a bulk analyze conversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      description: Configuration information of a phrase match rule.
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      properties:
        points:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
          description: >-
            An ordered list of intervals from earliest to latest, where each
            interval represents the number of conversations that transpired
            during the time window.
          type: array
        intervalDuration:
          format: google-duration
          type: string
          description: The duration of each interval.
      description: A time series representing conversations over time.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      description: Call-specific metadata.
      type: object
      properties:
        customerChannel:
          type: integer
          format: int32
          description: The audio channel that contains the customer.
        agentChannel:
          format: int32
          type: integer
          description: The audio channel that contains the agent.
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
      properties:
        createNewModel:
          type: boolean
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
          description: Google Cloud Storage source message.
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      type: object
      description: Request to import an issue model.
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadata:
      properties:
        waitDuration:
          type: string
          format: google-duration
          description: The amount of time the customer waited to connect with an agent.
        agentInfo:
          description: Information about agents involved in the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
        customerSatisfactionRating:
          type: integer
          format: int32
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
        menuPath:
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
      description: Conversation metadata related to quality management.
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      properties: {}
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          type: string
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        issues:
          description: All the matched issues.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
          type: array
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
    GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult:
      type: object
      description: Tags and their corresponding results.
      properties:
        potentialScore:
          description: The potential score the tag applies to.
          format: double
          type: number
        score:
          description: The score the tag applies to.
          format: double
          type: number
        normalizedScore:
          format: double
          description: The normalized score the tag applies to.
          type: number
        tag:
          description: The tag the score applies to.
          type: string
      id: GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      type: object
      properties:
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadata:
      properties:
        downloadStats:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats
          description: Output only. Statistics for BulkDownloadFeedbackLabels operation.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during ingest operation that might cause the
            operation output to be incomplete.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        request:
          readOnly: true
          description: Output only. The original request for download.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
      description: Metadata for the BulkDownloadFeedbackLabel endpoint.
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsMetadata:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsMetadata
      description: The metadata from querying metrics.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      properties:
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
        correctnessLevel:
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      type: object
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SilenceData
      properties: {}
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1Entity:
      type: object
      id: GoogleCloudContactcenterinsightsV1Entity
      properties:
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        salience:
          type: number
          format: float
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
        displayName:
          type: string
          description: The representative name for the entity.
        metadata:
          additionalProperties:
            type: string
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          type: object
        type:
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
          description: Information about the issue's assignment.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      type: object
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      description: Agent Assist Smart Reply data.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          type: number
          format: double
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      type: object
      description: A message representing the transcript of a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      properties:
        transcriptSegments:
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          type: string
        kmsKey:
          type: string
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
        parent:
          type: string
          description: Required. The parent resource to export data from.
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        request:
          readOnly: true
          description: Output only. The original request for ingest.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
          readOnly: true
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      description: The request to create an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
        parent:
          description: Required. The parent resource of the issue model.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      properties:
        languageCode:
          type: string
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
        dialogflowSegmentMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
          description: CCAI metadata relating to the current transcript segment.
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        words:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
          description: >-
            A list of the word-specific information for each word in the
            segment.
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant
          description: The participant of this segment.
        channelTag:
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
          format: int32
        text:
          description: The text of this segment.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        messageTime:
          format: google-datetime
          type: string
          description: The time that the message occurred, if provided.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      description: Default configuration when creating Analyses in Insights.
      properties:
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        runtimeIntegrationAnalysisPercentage:
          description: >-
            Percentage of conversations created using Dialogflow runtime
            integration to analyze automatically, between [0, 100].
          format: double
          type: number
        uploadConversationAnalysisPercentage:
          type: number
          description: >-
            Percentage of conversations created using the UploadConversation
            endpoint to analyze automatically, between [0, 100].
          format: double
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      type: object
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      type: object
      description: The response to list analyses.
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          type: array
          description: The analyses that match the request.
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      description: Agent Assist Smart Compose suggestion data.
      properties:
        suggestion:
          description: The content of the suggestion.
          type: string
        metadata:
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
          additionalProperties:
            type: string
        confidenceScore:
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
          format: double
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      properties:
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        customerChannel:
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
        agentChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
      type: object
      description: Configuration that applies to all conversations.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      type: object
      properties:
        intentUniqueId:
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource:
      description: >-
        A scorecard result may have multiple sets of scores from varying
        sources, one of which becomes the "main" answer above. A ScoreSource
        represents each individual set of scores.
      type: object
      properties:
        score:
          format: double
          description: The overall numerical score of the result.
          type: number
        normalizedScore:
          type: number
          format: double
          description: >-
            The normalized score, which is the score divided by the potential
            score.
        sourceType:
          type: string
          description: What created the score.
          enumDescriptions:
            - Source type is unspecified.
            - Score is derived only from system-generated answers.
            - >-
              Score is derived from both system-generated answers, and includes
              any manual edits if they exist.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED_ONLY
            - INCLUDES_MANUAL_EDITS
        qaTagResults:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
          type: array
          description: Collection of tags and their scores.
        potentialScore:
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
          format: double
          type: number
      id: GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource
    GoogleCloudContactcenterinsightsV1GcsSource:
      type: object
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      properties:
        transcriptUri:
          type: string
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
    GoogleCloudContactcenterinsightsV1ConversationLevelSilence:
      properties:
        silenceDuration:
          description: Amount of time calculated to be in silence.
          type: string
          format: google-duration
        silencePercentage:
          format: float
          type: number
          description: Percentage of the total conversation spent in silence.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSilence
      type: object
      description: Conversation-level silence data.
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse:
      type: object
      properties: {}
      description: The response for a bulk delete conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        dialogflowConversation:
          readOnly: true
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
      description: A Dialogflow source of conversation data.
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      properties:
        currentStats:
          description: >-
            The latest label statistics for the queried issue model. Includes
            results on both training data and data labeled after deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      description: Response of querying an issue model's statistics.
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      type: object
      description: The phrase matcher resource.
      properties:
        phraseMatchRuleGroups:
          type: array
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
        type:
          type: string
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase matcher.
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The most recent time at which the phrase matcher was
            updated.
        versionTag:
          description: >-
            The customized version tag to use for the phrase matcher. If not
            specified, it will default to `revision_id`.
          type: string
        name:
          type: string
          description: >-
            The resource name of the phrase matcher. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        revisionCreateTime:
          description: >-
            Output only. The timestamp of when the revision was created. It is
            also the create time when a new matcher is added.
          format: google-datetime
          readOnly: true
          type: string
        roleMatch:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: >-
            The role whose utterances the phrase matcher should be matched
            against. If the role is ROLE_UNSPECIFIED it will be matched against
            any utterances in the transcript.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        revisionId:
          readOnly: true
          description: >-
            Output only. Immutable. The revision ID of the phrase matcher. A new
            revision is committed whenever the matcher is changed, except when
            it is activated or deactivated. A server generated random ID will be
            used. Example:
            locations/global/phraseMatchers/my-first-matcher@1234567
          type: string
        activationUpdateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. The most recent time at which the activation status was
            updated.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      type: object
      properties:
        issueModels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: The issue models that match the request.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      properties:
        confidenceScore:
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: float
          type: number
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        uri:
          description: Article URI.
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
          type: string
        title:
          type: string
          description: Article title.
    GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata:
      properties:
        qaQuestionId:
          type: string
          description: Optional. The QA question ID.
        questionBody:
          type: string
          description: Optional. The full body of the question.
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
      id: GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata
      type: object
      description: Metadata about the QA question dimension.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig:
      properties:
        scorecardList:
          description: A manual list of scorecards to score.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList
      description: Configuration for the QA feature.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig
    GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest:
      type: object
      description: The request to deploy a QaScorecardRevision
      properties: {}
      id: GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata:
      type: object
      description: Metadata used for export issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      type: object
      properties:
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
        deidentifyTemplate:
          type: string
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleIamV1TestIamPermissionsRequest:
      id: GoogleIamV1TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      description: Request message for `TestIamPermissions` method.
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      properties:
        auditLogConfigs:
          type: array
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
    GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse:
      properties:
        nextPageToken:
          type: string
          description: The next page token.
        feedbackLabels:
          type: array
          description: The feedback labels that match the request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      type: object
      id: GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      description: The response for listing feedback labels.
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource:
      type: object
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
      description: Google Cloud Storage Object URI to get the issue model file from.
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      properties:
        textSections:
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          additionalProperties:
            type: string
          type: object
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        metadata:
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          additionalProperties:
            type: string
          type: object
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidence:
          format: float
          description: The confidence score of the summarization.
          type: number
      description: Conversation summarization suggestion data.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      properties:
        successfulIngestCount:
          type: integer
          readOnly: true
          format: int32
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
        processedObjectCount:
          type: integer
          format: int32
          readOnly: true
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
        failedIngestCount:
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          format: int32
          type: integer
          readOnly: true
        duplicatesSkippedCount:
          type: integer
          format: int32
          readOnly: true
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      type: object
      description: Statistics for IngestConversations operation.
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination:
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
      description: Google Cloud Storage Object URI to save the issue model to.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      properties:
        createTime:
          description: Output only. The time at which this issue model was created.
          readOnly: true
          type: string
          format: google-datetime
        name:
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        displayName:
          description: The representative name for the issue model.
          type: string
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
        inputDataConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
          description: Configs for the input data that used to create the issue model.
        issueCount:
          format: int64
          description: Output only. Number of issues in this issue model.
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          description: Output only. State of the model.
        updateTime:
          type: string
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          format: google-datetime
          readOnly: true
        modelType:
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        languageCode:
          description: Language of the model.
          type: string
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata:
      type: object
      properties:
        agentDisplayName:
          description: Optional. The agent's name
          type: string
        agentId:
          description: Optional. A user-specified string representing the agent.
          type: string
        agentTeam:
          type: string
          description: Optional. A user-specified string representing the agent's team.
      id: GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata
      description: Metadata about the agent dimension.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      type: object
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      properties:
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        dialogflowParticipant:
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          description: The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        userId:
          description: A user-specified ID representing the participant.
          type: string
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
    GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel:
      properties:
        qaAnswerLabel:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
          description: QaAnswer label.
        label:
          description: String label.
          type: string
        labeledResource:
          description: Resource name of the resource to be labeled.
          type: string
        name:
          description: >-
            Immutable. Resource name of the FeedbackLabel. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label}
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Update time of the label.
          readOnly: true
        createTime:
          description: Output only. Create time of the label.
          readOnly: true
          format: google-datetime
          type: string
      description: Represents a conversation, resource, and label provided by the user.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      properties:
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        qaConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig
          description: Configuration for the QA annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
        phraseMatchers:
          items:
            type: string
          type: array
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        issueModels:
          type: array
          items:
            type: string
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runQaAnnotator:
          type: boolean
          description: Whether to run the QA annotator.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue:
      type: object
      description: >-
        Message for holding the value of the answer. QaQuestion.AnswerChoice
        defines the possible answer values for a question.
      id: GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
      properties:
        normalizedScore:
          readOnly: true
          description: >-
            Output only. Normalized score of the questions. Calculated as score
            / potential_score iff potential_score != 0 else 0
          type: number
          format: double
        score:
          description: Output only. Numerical score of the answer.
          readOnly: true
          type: number
          format: double
        strValue:
          description: String value.
          type: string
        boolValue:
          description: Boolean value.
          type: boolean
        key:
          type: string
          description: >-
            A short string used as an identifier. Matches the value used in
            QaQuestion.AnswerChoice.key.
        potentialScore:
          format: double
          type: number
          description: Output only. The maximum potential score of the question.
          readOnly: true
        naValue:
          type: boolean
          description: A value of "Not Applicable (N/A)".
        numValue:
          description: Numerical value.
          type: number
          format: double
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata
      description: >-
        Metadata about the QA question-answer dimension. This is useful for
        showing the answer distribution for questions for a given scorecard.
      properties:
        qaScorecardId:
          type: string
          description: Optional. The QA scorecard ID.
        answerValue:
          description: Optional. The full body of the question.
          type: string
        questionBody:
          type: string
          description: Optional. The full body of the question.
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      properties:
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: double
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      description: Agent Assist Smart Reply data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult:
      description: Tags and their corresponding results.
      type: object
      properties:
        score:
          type: number
          description: The score the tag applies to.
          format: double
        potentialScore:
          description: The potential score the tag applies to.
          format: double
          type: number
        tag:
          type: string
          description: The tag the score applies to.
        normalizedScore:
          format: double
          type: number
          description: The normalized score the tag applies to.
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      description: Response from export issue model
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice:
      properties:
        total:
          description: >-
            The total metric value. The interval of this data point is [starting
            create time, ending create time) from the request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
        timeSeries:
          description: >-
            A time series of metric values. This is only populated if the
            request specifies a time granularity other than NONE.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries
        dimensions:
          description: A unique combination of dimensions that this slice represents.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Dimension
      description: >-
        A slice contains a total and (if the request specified a time
        granularity) a time series of metric values. Each slice contains a
        unique combination of the cardinality of dimensions from the request.
        For example, if the request specifies a single ISSUE dimension and it
        has a cardinality of 2 (i.e. the data used to compute the metrics has 2
        issues in total), the response will have 2 slices: * Slice 1 ->
        dimensions=[Issue 1] * Slice 2 -> dimensions=[Issue 2]
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries:
      properties:
        dataPoints:
          type: array
          description: The data points that make up the time series .
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries
      description: A time series of metric values.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      type: object
      description: The request to deploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        dialogflowIntentId:
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: string
        confidence:
          type: number
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          format: float
      type: object
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList
      properties:
        qaScorecardRevisions:
          type: array
          description: List of QaScorecardRevisions.
          items:
            type: string
      type: object
      description: Container for a list of scorecards.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      description: The request to create an issue model.
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
          description: Required. The issue model to create.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore:
      type: object
      properties:
        averageTagNormalizedScore:
          type: number
          description: Average tag normalized score per tag.
          format: double
        tag:
          type: string
          description: Tag name.
      description: Average QA normalized score for the tag.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
    GoogleCloudContactcenterinsightsV1Analysis:
      properties:
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        createTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          type: string
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        analysisResult:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
        requestTime:
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          type: string
      id: GoogleCloudContactcenterinsightsV1Analysis
      description: The analysis resource.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      properties:
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
        successfulAnalysisCount:
          type: integer
          format: int32
          description: Count of successful analyses.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      properties:
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        conversation:
          readOnly: true
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          type: array
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      type: object
      description: Metadata for an export insights operation.
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries:
      type: object
      description: A time series of metric values.
      properties:
        dataPoints:
          description: The data points that make up the time series .
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
          type: array
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
        metadataBucketUri:
          type: string
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          type: array
          items:
            type: string
        bucketObjectType:
          description: Optional. Specifies the type of the objects in `bucket_uri`.
          type: string
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
      description: Configuration for Cloud Storage bucket sources.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
    GoogleCloudContactcenterinsightsV1View:
      id: GoogleCloudContactcenterinsightsV1View
      type: object
      description: The View resource.
      properties:
        value:
          description: String with specific view properties, must be non-empty.
          type: string
        name:
          type: string
          description: >-
            Immutable. The resource name of the view. Format:
            projects/{project}/locations/{location}/views/{view}
        displayName:
          description: The human-readable display name of the view.
          type: string
        createTime:
          description: Output only. The time at which this view was created.
          type: string
          readOnly: true
          format: google-datetime
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the view was updated.
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      description: The conversation source, which is a combination of transcript and audio.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
        endTime:
          description: The time at which the analysis ended.
          format: google-datetime
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      properties:
        ttl:
          type: string
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          format: google-duration
        latestAnalysis:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis
          readOnly: true
          description: Output only. The conversation's latest analysis, if one exists.
        turnCount:
          format: int32
          type: integer
          description: Output only. The number of turns in the conversation.
          readOnly: true
        createTime:
          description: Output only. The time at which the conversation was created.
          type: string
          readOnly: true
          format: google-datetime
        agentId:
          type: string
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        metadataJson:
          description: >-
            Input only. JSON metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insight's supported formats.
          type: string
        dataSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
          description: The source of the audio and transcription for the conversation.
        latestSummary:
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Output only. Latest summary of the conversation.
        duration:
          readOnly: true
          format: google-duration
          description: Output only. The duration of the conversation.
          type: string
        runtimeAnnotations:
          readOnly: true
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
          type: array
        callMetadata:
          description: Call-specific metadata.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
        dialogflowIntents:
          readOnly: true
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          format: google-datetime
          type: string
          readOnly: true
        labels:
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          additionalProperties:
            type: string
          type: object
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
        expireTime:
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          format: google-datetime
          type: string
        transcript:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
          description: Output only. The conversation transcript.
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      properties:
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Sentiment expressed for this mention of the entity.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure
      type: object
      properties:
        averageQaQuestionNormalizedScore:
          description: >-
            Average QA normalized score averaged for questions averaged across
            all revisions of the parent scorecard. Will be only populated if the
            request specifies a dimension of QA_QUESTION_ID.
          type: number
          format: double
        averageCustomerSatisfactionRating:
          type: number
          format: double
          description: The average customer satisfaction rating.
        averageTurnCount:
          format: float
          type: number
          description: The average turn count.
        averageSilencePercentage:
          description: The average silence percentage.
          type: number
          format: float
        averageAgentSentimentScore:
          description: The average agent's sentiment score.
          format: float
          type: number
        conversationCount:
          type: integer
          format: int32
          description: The conversation count.
        averageDuration:
          description: The average duration.
          format: google-duration
          type: string
        averageQaNormalizedScore:
          format: double
          description: >-
            Average QA normalized score. Will exclude 0's in average
            calculation.
          type: number
        averageClientSentimentScore:
          description: The average client's sentiment score.
          type: number
          format: float
        qaTagScores:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
          type: array
          description: Average QA normalized score for all the tags.
      description: The measure related to conversations.
    GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      description: Metadata used for import issue model.
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      properties:
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          format: float
          type: number
        filter:
          type: string
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      type: object
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      properties:
        conversationId:
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
          type: string
        conversation:
          description: Required. The conversation resource to create.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        speechConfig:
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      type: object
      properties:
        endTime:
          format: google-datetime
          description: The time at which the analysis ended.
          type: string
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        issueModels:
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
          items:
            type: string
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
          items:
            type: string
        summarizationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
          description: Configuration for the summarization annotator.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        qaConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig
          description: Configuration for the QA annotator.
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runIntentAnnotator:
          type: boolean
          description: Whether to run the intent annotator.
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runQaAnnotator:
          type: boolean
          description: Whether to run the QA annotator.
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      id: GoogleCloudContactcenterinsightsV1Intent
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
        id:
          type: string
          description: The unique identifier of the intent.
    GoogleCloudContactcenterinsightsV1Conversation:
      description: The conversation resource.
      properties:
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata
          description: Call-specific metadata.
        qualityMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
          description: Conversation metadata related to quality management.
        transcript:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript
          readOnly: true
          description: Output only. The conversation transcript.
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        createTime:
          format: google-datetime
          description: Output only. The time at which the conversation was created.
          type: string
          readOnly: true
        updateTime:
          readOnly: true
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          type: string
          format: google-datetime
        runtimeAnnotations:
          type: array
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          readOnly: true
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
        dialogflowIntents:
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          readOnly: true
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent
          type: object
        ttl:
          format: google-duration
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
        name:
          type: string
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
        metadataJson:
          type: string
          description: >-
            Input only. JSON metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insight's supported formats.
        expireTime:
          type: string
          format: google-datetime
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        duration:
          readOnly: true
          format: google-duration
          description: Output only. The duration of the conversation.
          type: string
        turnCount:
          type: integer
          readOnly: true
          format: int32
          description: Output only. The number of turns in the conversation.
        agentId:
          type: string
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
        latestSummary:
          readOnly: true
          description: Output only. Latest summary of the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource
        startTime:
          type: string
          format: google-datetime
          description: The time at which the conversation started.
      type: object
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint:
      properties:
        conversationMeasure:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure
          description: The measure related to conversations.
        interval:
          $ref: '#/components/schemas/GoogleTypeInterval'
          description: >-
            The interval that this data point represents. * If this is the total
            data point, the interval is [starting create time, ending create
            time) from the request. * If this a data point from the time series,
            the interval is [time, time + time granularity from the request).
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
      description: A data point contains the metric values mapped to an interval.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      properties:
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
        endBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
          description: Dialogflow interaction data.
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        answerFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
          description: The feedback that the customer has about the answer in `data`.
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        faqAnswer:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
          description: Agent Assist FAQ answer data.
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        annotationId:
          type: string
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      type: object
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      description: The request to delete an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1QaQuestion:
      id: GoogleCloudContactcenterinsightsV1QaQuestion
      type: object
      properties:
        abbreviation:
          type: string
          description: >-
            Short, descriptive string, used in the UI where it's not practical
            to display the full question body. E.g., "Greeting".
        metrics:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionMetrics
          description: >-
            Metrics of the underlying tuned LLM over a holdout/test set while
            fine tuning the underlying LLM for the given question. This field
            will only be populated if and only if the question is part of a
            scorecard revision that has been tuned.
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time at which this question was created.
          readOnly: true
        order:
          type: integer
          description: >-
            Defines the order of the question within its parent scorecard
            revision.
          format: int32
        answerChoices:
          description: >-
            A list of valid answers to the question, which the LLM must choose
            from.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice
        tuningMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata
          description: >-
            Metadata about the tuning operation for the question.This field will
            only be populated if and only if the question is part of a scorecard
            revision that has been tuned.
        name:
          type: string
          description: >-
            Identifier. The resource name of the question. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}/qaQuestions/{qa_question}
        tags:
          description: >-
            User-defined list of arbitrary tags for the question. Used for
            grouping/organization and for weighting the score of each question.
          type: array
          items:
            type: string
        updateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time at which the question was updated.
          format: google-datetime
        questionBody:
          type: string
          description: Question text. E.g., "Did the agent greet the customer?"
        answerInstructions:
          description: Instructions describing how to determine the answer.
          type: string
      description: A single question to be scored by the Insights QA feature.
    GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue:
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
      properties:
        strValue:
          type: string
          description: String value.
        numValue:
          type: number
          format: double
          description: Numerical value.
        normalizedScore:
          readOnly: true
          description: >-
            Output only. Normalized score of the questions. Calculated as score
            / potential_score iff potential_score != 0 else 0
          format: double
          type: number
        boolValue:
          type: boolean
          description: Boolean value.
        score:
          description: Output only. Numerical score of the answer.
          type: number
          format: double
          readOnly: true
        potentialScore:
          description: Output only. The maximum potential score of the question.
          readOnly: true
          format: double
          type: number
        key:
          type: string
          description: >-
            A short string used as an identifier. Matches the value used in
            QaQuestion.AnswerChoice.key.
        naValue:
          type: boolean
          description: A value of "Not Applicable (N/A)".
      description: >-
        Message for holding the value of the answer. QaQuestion.AnswerChoice
        defines the possible answer values for a question.
      type: object
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats:
      description: Statistics for BulkDownloadFeedbackLabels operation.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats
      properties:
        totalFilesWritten:
          type: integer
          format: int32
          description: Total number of files written to the provided Cloud Storage bucket.
        successfulDownloadCount:
          type: integer
          description: >-
            The number of new feedback labels downloaded during this operation.
            Different from "processed" because some labels might not be
            downloaded because an error.
          format: int32
        processedObjectCount:
          type: integer
          format: int32
          description: The number of objects processed during the download operation.
        fileNames:
          readOnly: true
          description: Output only. Full name of the files written to Cloud storage.
          type: array
          items:
            type: string
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    encryption_spec:
      id: google.contactcenterinsights.encryption_spec
      name: encryption_spec
      title: Encryption_spec
      methods:
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_encryption_spec:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_spec/methods/get_encryption_spec
        insert: []
        update: []
        replace: []
        delete: []
    feedback_labels:
      id: google.contactcenterinsights.feedback_labels
      name: feedback_labels
      title: Feedback_labels
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.feedbackLabels
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/get'
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/bulk_delete'
    analysis_rules:
      id: google.contactcenterinsights.analysis_rules
      name: analysis_rules
      title: Analysis_rules
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analysisRules
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    revisions:
      id: google.contactcenterinsights.revisions
      name: revisions
      title: Revisions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaScorecardRevisions
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tune_qa_scorecard_revision:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:tuneQaScorecardRevision/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/delete'
    qa_questions:
      id: google.contactcenterinsights.qa_questions
      name: qa_questions
      title: Qa_questions
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaQuestions
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/get'
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/delete'
    qa_scorecards:
      id: google.contactcenterinsights.qa_scorecards
      name: qa_scorecards
      title: Qa_scorecards
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaScorecards
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/get'
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    authorized_views_iam_policies:
      id: google.contactcenterinsights.authorized_views_iam_policies
      name: authorized_views_iam_policies
      title: Authorized_views_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/set_iam_policy
        delete: []
    authorized_view:
      id: google.contactcenterinsights.authorized_view
      name: authorized_view
      title: Authorized_view
      methods:
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedView~1{authorizedViewId}:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_metrics:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSet~1{authorizedViewSetId}~1authorizedView~1{authorizedViewId}:queryMetrics/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/settings/methods/update_settings'
        replace: []
        delete: []
    all_feedback_labels:
      id: google.contactcenterinsights.all_feedback_labels
      name: all_feedback_labels
      title: All_feedback_labels
      methods:
        list_all_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:listAllFeedbackLabels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.feedbackLabels
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/all_feedback_labels/methods/list_all_feedback_labels
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.contactcenterinsights.locations
      name: locations
      title: Locations
      methods:
        bulk_download_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:bulkDownloadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_metrics:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:queryMetrics/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_upload_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:bulkUploadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:initialize:
    parameters: *ref_1
    post:
      description: >-
        Initializes a location-level encryption key specification. An error will
        result if the location has resources already created before the
        initialization. After the encryption specification is initialized at a
        location, it is immutable and all newly created resources under the
        location will be encrypted with the existing specification.
      operationId: contactcenterinsights.projects.locations.encryptionSpec.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/feedbackLabels/{feedbackLabelsId}:
    parameters: *ref_1
    get:
      description: Get feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    patch:
      description: Update feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/feedbackLabels:
    parameters: *ref_1
    get:
      description: List feedback labels.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Create feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: feedbackLabelId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a conversation. Note that this method does not support audio
        transcription or redaction. Use `conversations.upload` instead.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/analysisRules/{analysisRulesId}:
    parameters: *ref_1
    patch:
      description: Updates a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
    get:
      description: Get a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/analysisRules:
    parameters: *ref_1
    post:
      description: Creates a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analysis rules.
      operationId: contactcenterinsights.projects.locations.analysisRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions:
    parameters: *ref_1
    get:
      description: Lists all revisions under the parent QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: qaScorecardRevisionId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:deploy:
    parameters: *ref_1
    post:
      description: Deploy a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:tuneQaScorecardRevision:
    parameters: *ref_1
    post:
      description: Fine tune one or more QaModels.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.tuneQaScorecardRevision
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:
    parameters: *ref_1
    get:
      description: Gets a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:undeploy:
    parameters: *ref_1
    post:
      description: Undeploy a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}/qaQuestions/{qaQuestionsId}:
    parameters: *ref_1
    patch:
      description: Updates a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
    get:
      description: Gets a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}/qaQuestions:
    parameters: *ref_1
    post:
      description: Create a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: qaQuestionId
          schema:
            type: string
    get:
      description: Lists QaQuestions.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}:
    parameters: *ref_1
    patch:
      description: Updates a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards:
    parameters: *ref_1
    post:
      description: Create a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: qaScorecardId
          schema:
            type: string
    get:
      description: Lists QaScorecards.
      operationId: contactcenterinsights.projects.locations.qaScorecards.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a conversation.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    get:
      description: Gets a conversation.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates a conversation.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a conversation. Note that this method does not support audio
        transcription or redaction. Use `conversations.upload` instead.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
    get:
      description: Lists conversations.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: speechConfig.speechRecognizer
          schema:
            type: string
        - in: query
          name: redactionConfig.inspectTemplate
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
        - in: query
          name: redactionConfig.deidentifyTemplate
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSet/{authorizedViewSetId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/feedbackLabels/{feedbackLabelsId}:
    parameters: *ref_1
    delete:
      description: Delete feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedViews.conversations.feedbackLabels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    get:
      description: Get feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedViews.conversations.feedbackLabels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    patch:
      description: Update feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedViews.conversations.feedbackLabels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSet/{authorizedViewSetId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/feedbackLabels:
    parameters: *ref_1
    get:
      description: List feedback labels.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedViews.conversations.feedbackLabels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Create feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedViews.conversations.feedbackLabels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: feedbackLabelId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSet/{authorizedViewSetId}/authorizedView/{authorizedViewId}:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedView.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSet/{authorizedViewSetId}/authorizedView/{authorizedViewId}:queryMetrics:
    parameters: *ref_1
    post:
      description: Query metrics.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSet.authorizedView.queryMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:import:
    parameters: *ref_1
    post:
      description: Imports an issue model from a Cloud Storage bucket.
      operationId: contactcenterinsights.projects.locations.issueModels.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: >-
        Deploys an issue model. Returns an error if a model is already deployed.
        An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an issue model. An issue model can not be used in analysis
        after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export:
    parameters: *ref_1
    post:
      description: Exports an issue model to the provided destination.
      operationId: contactcenterinsights.projects.locations.issueModels.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: >-
        contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:listAllFeedbackLabels:
    parameters: *ref_1
    get:
      description: List all feedback labels by project number.
      operationId: contactcenterinsights.projects.locations.listAllFeedbackLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:bulkDownloadFeedbackLabels:
    parameters: *ref_1
    post:
      description: Download feedback labels in bulk.
      operationId: contactcenterinsights.projects.locations.bulkDownloadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:queryMetrics:
    parameters: *ref_1
    post:
      description: Query metrics.
      operationId: contactcenterinsights.projects.locations.queryMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:bulkUploadFeedbackLabels:
    parameters: *ref_1
    post:
      description: Upload feedback labels in bulk.
      operationId: contactcenterinsights.projects.locations.bulkUploadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:
    parameters: *ref_1
    get:
      description: Gets location-level encryption key specification.
      operationId: contactcenterinsights.projects.locations.getEncryptionSpec
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
