openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230813'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      type: object
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
      description: Configuration for processing transcript objects.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      properties:
        correctnessLevel:
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
      type: object
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      properties:
        conversationCountTimeSeries:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
        smartHighlighterMatches:
          additionalProperties:
            type: integer
            format: int32
          type: object
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
        averageDuration:
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          format: google-duration
          type: string
        averageTurnCount:
          type: integer
          description: The average number of turns per conversation.
          format: int32
        customHighlighterMatches:
          type: object
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
        issueMatches:
          deprecated: true
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
          additionalProperties:
            type: integer
            format: int32
          type: object
        issueMatchesStats:
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        conversationCount:
          format: int32
          description: The total number of conversations.
          type: integer
      description: The response for calculating conversation statistics.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      description: A time series representing conversations over time.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      type: object
      properties:
        points:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          type: array
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
        intervalDuration:
          format: google-duration
          description: The duration of each interval.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        labeledConversationsCount:
          format: int64
          type: string
          description: Number of conversations attached to the issue at this point in time.
      type: object
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      type: object
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        partialErrors:
          type: array
          readOnly: true
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
        ingestConversationsStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      description: The metadata for an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      type: object
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      properties:
        id:
          description: The unique identifier of the intent.
          type: string
        displayName:
          type: string
          description: The human-readable name of the intent.
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      type: object
      description: Configuration that applies to all conversations.
      properties:
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      properties:
        type:
          description: The type of the entity mention.
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      description: The data for a silence annotation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: An annotation that was generated during the customer and agent interaction.
      properties:
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
          description: Dialogflow interaction data.
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        answerFeedback:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
          description: The feedback that the customer has about the answer in `data`.
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
        smartReply:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
          description: Agent Assist Smart Reply data.
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
      type: object
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      properties:
        wordIndex:
          type: integer
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
        transcriptIndex:
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
          type: integer
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      properties:
        magnitude:
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          format: float
          type: number
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      description: Request to upload a conversation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      properties:
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
    GoogleCloudContactcenterinsightsV1IssueModel:
      type: object
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
      properties:
        displayName:
          description: The representative name for the issue model.
          type: string
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this issue model was created.
          type: string
        modelType:
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        updateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
        state:
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
          description: Output only. State of the model.
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issueCount:
          readOnly: true
          description: Output only. Number of issues in this issue model.
          type: string
          format: int64
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          readOnly: true
        languageCode:
          description: Language of the model.
          type: string
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
          description: A list of sequential transcript segments that comprise the conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      properties:
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        type:
          description: The type of the entity mention.
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1Intent:
      id: GoogleCloudContactcenterinsightsV1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          description: The unique identifier of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      properties:
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
        query:
          type: string
          description: Required. The phrase to be matched.
        config:
          description: Provides additional information about the rule that specifies how to apply the rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        views:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          type: array
          description: The views that match the request.
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
      type: object
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      description: Response of querying an issue model's statistics.
      properties:
        currentStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
      properties:
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: float
          type: number
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        question:
          description: The corresponding FAQ question.
          type: string
        metadata:
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
          additionalProperties:
            type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      properties:
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          type: string
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      description: The metadata for an UploadConversation operation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      type: object
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        appliedRedactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          readOnly: true
          description: Output only. The redaction config applied to the uploaded conversation.
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          description: Output only. The original request.
          readOnly: true
        analysisOperation:
          type: string
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          readOnly: true
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        dialogflowConversation:
          readOnly: true
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      type: object
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          type: integer
          format: int32
        totalRequestedAnalysesCount:
          format: int32
          type: integer
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        partialErrors:
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
      description: Metadata for an export insights operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      type: object
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      description: The response to an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        endOffset:
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      description: The response of listing phrase matchers.
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        phraseMatchers:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
          type: array
          description: The phrase matchers that match the request.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      type: object
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          description: The issues that match the request.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
      type: object
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      properties:
        displayName:
          type: string
          description: The representative name for the entity.
        type:
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          description: The entity type.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        salience:
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
          format: float
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      type: object
      description: Metadata for deploying an issue model.
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      properties:
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          deprecated: true
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          format: int64
          readOnly: true
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          type: string
          readOnly: true
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      description: A Dialogflow source of conversation data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      description: The request to export insights.
      properties:
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
        writeDisposition:
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          type: string
        parent:
          description: Required. The parent resource to export data from.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      description: 'The conversation source, which is a combination of transcript and audio.'
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        intentMatchData:
          description: Data specifying an intent match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
          description: Data specifying an interruption.
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        channelTag:
          format: int32
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
      type: object
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      properties:
        successfulIngestCount:
          format: int32
          description: Output only. The number of new conversations added during this ingest operation.
          type: integer
          readOnly: true
        processedObjectCount:
          format: int32
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
          readOnly: true
        failedIngestCount:
          type: integer
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          format: int32
          readOnly: true
        duplicatesSkippedCount:
          type: integer
          readOnly: true
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          format: int32
      description: Statistics for IngestConversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: The feedback that the customer has about a certain answer in the conversation.
      properties:
        correctnessLevel:
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
          description: The correctness level of an answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      description: The response to an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      type: object
      description: The request to create an issue model.
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
        parent:
          description: Required. The parent resource of the issue model.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      properties:
        text:
          type: string
          description: The text of this segment.
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The sentiment for this transcript segment.
        channelTag:
          type: integer
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          format: int32
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        words:
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        messageTime:
          type: string
          description: 'The time that the message occurred, if provided.'
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      description: The response to list analyses.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: The analyses that match the request.
          type: array
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      type: object
      description: Aggregated statistics about an issue model.
      properties:
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        analyzedConversationsCount:
          type: string
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
        unclassifiedConversationsCount:
          format: int64
          type: string
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      type: object
      properties:
        conversationCount:
          description: The number of conversations created in this interval.
          type: integer
          format: int32
        startTime:
          type: string
          format: google-datetime
          description: The start time of this interval.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      type: object
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
    GoogleCloudContactcenterinsightsV1Entity:
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      type: object
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        metadata:
          additionalProperties:
            type: string
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          type: object
        salience:
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
          format: float
        displayName:
          type: string
          description: The representative name for the entity.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          description: The entity type.
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
      id: GoogleCloudContactcenterinsightsV1Entity
    GoogleProtobufEmpty:
      properties: {}
      type: object
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    GoogleLongrunningOperation:
      properties:
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      type: object
      id: GoogleLongrunningOperation
      description: This resource represents a long-running operation that is the result of a network API call.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      properties: {}
      description: The response to undeploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        smartReply:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
          description: Agent Assist Smart Reply data.
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        startBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
      description: An annotation that was generated during the customer and agent interaction.
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      type: object
      description: The request to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      type: object
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      type: object
      description: The response to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      properties:
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
        agentChannel:
          format: int32
          type: integer
          description: The audio channel that contains the agent.
      description: Call-specific metadata.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      type: object
      properties:
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
        sentiments:
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
        intents:
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
          type: object
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      description: Metadata for an export insights operation.
      properties:
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
          description: The original request for export.
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      description: The request to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
          description: The original request for deletion.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
      description: Metadata for deleting an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      description: The result of an analysis.
      properties:
        endTime:
          format: google-datetime
          type: string
          description: The time at which the analysis ended.
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      type: object
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        requestTime:
          type: string
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        createTime:
          readOnly: true
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          type: string
          format: google-datetime
        analysisResult:
          readOnly: true
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
      description: The analysis resource.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1Analysis:
      id: GoogleCloudContactcenterinsightsV1Analysis
      description: The analysis resource.
      type: object
      properties:
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        analysisResult:
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
        requestTime:
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
          format: google-datetime
        createTime:
          format: google-datetime
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          type: string
          readOnly: true
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
      description: The response for a bulk analyze conversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        conversations:
          description: The conversations that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          type: array
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
      description: The response of listing conversations.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      type: object
      description: Metadata for a create analysis operation.
      properties:
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      properties:
        deidentifyTemplate:
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
          type: string
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1SilenceData
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      type: object
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          format: float
          type: number
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
      type: object
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
          type: array
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      type: object
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          format: int32
          type: integer
          description: The channel of the audio that the data applies to.
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
      description: Metadata from Dialogflow relating to the current transcript segment.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      type: object
      description: Configuration information of a phrase match rule.
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      properties:
        text:
          type: string
          description: The summarization content that is concatenated into one string.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: A map that contains metadata about the summarization and the document from which it originates.
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        confidence:
          type: number
          format: float
          description: The confidence score of the summarization.
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      description: Information about the issue.
      properties:
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
        score:
          type: number
          format: double
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
        issue:
          description: Resource name of the assigned issue.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      properties:
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      type: object
      properties: {}
      description: Response from import issue model
    GoogleCloudContactcenterinsightsV1SentimentData:
      type: object
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1SentimentData
      properties:
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
        magnitude:
          type: number
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          format: float
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      properties:
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        metadata:
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          additionalProperties:
            type: string
        uri:
          description: Article URI.
          type: string
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        title:
          type: string
          description: Article title.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      properties:
        textSections:
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
          type: object
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        metadata:
          description: A map that contains metadata about the summarization and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        confidence:
          format: float
          type: number
          description: The confidence score of the summarization.
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: All the matched issues.
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      properties:
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        question:
          type: string
          description: The corresponding FAQ question.
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidenceScore:
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
          type: number
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      description: Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      type: object
      properties:
        duplicatesSkippedCount:
          format: int32
          readOnly: true
          type: integer
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
        processedObjectCount:
          format: int32
          readOnly: true
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
        successfulIngestCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of new conversations added during this ingest operation.
        failedIngestCount:
          type: integer
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          format: int32
          readOnly: true
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      type: object
      properties:
        issueModels:
          description: The issue models that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          type: array
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
      type: object
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      description: The result of an analysis.
      type: object
      properties:
        endTime:
          format: google-datetime
          description: The time at which the analysis ended.
          type: string
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
    GoogleCloudContactcenterinsightsV1GcsSource:
      description: A Cloud Storage source of conversation data.
      properties:
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      type: object
      id: GoogleCloudContactcenterinsightsV1GcsSource
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      description: Default configuration when creating Analyses in Insights.
      type: object
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        uploadConversationAnalysisPercentage:
          format: double
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
          type: number
        runtimeIntegrationAnalysisPercentage:
          format: double
          type: number
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      type: object
      description: The call participant speaking for a given utterance.
      properties:
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        role:
          description: The role of the participant.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        userId:
          type: string
          description: A user-specified ID representing the participant.
        dialogflowParticipant:
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      type: object
      properties:
        analysisPercentage:
          format: float
          type: number
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
    GoogleCloudContactcenterinsightsV1View:
      id: GoogleCloudContactcenterinsightsV1View
      properties:
        name:
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
          type: string
        displayName:
          description: The human-readable display name of the view.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
        createTime:
          type: string
          description: Output only. The time at which this view was created.
          format: google-datetime
          readOnly: true
        value:
          description: 'String with specific view properties, must be non-empty.'
          type: string
      description: The View resource.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
      description: A BigQuery Table Reference.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      description: The conversation resource.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      properties:
        runtimeAnnotations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
          type: array
          description: Output only. The annotations that were generated during the customer and agent interaction.
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          type: object
          additionalProperties:
            type: string
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          description: Output only. The conversation transcript.
          readOnly: true
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
        ttl:
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
        startTime:
          type: string
          format: google-datetime
          description: The time at which the conversation started.
        turnCount:
          description: Output only. The number of turns in the conversation.
          format: int32
          readOnly: true
          type: integer
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        latestSummary:
          readOnly: true
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
        medium:
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        dialogflowIntents:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          readOnly: true
          type: object
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time at which the conversation was created.
          format: google-datetime
        duration:
          format: google-duration
          readOnly: true
          description: Output only. The duration of the conversation.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      properties:
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        issues:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
          type: array
          description: All the matched issues.
      description: Issue Modeling result on a conversation.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
      description: Metadata from Dialogflow relating to the current transcript segment.
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      type: object
      description: Response from export issue model
      properties: {}
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      properties:
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          items:
            type: string
          type: array
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
    GoogleCloudContactcenterinsightsV1Settings:
      description: The settings resource.
      properties:
        redactionConfig:
          description: Default DLP redaction resources to be applied while ingesting conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
        conversationTtl:
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          type: string
          format: google-duration
        updateTime:
          description: Output only. The time at which the settings were last updated.
          format: google-datetime
          type: string
          readOnly: true
        pubsubNotificationSettings:
          type: object
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
        name:
          type: string
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
        languageCode:
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time at which the settings was created.
          format: google-datetime
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1Settings
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
        transcript:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          description: Output only. The conversation transcript.
          readOnly: true
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
        dialogflowIntents:
          readOnly: true
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
        turnCount:
          readOnly: true
          format: int32
          description: Output only. The number of turns in the conversation.
          type: integer
        expireTime:
          type: string
          format: google-datetime
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
          format: google-datetime
          type: string
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        latestSummary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
          readOnly: true
        labels:
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          type: object
          additionalProperties:
            type: string
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        ttl:
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          format: google-duration
          type: string
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        duration:
          type: string
          readOnly: true
          description: Output only. The duration of the conversation.
          format: google-duration
        createTime:
          description: Output only. The time at which the conversation was created.
          type: string
          format: google-datetime
          readOnly: true
        runtimeAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          readOnly: true
          description: Output only. The annotations that were generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      properties:
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
        totalRequestedAnalysesCount:
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
          format: int32
        failedAnalysesCount:
          type: integer
          format: int32
          description: The number of requested analyses that have failed so far.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          type: integer
          format: int32
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      description: Response from export issue model
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      properties:
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
      properties:
        updateTime:
          format: google-datetime
          description: Output only. The most recent time at which the issue model was updated.
          type: string
          readOnly: true
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
          readOnly: true
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
          description: Type of the model.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time at which this issue model was created.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        state:
          description: Output only. State of the model.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          readOnly: true
        issueCount:
          description: Output only. Number of issues in this issue model.
          type: string
          readOnly: true
          format: int64
        displayName:
          description: The representative name for the issue model.
          type: string
        languageCode:
          description: Language of the model.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
      description: The request to create an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      properties:
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
        confidence:
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
          description: A list of the word-specific information for each word in the segment.
        messageTime:
          description: 'The time that the message occurred, if provided.'
          format: google-datetime
          type: string
        channelTag:
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          format: int32
          type: integer
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        text:
          type: string
          description: The text of this segment.
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      type: object
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      description: Exact match configuration.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      type: object
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      properties:
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
        summarizationModel:
          description: Default summarization model to be used.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
    GoogleCloudContactcenterinsightsV1Issue:
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time at which this issue was created.
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time that this issue was updated.
          type: string
        sampleUtterances:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. Resource names of the sample representative utterances that match to this issue.
        displayName:
          description: The representative name for the issue.
          type: string
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
      id: GoogleCloudContactcenterinsightsV1Issue
      description: The issue resource.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      description: The response to deploy an issue model.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      properties:
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          type: array
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
        phraseMatchers:
          type: object
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
        intents:
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          type: object
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
          type: object
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      description: Call-specific metadata.
      properties:
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1HoldData:
      properties: {}
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      type: object
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      description: 'The conversation source, which is a combination of transcript and audio.'
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      description: Response from import issue model
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      properties:
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          type: string
          format: google-duration
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        endOffset:
          type: string
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      properties:
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        gcsSource:
          description: A cloud storage bucket source.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
      type: object
      description: The request to ingest conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      properties:
        successfulAnalysisCount:
          type: integer
          description: Count of successful analyses.
          format: int32
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: double
        metadata:
          type: object
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      properties:
        phraseMatchers:
          items:
            type: string
          type: array
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runIssueModelAnnotator:
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
          type: boolean
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        issueModels:
          items:
            type: string
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
      description: Selector of all available annotators and phrase matchers to run.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      type: object
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      properties:
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        score:
          format: double
          type: number
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
        issue:
          description: Resource name of the assigned issue.
          type: string
      type: object
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      type: object
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      type: object
      properties:
        phraseMatchRules:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          description: A list of phrase match rules that are included in this group.
          type: array
        type:
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          description: Required. The type of this phrase match rule group.
          type: string
      description: A message representing a rule in the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        transcriptIndex:
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
        wordIndex:
          type: integer
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      type: object
      properties:
        conversation:
          type: string
          readOnly: true
          description: Output only. The Conversation that this Analysis Operation belongs to.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      type: object
      description: Configs for the input data used to create the issue model.
      properties:
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          deprecated: true
          type: string
        trainingConversationsCount:
          readOnly: true
          description: Output only. Number of conversations used in training. Output only.
          format: int64
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      type: object
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      properties:
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: Data specifying a phrase match.
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
          description: Data specifying an intent match.
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
          description: Data specifying an entity mention.
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
          description: Data specifying a hold.
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      properties:
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
        analyzedConversationsCount:
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
          format: int64
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      properties:
        roleMatch:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          type: string
        versionTag:
          type: string
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
        updateTime:
          description: Output only. The most recent time at which the phrase matcher was updated.
          format: google-datetime
          readOnly: true
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
          description: Required. The type of this phrase matcher.
          type: string
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        name:
          type: string
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
        active:
          description: Applies the phrase matcher only when it is active.
          type: boolean
        revisionCreateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
        revisionId:
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
          readOnly: true
          type: string
        activationUpdateTime:
          description: Output only. The most recent time at which the activation status was updated.
          type: string
          readOnly: true
          format: google-datetime
        phraseMatchRuleGroups:
          type: array
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      description: The phrase matcher resource.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      type: object
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        conversationId:
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
          type: string
        parent:
          description: Required. The parent resource of the conversation.
          type: string
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      description: Agent Assist Smart Reply data.
      type: object
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
    GoogleLongrunningListOperationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      type: object
      properties:
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      description: DLP resources used for redaction while ingesting conversations.
    GoogleRpcStatus:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
      type: object
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      type: object
      properties:
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        uri:
          type: string
          description: Article URI.
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        title:
          type: string
          description: Article title.
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      type: object
      description: Metadata for deploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      properties:
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      type: object
      description: The metadata for an UploadConversation operation.
      properties:
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
          readOnly: true
          description: Output only. The original request.
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          type: string
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      type: object
      properties:
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          type: string
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
