openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230803'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      properties:
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        totalRequestedAnalysesCount:
          type: integer
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      type: object
      properties:
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
        customerChannel:
          format: int32
          type: integer
          description: The audio channel that contains the customer.
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      type: object
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        issueModels:
          type: array
          items:
            type: string
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      properties:
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
        analysisPercentage:
          type: number
          format: float
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
      description: The request to analyze conversations in bulk.
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: An annotation that was generated during the customer and agent interaction.
      type: object
      properties:
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
        createTime:
          format: google-datetime
          type: string
          description: The time at which this annotation was created.
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
          description: Dialogflow interaction data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      properties:
        conversationModel:
          type: string
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
        metadata:
          description: A map that contains metadata about the summarization and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        confidence:
          format: float
          description: The confidence score of the summarization.
          type: number
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        textSections:
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
          type: object
      type: object
      description: Conversation summarization suggestion data.
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          readOnly: true
          type: string
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
      description: A Dialogflow source of conversation data.
    GoogleProtobufEmpty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: GoogleProtobufEmpty
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      properties:
        caseSensitive:
          type: boolean
          description: Whether to consider case sensitivity when performing an exact match.
      description: Exact match configuration.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          description: The time at which the analysis ended.
          format: google-datetime
          type: string
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
          type: array
      description: A message representing the transcript of a conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
          description: The original request for creation.
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        conversation:
          type: string
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        annotatorSelector:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
      description: Metadata for a create analysis operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      type: object
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
    GoogleCloudContactcenterinsightsV1InterruptionData:
      description: The data for an interruption annotation.
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
      properties:
        successfulAnalysisCount:
          type: integer
          description: Count of successful analyses.
          format: int32
        failedAnalysisCount:
          description: Count of failed analyses.
          format: int32
          type: integer
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      properties:
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
      type: object
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      properties:
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          description: The original request for undeployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      type: object
      properties:
        answerRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: A map that contains metadata about the summarization and the document from which it originates.
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        textSections:
          additionalProperties:
            type: string
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        confidence:
          type: number
          description: The confidence score of the summarization.
          format: float
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      properties:
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        issueModels:
          items:
            type: string
          type: array
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      properties:
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        displayName:
          type: string
          description: Display name of the issue.
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          format: int64
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      properties:
        trainingConversationsCount:
          readOnly: true
          type: string
          description: Output only. Number of conversations used in training. Output only.
          format: int64
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          deprecated: true
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      type: object
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      description: The request to deploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      properties:
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      properties:
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
        failedAnalysesCount:
          type: integer
          format: int32
          description: The number of requested analyses that have failed so far.
        totalRequestedAnalysesCount:
          type: integer
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          format: int32
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      type: object
      description: The metadata for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      properties:
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        reply:
          description: The content of the reply.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
      type: object
      description: Agent Assist Smart Reply data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      properties:
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
        confidenceScore:
          type: number
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        question:
          type: string
          description: The corresponding FAQ question.
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        metadata:
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
      properties:
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          format: int64
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which this issue model was created.
        languageCode:
          type: string
          description: Language of the model.
        updateTime:
          type: string
          description: Output only. The most recent time at which the issue model was updated.
          readOnly: true
          format: google-datetime
        displayName:
          type: string
          description: The representative name for the issue model.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          description: Type of the model.
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
        state:
          description: Output only. State of the model.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          format: double
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
      description: Dialogflow interaction data.
      type: object
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          description: Default summarization model to be used.
          type: string
        conversationProfile:
          type: string
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      description: The analysis resource.
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        requestTime:
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        analysisResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
        createTime:
          readOnly: true
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
      description: Metadata for an export insights operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1HoldData:
      properties: {}
      description: The data for a hold annotation.
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      description: The request to create an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      properties: {}
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      type: object
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      properties:
        dialogflowParticipant:
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        userId:
          type: string
          description: A user-specified ID representing the participant.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      properties:
        endOffset:
          type: string
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
        startOffset:
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      type: object
      description: The phrase matcher resource.
      properties:
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        updateTime:
          type: string
          description: Output only. The most recent time at which the phrase matcher was updated.
          format: google-datetime
          readOnly: true
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        revisionId:
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
          readOnly: true
          type: string
        phraseMatchRuleGroups:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
          description: A list of phase match rule groups that are included in this matcher.
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
          description: Required. The type of this phrase matcher.
          type: string
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        revisionCreateTime:
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
          readOnly: true
          type: string
          format: google-datetime
        versionTag:
          type: string
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
        active:
          description: Applies the phrase matcher only when it is active.
          type: boolean
        activationUpdateTime:
          format: google-datetime
          description: Output only. The most recent time at which the activation status was updated.
          readOnly: true
          type: string
        roleMatch:
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      type: object
      properties:
        points:
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          type: array
        intervalDuration:
          description: The duration of each interval.
          format: google-duration
          type: string
      description: A time series representing conversations over time.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      description: Configuration information of a phrase match rule.
      properties:
        exactMatchConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
          description: The configuration for the exact match rule.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      properties:
        failedIngestCount:
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          type: integer
          format: int32
        successfulIngestCount:
          description: Output only. The number of new conversations added during this ingest operation.
          readOnly: true
          type: integer
          format: int32
        duplicatesSkippedCount:
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          type: integer
          format: int32
          readOnly: true
        processedObjectCount:
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
          readOnly: true
          format: int32
      description: Statistics for IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1SilenceData:
      description: The data for a silence annotation.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1SilenceData
    GoogleRpcStatus:
      type: object
      properties:
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      properties:
        issues:
          type: array
          description: All the matched issues.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      properties:
        confidenceScore:
          type: number
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        uri:
          type: string
          description: Article URI.
        metadata:
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          additionalProperties:
            type: string
        title:
          description: Article title.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      type: object
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      properties:
        conversationCount:
          type: integer
          format: int32
          description: The total number of conversations.
        smartHighlighterMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
        issueMatchesStats:
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          type: object
        customHighlighterMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
        issueMatches:
          deprecated: true
          additionalProperties:
            format: int32
            type: integer
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
        averageTurnCount:
          type: integer
          format: int32
          description: The average number of turns per conversation.
        conversationCountTimeSeries:
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
        averageDuration:
          type: string
          format: google-duration
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
      description: The response for calculating conversation statistics.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      properties:
        confidence:
          type: number
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      properties:
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: Data specifying a phrase match.
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
          type: integer
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
        annotationStartBoundary:
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
          description: Data specifying an issue match.
        intentMatchData:
          description: Data specifying an intent match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
          description: Data specifying a hold.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      type: object
      description: Statistics for IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      properties:
        successfulIngestCount:
          type: integer
          description: Output only. The number of new conversations added during this ingest operation.
          format: int32
          readOnly: true
        processedObjectCount:
          readOnly: true
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
          format: int32
        duplicatesSkippedCount:
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          readOnly: true
          type: integer
          format: int32
        failedIngestCount:
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          type: integer
          format: int32
          readOnly: true
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          description: The views that match the request.
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      description: The request to delete an issue model.
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      type: object
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
      type: object
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        annotatorSelector:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      description: Configuration that applies to all conversations.
      type: object
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      type: object
      description: A piece of metadata that applies to a window of a call.
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      properties:
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        channelTag:
          format: int32
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          type: integer
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        interruptionData:
          description: Data specifying an interruption.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        annotationEndBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      description: The request to ingest conversations.
      properties:
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      type: object
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      type: object
      properties:
        currentStats:
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      properties:
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
          description: The participant of this segment.
        text:
          type: string
          description: The text of this segment.
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          description: A list of the word-specific information for each word in the segment.
          type: array
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        messageTime:
          type: string
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
        channelTag:
          type: integer
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          format: int32
        confidence:
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
          readOnly: true
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          type: array
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      properties:
        issues:
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
          type: array
      type: object
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      properties:
        unclassifiedConversationsCount:
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          format: int64
          type: string
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
        analyzedConversationsCount:
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
      type: object
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      properties:
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
      description: The request to ingest conversations.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      description: The response to an IngestConversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      properties: {}
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      type: object
      description: Agent Assist Smart Compose suggestion data.
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      properties:
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        confidenceScore:
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
          type: number
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      description: The response to list analyses.
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        analyses:
          type: array
          description: The analyses that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      type: object
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
        confidenceScore:
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
          format: float
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        question:
          type: string
          description: The corresponding FAQ question.
      description: Agent Assist frequently-asked-question answer data.
      type: object
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      properties:
        score:
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
        magnitude:
          type: number
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
      type: object
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          description: Default summarization model to be used.
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      properties:
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
      description: Metadata for deploying an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      properties:
        dataset:
          type: string
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
      description: A BigQuery Table Reference.
      type: object
    GoogleCloudContactcenterinsightsV1Analysis:
      properties:
        analysisResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        requestTime:
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          format: google-datetime
          type: string
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1Analysis
      description: The analysis resource.
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      type: object
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      properties:
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
          description: Required. The type of this phrase match rule group.
      type: object
      description: A message representing a rule in the phrase matcher.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      type: object
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        request:
          readOnly: true
          description: Output only. The original request for ingest.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
        ingestConversationsStats:
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      properties:
        metadata:
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          additionalProperties:
            type: string
          type: object
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        uri:
          description: Article URI.
          type: string
        title:
          description: Article title.
          type: string
        confidenceScore:
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: float
          type: number
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      description: The metadata for an UploadConversation operation.
      properties:
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          readOnly: true
        analysisOperation:
          readOnly: true
          type: string
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        request:
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          readOnly: true
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      type: object
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          type: string
          description: The human-readable name of the intent.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      properties:
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      properties:
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
        issueStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
        analyzedConversationsCount:
          type: string
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
    GoogleLongrunningOperation:
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      id: GoogleLongrunningOperation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      type: object
      properties:
        issueModels:
          type: array
          description: The issue models that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      properties:
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
      description: A BigQuery Table Reference.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      description: Call-specific metadata.
      properties:
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      properties: {}
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1Intent:
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          description: The unique identifier of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1Intent
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
          description: The original request for deletion.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
      description: Metadata for deleting an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      description: The result of an analysis.
      type: object
      properties:
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          description: The type of the entity mention.
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      properties:
        query:
          type: string
          description: Required. The phrase to be matched.
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
      type: object
      description: The data for a phrase match rule.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      description: Configuration for processing transcript objects.
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      properties:
        wordIndex:
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          type: integer
          format: int32
        transcriptIndex:
          type: integer
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      description: 'The conversation source, which is a combination of transcript and audio.'
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      properties:
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        parent:
          description: Required. The parent resource to export data from.
          type: string
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      properties:
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
      type: object
      description: One channel of conversation-level sentiment data.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      properties: {}
      description: The data for a silence annotation.
      type: object
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        reply:
          description: The content of the reply.
          type: string
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      type: object
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      type: object
      properties: {}
      description: Response for an export insights operation.
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      properties:
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
          type: object
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        salience:
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          format: float
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
      type: object
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        turnCount:
          readOnly: true
          type: integer
          description: Output only. The number of turns in the conversation.
          format: int32
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        dialogflowIntents:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          readOnly: true
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
        updateTime:
          type: string
          description: Output only. The most recent time at which the conversation was updated.
          format: google-datetime
          readOnly: true
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
        ttl:
          format: google-duration
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          type: string
        expireTime:
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          type: string
          format: google-datetime
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
        runtimeAnnotations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          description: Output only. The annotations that were generated during the customer and agent interaction.
        duration:
          format: google-duration
          description: Output only. The duration of the conversation.
          type: string
          readOnly: true
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        latestSummary:
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          readOnly: true
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which the conversation was created.
        transcript:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          description: Output only. The conversation transcript.
        medium:
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
      description: The conversation resource.
      type: object
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      description: The feedback that the customer has about a certain answer in the conversation.
      type: object
      properties:
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        correctnessLevel:
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          description: The correctness level of an answer.
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      description: A single interval in a time series.
      properties:
        startTime:
          type: string
          format: google-datetime
          description: The start time of this interval.
        conversationCount:
          description: The number of conversations created in this interval.
          type: integer
          format: int32
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        nextPageToken:
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
          type: string
        conversations:
          description: The conversations that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      type: object
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      properties:
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
        dialogflowConversation:
          readOnly: true
          type: string
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
      description: A Dialogflow source of conversation data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      type: object
      description: The request to undeploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1View:
      description: The View resource.
      type: object
      id: GoogleCloudContactcenterinsightsV1View
      properties:
        createTime:
          description: Output only. The time at which this view was created.
          type: string
          readOnly: true
          format: google-datetime
        value:
          type: string
          description: 'String with specific view properties, must be non-empty.'
        name:
          type: string
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
          format: google-datetime
          type: string
        displayName:
          description: The human-readable display name of the view.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      properties:
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        issues:
          type: array
          description: All the matched issues.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      properties:
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      properties: {}
      description: The response to an IngestConversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        startOffset:
          format: google-duration
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
        endOffset:
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          type: string
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
      type: object
      description: Word-level info for words in a transcript.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      properties:
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          deprecated: true
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        trainingConversationsCount:
          readOnly: true
          type: string
          format: int64
          description: Output only. Number of conversations used in training. Output only.
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
        parent:
          type: string
          description: Required. The parent resource of the issue model.
      description: The request to create an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      description: Default configuration when creating Analyses in Insights.
      type: object
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        runtimeIntegrationAnalysisPercentage:
          type: number
          format: double
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
        uploadConversationAnalysisPercentage:
          type: number
          format: double
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
    GoogleCloudContactcenterinsightsV1IssueModel:
      type: object
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1IssueModel
      properties:
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        displayName:
          type: string
          description: The representative name for the issue model.
        issueCount:
          format: int64
          readOnly: true
          description: Output only. Number of issues in this issue model.
          type: string
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The time at which this issue model was created.
          type: string
          format: google-datetime
        languageCode:
          description: Language of the model.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          type: string
          description: Output only. State of the model.
        modelType:
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          type: string
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      type: object
      properties:
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
        correctnessLevel:
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
          description: The correctness level of an answer.
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      description: 'The conversation source, which is a combination of transcript and audio.'
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
      type: object
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: An annotation that was generated during the customer and agent interaction.
      type: object
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
        createTime:
          description: The time at which this annotation was created.
          format: google-datetime
          type: string
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
    GoogleCloudContactcenterinsightsV1Issue:
      description: The issue resource.
      id: GoogleCloudContactcenterinsightsV1Issue
      properties:
        sampleUtterances:
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          type: array
          readOnly: true
          items:
            type: string
        displayName:
          type: string
          description: The representative name for the issue.
        createTime:
          type: string
          description: Output only. The time at which this issue was created.
          readOnly: true
          format: google-datetime
        updateTime:
          type: string
          description: Output only. The most recent time that this issue was updated.
          format: google-datetime
          readOnly: true
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      properties:
        transcriptSegments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      type: object
      properties:
        role:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          type: string
          deprecated: true
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      description: The call participant speaking for a given utterance.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      type: object
      description: The response for a bulk analyze conversations operation.
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
    GoogleCloudContactcenterinsightsV1Entity:
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      id: GoogleCloudContactcenterinsightsV1Entity
      type: object
      properties:
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        type:
          type: string
          description: The entity type.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
        displayName:
          description: The representative name for the entity.
          type: string
        salience:
          format: float
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          additionalProperties:
            type: string
          type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      type: object
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        wordIndex:
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          format: int32
        transcriptIndex:
          type: integer
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      type: object
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: double
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
          additionalProperties:
            type: string
        suggestion:
          type: string
          description: The content of the suggestion.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      properties:
        text:
          type: string
          description: The text of this segment.
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
        segmentParticipant:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
          description: The participant of this segment.
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The sentiment for this transcript segment.
        channelTag:
          type: integer
          format: int32
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
        messageTime:
          format: google-datetime
          type: string
          description: 'The time that the message occurred, if provided.'
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
          description: A list of the word-specific information for each word in the segment.
          type: array
        confidence:
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
          type: number
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      type: object
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        type:
          type: string
          description: The type of the entity mention.
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      type: object
      properties:
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      description: The metadata for an UploadConversation operation.
      properties:
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        analysisOperation:
          type: string
          readOnly: true
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
        request:
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
          readOnly: true
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        labeledConversationsCount:
          format: int64
          type: string
          description: Number of conversations attached to the issue at this point in time.
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        displayName:
          description: Display name of the issue.
          type: string
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      description: A Cloud Storage source of conversation data.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      properties:
        transcriptUri:
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
          type: string
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      description: DLP resources used for redaction while ingesting conversations.
      properties:
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      type: object
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
          type: string
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
          readOnly: true
          description: 'Output only. The conversation''s latest analysis, if one exists.'
        createTime:
          type: string
          description: Output only. The time at which the conversation was created.
          readOnly: true
          format: google-datetime
        labels:
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          additionalProperties:
            type: string
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        dialogflowIntents:
          readOnly: true
          type: object
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
        latestSummary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Output only. Latest summary of the conversation.
          readOnly: true
        transcript:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          description: Output only. The conversation transcript.
        ttl:
          format: google-duration
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          type: string
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
        turnCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of turns in the conversation.
        runtimeAnnotations:
          description: Output only. The annotations that were generated during the customer and agent interaction.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
          type: array
        duration:
          readOnly: true
          description: Output only. The duration of the conversation.
          type: string
          format: google-duration
        medium:
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          type: string
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        expireTime:
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
          format: google-datetime
          type: string
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      description: Call-specific metadata created during analysis.
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
          type: object
        sentiments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          description: All the matched intents in the call.
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
        annotations:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
          description: A list of call annotations that apply to this call.
          type: array
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      type: object
      description: The response to deploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      properties:
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        sentiments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
        annotations:
          description: A list of call annotations that apply to this call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
          type: array
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
      type: object
      description: Call-specific metadata created during analysis.
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
    GoogleCloudContactcenterinsightsV1SentimentData:
      properties:
        magnitude:
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          type: number
        score:
          format: float
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
      type: object
      id: GoogleCloudContactcenterinsightsV1SentimentData
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      type: object
      properties:
        score:
          format: double
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        issue:
          description: Resource name of the assigned issue.
          type: string
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      type: object
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
    GoogleCloudContactcenterinsightsV1Settings:
      description: The settings resource.
      id: GoogleCloudContactcenterinsightsV1Settings
      properties:
        languageCode:
          type: string
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
        pubsubNotificationSettings:
          additionalProperties:
            type: string
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          type: object
        conversationTtl:
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          format: google-duration
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time at which the settings were last updated.
          readOnly: true
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
          description: Default DLP redaction resources to be applied while ingesting conversations.
        name:
          type: string
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
        createTime:
          description: Output only. The time at which the settings was created.
          format: google-datetime
          readOnly: true
          type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      description: The request to analyze conversations in bulk.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        analysisPercentage:
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
          type: number
          format: float
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: *ref_1
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: exec
