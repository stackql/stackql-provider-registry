openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250825'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1Conversation:
      id: GoogleCloudContactcenterinsightsV1Conversation
      description: The conversation resource.
      type: object
      properties:
        callMetadata:
          description: Call-specific metadata.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata
        expireTime:
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          type: string
          format: google-datetime
        ttl:
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          type: string
          format: google-duration
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource
        createTime:
          description: Output only. The time at which the conversation was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: The time at which the conversation started.
          type: string
          format: google-datetime
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        agentId:
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
          type: string
        labels:
          description: >-
            A map for the user to specify any custom fields. A maximum of 100
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          type: object
          additionalProperties:
            type: string
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
        metadataJson:
          description: >-
            Input only. JSON metadata encoded as a string. This field is
            primarily used by Insights integrations with various telephony
            systems and must be in one of Insight's supported formats.
          type: string
        transcript:
          description: Output only. The conversation transcript.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript
        medium:
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        duration:
          description: Output only. The duration of the conversation.
          readOnly: true
          type: string
          format: google-duration
        turnCount:
          description: Output only. The number of turns in the conversation.
          readOnly: true
          type: integer
          format: int32
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        latestSummary:
          description: Output only. Latest summary of the conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
        runtimeAnnotations:
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
        dialogflowIntents:
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          readOnly: true
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      description: Call-specific metadata.
      type: object
      properties:
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      description: The conversation source, which is a combination of transcript and audio.
      type: object
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource
        metadataUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation metadata.
          type: string
    GoogleCloudContactcenterinsightsV1GcsSource:
      id: GoogleCloudContactcenterinsightsV1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        transcriptUri:
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
          type: string
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      description: A Dialogflow source of conversation data.
      type: object
      properties:
        dialogflowConversation:
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          readOnly: true
          type: string
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
      description: Conversation metadata related to quality management.
      type: object
      properties:
        customerSatisfactionRating:
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
          type: integer
          format: int32
        waitDuration:
          description: The amount of time the customer waited to connect with an agent.
          type: string
          format: google-duration
        menuPath:
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
          type: string
        agentInfo:
          description: Information about agents involved in the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
        feedbackLabels:
          description: Input only. The feedback labels associated with the conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
      description: Information about an agent involved in the conversation.
      type: object
      properties:
        agentId:
          description: A user-specified string representing the agent.
          type: string
        displayName:
          description: The agent's name.
          type: string
        team:
          description: >-
            A user-specified string representing the agent's team. Deprecated in
            favor of the `teams` field.
          deprecated: true
          type: string
        teams:
          description: User-specified strings representing the agent's teams.
          type: array
          items:
            type: string
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
        agentType:
          description: The agent type, e.g. HUMAN_AGENT.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        location:
          description: The agent's location.
          type: string
    GoogleCloudContactcenterinsightsV1FeedbackLabel:
      id: GoogleCloudContactcenterinsightsV1FeedbackLabel
      description: >-
        Represents a conversation, resource, and label provided by the user. Can
        take the form of a string label or a QaAnswer label. QaAnswer labels are
        used for Quality AI example conversations. String labels are used for
        Topic Modeling. AgentAssistSummary labels are used for Agent Assist
        Summarization.
      type: object
      properties:
        label:
          description: String label used for Topic Modeling.
          type: string
        qaAnswerLabel:
          description: QaAnswer label used for Quality AI example conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
        name:
          description: >-
            Immutable. Resource name of the FeedbackLabel. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label}
          type: string
        labeledResource:
          description: >-
            Name of the resource to be labeled. Supported resources are: *
            `projects/{project}/locations/{location}/qaScorecards/{scorecard}/revisions/{revision}/qaQuestions/{question}`
            *
            `projects/{project}/locations/{location}/issueModels/{issue_model}`
            *
            `projects/{project}/locations/{location}/generators/{generator_id}`
          type: string
        createTime:
          description: Output only. Create time of the label.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time of the label.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue:
      id: GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
      description: >-
        Message for holding the value of a QaAnswer. QaQuestion.AnswerChoice
        defines the possible answer values for a question.
      type: object
      properties:
        strValue:
          description: String value.
          type: string
        numValue:
          description: Numerical value.
          type: number
          format: double
        boolValue:
          description: Boolean value.
          type: boolean
        naValue:
          description: A value of "Not Applicable (N/A)". Should only ever be `true`.
          type: boolean
        skipValue:
          description: >-
            Output only. A value of "Skip". If provided, this field may only be
            set to `true`. If a question receives this answer, it will be
            excluded from any score calculations. This would mean that the
            question was not evaluated.
          readOnly: true
          type: boolean
        key:
          description: >-
            A short string used as an identifier. Matches the value used in
            QaQuestion.AnswerChoice.key.
          type: string
        score:
          description: Output only. Numerical score of the answer.
          readOnly: true
          type: number
          format: double
        potentialScore:
          description: Output only. The maximum potential score of the question.
          readOnly: true
          type: number
          format: double
        normalizedScore:
          description: >-
            Output only. Normalized score of the questions. Calculated as score
            / potential_score.
          readOnly: true
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
      properties:
        transcriptSegments:
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
      properties:
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        text:
          description: The text of this segment.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        words:
          description: >-
            A list of the word-specific information for each word in the
            segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        channelTag:
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
          format: int32
        segmentParticipant:
          description: The participant of this segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      type: object
      properties:
        startOffset:
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          type: string
          format: google-duration
        endOffset:
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
          type: string
          format: google-duration
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      description: The call participant speaking for a given utterance.
      type: object
      properties:
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        role:
          description: The role of the participant.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1SentimentData:
      id: GoogleCloudContactcenterinsightsV1SentimentData
      description: The data for a sentiment annotation.
      type: object
      properties:
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            absolute magnitude of sentiment regardless of score.
          type: number
          format: float
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1Analysis:
      id: GoogleCloudContactcenterinsightsV1Analysis
      description: The analysis resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        requestTime:
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
          format: google-datetime
        createTime:
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          readOnly: true
          type: string
          format: google-datetime
        analysisResult:
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
      type: object
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
      type: object
      properties:
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
        silence:
          description: Overall conversation-level silence during the call.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSilence
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult
        qaScorecardResults:
          description: Results of scoring QaScorecards.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResult
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
      properties:
        interruptionData:
          description: Data specifying an interruption.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        holdData:
          description: Data specifying a hold.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData
        intentMatchData:
          description: Data specifying an intent match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
        issueMatchData:
          description: Data specifying an issue match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          type: integer
          format: int32
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        annotationEndBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      description: The data for an interruption annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1SilenceData:
      id: GoogleCloudContactcenterinsightsV1SilenceData
      description: The data for a silence annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1HoldData:
      id: GoogleCloudContactcenterinsightsV1HoldData
      description: The data for a hold annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      type: object
      properties:
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
        type:
          description: The type of the entity mention.
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      type: object
      properties:
        intentUniqueId:
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      type: object
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      description: The data for an issue match annotation.
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      description: Information about the issue.
      type: object
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          type: number
          format: double
        displayName:
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analysis and immutable since then.
          type: string
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      type: object
      properties:
        wordIndex:
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
          format: int32
        transcriptIndex:
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1Entity:
      id: GoogleCloudContactcenterinsightsV1Entity
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      type: object
      properties:
        displayName:
          description: The representative name for the entity.
          type: string
        type:
          description: The entity type.
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        metadata:
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          type: object
          additionalProperties:
            type: string
        salience:
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
          type: number
          format: float
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
    GoogleCloudContactcenterinsightsV1ConversationLevelSilence:
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSilence
      description: Conversation-level silence data.
      type: object
      properties:
        silenceDuration:
          description: Amount of time calculated to be in silence.
          type: string
          format: google-duration
        silencePercentage:
          description: Percentage of the total conversation spent in silence.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1Intent:
      id: GoogleCloudContactcenterinsightsV1Intent
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      type: object
      properties:
        id:
          description: The unique identifier of the intent.
          type: string
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      description: Issue Modeling result on a conversation.
      type: object
      properties:
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1QaScorecardResult:
      id: GoogleCloudContactcenterinsightsV1QaScorecardResult
      description: >-
        The results of scoring a single conversation against a QaScorecard.
        Contains a collection of QaAnswers and aggregate score.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the scorecard result. Format:
            projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result}
          type: string
        qaScorecardRevision:
          description: The QaScorecardRevision scored by this result.
          type: string
        conversation:
          description: The conversation scored by this result.
          type: string
        createTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
          format: google-datetime
        agentId:
          description: ID of the agent that handled the conversation.
          type: string
        qaAnswers:
          description: Set of QaAnswers represented in the result.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswer'
        score:
          description: >-
            The overall numerical score of the result, incorporating any manual
            edits if they exist.
          type: number
          format: double
        potentialScore:
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
          type: number
          format: double
        normalizedScore:
          description: >-
            The normalized score, which is the score divided by the potential
            score. Any manual edits are included if they exist.
          type: number
          format: double
        qaTagResults:
          description: Collection of tags and their scores.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
        scoreSources:
          description: List of all individual score sets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource
    GoogleCloudContactcenterinsightsV1QaAnswer:
      id: GoogleCloudContactcenterinsightsV1QaAnswer
      description: An answer to a QaQuestion.
      type: object
      properties:
        qaQuestion:
          description: The QaQuestion answered by this answer.
          type: string
        conversation:
          description: The conversation the answer applies to.
          type: string
        questionBody:
          description: Question text. E.g., "Did the agent greet the customer?"
          type: string
        answerValue:
          description: The main answer value, incorporating any manual edits if they exist.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
        tags:
          description: >-
            User-defined list of arbitrary tags. Matches the value from
            QaScorecard.ScorecardQuestion.tags. Used for grouping/organization
            and for weighting the score of each answer.
          type: array
          items:
            type: string
        answerSources:
          description: List of all individual answers given to the question.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource
    GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource:
      id: GoogleCloudContactcenterinsightsV1QaAnswerAnswerSource
      description: >-
        A question may have multiple answers from varying sources, one of which
        becomes the "main" answer above. AnswerSource represents each individual
        answer.
      type: object
      properties:
        sourceType:
          description: What created the answer.
          type: string
          enumDescriptions:
            - Source type is unspecified.
            - Answer was system-generated; created during an Insights analysis.
            - Answer was created by a human via manual edit.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED
            - MANUAL_EDIT
        answerValue:
          description: The answer value from this source.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaAnswerAnswerValue
    GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult:
      id: GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
      description: Tags and their corresponding results.
      type: object
      properties:
        tag:
          description: The tag the score applies to.
          type: string
        score:
          description: The score the tag applies to.
          type: number
          format: double
        potentialScore:
          description: The potential score the tag applies to.
          type: number
          format: double
        normalizedScore:
          description: The normalized score the tag applies to.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource:
      id: GoogleCloudContactcenterinsightsV1QaScorecardResultScoreSource
      description: >-
        A scorecard result may have multiple sets of scores from varying
        sources, one of which becomes the "main" answer above. A ScoreSource
        represents each individual set of scores.
      type: object
      properties:
        sourceType:
          description: What created the score.
          type: string
          enumDescriptions:
            - Source type is unspecified.
            - Score is derived only from system-generated answers.
            - >-
              Score is derived from both system-generated answers, and includes
              any manual edits if they exist.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED_ONLY
            - INCLUDES_MANUAL_EDITS
        score:
          description: The overall numerical score of the result.
          type: number
          format: double
        potentialScore:
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
          type: number
          format: double
        normalizedScore:
          description: >-
            The normalized score, which is the score divided by the potential
            score.
          type: number
          format: double
        qaTagResults:
          description: Collection of tags and their scores.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardResultQaTagResult
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      properties:
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
          items:
            type: string
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runIssueModelAnnotator:
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
          type: boolean
        issueModels:
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
          items:
            type: string
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
        runQaAnnotator:
          description: Whether to run the QA annotator.
          type: boolean
        qaConfig:
          description: Configuration for the QA annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
      type: object
      properties:
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
        summarizationModel:
          description: Default summarization model to be used.
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - >-
              The CCAI baseline model. This model is deprecated and will be
              removed in the future. We recommend using `generator` instead.
            - >-
              The CCAI baseline model, V2.0. This model is deprecated and will
              be removed in the future. We recommend using `generator` instead.
          enumDeprecated:
            - false
            - true
            - true
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
        generator:
          description: >-
            The resource name of the existing created generator. Format:
            projects//locations//generators/
          type: string
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfig
      description: Configuration for the QA feature.
      type: object
      properties:
        scorecardList:
          description: A manual list of scorecards to score.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorQaConfigScorecardList
      description: Container for a list of scorecards.
      type: object
      properties:
        qaScorecardRevisions:
          description: List of QaScorecardRevisions.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      type: object
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        textSections:
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          type: object
          additionalProperties:
            type: string
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        metadata:
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        generatorId:
          description: Agent Assist generator ID.
          type: string
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      type: object
      properties:
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        createTime:
          description: The time at which this annotation was created.
          type: string
          format: google-datetime
        startBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback
        userInput:
          description: Explicit input used for generating the answer
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      type: object
      properties:
        title:
          description: Article title.
          type: string
        uri:
          description: Article URI.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: float
        metadata:
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
          type: string
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      type: object
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      description: Agent Assist Smart Reply data.
      type: object
      properties:
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: double
        metadata:
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
      type: object
      properties:
        suggestion:
          description: The content of the suggestion.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
          format: double
        metadata:
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      description: Dialogflow interaction data.
      type: object
      properties:
        dialogflowIntentId:
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: string
        confidence:
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      type: object
      properties:
        correctnessLevel:
          description: The correctness level of an answer.
          type: string
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
    GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
      description: Explicit input used for generating the answer
      type: object
      properties:
        query:
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
          type: string
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
        querySource:
          description: Query source for the answer.
          type: string
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      description: Request to upload a conversation.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        conversationId:
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
          type: string
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        speechConfig:
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      type: object
      properties:
        deidentifyTemplate:
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
          type: string
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
    GoogleCloudContactcenterinsightsV1SpeechConfig:
      id: GoogleCloudContactcenterinsightsV1SpeechConfig
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      description: The response of listing conversations.
      type: object
      properties:
        conversations:
          description: The conversations that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
        nextPageToken:
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is set, it means there is another page available. If
            it is not set, it means no other pages are available.
          type: string
    GoogleCloudContactcenterinsightsV1Dataset:
      id: GoogleCloudContactcenterinsightsV1Dataset
      description: >-
        Dataset resource represents a collection of conversations that may be
        bounded (Static Dataset, e.g. golden dataset for training), or unbounded
        (Dynamic Dataset, e.g. live traffic, or agent training traffic)
      type: object
      properties:
        name:
          description: >-
            Immutable. Identifier. Resource name of the dataset. Format:
            projects/{project}/locations/{location}/datasets/{dataset}
          type: string
        displayName:
          description: Display name for the dataaset
          type: string
        description:
          description: Dataset description.
          type: string
        type:
          description: Dataset usage type.
          type: string
          enumDescriptions:
            - Default value for unspecified.
            - For evals only.
            - >-
              Dataset with new conversations coming in regularly (Insights
              legacy conversations and AI trainer)
          enum:
            - TYPE_UNSPECIFIED
            - EVAL
            - LIVE
        ttl:
          description: Optional. Option TTL for the dataset.
          type: string
          format: google-duration
        createTime:
          description: Output only. Dataset create time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Dataset update time.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListDatasetsResponse:
      id: GoogleCloudContactcenterinsightsV1ListDatasetsResponse
      description: The response to list datasets.
      type: object
      properties:
        datasets:
          description: The datasets that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1SampleConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1SampleConversationsRequest
      description: The request to sample conversations to a dataset.
      type: object
      properties:
        destinationDataset:
          description: The dataset resource to copy the sampled conversations to.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
        parent:
          description: Required. The parent resource of the dataset.
          type: string
        sampleRule:
          description: Optional. The sample rule used for sampling conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SampleRule'
    GoogleCloudContactcenterinsightsV1SampleRule:
      id: GoogleCloudContactcenterinsightsV1SampleRule
      description: Message for sampling conversations.
      type: object
      properties:
        samplePercentage:
          description: >-
            Percentage of conversations that we should sample based on the
            dimension between [0, 100].
          type: number
          format: double
        sampleRow:
          description: >-
            Number of the conversations that we should sample based on the
            dimension.
          type: string
          format: int64
        dimension:
          description: >-
            Optional. Group by dimension to sample the conversation. If no
            dimension is provided, the sampling will be applied to the project
            level. Current supported dimensions is
            'quality_metadata.agent_info.agent_id'.
          type: string
        conversationFilter:
          description: >-
            To specify the filter for the conversions that should apply this
            sample rule. An empty filter means this sample rule applies to all
            conversations.
          type: string
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      description: The response to list analyses.
      type: object
      properties:
        analyses:
          description: The analyses that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      type: object
      properties:
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          type: number
          format: float
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      description: The request to delete conversations in bulk.
      type: object
      properties:
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
        filter:
          description: Filter used to select the subset of conversations to delete.
          type: string
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          type: integer
          format: int32
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      description: The request to ingest conversations.
      type: object
      properties:
        gcsSource:
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
        sampleSize:
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      type: object
      properties:
        bucketUri:
          description: >-
            Optional. The Cloud Storage bucket containing source objects. Avoid
            passing this. Pass this through one of `transcript_bucket_uri` or
            `audio_bucket_uri`.
          type: string
        bucketObjectType:
          description: >-
            Optional. Specifies the type of the objects in `bucket_uri`. Avoid
            passing this. This is inferred from the `transcript_bucket_uri`,
            `audio_bucket_uri`.
          type: string
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
        transcriptBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation transcripts.
            Note that: [1] Transcript files are expected to be in JSON format.
            [2] Transcript, audio, metadata files must be in separate buckets /
            folders. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        audioBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation audio file.
            Note that: [1] Audio files will be transcribed if not already. [2]
            Audio files and transcript files must be in separate buckets /
            folders. [3] A source file and its corresponding audio file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/transcript/conversation1.json` and
            `gs://bucket/audio/conversation1.mp3`.
          type: string
        metadataBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets / folders. [3] A source file and its corresponding metadata
            file must share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 100 labels per
            conversation.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      type: object
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
      type: object
      properties:
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        agentChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
        customerChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      description: The request to export insights.
      type: object
      properties:
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
        parent:
          description: Required. The parent resource to export data from.
          type: string
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
        kmsKey:
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
          type: string
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        exportSchemaVersion:
          description: Optional. Version of the export schema.
          type: string
          enumDescriptions:
            - Unspecified. Defaults to EXPORT_V3.
            - Export schema version 1.
            - Export schema version 2.
            - Export schema version 3.
            - Export schema version 4.
            - Export schema version 5.
            - Export schema version 6.
            - Export schema version 7.
            - Export schema version 8.
            - Export schema version 9.
            - Export schema version 10.
            - Export schema version latest available.
          enum:
            - EXPORT_SCHEMA_VERSION_UNSPECIFIED
            - EXPORT_V1
            - EXPORT_V2
            - EXPORT_V3
            - EXPORT_V4
            - EXPORT_V5
            - EXPORT_V6
            - EXPORT_V7
            - EXPORT_V8
            - EXPORT_V9
            - EXPORT_V10
            - EXPORT_VERSION_LATEST_AVAILABLE
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
      properties:
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
        table:
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModel:
      id: GoogleCloudContactcenterinsightsV1IssueModel
      description: The issue model resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        displayName:
          description: The representative name for the issue model.
          type: string
        createTime:
          description: Output only. The time at which this issue model was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
          format: int64
        state:
          description: Output only. State of the model.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
        modelType:
          description: Type of the model.
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        languageCode:
          description: Language of the model.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      type: object
      properties:
        medium:
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          deprecated: true
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          type: string
          format: int64
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset. Refer to
            https://cloud.google.com/contact-center/insights/docs/filtering for
            details.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      type: object
      properties:
        analyzedConversationsCount:
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
          format: int64
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
          format: int64
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      type: object
      properties:
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
        displayName:
          description: Display name of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      description: The response of listing issue models.
      type: object
      properties:
        issueModels:
          description: The issue models that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      description: The request to deploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      description: The request to undeploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      description: Request to export an issue model.
      type: object
      properties:
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
        name:
          description: Required. The issue model to export.
          type: string
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
      description: Google Cloud Storage Object URI to save the issue model to.
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      description: Request to import an issue model.
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        createNewModel:
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
          type: boolean
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
      description: Google Cloud Storage Object URI to get the issue model file from.
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
    GoogleCloudContactcenterinsightsV1Issue:
      id: GoogleCloudContactcenterinsightsV1Issue
      description: The issue resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        displayName:
          description: The representative name for the issue.
          type: string
        createTime:
          description: Output only. The time at which this issue was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The most recent time that this issue was updated.
          readOnly: true
          type: string
          format: google-datetime
        sampleUtterances:
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
          readOnly: true
          type: array
          items:
            type: string
        displayDescription:
          description: Representative description of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      description: The response of listing issues.
      type: object
      properties:
        issues:
          description: The issues that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      description: Response of querying an issue model's statistics.
      type: object
      properties:
        currentStats:
          description: >-
            The latest label statistics for the queried issue model. Includes
            results on both training data and data labeled after deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      description: The phrase matcher resource.
      type: object
      properties:
        name:
          description: >-
            The resource name of the phrase matcher. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: string
        revisionId:
          description: >-
            Output only. Immutable. The revision ID of the phrase matcher. A new
            revision is committed whenever the matcher is changed, except when
            it is activated or deactivated. A server generated random ID will be
            used. Example:
            locations/global/phraseMatchers/my-first-matcher@1234567
          readOnly: true
          type: string
        versionTag:
          description: >-
            The customized version tag to use for the phrase matcher. If not
            specified, it will default to `revision_id`.
          type: string
        revisionCreateTime:
          description: >-
            Output only. The timestamp of when the revision was created. It is
            also the create time when a new matcher is added.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        type:
          description: Required. The type of this phrase matcher.
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        active:
          description: Applies the phrase matcher only when it is active.
          type: boolean
        phraseMatchRuleGroups:
          description: A list of phase match rule groups that are included in this matcher.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
        activationUpdateTime:
          description: >-
            Output only. The most recent time at which the activation status was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        roleMatch:
          description: >-
            The role whose utterances the phrase matcher should be matched
            against. If the role is ROLE_UNSPECIFIED it will be matched against
            any utterances in the transcript.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        updateTime:
          description: >-
            Output only. The most recent time at which the phrase matcher was
            updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      description: A message representing a rule in the phrase matcher.
      type: object
      properties:
        type:
          description: Required. The type of this phrase match rule group.
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      description: The data for a phrase match rule.
      type: object
      properties:
        query:
          description: Required. The phrase to be matched.
          type: string
        negated:
          description: >-
            Specifies whether the phrase must be missing from the transcript
            segment or present in the transcript segment.
          type: boolean
        config:
          description: >-
            Provides additional information about the rule that specifies how to
            apply the rule.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      description: Configuration information of a phrase match rule.
      type: object
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      description: Exact match configuration.
      type: object
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
      type: object
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      description: The response for calculating conversation statistics.
      type: object
      properties:
        averageDuration:
          description: >-
            The average duration of all conversations. The average is calculated
            using only conversations that have a time duration.
          type: string
          format: google-duration
        averageTurnCount:
          description: The average number of turns per conversation.
          type: integer
          format: int32
        conversationCount:
          description: The total number of conversations.
          type: integer
          format: int32
        smartHighlighterMatches:
          description: >-
            A map associating each smart highlighter display name with its
            respective number of matches in the set of conversations.
          type: object
          additionalProperties:
            type: integer
            format: int32
        customHighlighterMatches:
          description: >-
            A map associating each custom highlighter resource name with its
            respective number of matches in the set of conversations.
          type: object
          additionalProperties:
            type: integer
            format: int32
        issueMatches:
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/` Deprecated, use
            `issue_matches_stats` field instead.
          deprecated: true
          type: object
          additionalProperties:
            type: integer
            format: int32
        issueMatchesStats:
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/`
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
        conversationCountTimeSeries:
          description: >-
            A time series representing the count of conversations created over
            time that match that requested filter criteria.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
      type: object
      properties:
        intervalDuration:
          description: The duration of each interval.
          type: string
          format: google-duration
        points:
          description: >-
            An ordered list of intervals from earliest to latest, where each
            interval represents the number of conversations that transpired
            during the time window.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      id: >-
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
      type: object
      properties:
        startTime:
          description: The start time of this interval.
          type: string
          format: google-datetime
        conversationCount:
          description: The number of conversations created in this interval.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1CalculateStatsRequest:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsRequest
      description: The request for calculating conversation statistics.
      type: object
      properties:
        filter:
          description: >-
            A filter to reduce results to a specific subset. This field is
            useful for getting statistics about conversations with specific
            properties.
          type: string
    GoogleCloudContactcenterinsightsV1Settings:
      id: GoogleCloudContactcenterinsightsV1Settings
      description: >-
        The CCAI Insights project wide settings. Use these settings to configure
        the behavior of Insights. View these settings with
        [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings)
        and change the settings with
        [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the settings resource. Format:
            projects/{project}/locations/{location}/settings
          type: string
        createTime:
          description: Output only. The time at which the settings was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the settings were last updated.
          readOnly: true
          type: string
          format: google-datetime
        languageCode:
          description: >-
            A language code to be applied to each transcript segment unless the
            segment already specifies a language code. Language code defaults to
            "en-US" if it is neither specified on the segment nor here.
          type: string
        conversationTtl:
          description: >-
            The default TTL for newly-created conversations. If a conversation
            has a specified expiration, that value will be used instead.
            Changing this value will not change the expiration of existing
            conversations. Conversations with no expire time persist until they
            are deleted.
          type: string
          format: google-duration
        pubsubNotificationSettings:
          description: >-
            A map that maps a notification trigger to a Pub/Sub topic. Each time
            a specified trigger occurs, Insights will notify the corresponding
            Pub/Sub topic. Keys are notification triggers. Supported keys are: *
            "all-triggers": Notify each time any of the supported triggers
            occurs. * "create-analysis": Notify each time an analysis is
            created. * "create-conversation": Notify each time a conversation is
            created. * "export-insights-data": Notify each time an export is
            complete. * "ingest-conversations": Notify each time an
            IngestConversations LRO is complete. * "update-conversation": Notify
            each time a conversation is updated via UpdateConversation. *
            "upload-conversation": Notify when an UploadConversation LRO is
            complete. Values are Pub/Sub topics. The format of each Pub/Sub
            topic is: projects/{project}/topics/{topic}
          type: object
          additionalProperties:
            type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
        redactionConfig:
          description: >-
            Default DLP redaction resources to be applied while ingesting
            conversations. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text resources to use while ingesting
            audio files. Optional, CCAI Insights will create a default if not
            provided. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      description: Default configuration when creating Analyses in Insights.
      type: object
      properties:
        runtimeIntegrationAnalysisPercentage:
          description: >-
            Percentage of conversations created using Dialogflow runtime
            integration to analyze automatically, between [0, 100].
          type: number
          format: double
        uploadConversationAnalysisPercentage:
          description: >-
            Percentage of conversations created using the UploadConversation
            endpoint to analyze automatically, between [0, 100].
          type: number
          format: double
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1AnalysisRule:
      id: GoogleCloudContactcenterinsightsV1AnalysisRule
      description: >-
        The CCAI Insights project wide analysis rule. This rule will be applied
        to all conversations that match the filter defined in the rule. For a
        conversation matches the filter, the annotators specified in the rule
        will be run. If a conversation matches multiple rules, a union of all
        the annotators will be run. One project can have multiple analysis
        rules.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the analysis rule. Format:
            projects/{project}/locations/{location}/analysisRules/{analysis_rule}
          type: string
        createTime:
          description: Output only. The time at which this analysis rule was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which this analysis rule was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: Display Name of the analysis rule.
          type: string
        conversationFilter:
          description: >-
            Filter for the conversations that should apply this analysis rule.
            An empty filter means this analysis rule applies to all
            conversations. Refer to
            https://cloud.google.com/contact-center/insights/docs/filtering for
            details.
          type: string
        annotatorSelector:
          description: >-
            Selector of annotators to run and the phrase matchers to use for
            conversations that matches the conversation_filter. If not
            specified, NO annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        analysisPercentage:
          description: >-
            Percentage of conversations that we should apply this analysis
            setting automatically, between [0, 1]. For example, 0.1 means 10%.
            Conversations are sampled in a determenestic way. The original
            runtime_percentage & upload percentage will be replaced by defining
            filters on the conversation.
          type: number
          format: double
        active:
          description: >-
            If true, apply this rule to conversations. Otherwise, this rule is
            inactive and saved as a draft.
          type: boolean
    GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse
      description: The response of listing views.
      type: object
      properties:
        analysisRules:
          description: The analysis_rule that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1AssessmentRule:
      id: GoogleCloudContactcenterinsightsV1AssessmentRule
      description: >-
        The CCAI Insights project wide assessment rule. This assessment rule
        will be applied to all conversations from the previous sampling cycle
        that match the sample rule defined in the assessment rule. One project
        can have multiple assessment rules.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the assessment rule. Format:
            projects/{project}/locations/{location}/assessmentRules/{assessment_rule}
          type: string
        createTime:
          description: Output only. The time at which this assessment rule was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which this assessment rule was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        active:
          description: >-
            If true, apply this rule to conversations. Otherwise, this rule is
            inactive.
          type: boolean
        displayName:
          description: Display Name of the assessment rule.
          type: string
        sampleRule:
          description: The sample rule for the assessment rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SampleRule'
        scheduleInfo:
          description: Schedule info for the assessment rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ScheduleInfo'
    GoogleCloudContactcenterinsightsV1ScheduleInfo:
      id: GoogleCloudContactcenterinsightsV1ScheduleInfo
      description: Message for schedule info.
      type: object
      properties:
        startTime:
          description: >-
            Start time of the schedule. If not specified, will start as soon as
            the schedule is created.
          type: string
          format: google-datetime
        endTime:
          description: >-
            End time of the schedule. If not specified, will keep scheduling new
            pipelines for execution util the schedule is no longer active or
            deleted.
          type: string
          format: google-datetime
        schedule:
          description: >-
            The groc expression. Format: `every number [synchronized]` Time
            units can be: minutes, hours Synchronized is optional and indicates
            that the schedule should be synchronized to the start of the
            interval: every 5 minutes synchronized means 00:00, 00:05 ...
            Otherwise the start time is random within the interval. Example:
            `every 5 minutes` could be 00:02, 00:07, 00:12, ...
          type: string
        timeZone:
          description: >-
            The timezone to use for the groc expression. If not specified,
            defaults to UTC.
          type: string
    GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse
      description: The response of listing assessment rules.
      type: object
      properties:
        assessmentRules:
          description: The assessment rules that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1EncryptionSpec:
      id: GoogleCloudContactcenterinsightsV1EncryptionSpec
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. `Conversation`).
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by our default encryption key. Only the key in the same
            location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
      type: object
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the `kms_key_name` field is left empty, no
            encryption will be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
    GoogleCloudContactcenterinsightsV1View:
      id: GoogleCloudContactcenterinsightsV1View
      description: The View resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the view. Format:
            projects/{project}/locations/{location}/views/{view}
          type: string
        displayName:
          description: The human-readable display name of the view.
          type: string
        createTime:
          description: Output only. The time at which this view was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          readOnly: true
          type: string
          format: google-datetime
        value:
          description: >-
            A filter to reduce conversation results to a specific subset. Refer
            to https://cloud.google.com/contact-center/insights/docs/filtering
            for details.
          type: string
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
      type: object
      properties:
        views:
          description: The views that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1QueryMetricsRequest:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      description: The request for querying metrics.
      type: object
      properties:
        filter:
          description: >-
            Required. Filter to select a subset of conversations to compute the
            metrics. Must specify a window of the conversation create time to
            compute the metrics. The returned metrics will be from the range
            [DATE(starting create time), DATE(ending create time)). 
          type: string
        timeGranularity:
          description: >-
            The time granularity of each data point in the time series. Defaults
            to NONE if this field is unspecified.
          type: string
          enumDescriptions:
            - The time granularity is unspecified and will default to NONE.
            - >-
              No time granularity. The response won't contain a time series.
              This is the default value if no time granularity is specified.
            - >-
              Data points in the time series will aggregate at a daily
              granularity. 1 day means [midnight to midnight).
            - >-
              Data points in the time series will aggregate at a daily
              granularity. 1 HOUR means [01:00 to 02:00).
            - >-
              Data points in the time series will aggregate at a daily
              granularity. PER_MINUTE means [01:00 to 01:01).
            - >-
              Data points in the time series will aggregate at a 1 minute
              granularity. PER_5_MINUTES means [01:00 to 01:05).
            - >-
              Data points in the time series will aggregate at a monthly
              granularity. 1 MONTH means [01st of the month to 1st of the next
              month).
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - NONE
            - DAILY
            - HOURLY
            - PER_MINUTE
            - PER_5_MINUTES
            - MONTHLY
        dimensions:
          description: >-
            The dimensions that determine the grouping key for the query.
            Defaults to no dimension if this field is unspecified. If a
            dimension is specified, its key must also be specified. Each
            dimension's key must be unique. If a time granularity is also
            specified, metric values in the dimension will be bucketed by this
            granularity. Up to one dimension is supported for now.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dimension'
        measureMask:
          description: >-
            Measures to return. Defaults to all measures if this field is
            unspecified. A valid mask should traverse from the `measure` field
            from the response. For example, a path from a measure mask to get
            the conversation count is "conversation_measure.count".
          type: string
          format: google-fieldmask
    GoogleCloudContactcenterinsightsV1Dimension:
      id: GoogleCloudContactcenterinsightsV1Dimension
      description: >-
        A dimension determines the grouping key for the query. In SQL terms,
        these would be part of both the "SELECT" and "GROUP BY" clauses.
      type: object
      properties:
        issueDimensionMetadata:
          description: Output only. Metadata about the issue dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata
        agentDimensionMetadata:
          description: Output only. Metadata about the agent dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata
        qaQuestionDimensionMetadata:
          description: Output only. Metadata about the QA question dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata
        qaQuestionAnswerDimensionMetadata:
          description: Output only. Metadata about the QA question-answer dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata
        dimensionKey:
          description: The key of the dimension.
          type: string
          enumDescriptions:
            - The key of the dimension is unspecified.
            - The dimension is keyed by issues.
            - The dimension is keyed by issue names.
            - The dimension is keyed by agents.
            - The dimension is keyed by agent teams.
            - >-
              The dimension is keyed by QaQuestionIds. Note that: We only group
              by the QuestionId and not the revision-id of the scorecard this
              question is a part of. This allows for showing stats for the same
              question across different scorecard revisions.
            - >-
              The dimension is keyed by QaQuestionIds-Answer value pairs. Note
              that: We only group by the QuestionId and not the revision-id of
              the scorecard this question is a part of. This allows for showing
              distribution of answers per question across different scorecard
              revisions.
            - >-
              The dimension is keyed by QaScorecardIds. Note that: We only group
              by the ScorecardId and not the revision-id of the scorecard. This
              allows for showing stats for the same scorecard across different
              revisions. This metric is mostly only useful if querying the
              average normalized score per scorecard.
            - The dimension is keyed by the conversation profile ID.
            - The dimension is keyed by the conversation medium.
          enum:
            - DIMENSION_KEY_UNSPECIFIED
            - ISSUE
            - ISSUE_NAME
            - AGENT
            - AGENT_TEAM
            - QA_QUESTION_ID
            - QA_QUESTION_ANSWER_VALUE
            - QA_SCORECARD_ID
            - CONVERSATION_PROFILE_ID
            - MEDIUM
    GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1DimensionIssueDimensionMetadata
      description: Metadata about the issue dimension.
      type: object
      properties:
        issueId:
          description: The issue ID.
          type: string
        issueDisplayName:
          description: The issue display name.
          type: string
        issueModelId:
          description: The parent issue model ID.
          type: string
    GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1DimensionAgentDimensionMetadata
      description: Metadata about the agent dimension.
      type: object
      properties:
        agentId:
          description: Optional. A user-specified string representing the agent.
          type: string
        agentDisplayName:
          description: Optional. The agent's name
          type: string
        agentTeam:
          description: Optional. A user-specified string representing the agent's team.
          type: string
    GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1DimensionQaQuestionDimensionMetadata
      description: Metadata about the QA question dimension.
      type: object
      properties:
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
        questionBody:
          description: Optional. The full body of the question.
          type: string
    GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1DimensionQaQuestionAnswerDimensionMetadata
      description: >-
        Metadata about the QA question-answer dimension. This is useful for
        showing the answer distribution for questions for a given scorecard.
      type: object
      properties:
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
        questionBody:
          description: Optional. The full body of the question.
          type: string
        answerValue:
          description: Optional. The full body of the question.
          type: string
    GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest:
      id: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest
      description: >-
        The request for summarizing performance according to different metrics
        for conversations over a specified time window.
      type: object
      properties:
        agentPerformanceSource:
          description: Conversations are from a single agent.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequestAgentSource
        filter:
          description: >-
            Optional. Filter to select a subset of conversations to compute the
            performance overview. Supports the same filters as the filter field
            in QueryMetricsRequest. The source and query interval/comparison
            query interval should not be included here.
          type: string
        queryInterval:
          description: >-
            Required. The time window of the conversations to derive performance
            stats from.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QueryInterval'
        comparisonQueryInterval:
          description: The time window of the conversations to compare the performance to.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QueryInterval'
    GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequestAgentSource:
      id: >-
        GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequestAgentSource
      description: The entity whose performance is being queried is a single agent.
      type: object
      properties:
        agentId:
          description: Required. Agent id to query performance overview for.
          type: string
    GoogleCloudContactcenterinsightsV1QueryInterval:
      id: GoogleCloudContactcenterinsightsV1QueryInterval
      description: A time window for querying conversations.
      type: object
      properties:
        startTime:
          description: Required. The start time of the time window.
          type: string
          format: google-datetime
        endTime:
          description: Required. The end time of the time window.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1QaQuestion:
      id: GoogleCloudContactcenterinsightsV1QaQuestion
      description: A single question to be scored by the Insights QA feature.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the question. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}/qaQuestions/{qa_question}
          type: string
        abbreviation:
          description: >-
            Short, descriptive string, used in the UI where it's not practical
            to display the full question body. E.g., "Greeting".
          type: string
        createTime:
          description: Output only. The time at which this question was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The most recent time at which the question was updated.
          readOnly: true
          type: string
          format: google-datetime
        questionType:
          description: The type of question.
          type: string
          enumDescriptions:
            - The type of the question is unspecified.
            - >-
              The default question type. The question is fully customizable by
              the user.
            - >-
              The question type is using a predefined model provided by CCAI
              teams. Users are not allowed to edit the question_body,
              answer_choices, upload feedback labels for the question nor
              fine-tune the question. However, users may edit other fields like
              question tags, question order, etc.
          enum:
            - QA_QUESTION_TYPE_UNSPECIFIED
            - CUSTOMIZABLE
            - PREDEFINED
        predefinedQuestionConfig:
          description: >-
            The configuration of the predefined question. This field will only
            be set if the Question Type is predefined.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionPredefinedQuestionConfig
        questionBody:
          description: Question text. E.g., "Did the agent greet the customer?"
          type: string
        answerInstructions:
          description: Instructions describing how to determine the answer.
          type: string
        answerChoices:
          description: >-
            A list of valid answers to the question, which the LLM must choose
            from.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice
        tags:
          description: >-
            Questions are tagged for categorization and scoring. Tags can either
            be: - Default Tags: These are predefined categories. They are
            identified by their string value (e.g., "BUSINESS", "COMPLIANCE",
            and "CUSTOMER"). - Custom Tags: These are user-defined categories.
            They are identified by their full resource name (e.g.,
            projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag}).
            Both default and custom tags are used to group questions and to
            influence the scoring of each question.
          type: array
          items:
            type: string
        order:
          description: >-
            Defines the order of the question within its parent scorecard
            revision.
          type: integer
          format: int32
        metrics:
          description: >-
            Metrics of the underlying tuned LLM over a holdout/test set while
            fine tuning the underlying LLM for the given question. This field
            will only be populated if and only if the question is part of a
            scorecard revision that has been tuned.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionMetrics
        tuningMetadata:
          description: >-
            Metadata about the tuning operation for the question.This field will
            only be populated if and only if the question is part of a scorecard
            revision that has been tuned.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata
    GoogleCloudContactcenterinsightsV1QaQuestionPredefinedQuestionConfig:
      id: GoogleCloudContactcenterinsightsV1QaQuestionPredefinedQuestionConfig
      description: >-
        Configuration for a predefined question. This field will only be set if
        the Question Type is predefined.
      type: object
      properties:
        type:
          description: The type of the predefined question.
          type: string
          enumDescriptions:
            - The type of the predefined question is unspecified.
            - >-
              A prebuilt classifier classfying the outcome of the conversation.
              For example, if the customer issue mentioned in a conversation has
              been resolved or not.
            - >-
              A prebuilt classifier classfying the initiator of the conversation
              escalation. For example, if it was initiated by the customer or
              the agent.
          enum:
            - PREDEFINED_QUESTION_TYPE_UNSPECIFIED
            - CONVERSATION_OUTCOME
            - CONVERSATION_OUTCOME_ESCALATION_INITIATOR_ROLE
    GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice:
      id: GoogleCloudContactcenterinsightsV1QaQuestionAnswerChoice
      description: Message representing a possible answer to the question.
      type: object
      properties:
        strValue:
          description: String value.
          type: string
        numValue:
          description: Numerical value.
          type: number
          format: double
        boolValue:
          description: Boolean value.
          type: boolean
        naValue:
          description: >-
            A value of "Not Applicable (N/A)". If provided, this field may only
            be set to `true`. If a question receives this answer, it will be
            excluded from any score calculations.
          type: boolean
        key:
          description: A short string used as an identifier.
          type: string
        score:
          description: >-
            Numerical score of the answer, used for generating the overall score
            of a QaScorecardResult. If the answer uses na_value, this field is
            unused.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1QaQuestionMetrics:
      id: GoogleCloudContactcenterinsightsV1QaQuestionMetrics
      description: >-
        A wrapper representing metrics calculated against a test-set on a LLM
        that was fine tuned for this question.
      type: object
      properties:
        accuracy:
          description: >-
            Output only. Accuracy of the model. Measures the percentage of
            correct answers the model gave on the test set.
          readOnly: true
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata:
      id: GoogleCloudContactcenterinsightsV1QaQuestionTuningMetadata
      description: >-
        Metadata about the tuning operation for the question. Will only be set
        if a scorecard containing this question has been tuned.
      type: object
      properties:
        totalValidLabelCount:
          description: >-
            Total number of valid labels provided for the question at the time
            of tuining.
          type: string
          format: int64
        datasetValidationWarnings:
          description: >-
            A list of any applicable data validation warnings about the
            question's feedback labels.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified data validation warning.
              - A non-trivial percentage of the feedback labels are invalid.
              - >-
                The quantity of valid feedback labels provided is less than the
                recommended minimum.
              - >-
                One or more of the answers have less than the recommended
                minimum of feedback labels.
              - All the labels in the dataset come from a single answer choice.
            enum:
              - DATASET_VALIDATION_WARNING_UNSPECIFIED
              - TOO_MANY_INVALID_FEEDBACK_LABELS
              - INSUFFICIENT_FEEDBACK_LABELS
              - INSUFFICIENT_FEEDBACK_LABELS_PER_ANSWER
              - ALL_FEEDBACK_LABELS_HAVE_THE_SAME_ANSWER
        tuningError:
          description: >-
            Error status of the tuning operation for the question. Will only be
            set if the tuning operation failed.
          type: string
    GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse:
      id: GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse
      description: The response from a ListQaQuestions request.
      type: object
      properties:
        qaQuestions:
          description: The QaQuestions under the parent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1QaQuestionTag:
      id: GoogleCloudContactcenterinsightsV1QaQuestionTag
      description: >-
        A tag is a resource which aims to categorize a set of questions across
        multiple scorecards, e.g., "Customer Satisfaction","Billing", etc.
      type: object
      properties:
        name:
          description: >-
            Identifier. Resource name for the QaQuestionTag Format
            projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag}
            In the above format, the last segment, i.e., qa_question_tag, is a
            server-generated ID corresponding to the tag resource.
          type: string
        displayName:
          description: Required. A user-specified display name for the tag.
          type: string
        qaQuestionIds:
          description: >-
            Optional. The list of Scorecard Question IDs that the tag applies
            to. Each QaQuestionId is represented as a full resource name
            containing the Question ID. Lastly, Since a tag may not necessarily
            be referenced by any Scorecard Questions, we treat this field as
            optional.
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which the question tag was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the question tag was
            updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse:
      id: GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse
      description: The response from a ListQaQuestionTags request.
      type: object
      properties:
        qaQuestionTags:
          description: The parent resource of the questions.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1QaScorecard:
      id: GoogleCloudContactcenterinsightsV1QaScorecard
      description: >-
        A QaScorecard represents a collection of questions to be scored during
        analysis.
      type: object
      properties:
        name:
          description: >-
            Identifier. The scorecard name. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}
          type: string
        displayName:
          description: The user-specified display name of the scorecard.
          type: string
        description:
          description: A text description explaining the intent of the scorecard.
          type: string
        createTime:
          description: Output only. The time at which this scorecard was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the scorecard was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        isDefault:
          description: >-
            Whether the scorecard is the default one for the project. A default
            scorecard cannot be deleted and will always appear first in
            scorecard selector.
          type: boolean
        source:
          description: Output only. The source of the scorecard.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The source of the scorecard is unspecified. Default to
              QA_SCORECARD_SOURCE_CUSTOMER_DEFINED.
            - The scorecard is a custom scorecard created by the user.
            - >-
              The scorecard is a scorecard created through discovery engine
              deployment.
          enum:
            - QA_SCORECARD_SOURCE_UNSPECIFIED
            - QA_SCORECARD_SOURCE_CUSTOMER_DEFINED
            - QA_SCORECARD_SOURCE_DISCOVERY_ENGINE
    GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse:
      id: GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse
      description: The response from a ListQaScorecards request.
      type: object
      properties:
        qaScorecards:
          description: The QaScorecards under the parent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1QaScorecardRevision:
      id: GoogleCloudContactcenterinsightsV1QaScorecardRevision
      description: >-
        A revision of a QaScorecard. Modifying published scorecard fields would
        invalidate existing scorecard results — the questions may have changed,
        or the score weighting will make existing scores impossible to
        understand. So changes must create a new revision, rather than modifying
        the existing resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the scorecard revision. Format:
            projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}
          type: string
        snapshot:
          description: >-
            The snapshot of the scorecard at the time of this revision's
            creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard'
        createTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
          format: google-datetime
        alternateIds:
          description: >-
            Output only. Alternative IDs for this revision of the scorecard,
            e.g., `latest`.
          readOnly: true
          type: array
          items:
            type: string
        state:
          description: >-
            Output only. State of the scorecard revision, indicating whether
            it's ready to be used in analysis.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - The scorecard revision can be edited.
            - Scorecard model training is in progress.
            - Scorecard revision model training failed.
            - The revision can be used in analysis.
            - Scorecard is being deleted.
            - Scorecard model training was explicitly cancelled by the user.
          enum:
            - STATE_UNSPECIFIED
            - EDITABLE
            - TRAINING
            - TRAINING_FAILED
            - READY
            - DELETING
            - TRAINING_CANCELLED
    GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest:
      id: GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest
      description: Request for TuneQaScorecardRevision endpoint.
      type: object
      properties:
        filter:
          description: >-
            Required. Filter for selecting the feedback labels that needs to be
            used for training. This filter can be used to limit the feedback
            labels used for tuning to a feedback labels created or updated for a
            specific time-window etc.
          type: string
        validateOnly:
          description: >-
            Optional. Run in validate only mode, no fine tuning will actually
            run. Data quality validations like training data distributions will
            run. Even when set to false, the data quality validations will still
            run but once the validations complete we will proceed with the fine
            tune, if applicable.
          type: boolean
    GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest:
      id: GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest
      description: The request to deploy a QaScorecardRevision
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest
      description: The request to undeploy a QaScorecardRevision
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse:
      id: GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse
      description: The response from a ListQaScorecardRevisions request.
      type: object
      properties:
        qaScorecardRevisions:
          description: The QaScorecards under the parent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      description: The response for listing feedback labels.
      type: object
      properties:
        feedbackLabels:
          description: The feedback labels that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
        nextPageToken:
          description: The next page token.
          type: string
    GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse
      description: The response for listing all feedback labels.
      type: object
      properties:
        feedbackLabels:
          description: The feedback labels that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest
      description: The request for bulk uploading feedback labels.
      type: object
      properties:
        gcsSource:
          description: A cloud storage bucket source.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource
        sheetsSource:
          description: A sheets document source.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestSheetsSource
        validateOnly:
          description: >-
            Optional. If set, upload will not happen and the labels will be
            validated. If not set, then default behavior will be to upload the
            labels after validation is complete.
          type: boolean
    GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource:
      id: >-
        GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestGcsSource
      description: Google Cloud Storage Object details to get the feedback label file from.
      type: object
      properties:
        format:
          description: Required. File format which will be ingested.
          type: string
          enumDescriptions:
            - Unspecified format.
            - CSV format.
            - JSON format.
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - JSON
        objectUri:
          description: >-
            Required. The Google Cloud Storage URI of the file to import.
            Format: `gs://bucket_name/object_name`
          type: string
    GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestSheetsSource:
      id: >-
        GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequestSheetsSource
      description: Google Sheets document details to get the feedback label file from.
      type: object
      properties:
        spreadsheetUri:
          description: >-
            Required. The Google Sheets document to write the feedback labels
            to. Retrieved from Google Sheets URI. E.g.
            `https://docs.google.com/spreadsheets/d/1234567890` The spreadsheet
            must be shared with the Insights P4SA.
          type: string
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
      description: Request for the BulkDownloadFeedbackLabel endpoint.
      type: object
      properties:
        gcsDestination:
          description: A cloud storage bucket destination.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination
        sheetsDestination:
          description: A sheets document destination.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination
        parent:
          description: Required. The parent resource for new feedback labels.
          type: string
        filter:
          description: >-
            Optional. A filter to reduce results to a specific subset. Supports
            disjunctions (OR) and conjunctions (AND). Supported fields: *
            `issue_model_id` * `qa_question_id` * `qa_scorecard_id` *
            `min_create_time` * `max_create_time` * `min_update_time` *
            `max_update_time` * `feedback_label_type`: QUALITY_AI,
            TOPIC_MODELING
          type: string
        maxDownloadCount:
          description: >-
            Optional. Limits the maximum number of feedback labels that will be
            downloaded. The first `N` feedback labels will be downloaded.
          type: integer
          format: int32
        feedbackLabelType:
          description: Optional. The type of feedback labels that will be downloaded.
          type: string
          enumDescriptions:
            - Unspecified format
            - >-
              Downloaded file will contain all Quality AI labels from the latest
              scorecard revision.
            - Downloaded file will contain only Topic Modeling labels.
            - Agent Assist Summarization labels.
          enum:
            - FEEDBACK_LABEL_TYPE_UNSPECIFIED
            - QUALITY_AI
            - TOPIC_MODELING
            - AGENT_ASSIST_SUMMARY
        conversationFilter:
          description: >-
            Optional. Filter parent conversations to download feedback labels
            for. When specified, the feedback labels will be downloaded for the
            conversations that match the filter. If `template_qa_scorecard_id`
            is set, all the conversations that match the filter will be paired
            with the questions under the scorecard for labeling.
          type: string
        templateQaScorecardId:
          description: >-
            Optional. If set, a template for labeling conversations and
            scorecard questions will be created from the conversation_filter and
            the questions under the scorecard(s). The feedback label `filter`
            will be ignored.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestGcsDestination
      description: Google Cloud Storage Object details to write the feedback labels to.
      type: object
      properties:
        format:
          description: Required. File format in which the labels will be exported.
          type: string
          enumDescriptions:
            - Unspecified format.
            - CSV format. 1,000 labels are stored per CSV file by default.
            - JSON format. 1 label stored per JSON file by default.
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - JSON
        objectUri:
          description: >-
            Required. The Google Cloud Storage URI to write the feedback labels
            to. The file name will be used as a prefix for the files written to
            the bucket if the output needs to be split across multiple files,
            otherwise it will be used as is. The file extension will be appended
            to the file name based on the format selected. E.g.
            `gs://bucket_name/object_uri_prefix`
          type: string
        addWhitespace:
          description: >-
            Optional. Add whitespace to the JSON file. Makes easier to read, but
            increases file size. Only applicable for JSON format.
          type: boolean
        alwaysPrintEmptyFields:
          description: >-
            Optional. Always print fields with no presence. This is useful for
            printing fields that are not set, like implicit 0 value or empty
            lists/maps. Only applicable for JSON format.
          type: boolean
        recordsPerFileCount:
          description: >-
            Optional. The number of records per file. Applicable for either
            format.
          type: string
          format: int64
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequestSheetsDestination
      description: Google Sheets document details to write the feedback labels to.
      type: object
      properties:
        spreadsheetUri:
          description: >-
            Required. The Google Sheets document to write the feedback labels
            to. Retrieved from Google Sheets URI. E.g.
            `https://docs.google.com/spreadsheets/d/1234567890` The spreadsheet
            must be shared with the Insights P4SA. The spreadsheet ID written to
            will be returned as `file_names` in the
            BulkDownloadFeedbackLabelsMetadata.
          type: string
        sheetTitle:
          description: >-
            Optional. The title of the new sheet to write the feedback labels
            to.
          type: string
    GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest
      description: Request for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties:
        parent:
          description: Required. The parent resource for new feedback labels.
          type: string
        filter:
          description: >-
            Optional. A filter to reduce results to a specific subset. Supports
            disjunctions (OR) and conjunctions (AND). Supported fields: *
            `issue_model_id` * `qa_question_id` * `qa_scorecard_id` *
            `min_create_time` * `max_create_time` * `min_update_time` *
            `max_update_time` * `feedback_label_type`: QUALITY_AI,
            TOPIC_MODELING
          type: string
    GoogleCloudContactcenterinsightsV1AuthorizedViewSet:
      id: GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      description: An AuthorizedViewSet contains a set of AuthorizedView resources.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the AuthorizedViewSet. Format:
            projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set}
          type: string
        displayName:
          description: Display Name. Limit 64 characters.
          type: string
        createTime:
          description: Output only. Create time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse:
      id: GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse
      description: The response from a ListAuthorizedViewSet request.
      type: object
      properties:
        authorizedViewSets:
          description: The AuthorizedViewSets under the parent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1AuthorizedView:
      id: GoogleCloudContactcenterinsightsV1AuthorizedView
      description: >-
        An AuthorizedView represents a view of accessible Insights resources
        (for example, Conversation and Scorecard). Who have read access to the
        AuthorizedView resource will have access to these Insight resources as
        well.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the AuthorizedView. Format:
            projects/{project}/locations/{location}/authorizedViewSets/{authorized_view_set}/authorizedViews/{authorized_view}
          type: string
        displayName:
          description: Display Name. Limit 64 characters.
          type: string
        conversationFilter:
          description: >-
            A filter to reduce conversation results to a specific subset. The
            AuthorizedView's assigned permission (read/write) could be applied
            to the subset of conversations. If conversation_filter is empty,
            there is no restriction on the conversations that the AuthorizedView
            can access. Having *authorizedViews.get* access to the
            AuthorizedView means having the same read/write access to the
            Conversations (as well as metadata/annotations linked to the
            conversation) that this AuthorizedView has.
          type: string
        createTime:
          description: Output only. The time at which the authorized view was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the authorized view was
            updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse
      description: The response from a ListAuthorizedViews request.
      type: object
      properties:
        authorizedViews:
          description: The AuthorizedViews under the parent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse:
      id: GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse
      description: The response from a ListAuthorizedViews request.
      type: object
      properties:
        authorizedViews:
          description: The AuthorizedViews under the parent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1Assessment:
      id: GoogleCloudContactcenterinsightsV1Assessment
      description: The assessment resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the assessment. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}
          type: string
        createTime:
          description: Output only. The time at which the assessment was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the assessment was last updated.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the assessment.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified. This value should not be used.
            - The default state of all new assessments.
            - The assessment has been published.
            - The assessment has been appealed.
            - The assessment has been finalized.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - PUBLISHED
            - APPEALED
            - FINALIZED
        agentInfo:
          description: Information about the agent the assessment is for.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
    GoogleCloudContactcenterinsightsV1ListAssessmentsResponse:
      id: GoogleCloudContactcenterinsightsV1ListAssessmentsResponse
      description: The response of listing assessments.
      type: object
      properties:
        assessments:
          description: The assessments that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Assessment'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1PublishAssessmentRequest:
      id: GoogleCloudContactcenterinsightsV1PublishAssessmentRequest
      description: >-
        The message to publish an assessment. Draft and appealed assessments can
        be published. Publishing simply changes the state of the assessment to
        published, allowing the console and authorized views to filter on the
        state.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1AppealAssessmentRequest:
      id: GoogleCloudContactcenterinsightsV1AppealAssessmentRequest
      description: The message to appeal an assessment.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest:
      id: GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest
      description: >-
        The message to finalize an assessment. Finalizing makes an assessment
        and its notes immutable.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1Note:
      id: GoogleCloudContactcenterinsightsV1Note
      description: The conversation assessment note resource.
      type: object
      properties:
        conversationTurnNote:
          description: The note is associated with a conversation turn.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1NoteConversationTurnNote
        qaQuestionNote:
          description: >-
            The note is associated with a QA question in one of the
            conversation's scorecard results.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1NoteQaQuestionNote
        assessmentNote:
          description: The note is associated to the entire parent assessment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1NoteAssessmentNote
        name:
          description: >-
            Identifier. The resource name of the note. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/assessments/{assessment}/notes/{note}
          type: string
        createTime:
          description: Output only. The time at which the note was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time at which the note was last updated.
          readOnly: true
          type: string
          format: google-datetime
        noteCreator:
          description: Output only. The user that created the note.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UserInfo'
        content:
          description: The note content.
          type: string
    GoogleCloudContactcenterinsightsV1NoteConversationTurnNote:
      id: GoogleCloudContactcenterinsightsV1NoteConversationTurnNote
      description: A note about a conversation turn.
      type: object
      properties:
        turnIndex:
          description: The conversation turn index that the note is associated with.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1NoteQaQuestionNote:
      id: GoogleCloudContactcenterinsightsV1NoteQaQuestionNote
      description: A note about a QA question.
      type: object
      properties:
        qaQuestion:
          description: The question resource that the note is associated with.
          type: string
    GoogleCloudContactcenterinsightsV1NoteAssessmentNote:
      id: GoogleCloudContactcenterinsightsV1NoteAssessmentNote
      description: A note about the entire parent assessment.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1UserInfo:
      id: GoogleCloudContactcenterinsightsV1UserInfo
      description: Information about a user.
      type: object
      properties:
        username:
          description: The user's username.
          type: string
    GoogleCloudContactcenterinsightsV1ListNotesResponse:
      id: GoogleCloudContactcenterinsightsV1ListNotesResponse
      description: The response of listing notes.
      type: object
      properties:
        notes:
          description: The notes that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleIamV1SetIamPolicyRequest:
      id: GoogleIamV1SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/GoogleIamV1Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    GoogleIamV1Policy:
      id: GoogleIamV1Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
    GoogleTypeExpr:
      id: GoogleTypeExpr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
    GoogleIamV1AuditLogConfig:
      id: GoogleIamV1AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    GoogleIamV1TestIamPermissionsRequest:
      id: GoogleIamV1TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
        completedAnalysesCount:
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          type: integer
          format: int32
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        totalRequestedAnalysesCount:
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
          format: int32
        partialErrors:
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      type: object
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          description: Count of failed analyses.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original request for bulk delete.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
        partialErrors:
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
      description: The response for a bulk delete conversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsMetadata
      description: Metadata for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties:
        request:
          description: Output only. The original request for delete.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest
        partialErrors:
          description: >-
            Partial errors during deletion operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsResponse
      description: Response for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadata
      description: Metadata for the BulkDownloadFeedbackLabel endpoint.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request for download.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
        partialErrors:
          description: >-
            Partial errors during ingest operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        downloadStats:
          description: Output only. Statistics for BulkDownloadFeedbackLabels operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats:
      id: >-
        GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats
      description: Statistics for BulkDownloadFeedbackLabels operation.
      type: object
      properties:
        processedObjectCount:
          description: The number of objects processed during the download operation.
          type: integer
          format: int32
        successfulDownloadCount:
          description: >-
            The number of new feedback labels downloaded during this operation.
            Different from "processed" because some labels might not be
            downloaded because an error.
          type: integer
          format: int32
        totalFilesWritten:
          description: Total number of files written to the provided Cloud Storage bucket.
          type: integer
          format: int32
        fileNames:
          description: Output only. Full name of the files written to Cloud storage.
          readOnly: true
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsResponse
      description: Response for the BulkDownloadFeedbackLabel endpoint.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        conversation:
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          readOnly: true
          type: string
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1CreateIssueMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueMetadata
      description: Metadata for creating an issue.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueRequest
    GoogleCloudContactcenterinsightsV1CreateIssueRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueRequest
      description: The request to create an issue.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the issue.
          type: string
        issue:
          description: Required. The values for the new issue.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      description: The request to create an issue model.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      description: The request to delete an issue model.
      type: object
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
    GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagMetadata:
      id: GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagMetadata
      description: The metadata for deleting a QaQuestionTag Resource.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagRequest
    GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteQaQuestionTagRequest
      description: The request for deleting a QaQuestionTag.
      type: object
      properties:
        name:
          description: Required. The name of the QaQuestionTag to delete.
          type: string
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
        partialErrors:
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        completedExportCount:
          description: The number of conversations that were exported successfully.
          type: integer
          format: int32
        failedExportCount:
          description: The number of conversations that failed to be exported.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      description: Response for an export insights operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata
      description: Metadata used for export issue model.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      description: Response from export issue model
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata
      description: Metadata used for import issue model.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      description: Response from import issue model
      type: object
      properties:
        issueModel:
          description: The issue model that was imported.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
        partialErrors:
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
        sampledConversations:
          description: >-
            Output only. Stores the conversation resources produced by ingest
            sampling operations.
          readOnly: true
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
      description: Statistics for IngestConversations operation.
      type: object
      properties:
        processedObjectCount:
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          readOnly: true
          type: integer
          format: int32
        duplicatesSkippedCount:
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          readOnly: true
          type: integer
          format: int32
        successfulIngestCount:
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          type: integer
          format: int32
        failedIngestCount:
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          readOnly: true
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
        partialErrors:
          description: >-
            Partial errors during initializing operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1QueryMetricsMetadata:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsMetadata
      description: The metadata from querying metrics.
      type: object
      properties:
        resultIsTruncated:
          description: >-
            Whether the result rows were truncated because the result row size
            is too large to materialize.
          type: boolean
    GoogleCloudContactcenterinsightsV1QueryMetricsResponse:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponse
      description: The response for querying metrics.
      type: object
      properties:
        location:
          description: >-
            Required. The location of the data.
            "projects/{project}/locations/{location}"
          type: string
        updateTime:
          description: The metrics last update time.
          type: string
          format: google-datetime
        slices:
          description: >-
            A slice contains a total and (if the request specified a time
            granularity) a time series of metric values. Each slice contains a
            unique combination of the cardinality of dimensions from the
            request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
        macroAverageSlice:
          description: >-
            The macro average slice contains aggregated averages across the
            selected dimension. i.e. if group_by agent is specified this field
            will contain the average across all agents. This field is only
            populated if the request specifies a Dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSlice
      description: >-
        A slice contains a total and (if the request specified a time
        granularity) a time series of metric values. Each slice contains a
        unique combination of the cardinality of dimensions from the request.
        For example, if the request specifies a single ISSUE dimension and it
        has a cardinality of 2 (i.e. the data used to compute the metrics has 2
        issues in total), the response will have 2 slices: * Slice 1 ->
        dimensions=[Issue 1] * Slice 2 -> dimensions=[Issue 2]
      type: object
      properties:
        dimensions:
          description: A unique combination of dimensions that this slice represents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dimension'
        total:
          description: >-
            The total metric value. The interval of this data point is [starting
            create time, ending create time) from the request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
        timeSeries:
          description: >-
            A time series of metric values. This is only populated if the
            request specifies a time granularity other than NONE.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
      description: A data point contains the metric values mapped to an interval.
      type: object
      properties:
        conversationMeasure:
          description: The measure related to conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure
        interval:
          description: >-
            The interval that this data point represents. * If this is the total
            data point, the interval is [starting create time, ending create
            time) from the request. * If this a data point from the time series,
            the interval is [time, time + time granularity from the request).
          $ref: '#/components/schemas/GoogleTypeInterval'
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure:
      id: >-
        GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure
      description: The measure related to conversations.
      type: object
      properties:
        conversationCount:
          description: The conversation count.
          type: integer
          format: int32
        averageSilencePercentage:
          description: The average silence percentage.
          type: number
          format: float
        averageDuration:
          description: The average duration.
          type: string
          format: google-duration
        averageTurnCount:
          description: The average turn count.
          type: number
          format: float
        averageAgentSentimentScore:
          description: The average agent's sentiment score.
          type: number
          format: float
        averageClientSentimentScore:
          description: The average client's sentiment score.
          type: number
          format: float
        averageCustomerSatisfactionRating:
          description: The average customer satisfaction rating.
          type: number
          format: double
        averageQaNormalizedScore:
          description: >-
            Average QA normalized score. Will exclude 0's in average
            calculation.
          type: number
          format: double
        qaTagScores:
          description: Average QA normalized score for all the tags.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
        averageQaQuestionNormalizedScore:
          description: >-
            Average QA normalized score averaged for questions averaged across
            all revisions of the parent scorecard. Will be only populated if the
            request specifies a dimension of QA_QUESTION_ID.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore:
      id: >-
        GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
      description: Average QA normalized score for the tag.
      type: object
      properties:
        tag:
          description: Tag name.
          type: string
        averageTagNormalizedScore:
          description: Average tag normalized score per tag.
          type: number
          format: double
    GoogleTypeInterval:
      id: GoogleTypeInterval
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
      type: object
      properties:
        startTime:
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          type: string
          format: google-datetime
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries:
      id: GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceTimeSeries
      description: A time series of metric values.
      type: object
      properties:
        dataPoints:
          description: The data points that make up the time series .
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPoint
    GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewMetadata:
      id: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewMetadata
      description: The metadata for querying performance overview.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewResponse:
      id: GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewResponse
      description: The response for querying performance overview.
      type: object
      properties:
        summaryText:
          description: The summary text of the performance.
          type: string
    GoogleCloudContactcenterinsightsV1SampleConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1SampleConversationsMetadata
      description: The metadata for an SampleConversations operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: >-
            Output only. The original request for sample conversations to
            dataset.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SampleConversationsRequest
        partialErrors:
          description: >-
            Output only. Partial errors during sample conversations operation
            that might cause the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        sampleConversationsStats:
          description: Output only. Statistics for SampleConversations operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SampleConversationsMetadataSampleConversationsStats
    GoogleCloudContactcenterinsightsV1SampleConversationsMetadataSampleConversationsStats:
      id: >-
        GoogleCloudContactcenterinsightsV1SampleConversationsMetadataSampleConversationsStats
      description: Statistics for SampleConversations operation.
      type: object
      properties:
        successfulSampleCount:
          description: >-
            Output only. The number of new conversations added during this
            sample operation.
          readOnly: true
          type: integer
          format: int32
        failedSampleCount:
          description: >-
            Output only. The number of objects which were unable to be sampled
            due to errors. The errors are populated in the partial_errors field.
          readOnly: true
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1SampleConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1SampleConversationsResponse
      description: The response to an SampleConversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagMetadata:
      id: GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagMetadata
      description: The metadata for updating a QaQuestionTag Resource.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagRequest
    GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagRequest:
      id: GoogleCloudContactcenterinsightsV1UpdateQaQuestionTagRequest
      description: The request for updating a QaQuestionTag.
      type: object
      properties:
        qaQuestionTag:
          description: Required. The QaQuestionTag to update.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag'
        updateMask:
          description: >-
            Optional. The list of fields to be updated. All possible fields can
            be updated by passing `*`, or a subset of the following updateable
            fields can be provided: * `qa_question_tag_name` - the name of the
            tag * `qa_question_ids` - the list of questions the tag applies to
          type: string
          format: google-fieldmask
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      description: The metadata for an `UploadConversation` operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
        analysisOperation:
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          readOnly: true
          type: string
        appliedRedactionConfig:
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
        completedAnalysesCount:
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          type: integer
          format: int32
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        totalRequestedAnalysesCount:
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
          format: int32
        partialErrors:
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      type: object
      properties:
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        filter:
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
          type: string
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          type: number
          format: float
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      properties:
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
          items:
            type: string
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runIssueModelAnnotator:
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
          type: boolean
        issueModels:
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
          items:
            type: string
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
        runQaAnnotator:
          description: Whether to run the QA annotator.
          type: boolean
        qaConfig:
          description: Configuration for the QA annotator.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
      type: object
      properties:
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
        summarizationModel:
          description: Default summarization model to be used.
          type: string
          enumDescriptions:
            - Unspecified summarization model.
            - >-
              The CCAI baseline model. This model is deprecated and will be
              removed in the future. We recommend using `generator` instead.
            - >-
              The CCAI baseline model, V2.0. This model is deprecated and will
              be removed in the future. We recommend using `generator` instead.
          enumDeprecated:
            - false
            - true
            - true
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
        generator:
          description: >-
            The resource name of the existing created generator. Format:
            projects//locations//generators/
          type: string
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfig
      description: Configuration for the QA feature.
      type: object
      properties:
        scorecardList:
          description: A manual list of scorecards to score.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorQaConfigScorecardList
      description: Container for a list of scorecards.
      type: object
      properties:
        qaScorecardRevisions:
          description: List of QaScorecardRevisions.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      type: object
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          description: Count of failed analyses.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original request for bulk delete.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
        partialErrors:
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
      description: The request to delete conversations in bulk.
      type: object
      properties:
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
        filter:
          description: Filter used to select the subset of conversations to delete.
          type: string
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          type: integer
          format: int32
        force:
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
      description: The response for a bulk delete conversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsMetadata
      description: Metadata for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties:
        request:
          description: Output only. The original request for delete.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsRequest
        partialErrors:
          description: >-
            Partial errors during deletion operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsRequest
      description: Request for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties:
        parent:
          description: Required. The parent resource for new feedback labels.
          type: string
        filter:
          description: >-
            Optional. A filter to reduce results to a specific subset. Supports
            disjunctions (OR) and conjunctions (AND). Supported fields: *
            `issue_model_id` * `qa_question_id` * `qa_scorecard_id` *
            `min_create_time` * `max_create_time` * `min_update_time` *
            `max_update_time` * `feedback_label_type`: QUALITY_AI,
            TOPIC_MODELING
          type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteFeedbackLabelsResponse
      description: Response for the BulkDeleteFeedbackLabels endpoint.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      description: Metadata for a create analysis operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        conversation:
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          readOnly: true
          type: string
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueMetadata
      description: Metadata for creating an issue.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueRequest
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueRequest
      description: The request to create an issue.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the issue.
          type: string
        issue:
          description: Required. The values for the new issue.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Issue'
    GoogleCloudContactcenterinsightsV1alpha1Issue:
      id: GoogleCloudContactcenterinsightsV1alpha1Issue
      description: The issue resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        displayName:
          description: The representative name for the issue.
          type: string
        createTime:
          description: Output only. The time at which this issue was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The most recent time that this issue was updated.
          readOnly: true
          type: string
          format: google-datetime
        sampleUtterances:
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
          readOnly: true
          type: array
          items:
            type: string
        displayDescription:
          description: Representative description of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      description: The request to create an issue model.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          description: Required. The issue model to create.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      description: The issue model resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        displayName:
          description: The representative name for the issue model.
          type: string
        createTime:
          description: Output only. The time at which this issue model was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        issueCount:
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
          format: int64
        state:
          description: Output only. State of the model.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
        modelType:
          description: Type of the model.
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
        languageCode:
          description: Language of the model.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      description: Configs for the input data used to create the issue model.
      type: object
      properties:
        medium:
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          deprecated: true
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          type: string
          format: int64
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset. Refer to
            https://cloud.google.com/contact-center/insights/docs/filtering for
            details.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
      type: object
      properties:
        analyzedConversationsCount:
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          type: string
          format: int64
        unclassifiedConversationsCount:
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
          format: int64
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      type: object
      properties:
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
        displayName:
          description: Display name of the issue.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
      type: object
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagMetadata
      description: The metadata for deleting a QaQuestionTag Resource.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagRequest
    GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteQaQuestionTagRequest
      description: The request for deleting a QaQuestionTag.
      type: object
      properties:
        name:
          description: Required. The name of the QaQuestionTag to delete.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      description: The request to deploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      description: The response to deploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for export.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
        partialErrors:
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        completedExportCount:
          description: The number of conversations that were exported successfully.
          type: integer
          format: int32
        failedExportCount:
          description: The number of conversations that failed to be exported.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      description: The request to export insights.
      type: object
      properties:
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
        parent:
          description: Required. The parent resource to export data from.
          type: string
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
        kmsKey:
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
          type: string
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          type: string
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        exportSchemaVersion:
          description: Optional. Version of the export schema.
          type: string
          enumDescriptions:
            - Unspecified. Defaults to EXPORT_V3.
            - Export schema version 1.
            - Export schema version 2.
            - Export schema version 3.
            - Export schema version 4.
            - Export schema version 5.
            - Export schema version 6.
            - Export schema version 7.
            - Export schema version 8.
            - Export schema version 9.
            - Export schema version 10.
            - Export schema version latest available.
          enum:
            - EXPORT_SCHEMA_VERSION_UNSPECIFIED
            - EXPORT_V1
            - EXPORT_V2
            - EXPORT_V3
            - EXPORT_V4
            - EXPORT_V5
            - EXPORT_V6
            - EXPORT_V7
            - EXPORT_V8
            - EXPORT_V9
            - EXPORT_V10
            - EXPORT_VERSION_LATEST_AVAILABLE
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
      properties:
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
        table:
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      description: Response for an export insights operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata
      description: Metadata used for export issue model.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
      description: Request to export an issue model.
      type: object
      properties:
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
        name:
          description: Required. The issue model to export.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
      description: Google Cloud Storage Object URI to save the issue model to.
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      description: Response from export issue model
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata
      description: Metadata used for import issue model.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
      description: Request to import an issue model.
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        createNewModel:
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
      description: Google Cloud Storage Object URI to get the issue model file from.
      type: object
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      description: Response from import issue model
      type: object
      properties:
        issueModel:
          description: The issue model that was imported.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      description: The metadata for an IngestConversations operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
        partialErrors:
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
        sampledConversations:
          description: >-
            Output only. Stores the conversation resources produced by ingest
            sampling operations.
          readOnly: true
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      description: The request to ingest conversations.
      type: object
      properties:
        gcsSource:
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
        sampleSize:
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      type: object
      properties:
        bucketUri:
          description: >-
            Optional. The Cloud Storage bucket containing source objects. Avoid
            passing this. Pass this through one of `transcript_bucket_uri` or
            `audio_bucket_uri`.
          type: string
        bucketObjectType:
          description: >-
            Optional. Specifies the type of the objects in `bucket_uri`. Avoid
            passing this. This is inferred from the `transcript_bucket_uri`,
            `audio_bucket_uri`.
          type: string
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
        transcriptBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation transcripts.
            Note that: [1] Transcript files are expected to be in JSON format.
            [2] Transcript, audio, metadata files must be in separate buckets /
            folders. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        audioBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation audio file.
            Note that: [1] Audio files will be transcribed if not already. [2]
            Audio files and transcript files must be in separate buckets /
            folders. [3] A source file and its corresponding audio file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/transcript/conversation1.json` and
            `gs://bucket/audio/conversation1.mp3`.
          type: string
        metadataBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets / folders. [3] A source file and its corresponding metadata
            file must share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 100 labels per
            conversation.
          type: array
          items:
            type: string
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      type: object
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
      type: object
      properties:
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        agentChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
        customerChannel:
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      type: object
      properties:
        deidentifyTemplate:
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
          type: string
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SpeechConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      description: Statistics for IngestConversations operation.
      type: object
      properties:
        processedObjectCount:
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          readOnly: true
          type: integer
          format: int32
        duplicatesSkippedCount:
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          readOnly: true
          type: integer
          format: int32
        successfulIngestCount:
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          type: integer
          format: int32
        failedIngestCount:
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          readOnly: true
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
        partialErrors:
          description: >-
            Partial errors during initializing operation that might cause the
            operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
      type: object
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the `kms_key_name` field is left empty, no
            encryption will be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
    GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec:
      id: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. `Conversation`).
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by our default encryption key. Only the key in the same
            location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse
      description: The response to initialize a location-level encryption specification.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1ListAllFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ListAllFeedbackLabelsResponse
      description: The response for listing all feedback labels.
      type: object
      properties:
        feedbackLabels:
          description: The feedback labels that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel:
      id: GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
      description: >-
        Represents a conversation, resource, and label provided by the user. Can
        take the form of a string label or a QaAnswer label. QaAnswer labels are
        used for Quality AI example conversations. String labels are used for
        Topic Modeling. AgentAssistSummary labels are used for Agent Assist
        Summarization.
      type: object
      properties:
        label:
          description: String label used for Topic Modeling.
          type: string
        qaAnswerLabel:
          description: QaAnswer label used for Quality AI example conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
        name:
          description: >-
            Immutable. Resource name of the FeedbackLabel. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/feedbackLabels/{feedback_label}
          type: string
        labeledResource:
          description: >-
            Name of the resource to be labeled. Supported resources are: *
            `projects/{project}/locations/{location}/qaScorecards/{scorecard}/revisions/{revision}/qaQuestions/{question}`
            *
            `projects/{project}/locations/{location}/issueModels/{issue_model}`
            *
            `projects/{project}/locations/{location}/generators/{generator_id}`
          type: string
        createTime:
          description: Output only. Create time of the label.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Update time of the label.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue:
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
      description: >-
        Message for holding the value of a QaAnswer. QaQuestion.AnswerChoice
        defines the possible answer values for a question.
      type: object
      properties:
        strValue:
          description: String value.
          type: string
        numValue:
          description: Numerical value.
          type: number
          format: double
        boolValue:
          description: Boolean value.
          type: boolean
        naValue:
          description: A value of "Not Applicable (N/A)". Should only ever be `true`.
          type: boolean
        skipValue:
          description: >-
            Output only. A value of "Skip". If provided, this field may only be
            set to `true`. If a question receives this answer, it will be
            excluded from any score calculations. This would mean that the
            question was not evaluated.
          readOnly: true
          type: boolean
        key:
          description: >-
            A short string used as an identifier. Matches the value used in
            QaQuestion.AnswerChoice.key.
          type: string
        score:
          description: Output only. Numerical score of the answer.
          readOnly: true
          type: number
          format: double
        potentialScore:
          description: Output only. The maximum potential score of the question.
          readOnly: true
          type: number
          format: double
        normalizedScore:
          description: >-
            Output only. Normalized score of the questions. Calculated as score
            / potential_score.
          readOnly: true
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1alpha1ListFeedbackLabelsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1ListFeedbackLabelsResponse
      description: The response for listing feedback labels.
      type: object
      properties:
        feedbackLabels:
          description: The feedback labels that match the request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
        nextPageToken:
          description: The next page token.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsMetadata
      description: The metadata from querying metrics.
      type: object
      properties:
        resultIsTruncated:
          description: >-
            Whether the result rows were truncated because the result row size
            is too large to materialize.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponse
      description: The response for querying metrics.
      type: object
      properties:
        location:
          description: >-
            Required. The location of the data.
            "projects/{project}/locations/{location}"
          type: string
        updateTime:
          description: The metrics last update time.
          type: string
          format: google-datetime
        slices:
          description: >-
            A slice contains a total and (if the request specified a time
            granularity) a time series of metric values. Each slice contains a
            unique combination of the cardinality of dimensions from the
            request.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
        macroAverageSlice:
          description: >-
            The macro average slice contains aggregated averages across the
            selected dimension. i.e. if group_by agent is specified this field
            will contain the average across all agents. This field is only
            populated if the request specifies a Dimension.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice:
      id: GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSlice
      description: >-
        A slice contains a total and (if the request specified a time
        granularity) a time series of metric values. Each slice contains a
        unique combination of the cardinality of dimensions from the request.
        For example, if the request specifies a single ISSUE dimension and it
        has a cardinality of 2 (i.e. the data used to compute the metrics has 2
        issues in total), the response will have 2 slices: * Slice 1 ->
        dimensions=[Issue 1] * Slice 2 -> dimensions=[Issue 2]
      type: object
      properties:
        dimensions:
          description: A unique combination of dimensions that this slice represents.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Dimension
        total:
          description: >-
            The total metric value. The interval of this data point is [starting
            create time, ending create time) from the request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
        timeSeries:
          description: >-
            A time series of metric values. This is only populated if the
            request specifies a time granularity other than NONE.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries
    GoogleCloudContactcenterinsightsV1alpha1Dimension:
      id: GoogleCloudContactcenterinsightsV1alpha1Dimension
      description: >-
        A dimension determines the grouping key for the query. In SQL terms,
        these would be part of both the "SELECT" and "GROUP BY" clauses.
      type: object
      properties:
        issueDimensionMetadata:
          description: Output only. Metadata about the issue dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata
        agentDimensionMetadata:
          description: Output only. Metadata about the agent dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata
        qaQuestionDimensionMetadata:
          description: Output only. Metadata about the QA question dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata
        qaQuestionAnswerDimensionMetadata:
          description: Output only. Metadata about the QA question-answer dimension.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata
        dimensionKey:
          description: The key of the dimension.
          type: string
          enumDescriptions:
            - The key of the dimension is unspecified.
            - The dimension is keyed by issues.
            - The dimension is keyed by issue names.
            - The dimension is keyed by agents.
            - The dimension is keyed by agent teams.
            - >-
              The dimension is keyed by QaQuestionIds. Note that: We only group
              by the QuestionId and not the revision-id of the scorecard this
              question is a part of. This allows for showing stats for the same
              question across different scorecard revisions.
            - >-
              The dimension is keyed by QaQuestionIds-Answer value pairs. Note
              that: We only group by the QuestionId and not the revision-id of
              the scorecard this question is a part of. This allows for showing
              distribution of answers per question across different scorecard
              revisions.
            - >-
              The dimension is keyed by QaScorecardIds. Note that: We only group
              by the ScorecardId and not the revision-id of the scorecard. This
              allows for showing stats for the same scorecard across different
              revisions. This metric is mostly only useful if querying the
              average normalized score per scorecard.
            - The dimension is keyed by the conversation profile ID.
            - The dimension is keyed by the conversation medium.
          enum:
            - DIMENSION_KEY_UNSPECIFIED
            - ISSUE
            - ISSUE_NAME
            - AGENT
            - AGENT_TEAM
            - QA_QUESTION_ID
            - QA_QUESTION_ANSWER_VALUE
            - QA_SCORECARD_ID
            - CONVERSATION_PROFILE_ID
            - MEDIUM
    GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DimensionIssueDimensionMetadata
      description: Metadata about the issue dimension.
      type: object
      properties:
        issueId:
          description: The issue ID.
          type: string
        issueDisplayName:
          description: The issue display name.
          type: string
        issueModelId:
          description: The parent issue model ID.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1DimensionAgentDimensionMetadata
      description: Metadata about the agent dimension.
      type: object
      properties:
        agentId:
          description: Optional. A user-specified string representing the agent.
          type: string
        agentDisplayName:
          description: Optional. The agent's name
          type: string
        agentTeam:
          description: Optional. A user-specified string representing the agent's team.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionDimensionMetadata
      description: Metadata about the QA question dimension.
      type: object
      properties:
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
        questionBody:
          description: Optional. The full body of the question.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1DimensionQaQuestionAnswerDimensionMetadata
      description: >-
        Metadata about the QA question-answer dimension. This is useful for
        showing the answer distribution for questions for a given scorecard.
      type: object
      properties:
        qaScorecardId:
          description: Optional. The QA scorecard ID.
          type: string
        qaQuestionId:
          description: Optional. The QA question ID.
          type: string
        questionBody:
          description: Optional. The full body of the question.
          type: string
        answerValue:
          description: Optional. The full body of the question.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
      description: A data point contains the metric values mapped to an interval.
      type: object
      properties:
        conversationMeasure:
          description: The measure related to conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure
        interval:
          description: >-
            The interval that this data point represents. * If this is the total
            data point, the interval is [starting create time, ending create
            time) from the request. * If this a data point from the time series,
            the interval is [time, time + time granularity from the request).
          $ref: '#/components/schemas/GoogleTypeInterval'
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasure
      description: The measure related to conversations.
      type: object
      properties:
        conversationCount:
          description: The conversation count.
          type: integer
          format: int32
        averageSilencePercentage:
          description: The average silence percentage.
          type: number
          format: float
        averageDuration:
          description: The average duration.
          type: string
          format: google-duration
        averageTurnCount:
          description: The average turn count.
          type: number
          format: float
        averageAgentSentimentScore:
          description: The average agent's sentiment score.
          type: number
          format: float
        averageClientSentimentScore:
          description: The average client's sentiment score.
          type: number
          format: float
        averageCustomerSatisfactionRating:
          description: The average customer satisfaction rating.
          type: number
          format: double
        averageQaNormalizedScore:
          description: >-
            Average QA normalized score. Will exclude 0's in average
            calculation.
          type: number
          format: double
        qaTagScores:
          description: Average QA normalized score for all the tags.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
        averageQaQuestionNormalizedScore:
          description: >-
            Average QA normalized score averaged for questions averaged across
            all revisions of the parent scorecard. Will be only populated if the
            request specifies a dimension of QA_QUESTION_ID.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore
      description: Average QA normalized score for the tag.
      type: object
      properties:
        tag:
          description: Tag name.
          type: string
        averageTagNormalizedScore:
          description: Average tag normalized score per tag.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceTimeSeries
      description: A time series of metric values.
      type: object
      properties:
        dataPoints:
          description: The data points that make up the time series .
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QueryMetricsResponseSliceDataPoint
    GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewMetadata
      description: The metadata for querying performance overview.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1QueryPerformanceOverviewResponse
      description: The response for querying performance overview.
      type: object
      properties:
        summaryText:
          description: The summary text of the performance.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadata
      description: The metadata for an SampleConversations operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: >-
            Output only. The original request for sample conversations to
            dataset.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SampleConversationsRequest
        partialErrors:
          description: >-
            Output only. Partial errors during sample conversations operation
            that might cause the operation output to be incomplete.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        sampleConversationsStats:
          description: Output only. Statistics for SampleConversations operation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadataSampleConversationsStats
    GoogleCloudContactcenterinsightsV1alpha1SampleConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1SampleConversationsRequest
      description: The request to sample conversations to a dataset.
      type: object
      properties:
        destinationDataset:
          description: The dataset resource to copy the sampled conversations to.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Dataset'
        parent:
          description: Required. The parent resource of the dataset.
          type: string
        sampleRule:
          description: Optional. The sample rule used for sampling conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SampleRule
    GoogleCloudContactcenterinsightsV1alpha1Dataset:
      id: GoogleCloudContactcenterinsightsV1alpha1Dataset
      description: >-
        Dataset resource represents a collection of conversations that may be
        bounded (Static Dataset, e.g. golden dataset for training), or unbounded
        (Dynamic Dataset, e.g. live traffic, or agent training traffic)
      type: object
      properties:
        name:
          description: >-
            Immutable. Identifier. Resource name of the dataset. Format:
            projects/{project}/locations/{location}/datasets/{dataset}
          type: string
        displayName:
          description: Display name for the dataaset
          type: string
        description:
          description: Dataset description.
          type: string
        type:
          description: Dataset usage type.
          type: string
          enumDescriptions:
            - Default value for unspecified.
            - For evals only.
            - >-
              Dataset with new conversations coming in regularly (Insights
              legacy conversations and AI trainer)
          enum:
            - TYPE_UNSPECIFIED
            - EVAL
            - LIVE
        ttl:
          description: Optional. Option TTL for the dataset.
          type: string
          format: google-duration
        createTime:
          description: Output only. Dataset create time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Dataset update time.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1SampleRule:
      id: GoogleCloudContactcenterinsightsV1alpha1SampleRule
      description: Message for sampling conversations.
      type: object
      properties:
        samplePercentage:
          description: >-
            Percentage of conversations that we should sample based on the
            dimension between [0, 100].
          type: number
          format: double
        sampleRow:
          description: >-
            Number of the conversations that we should sample based on the
            dimension.
          type: string
          format: int64
        dimension:
          description: >-
            Optional. Group by dimension to sample the conversation. If no
            dimension is provided, the sampling will be applied to the project
            level. Current supported dimensions is
            'quality_metadata.agent_info.agent_id'.
          type: string
        conversationFilter:
          description: >-
            To specify the filter for the conversions that should apply this
            sample rule. An empty filter means this sample rule applies to all
            conversations.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadataSampleConversationsStats:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1SampleConversationsMetadataSampleConversationsStats
      description: Statistics for SampleConversations operation.
      type: object
      properties:
        successfulSampleCount:
          description: >-
            Output only. The number of new conversations added during this
            sample operation.
          readOnly: true
          type: integer
          format: int32
        failedSampleCount:
          description: >-
            Output only. The number of objects which were unable to be sampled
            due to errors. The errors are populated in the partial_errors field.
          readOnly: true
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1SampleConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1SampleConversationsResponse
      description: The response to an SampleConversations operation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
      description: The request to undeploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagMetadata
      description: The metadata for updating a QaQuestionTag Resource.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagRequest
    GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UpdateQaQuestionTagRequest
      description: The request for updating a QaQuestionTag.
      type: object
      properties:
        qaQuestionTag:
          description: Required. The QaQuestionTag to update.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaQuestionTag
        updateMask:
          description: >-
            Optional. The list of fields to be updated. All possible fields can
            be updated by passing `*`, or a subset of the following updateable
            fields can be provided: * `qa_question_tag_name` - the name of the
            tag * `qa_question_ids` - the list of questions the tag applies to
          type: string
          format: google-fieldmask
    GoogleCloudContactcenterinsightsV1alpha1QaQuestionTag:
      id: GoogleCloudContactcenterinsightsV1alpha1QaQuestionTag
      description: >-
        A tag is a resource which aims to categorize a set of questions across
        multiple scorecards, e.g., "Customer Satisfaction","Billing", etc.
      type: object
      properties:
        name:
          description: >-
            Identifier. Resource name for the QaQuestionTag Format
            projects/{project}/locations/{location}/qaQuestionTags/{qa_question_tag}
            In the above format, the last segment, i.e., qa_question_tag, is a
            server-generated ID corresponding to the tag resource.
          type: string
        displayName:
          description: Required. A user-specified display name for the tag.
          type: string
        qaQuestionIds:
          description: >-
            Optional. The list of Scorecard Question IDs that the tag applies
            to. Each QaQuestionId is represented as a full resource name
            containing the Question ID. Lastly, Since a tag may not necessarily
            be referenced by any Scorecard Questions, we treat this field as
            optional.
          type: array
          items:
            type: string
        createTime:
          description: Output only. The time at which the question tag was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the question tag was
            updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      description: The metadata for an `UploadConversation` operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
        analysisOperation:
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          readOnly: true
          type: string
        appliedRedactionConfig:
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      description: Request to upload a conversation.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        conversation:
          description: Required. The conversation resource to create.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation
        conversationId:
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
          type: string
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        speechConfig:
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      description: The conversation resource.
      type: object
      properties:
        callMetadata:
          description: Call-specific metadata.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
        expireTime:
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          type: string
          format: google-datetime
        ttl:
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          type: string
          format: google-duration
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
        createTime:
          description: Output only. The time at which the conversation was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: The time at which the conversation started.
          type: string
          format: google-datetime
        languageCode:
          description: A user-specified language code for the conversation.
          type: string
        agentId:
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
          type: string
        labels:
          description: >-
            A map for the user to specify any custom fields. A maximum of 100
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          type: object
          additionalProperties:
            type: string
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
        metadataJson:
          description: >-
            Input only. JSON metadata encoded as a string. This field is
            primarily used by Insights integrations with various telephony
            systems and must be in one of Insight's supported formats.
          type: string
        transcript:
          description: Output only. The conversation transcript.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
        medium:
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        duration:
          description: Output only. The duration of the conversation.
          readOnly: true
          type: string
          format: google-duration
        turnCount:
          description: Output only. The number of turns in the conversation.
          readOnly: true
          type: integer
          format: int32
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis
        latestSummary:
          description: Output only. Latest summary of the conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
        runtimeAnnotations:
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
        dialogflowIntents:
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          readOnly: true
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      description: Call-specific metadata.
      type: object
      properties:
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      description: The conversation source, which is a combination of transcript and audio.
      type: object
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
        metadataUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation metadata.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        transcriptUri:
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      description: A Dialogflow source of conversation data.
      type: object
      properties:
        dialogflowConversation:
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          readOnly: true
          type: string
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
      description: Conversation metadata related to quality management.
      type: object
      properties:
        customerSatisfactionRating:
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
          type: integer
          format: int32
        waitDuration:
          description: The amount of time the customer waited to connect with an agent.
          type: string
          format: google-duration
        menuPath:
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
          type: string
        agentInfo:
          description: Information about agents involved in the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
        feedbackLabels:
          description: Input only. The feedback labels associated with the conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FeedbackLabel
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
      description: Information about an agent involved in the conversation.
      type: object
      properties:
        agentId:
          description: A user-specified string representing the agent.
          type: string
        displayName:
          description: The agent's name.
          type: string
        team:
          description: >-
            A user-specified string representing the agent's team. Deprecated in
            favor of the `teams` field.
          deprecated: true
          type: string
        teams:
          description: User-specified strings representing the agent's teams.
          type: array
          items:
            type: string
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
        agentType:
          description: The agent type, e.g. HUMAN_AGENT.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        location:
          description: The agent's location.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      description: A message representing the transcript of a conversation.
      type: object
      properties:
        transcriptSegments:
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
      properties:
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        text:
          description: The text of this segment.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        words:
          description: >-
            A list of the word-specific information for each word in the
            segment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        channelTag:
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
          format: int32
        segmentParticipant:
          description: The participant of this segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      type: object
      properties:
        startOffset:
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          type: string
          format: google-duration
        endOffset:
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
          type: string
          format: google-duration
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      description: The call participant speaking for a given utterance.
      type: object
      properties:
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipant:
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        role:
          description: The role of the participant.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      description: The data for a sentiment annotation.
      type: object
      properties:
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            absolute magnitude of sentiment regardless of score.
          type: number
          format: float
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      description: The analysis resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        requestTime:
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
          format: google-datetime
        createTime:
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          readOnly: true
          type: string
          format: google-datetime
        analysisResult:
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      description: The result of an analysis.
      type: object
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
      type: object
      properties:
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
        silence:
          description: Overall conversation-level silence during the call.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
        qaScorecardResults:
          description: Results of scoring QaScorecards.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
      type: object
      properties:
        interruptionData:
          description: Data specifying an interruption.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData
        sentimentData:
          description: Data specifying sentiment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
        silenceData:
          description: Data specifying silence.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData
        holdData:
          description: Data specifying a hold.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
        intentMatchData:
          description: Data specifying an intent match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        issueMatchData:
          description: Data specifying an issue match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          type: integer
          format: int32
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        annotationEndBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      description: The data for an interruption annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      description: The data for a silence annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      type: object
      properties:
        entityUniqueId:
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
          type: string
        type:
          description: The type of the entity mention.
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      type: object
      properties:
        intentUniqueId:
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      type: object
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      description: The data for an issue match annotation.
      type: object
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      description: Information about the issue.
      type: object
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
          type: number
          format: double
        displayName:
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analysis and immutable since then.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      type: object
      properties:
        wordIndex:
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
          format: int32
        transcriptIndex:
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      type: object
      properties:
        displayName:
          description: The representative name for the entity.
          type: string
        type:
          description: The entity type.
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        metadata:
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          type: object
          additionalProperties:
            type: string
        salience:
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
          type: number
          format: float
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      type: object
      properties:
        channelTag:
          description: The channel of the audio that the data applies to.
          type: integer
          format: int32
        sentimentData:
          description: Data specifying sentiment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
      description: Conversation-level silence data.
      type: object
      properties:
        silenceDuration:
          description: Amount of time calculated to be in silence.
          type: string
          format: google-duration
        silencePercentage:
          description: Percentage of the total conversation spent in silence.
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      type: object
      properties:
        id:
          description: The unique identifier of the intent.
          type: string
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      description: Issue Modeling result on a conversation.
      type: object
      properties:
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult:
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResult
      description: >-
        The results of scoring a single conversation against a QaScorecard.
        Contains a collection of QaAnswers and aggregate score.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the scorecard result. Format:
            projects/{project}/locations/{location}/qaScorecardResults/{qa_scorecard_result}
          type: string
        qaScorecardRevision:
          description: The QaScorecardRevision scored by this result.
          type: string
        conversation:
          description: The conversation scored by this result.
          type: string
        createTime:
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
          format: google-datetime
        agentId:
          description: ID of the agent that handled the conversation.
          type: string
        qaAnswers:
          description: Set of QaAnswers represented in the result.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswer
        score:
          description: >-
            The overall numerical score of the result, incorporating any manual
            edits if they exist.
          type: number
          format: double
        potentialScore:
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
          type: number
          format: double
        normalizedScore:
          description: >-
            The normalized score, which is the score divided by the potential
            score. Any manual edits are included if they exist.
          type: number
          format: double
        qaTagResults:
          description: Collection of tags and their scores.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
        scoreSources:
          description: List of all individual score sets.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource
    GoogleCloudContactcenterinsightsV1alpha1QaAnswer:
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswer
      description: An answer to a QaQuestion.
      type: object
      properties:
        qaQuestion:
          description: The QaQuestion answered by this answer.
          type: string
        conversation:
          description: The conversation the answer applies to.
          type: string
        questionBody:
          description: Question text. E.g., "Did the agent greet the customer?"
          type: string
        answerValue:
          description: The main answer value, incorporating any manual edits if they exist.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
        tags:
          description: >-
            User-defined list of arbitrary tags. Matches the value from
            QaScorecard.ScorecardQuestion.tags. Used for grouping/organization
            and for weighting the score of each answer.
          type: array
          items:
            type: string
        answerSources:
          description: List of all individual answers given to the question.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource
    GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource:
      id: GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerSource
      description: >-
        A question may have multiple answers from varying sources, one of which
        becomes the "main" answer above. AnswerSource represents each individual
        answer.
      type: object
      properties:
        sourceType:
          description: What created the answer.
          type: string
          enumDescriptions:
            - Source type is unspecified.
            - Answer was system-generated; created during an Insights analysis.
            - Answer was created by a human via manual edit.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED
            - MANUAL_EDIT
        answerValue:
          description: The answer value from this source.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaAnswerAnswerValue
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult:
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
      description: Tags and their corresponding results.
      type: object
      properties:
        tag:
          description: The tag the score applies to.
          type: string
        score:
          description: The score the tag applies to.
          type: number
          format: double
        potentialScore:
          description: The potential score the tag applies to.
          type: number
          format: double
        normalizedScore:
          description: The normalized score the tag applies to.
          type: number
          format: double
    GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource:
      id: GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultScoreSource
      description: >-
        A scorecard result may have multiple sets of scores from varying
        sources, one of which becomes the "main" answer above. A ScoreSource
        represents each individual set of scores.
      type: object
      properties:
        sourceType:
          description: What created the score.
          type: string
          enumDescriptions:
            - Source type is unspecified.
            - Score is derived only from system-generated answers.
            - >-
              Score is derived from both system-generated answers, and includes
              any manual edits if they exist.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - SYSTEM_GENERATED_ONLY
            - INCLUDES_MANUAL_EDITS
        score:
          description: The overall numerical score of the result.
          type: number
          format: double
        potentialScore:
          description: >-
            The maximum potential overall score of the scorecard. Any questions
            answered using `na_value` are excluded from this calculation.
          type: number
          format: double
        normalizedScore:
          description: >-
            The normalized score, which is the score divided by the potential
            score.
          type: number
          format: double
        qaTagResults:
          description: Collection of tags and their scores.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1QaScorecardResultQaTagResult
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
      description: Conversation summarization suggestion data.
      type: object
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        textSections:
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
          type: object
          additionalProperties:
            type: string
        confidence:
          description: The confidence score of the summarization.
          type: number
          format: float
        metadata:
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        generatorId:
          description: Agent Assist generator ID.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
      type: object
      properties:
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
        faqAnswer:
          description: Agent Assist FAQ answer data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        createTime:
          description: The time at which this annotation was created.
          type: string
          format: google-datetime
        startBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        endBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
        userInput:
          description: Explicit input used for generating the answer
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
      type: object
      properties:
        title:
          description: Article title.
          type: string
        uri:
          description: Article URI.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: float
        metadata:
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
          type: string
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      type: object
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      description: Agent Assist Smart Reply data.
      type: object
      properties:
        reply:
          description: The content of the reply.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: double
        metadata:
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      description: Agent Assist Smart Compose suggestion data.
      type: object
      properties:
        suggestion:
          description: The content of the suggestion.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
          format: double
        metadata:
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
          additionalProperties:
            type: string
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      description: Dialogflow interaction data.
      type: object
      properties:
        dialogflowIntentId:
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: string
        confidence:
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      type: object
      properties:
        correctnessLevel:
          description: The correctness level of an answer.
          type: string
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput:
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
      description: Explicit input used for generating the answer
      type: object
      properties:
        query:
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
          type: string
        generatorName:
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
          type: string
        querySource:
          description: Query source for the answer.
          type: string
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      type: object
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/settings/methods/update_settings'
        replace: []
        delete: []
    encryption_spec:
      id: google.contactcenterinsights.encryption_spec
      name: encryption_spec
      title: Encryption_spec
      methods:
        get_encryption_spec:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_spec/methods/get_encryption_spec
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.contactcenterinsights.locations
      name: locations
      title: Locations
      methods:
        query_metrics:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:queryMetrics/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_performance_overview:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:queryPerformanceOverview/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_upload_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:bulkUploadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_download_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:bulkDownloadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:bulkDeleteFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/bulk_delete_feedback_labels
    feedback_labels:
      id: google.contactcenterinsights.feedback_labels
      name: feedback_labels
      title: Feedback_labels
      methods:
        list_all_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:listAllFeedbackLabels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.feedbackLabels
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.feedbackLabels
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1feedbackLabels~1{feedbackLabelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/get'
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/list'
          - $ref: >-
              #/components/x-stackQL-resources/feedback_labels/methods/list_all_feedback_labels
        insert:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/feedback_labels/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sample:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1conversations:sample/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations:bulkAnalyze/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1conversations:bulkDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1conversations:ingest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/bulk_delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    assessments:
      id: google.contactcenterinsights.assessments
      name: assessments
      title: Assessments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assessments
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        publish:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}:publish/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        appeal:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}:appeal/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        finalize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}:finalize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/get'
          - $ref: '#/components/x-stackQL-resources/assessments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/delete'
    notes:
      id: google.contactcenterinsights.notes
      name: notes
      title: Notes
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}~1notes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}~1notes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notes
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}~1notes~1{notesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}~1conversations~1{conversationsId}~1assessments~1{assessmentsId}~1notes~1{notesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/notes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notes/methods/delete'
    datasets:
      id: google.contactcenterinsights.datasets
      name: datasets
      title: Datasets
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datasets
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_upload_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:bulkUploadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_download_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:bulkDownloadFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete_feedback_labels:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:bulkDeleteFeedbackLabels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/get'
          - $ref: '#/components/x-stackQL-resources/datasets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/delete'
          - $ref: >-
              #/components/x-stackQL-resources/datasets/methods/bulk_delete_feedback_labels
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issues/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    analysis_rules:
      id: google.contactcenterinsights.analysis_rules
      name: analysis_rules
      title: Analysis_rules
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analysisRules
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1analysisRules~1{analysisRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analysis_rules/methods/delete'
    assessment_rules:
      id: google.contactcenterinsights.assessment_rules
      name: assessment_rules
      title: Assessment_rules
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assessmentRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assessmentRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assessmentRules
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assessmentRules~1{assessmentRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assessmentRules~1{assessmentRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assessmentRules~1{assessmentRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assessment_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/assessment_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assessment_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/assessment_rules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assessment_rules/methods/delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    qa_question_tags:
      id: google.contactcenterinsights.qa_question_tags
      name: qa_question_tags
      title: Qa_question_tags
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaQuestionTags/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaQuestionTags/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaQuestionTags
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaQuestionTags~1{qaQuestionTagsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaQuestionTags~1{qaQuestionTagsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaQuestionTags~1{qaQuestionTagsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qa_question_tags/methods/get'
          - $ref: '#/components/x-stackQL-resources/qa_question_tags/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/qa_question_tags/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/qa_question_tags/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/qa_question_tags/methods/delete'
    qa_scorecards:
      id: google.contactcenterinsights.qa_scorecards
      name: qa_scorecards
      title: Qa_scorecards
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaScorecards
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/get'
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/qa_scorecards/methods/delete'
    revisions:
      id: google.contactcenterinsights.revisions
      name: revisions
      title: Revisions
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaScorecardRevisions
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        tune_qa_scorecard_revision:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:tuneQaScorecardRevision/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/delete'
    qa_questions:
      id: google.contactcenterinsights.qa_questions
      name: qa_questions
      title: Qa_questions
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.qaQuestions
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1qaScorecards~1{qaScorecardsId}~1revisions~1{revisionsId}~1qaQuestions~1{qaQuestionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/get'
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/qa_questions/methods/delete'
    authorized_view_sets:
      id: google.contactcenterinsights.authorized_view_sets
      name: authorized_view_sets
      title: Authorized_view_sets
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.authorizedViewSets
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorized_view_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorized_view_sets/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_view_sets/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_view_sets/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_view_sets/methods/delete
    authorized_views:
      id: google.contactcenterinsights.authorized_views
      name: authorized_views
      title: Authorized_views
      methods:
        query_metrics:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:queryMetrics/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_performance_overview:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:queryPerformanceOverview/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.authorizedViews
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews:search/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/delete'
    authorized_views_iam_policies:
      id: google.contactcenterinsights.authorized_views_iam_policies
      name: authorized_views_iam_policies
      title: Authorized_views_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1authorizedViewSets~1{authorizedViewSetsId}~1authorizedViews~1{authorizedViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:
    parameters: *ref_1
    get:
      description: Gets location-level encryption key specification.
      operationId: contactcenterinsights.projects.locations.getEncryptionSpec
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:queryMetrics:
    parameters: *ref_1
    post:
      description: Query metrics.
      operationId: contactcenterinsights.projects.locations.queryMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:queryPerformanceOverview:
    parameters: *ref_1
    post:
      description: >-
        Generates a summary of predefined performance metrics for a set of
        conversations. Conversations can be specified by specifying a time
        window and an agent id, for now. The summary includes a comparison of
        metrics computed for conversations in the previous time period, and also
        a comparison with peers in the same time period.
      operationId: contactcenterinsights.projects.locations.queryPerformanceOverview
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:listAllFeedbackLabels:
    parameters: *ref_1
    get:
      description: List all feedback labels by project number.
      operationId: contactcenterinsights.projects.locations.listAllFeedbackLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:bulkUploadFeedbackLabels:
    parameters: *ref_1
    post:
      description: >-
        Upload feedback labels from an external source in bulk. Currently
        supports labeling Quality AI example conversations.
      operationId: contactcenterinsights.projects.locations.bulkUploadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:bulkDownloadFeedbackLabels:
    parameters: *ref_1
    post:
      description: >-
        Download feedback labels in bulk from an external source. Currently
        supports exporting Quality AI example conversations with transcripts and
        question bodies.
      operationId: contactcenterinsights.projects.locations.bulkDownloadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:bulkDeleteFeedbackLabels:
    parameters: *ref_1
    post:
      description: Delete feedback labels in bulk using a filter.
      operationId: contactcenterinsights.projects.locations.bulkDeleteFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    post:
      description: >-
        Creates a conversation. Note that this method does not support audio
        transcription or redaction. Use `conversations.upload` instead.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:sample:
    parameters: *ref_1
    post:
      description: >-
        Samples conversations based on user configuration and handles the
        sampled conversations for different use cases.
      operationId: contactcenterinsights.projects.locations.conversations.sample
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1SampleConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/feedbackLabels:
    parameters: *ref_1
    post:
      description: Create feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: feedbackLabelId
          schema:
            type: string
    get:
      description: List feedback labels.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/feedbackLabels/{feedbackLabelsId}:
    parameters: *ref_1
    get:
      description: Get feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    patch:
      description: Update feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.feedbackLabels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments:
    parameters: *ref_1
    post:
      description: Create Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: List Assessments.
      operationId: contactcenterinsights.projects.locations.conversations.assessments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAssessmentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}:
    parameters: *ref_1
    get:
      description: Get Assessment.
      operationId: contactcenterinsights.projects.locations.conversations.assessments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
    delete:
      description: Delete an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}:publish:
    parameters: *ref_1
    post:
      description: Publish an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PublishAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}:appeal:
    parameters: *ref_1
    post:
      description: Appeal an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.appeal
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AppealAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}:finalize:
    parameters: *ref_1
    post:
      description: Finalize an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.finalize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}/notes:
    parameters: *ref_1
    post:
      description: Create Note.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.notes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
    get:
      description: List Notes.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.notes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListNotesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/assessments/{assessmentsId}/notes/{notesId}:
    parameters: *ref_1
    patch:
      description: Update Note.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.notes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: path
          name: notesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Note.
      operationId: >-
        contactcenterinsights.projects.locations.conversations.assessments.notes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: path
          name: notesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets:
    parameters: *ref_1
    post:
      description: Creates a dataset.
      operationId: contactcenterinsights.projects.locations.datasets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: datasetId
          schema:
            type: string
    get:
      description: List datasets matching the input.
      operationId: contactcenterinsights.projects.locations.datasets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListDatasetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:
    parameters: *ref_1
    get:
      description: Gets a dataset.
      operationId: contactcenterinsights.projects.locations.datasets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a dataset.
      operationId: contactcenterinsights.projects.locations.datasets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete a dataset.
      operationId: contactcenterinsights.projects.locations.datasets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:listAllFeedbackLabels:
    parameters: *ref_1
    get:
      description: List all feedback labels by project number.
      operationId: contactcenterinsights.projects.locations.datasets.listAllFeedbackLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:bulkUploadFeedbackLabels:
    parameters: *ref_1
    post:
      description: >-
        Upload feedback labels from an external source in bulk. Currently
        supports labeling Quality AI example conversations.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.bulkUploadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:bulkDownloadFeedbackLabels:
    parameters: *ref_1
    post:
      description: >-
        Download feedback labels in bulk from an external source. Currently
        supports exporting Quality AI example conversations with transcripts and
        question bodies.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.bulkDownloadFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:bulkDeleteFeedbackLabels:
    parameters: *ref_1
    post:
      description: Delete feedback labels in bulk using a filter.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.bulkDeleteFeedbackLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations/{conversationsId}:
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.datasets.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.datasets.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.datasets.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:sample:
    parameters: *ref_1
    post:
      description: >-
        Samples conversations based on user configuration and handles the
        sampled conversations for different use cases.
      operationId: contactcenterinsights.projects.locations.datasets.conversations.sample
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1SampleConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.datasets.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations:calculateStats:
    parameters: *ref_1
    post:
      description: Gets conversation statistics.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.calculateStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analyses.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations/{conversationsId}/feedbackLabels:
    parameters: *ref_1
    post:
      description: Create feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: feedbackLabelId
          schema:
            type: string
    get:
      description: List feedback labels.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/conversations/{conversationsId}/feedbackLabels/{feedbackLabelsId}:
    parameters: *ref_1
    get:
      description: Get feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    patch:
      description: Update feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.datasets.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: >-
        Deploys an issue model. Returns an error if a model is already deployed.
        An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an issue model. An issue model can not be used in analysis
        after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export:
    parameters: *ref_1
    post:
      description: Exports an issue model to the provided destination.
      operationId: contactcenterinsights.projects.locations.issueModels.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:import:
    parameters: *ref_1
    post:
      description: Imports an issue model from a Cloud Storage bucket.
      operationId: contactcenterinsights.projects.locations.issueModels.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: >-
        contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    post:
      description: Creates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/analysisRules:
    parameters: *ref_1
    post:
      description: Creates a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analysis rules.
      operationId: contactcenterinsights.projects.locations.analysisRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/analysisRules/{analysisRulesId}:
    parameters: *ref_1
    get:
      description: Get a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a analysis rule.
      operationId: contactcenterinsights.projects.locations.analysisRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysisRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assessmentRules:
    parameters: *ref_1
    post:
      description: Creates an assessment rule.
      operationId: contactcenterinsights.projects.locations.assessmentRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: assessmentRuleId
          schema:
            type: string
    get:
      description: Lists assessment rules.
      operationId: contactcenterinsights.projects.locations.assessmentRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assessmentRules/{assessmentRulesId}:
    parameters: *ref_1
    get:
      description: Get an assessment rule.
      operationId: contactcenterinsights.projects.locations.assessmentRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentRulesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an assessment rule.
      operationId: contactcenterinsights.projects.locations.assessmentRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AssessmentRule
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentRulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an assessment rule.
      operationId: contactcenterinsights.projects.locations.assessmentRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:initialize:
    parameters: *ref_1
    post:
      description: >-
        Initializes a location-level encryption key specification. An error will
        result if the location has resources already created before the
        initialization. After the encryption specification is initialized at a
        location, it is immutable and all newly created resources under the
        location will be encrypted with the existing specification.
      operationId: contactcenterinsights.projects.locations.encryptionSpec.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaQuestionTags:
    parameters: *ref_1
    post:
      description: Creates a QaQuestionTag.
      operationId: contactcenterinsights.projects.locations.qaQuestionTags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: qaQuestionTagId
          schema:
            type: string
    get:
      description: Lists the question tags.
      operationId: contactcenterinsights.projects.locations.qaQuestionTags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaQuestionTags/{qaQuestionTagsId}:
    parameters: *ref_1
    get:
      description: Gets a QaQuestionTag.
      operationId: contactcenterinsights.projects.locations.qaQuestionTags.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionTagsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a QaQuestionTag.
      operationId: contactcenterinsights.projects.locations.qaQuestionTags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestionTag
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionTagsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a QaQuestionTag.
      operationId: contactcenterinsights.projects.locations.qaQuestionTags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionTagsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards:
    parameters: *ref_1
    post:
      description: Create a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: qaScorecardId
          schema:
            type: string
    get:
      description: Lists QaScorecards.
      operationId: contactcenterinsights.projects.locations.qaScorecards.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: qaScorecardSources
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}:
    parameters: *ref_1
    get:
      description: Gets a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecard
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions:
    parameters: *ref_1
    post:
      description: Creates a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: qaScorecardRevisionId
          schema:
            type: string
    get:
      description: Lists all revisions under the parent QaScorecard.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: qaScorecardSources
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:
    parameters: *ref_1
    get:
      description: Gets a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:tuneQaScorecardRevision:
    parameters: *ref_1
    post:
      description: Fine tune one or more QaModels.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.tuneQaScorecardRevision
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:deploy:
    parameters: *ref_1
    post:
      description: Deploy a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}:undeploy:
    parameters: *ref_1
    post:
      description: Undeploy a QaScorecardRevision.
      operationId: contactcenterinsights.projects.locations.qaScorecards.revisions.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaScorecardRevision
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}/qaQuestions:
    parameters: *ref_1
    post:
      description: Create a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: qaQuestionId
          schema:
            type: string
    get:
      description: Lists QaQuestions.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/qaScorecards/{qaScorecardsId}/revisions/{revisionsId}/qaQuestions/{qaQuestionsId}:
    parameters: *ref_1
    get:
      description: Gets a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1QaQuestion
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a QaQuestion.
      operationId: >-
        contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: qaScorecardsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: path
          name: qaQuestionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets:
    parameters: *ref_1
    post:
      description: Create AuthorizedViewSet
      operationId: contactcenterinsights.projects.locations.authorizedViewSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: authorizedViewSetId
          schema:
            type: string
    get:
      description: List AuthorizedViewSets
      operationId: contactcenterinsights.projects.locations.authorizedViewSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}:
    parameters: *ref_1
    get:
      description: Get AuthorizedViewSet
      operationId: contactcenterinsights.projects.locations.authorizedViewSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an AuthorizedViewSet.
      operationId: contactcenterinsights.projects.locations.authorizedViewSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedViewSet
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an AuthorizedViewSet.
      operationId: contactcenterinsights.projects.locations.authorizedViewSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:queryMetrics:
    parameters: *ref_1
    post:
      description: Query metrics.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.queryMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryMetricsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:queryPerformanceOverview:
    parameters: *ref_1
    post:
      description: >-
        Generates a summary of predefined performance metrics for a set of
        conversations. Conversations can be specified by specifying a time
        window and an agent id, for now. The summary includes a comparison of
        metrics computed for conversations in the previous time period, and also
        a comparison with peers in the same time period.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.queryPerformanceOverview
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews:
    parameters: *ref_1
    post:
      description: Create AuthorizedView
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: query
          name: authorizedViewId
          schema:
            type: string
    get:
      description: List AuthorizedViewSets
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:
    parameters: *ref_1
    get:
      description: Get AuthorizedView
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an AuthorizedView.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1AuthorizedView
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an AuthorizedView.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews:search:
    parameters: *ref_1
    get:
      description: SearchAuthorizedViewSets
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}:
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a conversation.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations:
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analyses.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes an analysis.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/feedbackLabels:
    parameters: *ref_1
    post:
      description: Create feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: feedbackLabelId
          schema:
            type: string
    get:
      description: List feedback labels.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/feedbackLabels/{feedbackLabelsId}:
    parameters: *ref_1
    get:
      description: Get feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
    patch:
      description: Update feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1FeedbackLabel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete feedback label.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: feedbackLabelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments:
    parameters: *ref_1
    post:
      description: Create Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: List Assessments.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAssessmentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}:
    parameters: *ref_1
    get:
      description: Get Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
    delete:
      description: Delete an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}:publish:
    parameters: *ref_1
    post:
      description: Publish an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PublishAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}:appeal:
    parameters: *ref_1
    post:
      description: Appeal an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.appeal
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1AppealAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}:finalize:
    parameters: *ref_1
    post:
      description: Finalize an Assessment.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.finalize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}/notes:
    parameters: *ref_1
    post:
      description: Create Note.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
    get:
      description: List Notes.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListNotesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/authorizedViewSets/{authorizedViewSetsId}/authorizedViews/{authorizedViewsId}/conversations/{conversationsId}/assessments/{assessmentsId}/notes/{notesId}:
    parameters: *ref_1
    patch:
      description: Update Note.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Note'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: path
          name: notesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Note.
      operationId: >-
        contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewSetsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
        - in: path
          name: notesId
          required: true
          schema:
            type: string
