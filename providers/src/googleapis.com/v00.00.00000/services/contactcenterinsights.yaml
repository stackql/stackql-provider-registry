openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240916'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      properties:
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
          type: string
        uri:
          type: string
          description: Article URI.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        title:
          description: Article title.
          type: string
        confidenceScore:
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: float
          type: number
      description: Agent Assist Article Suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      properties:
        issue:
          type: string
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        displayName:
          type: string
          description: Display name of the issue.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      type: object
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      type: object
      properties:
        caseSensitive:
          description: Whether to consider case sensitivity when performing an exact match.
          type: boolean
      description: Exact match configuration.
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        confidenceScore:
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
          format: double
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
      description: Agent Assist Smart Compose suggestion data.
      type: object
    GoogleProtobufEmpty:
      properties: {}
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      properties:
        analyses:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: The analyses that match the request.
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      description: The response to list analyses.
      type: object
    GoogleCloudContactcenterinsightsV1HoldData:
      type: object
      description: The data for a hold annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1HoldData
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      properties:
        phraseMatchers:
          description: The phrase matchers that match the request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      description: The response of listing phrase matchers.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      type: object
      properties:
        inspectTemplate:
          type: string
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
        deidentifyTemplate:
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
        metadataBucketUri:
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
          type: string
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          type: array
          items:
            type: string
        bucketObjectType:
          description: Optional. Specifies the type of the objects in `bucket_uri`.
          type: string
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      type: object
      properties:
        medium:
          deprecated: true
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
          type: string
        trainingConversationsCount:
          type: string
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      properties: {}
      description: Response for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata:
      properties:
        request:
          description: The original import request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
      type: object
      description: Metadata used for import issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        conversation:
          type: string
          readOnly: true
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
      type: object
      description: The response for a bulk delete conversations operation.
    GoogleCloudContactcenterinsightsV1Settings:
      type: object
      description: >-
        The CCAI Insights project wide settings. Use these settings to configure
        the behavior of Insights. View these settings with
        [`getsettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/getSettings)
        and change the settings with
        [`updateSettings`](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations/updateSettings).
      id: GoogleCloudContactcenterinsightsV1Settings
      properties:
        createTime:
          type: string
          description: Output only. The time at which the settings was created.
          format: google-datetime
          readOnly: true
        updateTime:
          format: google-datetime
          description: Output only. The time at which the settings were last updated.
          type: string
          readOnly: true
        conversationTtl:
          description: >-
            The default TTL for newly-created conversations. If a conversation
            has a specified expiration, that value will be used instead.
            Changing this value will not change the expiration of existing
            conversations. Conversations with no expire time persist until they
            are deleted.
          format: google-duration
          type: string
        analysisConfig:
          description: Default analysis settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
        speechConfig:
          description: >-
            Optional. Default Speech-to-Text resources to use while ingesting
            audio files. Optional, CCAI Insights will create a default if not
            provided. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
        name:
          description: >-
            Immutable. The resource name of the settings resource. Format:
            projects/{project}/locations/{location}/settings
          type: string
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Default DLP redaction resources to be applied while ingesting
            conversations. This applies to conversations ingested from the
            `UploadConversation` and `IngestConversations` endpoints, including
            conversations coming from CCAI Platform.
        languageCode:
          description: >-
            A language code to be applied to each transcript segment unless the
            segment already specifies a language code. Language code defaults to
            "en-US" if it is neither specified on the segment nor here.
          type: string
        pubsubNotificationSettings:
          additionalProperties:
            type: string
          description: >-
            A map that maps a notification trigger to a Pub/Sub topic. Each time
            a specified trigger occurs, Insights will notify the corresponding
            Pub/Sub topic. Keys are notification triggers. Supported keys are: *
            "all-triggers": Notify each time any of the supported triggers
            occurs. * "create-analysis": Notify each time an analysis is
            created. * "create-conversation": Notify each time a conversation is
            created. * "export-insights-data": Notify each time an export is
            complete. * "ingest-conversations": Notify each time an
            IngestConversations LRO is complete. * "update-conversation": Notify
            each time a conversation is updated via UpdateConversation. *
            "upload-conversation": Notify when an UploadConversation LRO is
            complete. Values are Pub/Sub topics. The format of each Pub/Sub
            topic is: projects/{project}/topics/{topic}
          type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      properties:
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          type: string
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
        filter:
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
          type: string
        kmsKey:
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      description: The response for calculating conversation statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      type: object
      properties:
        conversationCount:
          format: int32
          type: integer
          description: The total number of conversations.
        conversationCountTimeSeries:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
          description: >-
            A time series representing the count of conversations created over
            time that match that requested filter criteria.
        smartHighlighterMatches:
          additionalProperties:
            format: int32
            type: integer
          type: object
          description: >-
            A map associating each smart highlighter display name with its
            respective number of matches in the set of conversations.
        issueMatchesStats:
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/`
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          type: object
        issueMatches:
          deprecated: true
          type: object
          description: >-
            A map associating each issue resource name with its respective
            number of matches in the set of conversations. Key has the format:
            `projects//locations//issueModels//issues/` Deprecated, use
            `issue_matches_stats` field instead.
          additionalProperties:
            type: integer
            format: int32
        customHighlighterMatches:
          additionalProperties:
            type: integer
            format: int32
          description: >-
            A map associating each custom highlighter resource name with its
            respective number of matches in the set of conversations.
          type: object
        averageTurnCount:
          description: The average number of turns per conversation.
          format: int32
          type: integer
        averageDuration:
          type: string
          format: google-duration
          description: >-
            The average duration of all conversations. The average is calculated
            using only conversations that have a time duration.
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      description: A Dialogflow source of conversation data.
      type: object
      properties:
        audioUri:
          type: string
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
        dialogflowConversation:
          type: string
          readOnly: true
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata:
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
        partialErrors:
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
      description: Metadata for initializing a location-level encryption specification.
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecMetadata
      type: object
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequest:
      description: Request to import an issue model.
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
        createNewModel:
          type: boolean
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
        parent:
          type: string
          description: Required. The parent resource of the issue model.
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      description: The phrase matcher resource.
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      properties:
        updateTime:
          description: >-
            Output only. The most recent time at which the phrase matcher was
            updated.
          readOnly: true
          format: google-datetime
          type: string
        roleMatch:
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: >-
            The role whose utterances the phrase matcher should be matched
            against. If the role is ROLE_UNSPECIFIED it will be matched against
            any utterances in the transcript.
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
          description: Required. The type of this phrase matcher.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        name:
          type: string
          description: >-
            The resource name of the phrase matcher. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        revisionCreateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The timestamp of when the revision was created. It is
            also the create time when a new matcher is added.
        revisionId:
          description: >-
            Output only. Immutable. The revision ID of the phrase matcher. A new
            revision is committed whenever the matcher is changed, except when
            it is activated or deactivated. A server generated random ID will be
            used. Example:
            locations/global/phraseMatchers/my-first-matcher@1234567
          readOnly: true
          type: string
        versionTag:
          description: >-
            The customized version tag to use for the phrase matcher. If not
            specified, it will default to `revision_id`.
          type: string
        phraseMatchRuleGroups:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
          type: array
          description: A list of phase match rule groups that are included in this matcher.
        activationUpdateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. The most recent time at which the activation status was
            updated.
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        conversation:
          type: string
          description: >-
            Output only. The Conversation that this Analysis Operation belongs
            to.
          readOnly: true
      description: Metadata for a create analysis operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      properties:
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          type: array
          items:
            type: string
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        summarizationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
          description: Configuration for the summarization annotator.
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        issueModels:
          items:
            type: string
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
        runIssueModelAnnotator:
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
          type: boolean
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSummarizationAnnotator:
          type: boolean
          description: Whether to run the summarization annotator.
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      type: object
      properties:
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
        displayName:
          type: string
          description: The representative name for the issue model.
        trainingStats:
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
          readOnly: true
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          description: Type of the model.
          type: string
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
        state:
          type: string
          description: Output only. State of the model.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
        inputDataConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
          description: Configs for the input data that used to create the issue model.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time at which this issue model was created.
          format: google-datetime
        issueCount:
          type: string
          format: int64
          readOnly: true
          description: Output only. Number of issues in this issue model.
        updateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
          type: string
        languageCode:
          type: string
          description: Language of the model.
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        gcsSource:
          description: Google Cloud Storage source message.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
        createNewModel:
          description: >-
            Optional. If set to true, will create an issue model from the
            imported file with randomly generated IDs for the issue model and
            corresponding issues. Otherwise, replaces an existing model with the
            same ID as the file.
          type: boolean
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest
      description: Request to import an issue model.
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      type: object
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      id: GoogleRpcStatus
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        conversationModel:
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
          type: string
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidence:
          format: float
          type: number
          description: The confidence score of the summarization.
        metadata:
          additionalProperties:
            type: string
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
        textSections:
          type: object
          additionalProperties:
            type: string
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      description: Configuration for summarization.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
      type: object
      properties:
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
        summarizationModel:
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          description: Default summarization model to be used.
    GoogleCloudContactcenterinsightsV1SentimentData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SentimentData
      properties:
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
        magnitude:
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
          format: float
          type: number
      description: The data for a sentiment annotation.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      type: object
      description: The request to ingest conversations.
      properties:
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        transcriptObjectConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
          description: Configuration for when `source` contains conversation transcripts.
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
        sampleSize:
          format: int32
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          type: integer
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      description: The response to deploy an issue model.
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        endOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
        startOffset:
          type: string
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
          format: google-duration
      description: Word-level info for words in a transcript.
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      type: object
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
      properties:
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        speechConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
        conversation:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation
          description: Required. The conversation resource to create.
        conversationId:
          type: string
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
        parent:
          description: Required. The parent resource of the conversation.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      type: object
      description: Configuration that applies to all conversations.
      properties:
        agentChannel:
          type: integer
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
        agentId:
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
          type: string
        customerChannel:
          format: int32
          type: integer
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      type: object
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      properties:
        type:
          description: The entity type.
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          type: string
        displayName:
          type: string
          description: The representative name for the entity.
        salience:
          type: number
          format: float
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      description: >-
        DLP resources used for redaction while ingesting conversations. DLP
        settings are applied to conversations ingested from the
        `UploadConversation` and `IngestConversations` endpoints, including
        conversation coming from CCAI Platform. They are not applied to
        conversations ingested from the `CreateConversation` endpoint or the
        Dialogflow / Agent Assist runtime integrations. When using Dialogflow /
        Agent Assist runtime integrations, redaction should be performed in
        Dialogflow / Agent Assist.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
      type: object
      properties:
        inspectTemplate:
          description: >-
            The fully-qualified DLP inspect template resource name. Format:
            `projects/{project}/locations/{location}/inspectTemplates/{template}`
          type: string
        deidentifyTemplate:
          type: string
          description: >-
            The fully-qualified DLP deidentify template resource name. Format:
            `projects/{project}/deidentifyTemplates/{template}`
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      type: object
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      properties:
        issueModels:
          type: array
          description: The issue models that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      type: object
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      properties:
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        confidenceScore:
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
          description: The original request for creation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
      type: object
      properties:
        agentInfo:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
          type: array
          description: Information about agents involved in the call.
        menuPath:
          type: string
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
        customerSatisfactionRating:
          format: int32
          type: integer
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
        waitDuration:
          description: The amount of time the customer waited to connect with an agent.
          format: google-duration
          type: string
      description: Conversation metadata related to quality management.
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      properties:
        parent:
          type: string
          description: Required. The parent resource of the conversation.
        conversationId:
          type: string
          description: >-
            Optional. A unique ID for the new conversation. This ID will become
            the final component of the conversation's resource name. If no ID is
            specified, a server-generated ID will be used. This value should be
            4-64 characters and must match the regular expression
            `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
        redactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
          description: >-
            Optional. DLP settings for transcript redaction. Will default to the
            config specified in Settings.
        speechConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SpeechConfig'
          description: >-
            Optional. Speech-to-Text configuration. Will default to the config
            specified in Settings.
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          description: Required. The conversation resource to create.
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      type: object
      description: Request to upload a conversation.
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      properties:
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
        callAnalysisMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
          description: Call-specific metadata created by the analysis.
      type: object
      description: The result of an analysis.
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        displayName:
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
          type: string
        score:
          type: number
          format: double
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
      type: object
      description: Information about the issue.
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      description: The request to analyze conversations in bulk.
      properties:
        analysisPercentage:
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          format: float
          type: number
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        filter:
          type: string
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
      type: object
      description: Response from export issue model
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource:
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource
      description: Google Cloud Storage Object URI to get the issue model file from.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      description: The call participant speaking for a given utterance.
      properties:
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
        dialogflowParticipantName:
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          type: string
        userId:
          type: string
          description: A user-specified ID representing the participant.
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
          type: string
        dialogflowParticipant:
          deprecated: true
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata:
      description: Metadata used for export issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelMetadata
      type: object
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      type: object
      properties:
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        runtimeIntegrationAnalysisPercentage:
          type: number
          description: >-
            Percentage of conversations created using Dialogflow runtime
            integration to analyze automatically, between [0, 100].
          format: double
        uploadConversationAnalysisPercentage:
          description: >-
            Percentage of conversations created using the UploadConversation
            endpoint to analyze automatically, between [0, 100].
          format: double
          type: number
      description: Default configuration when creating Analyses in Insights.
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      properties:
        analyzedConversationsCount:
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          format: int64
          type: string
        issueStats:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
        unclassifiedConversationsCount:
          format: int64
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
          type: string
      description: Aggregated statistics about an issue model.
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      properties:
        reply:
          type: string
          description: The content of the reply.
        metadata:
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
          type: object
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidenceScore:
          type: number
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          format: double
      description: Agent Assist Smart Reply data.
      type: object
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: Required. The medium transcript objects represent.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequest
      description: Request to export an issue model.
      type: object
      properties:
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
        name:
          type: string
          description: Required. The issue model to export.
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      type: object
      description: A Dialogflow source of conversation data.
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        dialogflowConversation:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the Dialogflow conversation that this
            conversation resource is derived from. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      description: The data for a phrase match rule.
      properties:
        negated:
          type: boolean
          description: >-
            Specifies whether the phrase must be missing from the transcript
            segment or present in the transcript segment.
        query:
          description: Required. The phrase to be matched.
          type: string
        config:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
          description: >-
            Provides additional information about the rule that specifies how to
            apply the rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      description: The data for an interruption annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      type: object
      properties:
        annotatorSelector:
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        filter:
          type: string
          description: >-
            Required. Filter used to select the subset of conversations to
            analyze.
        analysisPercentage:
          type: number
          description: >-
            Required. Percentage of selected conversation to analyze, between
            [0, 100].
          format: float
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      type: object
      properties:
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          format: int32
          type: integer
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          type: array
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
        request:
          description: The original request for bulk analyze.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
        totalRequestedAnalysesCount:
          format: int32
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
        completedAnalysesCount:
          format: int32
          type: integer
          description: >-
            The number of requested analyses that have completed successfully so
            far.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      description: Configs for the input data used to create the issue model.
      properties:
        filter:
          description: >-
            A filter to reduce the conversations used for training the model to
            a specific subset.
          type: string
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
          description: >-
            Medium of conversations used in training data. This field is being
            deprecated. To specify the medium to be used in training a new issue
            model, set the `medium` field on `filter`.
          deprecated: true
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
        trainingConversationsCount:
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          format: int64
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      properties:
        runSentimentAnnotator:
          description: Whether to run the sentiment annotator.
          type: boolean
        issueModels:
          description: >-
            The issue model to run. If not provided, the most recently deployed
            topic model will be used. The provided issue model will only be used
            for inference if the issue model is deployed and if
            run_issue_model_annotator is set to true. If more than one issue
            model is provided, only the first provided issue model will be used
            for inference.
          type: array
          items:
            type: string
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        phraseMatchers:
          description: >-
            The list of phrase matchers to run. If not provided, all active
            phrase matchers will be used. If inactive phrase matchers are
            provided, they will not be used. Phrase matchers will be run only if
            run_phrase_matcher_annotator is set to true. Format:
            projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
          items:
            type: string
          type: array
        summarizationConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
          description: Configuration for the summarization annotator.
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runIssueModelAnnotator:
          type: boolean
          description: >-
            Whether to run the issue model annotator. A model should have
            already been deployed for this to take effect.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
      type: object
      properties:
        bucketUri:
          type: string
          description: Required. The Cloud Storage bucket containing source objects.
        customMetadataKeys:
          description: >-
            Optional. Custom keys to extract as conversation labels from
            metadata files in `metadata_bucket_uri`. Keys not included in this
            field will be ignored. Note that there is a limit of 20 labels per
            conversation.
          items:
            type: string
          type: array
        metadataBucketUri:
          type: string
          description: >-
            Optional. The Cloud Storage path to the conversation metadata. Note
            that: [1] Metadata files are expected to be in JSON format. [2]
            Metadata and source files (transcripts or audio) must be in separate
            buckets. [3] A source file and its corresponding metadata file must
            share the same name to be properly ingested, E.g.
            `gs://bucket/audio/conversation1.mp3` and
            `gs://bucket/metadata/conversation1.json`.
        bucketObjectType:
          type: string
          enumDescriptions:
            - The object type is unspecified and will default to `TRANSCRIPT`.
            - The object is a transcript.
            - The object is an audio file.
          enum:
            - BUCKET_OBJECT_TYPE_UNSPECIFIED
            - TRANSCRIPT
            - AUDIO
          description: Optional. Specifies the type of the objects in `bucket_uri`.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      type: object
      properties:
        dialogflowParticipant:
          type: string
          description: >-
            Deprecated. Use `dialogflow_participant_name` instead. The name of
            the Dialogflow participant. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
          deprecated: true
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        dialogflowParticipantName:
          type: string
          description: >-
            The name of the participant provided by Dialogflow. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          description: The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        userId:
          type: string
          description: A user-specified ID representing the participant.
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      properties:
        filter:
          description: Filter used to select the subset of conversations to delete.
          type: string
        force:
          type: boolean
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
        parent:
          type: string
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          format: int32
          type: integer
      description: The request to delete conversations in bulk.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      description: The conversation source, which is a combination of transcript and audio.
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      description: The response for a bulk analyze conversations operation.
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          type: integer
          format: int32
          description: Count of failed analyses.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination:
      type: object
      description: Google Cloud Storage Object URI to save the issue model to.
      properties:
        objectUri:
          type: string
          description: 'Required. Format: `gs:///`'
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelRequestGcsDestination
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      properties:
        issueModel:
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        issues:
          description: All the matched issues.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          type: array
    GoogleCloudContactcenterinsightsV1InterruptionData:
      type: object
      properties: {}
      description: The data for an interruption annotation.
      id: GoogleCloudContactcenterinsightsV1InterruptionData
    GoogleCloudContactcenterinsightsV1Entity:
      type: object
      properties:
        sentiment:
          description: >-
            The aggregate sentiment expressed for this entity in the
            conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        type:
          description: The entity type.
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - >-
              Phone number. The metadata lists the phone number (formatted
              according to local convention), plus whichever additional elements
              appear in the text: * `number` - The actual number, broken down
              into sections according to local convention. * `national_prefix` -
              Country code, if detected. * `area_code` - Region or area code, if
              detected. * `extension` - Phone extension (to be dialed after
              connection), if detected.
            - >-
              Address. The metadata identifies the street number and locality
              plus whichever additional elements appear in the text: *
              `street_number` - Street number. * `locality` - City or town. *
              `street_name` - Street/route name, if detected. * `postal_code` -
              Postal code, if detected. * `country` - Country, if detected. *
              `broad_region` - Administrative area, such as the state, if
              detected. * `narrow_region` - Smaller administrative area, such as
              county, if detected. * `sublocality` - Used in Asian addresses to
              demark a district within a city, if detected.
            - >-
              Date. The metadata identifies the components of the date: * `year`
              - Four digit year, if detected. * `month` - Two digit month
              number, if detected. * `day` - Two digit day number, if detected.
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
        displayName:
          description: The representative name for the entity.
          type: string
        salience:
          type: number
          format: float
          description: >-
            The salience score associated with the entity in the [0, 1.0] range.
            The salience score for an entity provides information about the
            importance or centrality of that entity to the entire document text.
            Scores closer to 0 are less salient, while scores closer to 1.0 are
            highly salient.
        metadata:
          description: >-
            Metadata associated with the entity. For most entity types, the
            metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph
            MID (`mid`), if they are available. For the metadata associated with
            other entity types, see the Type table below.
          type: object
          additionalProperties:
            type: string
      description: >-
        The data for an entity annotation. Represents a phrase in the
        conversation that is a known entity, such as a person, an organization,
        or location.
      id: GoogleCloudContactcenterinsightsV1Entity
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      description: The conversation source, which is a combination of transcript and audio.
      properties:
        dialogflowSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
          description: The source when the conversation comes from Dialogflow.
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      properties:
        magnitude:
          format: float
          description: >-
            A non-negative number from 0 to infinity which represents the
            abolute magnitude of sentiment regardless of score.
          type: number
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
          type: number
      description: The data for a sentiment annotation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      properties:
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        conversationSummarizationSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Conversation summarization suggestion data.
        annotationId:
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
          type: string
        smartReply:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
          description: Agent Assist Smart Reply data.
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        faqAnswer:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
          description: Agent Assist FAQ answer data.
        createTime:
          description: The time at which this annotation was created.
          type: string
          format: google-datetime
        endBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        answerFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
          description: The feedback that the customer has about the answer in `data`.
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        dialogflowInteraction:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
          description: Dialogflow interaction data.
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
    GoogleCloudContactcenterinsightsV1SpeechConfig:
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      type: object
      properties:
        speechRecognizer:
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
          type: string
      id: GoogleCloudContactcenterinsightsV1SpeechConfig
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecResponse
      properties: {}
      type: object
      description: The response to initialize a location-level encryption specification.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata:
      description: Metadata for initializing a location-level encryption specification.
      properties:
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
        request:
          description: Output only. The original request for initialization.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during initialising operation that might cause the
            operation output to be incomplete.
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          type: string
          description: The human-readable name of the intent.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
          description: The original request for export.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
      description: Metadata for an export insights operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      type: object
      properties:
        processedObjectCount:
          type: integer
          readOnly: true
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          format: int32
        duplicatesSkippedCount:
          readOnly: true
          format: int32
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          type: integer
        failedIngestCount:
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          type: integer
          format: int32
          readOnly: true
        successfulIngestCount:
          type: integer
          readOnly: true
          format: int32
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
      description: Statistics for IngestConversations operation.
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      properties:
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        totalRequestedAnalysesCount:
          format: int32
          description: >-
            Total number of analyses requested. Computed by the number of
            conversations returned by `filter` multiplied by
            `analysis_percentage` in the request.
          type: integer
        failedAnalysesCount:
          format: int32
          description: The number of requested analyses that have failed so far.
          type: integer
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        completedAnalysesCount:
          description: >-
            The number of requested analyses that have completed successfully so
            far.
          type: integer
          format: int32
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
          description: The original request for bulk analyze.
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during bulk analyze operation that might
            cause the operation output to be incomplete.
          type: array
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      properties:
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
          description: The original request for deployment.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
      type: object
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      properties:
        createTime:
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          readOnly: true
          type: string
          format: google-datetime
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        analysisResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        requestTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time at which the analysis was requested.
      description: The analysis resource.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      type: object
      properties:
        duplicatesSkippedCount:
          readOnly: true
          description: >-
            Output only. The number of objects skipped because another
            conversation with the same transcript uri had already been ingested.
          type: integer
          format: int32
        successfulIngestCount:
          description: >-
            Output only. The number of new conversations added during this
            ingest operation.
          readOnly: true
          format: int32
          type: integer
        processedObjectCount:
          description: >-
            Output only. The number of objects processed during the ingest
            operation.
          readOnly: true
          format: int32
          type: integer
        failedIngestCount:
          readOnly: true
          type: integer
          description: >-
            Output only. The number of objects which were unable to be ingested
            due to errors. The errors are populated in the partial_errors field.
          format: int32
      description: Statistics for IngestConversations operation.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      description: Request to export an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to export.
        gcsDestination:
          description: Google Cloud Storage URI to export the issue model to.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
      description: The data for a hold annotation.
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      properties:
        expireTime:
          type: string
          format: google-datetime
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        name:
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
          type: string
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        turnCount:
          readOnly: true
          type: integer
          description: Output only. The number of turns in the conversation.
          format: int32
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
          description: Call-specific metadata.
        createTime:
          description: Output only. The time at which the conversation was created.
          type: string
          readOnly: true
          format: google-datetime
        dialogflowIntents:
          readOnly: true
          type: object
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
        labels:
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          type: object
          additionalProperties:
            type: string
        transcript:
          readOnly: true
          description: Output only. The conversation transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        agentId:
          type: string
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
        runtimeAnnotations:
          readOnly: true
          type: array
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
        duration:
          readOnly: true
          format: google-duration
          type: string
          description: Output only. The duration of the conversation.
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis
          readOnly: true
        metadataJson:
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
          type: string
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          type: string
          readOnly: true
          format: google-datetime
        ttl:
          type: string
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
          format: google-duration
        latestSummary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
          description: Output only. Latest summary of the conversation.
          readOnly: true
        qualityMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
          description: Conversation metadata related to quality management.
        medium:
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest:
      description: The request to initialize a location-level encryption specification.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1InitializeEncryptionSpecRequest
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      type: object
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        request:
          description: Output only. The original request for ingest.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
          readOnly: true
          type: array
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
          readOnly: true
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1View:
      properties:
        value:
          type: string
          description: String with specific view properties, must be non-empty.
        name:
          type: string
          description: >-
            Immutable. The resource name of the view. Format:
            projects/{project}/locations/{location}/views/{view}
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: The human-readable display name of the view.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time at which this view was created.
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1View
      type: object
      description: The View resource.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      type: object
      properties:
        analyzedConversationsCount:
          type: string
          description: >-
            Number of conversations the issue model has analyzed at this point
            in time.
          format: int64
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
          type: object
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: >-
            Number of analyzed conversations for which no issue was applicable
            at this point in time.
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData
        annotationEndBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
        annotationStartBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          format: int32
          type: integer
        phraseMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: Data specifying a phrase match.
        intentMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData
          description: Data specifying an intent match.
        entityMentionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData
          description: Data specifying an entity mention.
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData
          description: Data specifying an interruption.
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
      description: A piece of metadata that applies to a window of a call.
      type: object
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      properties:
        issues:
          type: array
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      description: The response of listing issues.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel
        parent:
          type: string
          description: Required. The parent resource of the issue model.
      type: object
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the issue.
        issue:
          description: >-
            Issue resource. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
          type: string
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
    GoogleCloudContactcenterinsightsV1alpha1SpeechConfig:
      properties:
        speechRecognizer:
          type: string
          description: >-
            The fully-qualified Speech Recognizer resource name. Format:
            `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
      description: >-
        Speech-to-Text configuration. Speech-to-Text settings are applied to
        conversations ingested from the `UploadConversation` and
        `IngestConversations` endpoints, including conversation coming from CCAI
        Platform. They are not applied to conversations ingested from the
        `CreateConversation` endpoint.
      id: GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      properties:
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          type: boolean
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
          description: The correctness level of an answer.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      description: The request to delete an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
      type: object
      description: Response from export issue model
    GoogleCloudContactcenterinsightsV1Issue:
      properties:
        displayDescription:
          type: string
          description: Representative description of the issue.
        sampleUtterances:
          type: array
          readOnly: true
          description: >-
            Output only. Resource names of the sample representative utterances
            that match to this issue.
          items:
            type: string
        name:
          type: string
          description: >-
            Immutable. The resource name of the issue. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
        createTime:
          description: Output only. The time at which this issue was created.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          type: string
          description: The representative name for the issue.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The most recent time that this issue was updated.
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1Issue
      type: object
      description: The issue resource.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      type: object
      properties:
        partialErrors:
          type: array
          description: >-
            Partial errors during export operation that might cause the
            operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
          description: The original request for export.
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      properties:
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Required. The medium transcript objects represent.
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      type: object
      properties:
        transcriptSegments:
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
          type: array
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      description: The response to an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to undeploy.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      type: object
      properties: {}
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1EncryptionSpec:
      id: GoogleCloudContactcenterinsightsV1EncryptionSpec
      type: object
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          type: string
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      type: object
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
          description: Information about the issue's assignment.
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        request:
          description: The original request for bulk delete.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
      description: The metadata for a bulk delete conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
          description: The original request for deletion.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      type: object
      description: Metadata for deleting an issue model.
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      properties:
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1Analysis:
      description: The analysis resource.
      id: GoogleCloudContactcenterinsightsV1Analysis
      type: object
      properties:
        createTime:
          readOnly: true
          type: string
          description: >-
            Output only. The time at which the analysis was created, which
            occurs when the long-running operation completes.
          format: google-datetime
        requestTime:
          description: Output only. The time at which the analysis was requested.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: >-
            Immutable. The resource name of the analysis. Format:
            projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
          type: string
        annotatorSelector:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector
          description: >-
            To select the annotators to run and the phrase matchers to use (if
            any). If not specified, all annotators will be run.
        analysisResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult
          description: >-
            Output only. The result of the analysis, which is populated when the
            analysis finishes.
          readOnly: true
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      description: Metadata for deploying an issue model.
      properties:
        request:
          description: The original request for deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput:
      type: object
      properties:
        query:
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
          type: string
        querySource:
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          description: Query source for the answer.
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          type: string
        generatorName:
          type: string
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
      description: Explicit input used for generating the answer
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      properties:
        failedAnalysisCount:
          format: int32
          type: integer
          description: Count of failed analyses.
        successfulAnalysisCount:
          type: integer
          description: Count of successful analyses.
          format: int32
      type: object
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      properties: {}
      description: Response from import issue model
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      description: Metadata for creating an issue model.
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
          description: The original request for creation.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      properties:
        confidence:
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          format: float
        messageTime:
          description: The time that the message occurred, if provided.
          format: google-datetime
          type: string
        languageCode:
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
          description: The participant of this segment.
        channelTag:
          format: int32
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
          type: integer
        text:
          type: string
          description: The text of this segment.
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: The sentiment for this transcript segment.
        words:
          type: array
          description: >-
            A list of the word-specific information for each word in the
            segment.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      type: object
      properties:
        segmentParticipant:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant
          description: The participant of this segment.
        text:
          description: The text of this segment.
          type: string
        messageTime:
          description: The time that the message occurred, if provided.
          type: string
          format: google-datetime
        channelTag:
          format: int32
          type: integer
          description: >-
            For conversations derived from multi-channel audio, this is the
            channel number corresponding to the audio from that channel. For
            audioChannelCount = N, its output values can range from '1' to 'N'.
            A channel tag of 0 indicates that the audio is mono.
        dialogflowSegmentMetadata:
          description: CCAI metadata relating to the current transcript segment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        words:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
          type: array
          description: >-
            A list of the word-specific information for each word in the
            segment.
        confidence:
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            segment. A default value of 0.0 indicates that the value is unset.
          type: number
          format: float
        languageCode:
          type: string
          description: >-
            The language code of this segment as a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      description: >-
        The feedback that the customer has about a certain answer in the
        conversation.
      properties:
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          description: The correctness level of an answer.
          type: string
        clicked:
          description: Indicates whether an answer or item was clicked by the human agent.
          type: boolean
        displayed:
          description: >-
            Indicates whether an answer or item was displayed to the human agent
            in the agent desktop UI.
          type: boolean
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
      type: object
      properties:
        team:
          type: string
          description: A user-specified string representing the agent's team.
        displayName:
          type: string
          description: The agent's name.
        agentId:
          description: A user-specified string representing the agent.
          type: string
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1SilenceData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1SilenceData
      description: The data for a silence annotation.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      id: >-
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
      description: A single interval in a time series.
      properties:
        startTime:
          format: google-datetime
          type: string
          description: The start time of this interval.
        conversationCount:
          description: The number of conversations created in this interval.
          format: int32
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      properties:
        customerChannel:
          type: integer
          format: int32
          description: The audio channel that contains the customer.
        agentChannel:
          format: int32
          type: integer
          description: The audio channel that contains the agent.
      type: object
      description: Call-specific metadata.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      type: object
      description: The metadata for an `UploadConversation` operation.
      properties:
        analysisOperation:
          readOnly: true
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          type: string
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        appliedRedactionConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
        request:
          description: Output only. The original request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
    GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelMetadata
      description: Metadata used for import issue model.
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
          description: The original import request.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      type: object
      properties:
        intentUniqueId:
          type: string
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      properties:
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
        analysisOperation:
          description: >-
            Output only. The operation name for a successfully created analysis
            operation, if any.
          type: string
          readOnly: true
        appliedRedactionConfig:
          description: >-
            Output only. The redaction config applied to the uploaded
            conversation.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        request:
          description: Output only. The original request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
          readOnly: true
      description: The metadata for an `UploadConversation` operation.
      type: object
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse:
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecResponse
      properties: {}
      description: The response to initialize a location-level encryption specification.
      type: object
    GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest:
      description: The request to initialize a location-level encryption specification.
      type: object
      id: GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      description: The data for a silence annotation.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        confidence:
          format: float
          type: number
          description: >-
            A confidence estimate between 0.0 and 1.0 of the fidelity of this
            word. A default value of 0.0 indicates that the value is unset.
        startOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the start of this word relative to the beginning of
            the total conversation.
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        endOffset:
          type: string
          format: google-duration
          description: >-
            Time offset of the end of this word relative to the beginning of the
            total conversation.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput:
      type: object
      properties:
        query:
          type: string
          description: >-
            Query text. Article Search uses this to store the input query used
            to generate the search results.
        generatorName:
          type: string
          description: >-
            The resource name of associated generator. Format:
            `projects//locations//generators/`
        querySource:
          enum:
            - QUERY_SOURCE_UNSPECIFIED
            - AGENT_QUERY
            - SUGGESTED_QUERY
          description: Query source for the answer.
          enumDescriptions:
            - Unknown query source.
            - The query is from agents.
            - >-
              The query is a query from previous suggestions, e.g. from a
              preceding SuggestKnowledgeAssist response.
          type: string
      description: Explicit input used for generating the answer
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotationUserInput
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
      properties:
        silencePercentage:
          description: Percentage of the total conversation spent in silence.
          format: float
          type: number
        silenceDuration:
          description: Amount of time calculated to be in silence.
          format: google-duration
          type: string
      type: object
      description: Conversation-level silence data.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      description: The response to undeploy an issue model.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      type: object
      description: Conversation summarization suggestion data.
      properties:
        textSections:
          additionalProperties:
            type: string
          type: object
          description: >-
            The summarization content that is divided into sections. The key is
            the section's name and the value is the section's content. There is
            no specific format for the key or value.
        metadata:
          description: >-
            A map that contains metadata about the summarization and the
            document from which it originates.
          type: object
          additionalProperties:
            type: string
        conversationModel:
          type: string
          description: >-
            The name of the model that generates this summary. Format:
            projects/{project}/locations/{location}/conversationModels/{conversation_model}
        answerRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidence:
          format: float
          type: number
          description: The confidence score of the summarization.
        text:
          description: The summarization content that is concatenated into one string.
          type: string
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      properties:
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
        callAnalysisMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
          description: Call-specific metadata created by the analysis.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      properties:
        sentiment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Sentiment expressed for this mention of the entity.
        entityUniqueId:
          type: string
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          description: The type of the entity mention.
      type: object
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      type: object
      description: A message representing the transcript of a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      properties:
        transcriptSegments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
          type: array
          description: >-
            A list of sequential transcript segments that comprise the
            conversation.
    GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelMetadata
      type: object
      description: Metadata used for export issue model.
      properties:
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        request:
          description: The original export request.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
      properties:
        projectId:
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
          type: string
        table:
          type: string
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      properties:
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment
        issueModel:
          type: string
          description: >-
            Issue model that generates the result. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      type: object
      description: Issue Modeling result on a conversation.
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        conversations:
          description: The conversations that match the request.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
          type: array
        nextPageToken:
          description: >-
            A token which can be sent as `page_token` to retrieve the next page.
            If this field is set, it means there is another page available. If
            it is not set, it means no other pages are available.
          type: string
      type: object
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      properties:
        smartReplyAllowlistCovered:
          description: >-
            Whether the transcript segment was covered under the configured
            smart reply allowlist in Agent Assist.
          type: boolean
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      properties:
        request:
          description: The original request for undeployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      properties:
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        channelTag:
          format: int32
          type: integer
          description: The channel of the audio that the data applies to.
      description: One channel of conversation-level sentiment data.
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the intent.
        displayName:
          description: The human-readable name of the intent.
          type: string
      id: GoogleCloudContactcenterinsightsV1Intent
      description: >-
        The data for an intent. Represents a detected intent in the
        conversation, for example MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource:
      description: Google Cloud Storage Object URI to get the issue model file from.
      type: object
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelRequestGcsSource
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      properties:
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
          description: The original request for undeployment.
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      properties:
        transcriptUri:
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
          type: string
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
      description: A Cloud Storage source of conversation data.
      type: object
    GoogleCloudContactcenterinsightsV1GcsSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1GcsSource
      description: A Cloud Storage source of conversation data.
      properties:
        audioUri:
          description: >-
            Cloud Storage URI that points to a file that contains the
            conversation audio.
          type: string
        transcriptUri:
          type: string
          description: >-
            Immutable. Cloud Storage URI that points to a file that contains the
            conversation transcript.
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse:
      description: The response for a bulk delete conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      type: object
      properties:
        agentChannel:
          format: int32
          type: integer
          description: The audio channel that contains the agent.
        customerChannel:
          type: integer
          description: The audio channel that contains the customer.
          format: int32
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      properties:
        annotations:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation
          description: A list of call annotations that apply to this call.
          type: array
        issueModelResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult
          description: Overall conversation-level issue modeling result.
        entities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          description: All the entities in the call.
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        sentiments:
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
          type: array
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        phraseMatchers:
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData
          description: All the matched phrase matchers in the call.
          type: object
      description: Call-specific metadata created during analysis.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      properties:
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
        sampleSize:
          type: integer
          description: >-
            Optional. If set, this fields indicates the number of objects to
            ingest from the Cloud Storage bucket. If empty, the entire bucket
            will be ingested. Unless they are first deleted, conversations
            produced through sampling won't be ingested by subsequent ingest
            requests.
          format: int32
        gcsSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
          description: >-
            A cloud storage bucket source. Note that any previously ingested
            objects from the source will be skipped to avoid duplication.
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
        speechConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
          description: >-
            Optional. Default Speech-to-Text configuration. Optional, will
            default to the config specified in Settings.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
        redactionConfig:
          description: >-
            Optional. DLP settings for transcript redaction. Optional, will
            default to the config specified in Settings.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      type: object
      description: The request to ingest conversations.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      properties:
        confidence:
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
          type: number
          format: float
        dialogflowIntentId:
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: string
      description: Dialogflow interaction data.
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        points:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
          type: array
          description: >-
            An ordered list of intervals from earliest to latest, where each
            interval represents the number of conversations that transpired
            during the time window.
        intervalDuration:
          type: string
          format: google-duration
          description: The duration of each interval.
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      type: object
      description: Agent Assist Smart Reply data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      properties:
        confidenceScore:
          description: >-
            The system's confidence score that this reply is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
          type: number
          format: double
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Smart Reply and the document
            from which it originates.
        reply:
          description: The content of the reply.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo:
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
      type: object
      properties:
        displayName:
          type: string
          description: The agent's name.
        agentId:
          description: A user-specified string representing the agent.
          type: string
        team:
          type: string
          description: A user-specified string representing the agent's team.
        dispositionCode:
          description: >-
            A user-provided string indicating the outcome of the agent's segment
            of the call.
          type: string
      description: Information about an agent involved in the conversation.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      properties:
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          description: >-
            Output only. Partial errors during ingest operation that might cause
            the operation output to be incomplete.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        ingestConversationsStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
        request:
          description: Output only. The original request for ingest.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
          readOnly: true
      type: object
      description: The metadata for an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      type: object
      properties:
        uri:
          description: Article URI.
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: >-
            Map that contains metadata about the Article Suggestion and the
            document that it originates from.
        title:
          type: string
          description: Article title.
        source:
          type: string
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
        queryRecord:
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
          type: string
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this article is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1ConversationLevelSilence:
      properties:
        silenceDuration:
          description: Amount of time calculated to be in silence.
          format: google-duration
          type: string
        silencePercentage:
          format: float
          type: number
          description: Percentage of the total conversation spent in silence.
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSilence
      type: object
      description: Conversation-level silence data.
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      properties:
        currentStats:
          description: >-
            The latest label statistics for the queried issue model. Includes
            results on both training data and data labeled after deployment.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      type: object
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      properties:
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
      description: >-
        The data for a matched phrase matcher. Represents information
        identifying a phrase matcher for a given match.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
    GoogleCloudContactcenterinsightsV1IssueModel:
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: >-
            Output only. The most recent time at which the issue model was
            updated.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time at which this issue model was created.
        name:
          description: >-
            Immutable. The resource name of the issue model. Format:
            projects/{project}/locations/{location}/issueModels/{issue_model}
          type: string
        modelType:
          type: string
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
        issueCount:
          description: Output only. Number of issues in this issue model.
          format: int64
          type: string
          readOnly: true
        languageCode:
          description: Language of the model.
          type: string
        trainingStats:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats
          readOnly: true
          description: >-
            Output only. Immutable. The issue model's label statistics on its
            training data.
        displayName:
          description: The representative name for the issue model.
          type: string
        state:
          readOnly: true
          type: string
          description: Output only. State of the model.
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - >-
              Model is deployed and is ready to be used. A model can only be
              used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
      id: GoogleCloudContactcenterinsightsV1IssueModel
      description: The issue model resource.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      type: object
      description: Call-specific metadata created during analysis.
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      properties:
        sentiments:
          type: array
          description: Overall conversation-level sentiment for each channel of the call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
        phraseMatchers:
          description: All the matched phrase matchers in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        intents:
          description: All the matched intents in the call.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent
        annotations:
          description: A list of call annotations that apply to this call.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
          type: array
        silence:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSilence
          description: Overall conversation-level silence during the call.
        issueModelResult:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
          description: Overall conversation-level issue modeling result.
        entities:
          description: All the entities in the call.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity
          type: object
    GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination:
      description: Google Cloud Storage Object URI to save the issue model to.
      properties:
        objectUri:
          description: 'Required. Format: `gs:///`'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelRequestGcsDestination
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      description: Configuration that applies to all conversations.
      properties:
        agentId:
          type: string
          description: >-
            Optional. An opaque, user-specified string representing a human
            agent who handled all conversations in the import. Note that this
            will be overridden if per-conversation metadata is provided through
            the `metadata_bucket_uri`.
        customerChannel:
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
        agentChannel:
          format: int32
          description: >-
            Optional. Indicates which of the channels, 1 or 2, contains the
            agent. Note that this must be set for conversations to be properly
            displayed and analyzed.
          type: integer
      type: object
      id: >-
        GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      properties:
        confidenceScore:
          description: >-
            The system's confidence score that this suggestion is a good match
            for this conversation, ranging from 0.0 (completely uncertain) to
            1.0 (completely certain).
          type: number
          format: double
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        suggestion:
          description: The content of the suggestion.
          type: string
        metadata:
          description: >-
            Map that contains metadata about the Smart Compose suggestion and
            the document from which it originates.
          type: object
          additionalProperties:
            type: string
      type: object
      description: Agent Assist Smart Compose suggestion data.
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource to export data from.
        kmsKey:
          description: >-
            A fully qualified KMS key name for BigQuery tables protected by
            CMEK. Format:
            projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
          type: string
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - >-
              If the table already exists, BigQuery will overwrite the table
              data and use the schema from the load.
            - >-
              If the table already exists, BigQuery will append data to the
              table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          type: string
        bigQueryDestination:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
          description: Specified if sink is a BigQuery table.
        filter:
          type: string
          description: >-
            A filter to reduce results to a specific subset. Useful for
            exporting conversations with specific properties.
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
      properties:
        summarizationModel:
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
            - BASELINE_MODEL_V2_0
          enumDescriptions:
            - Unspecified summarization model.
            - The CCAI baseline model.
            - The CCAI baseline model, V2.0.
          description: Default summarization model to be used.
        conversationProfile:
          description: >-
            Resource name of the Dialogflow conversation profile. Format:
            projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
          type: string
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      description: Configuration information of a phrase match rule.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec:
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      id: GoogleCloudContactcenterinsightsV1alpha1EncryptionSpec
      type: object
      properties:
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      description: Information about the issue.
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      properties:
        displayName:
          description: >-
            Immutable. Display name of the assigned issue. This field is set at
            time of analyis and immutable since then.
          type: string
        score:
          type: number
          format: double
          description: >-
            Score indicating the likelihood of the issue assignment. currently
            bounded on [0,1].
        issue:
          description: Resource name of the assigned issue.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      properties:
        intentUniqueId:
          type: string
          description: >-
            The id of the matched intent. Can be used to retrieve the
            corresponding intent information.
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
      description: >-
        The data for an intent match. Represents an intent match for a text
        segment in the conversation. A text segment can be part of a sentence, a
        complete sentence, or an utterance with multiple sentences.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      type: object
      properties:
        confidenceScore:
          format: float
          type: number
          description: >-
            The system's confidence score that this answer is a good match for
            this conversation, ranging from 0.0 (completely uncertain) to 1.0
            (completely certain).
        source:
          description: >-
            The knowledge document that this answer was extracted from. Format:
            projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
          type: string
        metadata:
          description: >-
            Map that contains metadata about the FAQ answer and the document
            that it originates from.
          type: object
          additionalProperties:
            type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        queryRecord:
          type: string
          description: >-
            The name of the answer record. Format:
            projects/{project}/locations/{location}/answerRecords/{answer_record}
        question:
          type: string
          description: The corresponding FAQ question.
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      properties:
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        request:
          description: The original request for deletion.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      properties:
        articleSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData
          description: Agent Assist Article Suggestion data.
        smartReply:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData
          description: Agent Assist Smart Reply data.
        smartComposeSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
          description: Agent Assist Smart Compose suggestion data.
        endBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
        annotationId:
          type: string
          description: >-
            The unique identifier of the annotation. Format:
            projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData
        createTime:
          format: google-datetime
          type: string
          description: The time at which this annotation was created.
        userInput:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotationUserInput
          description: Explicit input used for generating the answer
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        startBoundary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
        conversationSummarizationSuggestion:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
          description: Conversation summarization suggestion data.
        answerFeedback:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback
          description: The feedback that the customer has about the answer in `data`.
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      type: object
      description: >-
        An annotation that was generated during the customer and agent
        interaction.
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      type: object
      description: >-
        The data for an entity mention annotation. This represents a mention of
        an `Entity` in the conversation.
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      properties:
        type:
          description: The type of the entity mention.
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        entityUniqueId:
          type: string
          description: >-
            The key of this entity in conversation entities. Can be used to
            retrieve the exact `Entity` this mention is attached to.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: Required. The issue model to create.
      description: The request to create an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      type: object
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest:
      description: The request to delete conversations in bulk.
      type: object
      properties:
        maxDeleteCount:
          description: Maximum number of conversations to delete.
          format: int32
          type: integer
        force:
          type: boolean
          description: >-
            If set to true, all of this conversation's analyses will also be
            deleted. Otherwise, the request will only succeed if the
            conversation has no analyses.
        parent:
          description: >-
            Required. The parent resource to delete conversations from. Format:
            projects/{project}/locations/{location}
          type: string
        filter:
          type: string
          description: Filter used to select the subset of conversations to delete.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
    GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
      description: The metadata for a bulk delete conversations operation.
      properties:
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
        partialErrors:
          description: >-
            Partial errors during bulk delete conversations operation that might
            cause the operation output to be incomplete.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        request:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
          description: The original request for bulk delete.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      description: Response from import issue model
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      description: A message representing a rule in the phrase matcher.
      properties:
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule
          type: array
        type:
          type: string
          description: Required. The type of this phrase match rule group.
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      properties: {}
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      description: >-
        The data for a Dialogflow intent. Represents a detected intent in the
        conversation, e.g. MAKES_PROMISE.
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      type: object
      properties:
        transcriptIndex:
          format: int32
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
        wordIndex:
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
          format: int32
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        ttl:
          type: string
          format: google-duration
          description: >-
            Input only. The TTL for this resource. If specified, then this TTL
            will be used to calculate the expire time.
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        turnCount:
          readOnly: true
          type: integer
          format: int32
          description: Output only. The number of turns in the conversation.
        createTime:
          description: Output only. The time at which the conversation was created.
          type: string
          readOnly: true
          format: google-datetime
        callMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata
          description: Call-specific metadata.
        duration:
          format: google-duration
          description: Output only. The duration of the conversation.
          readOnly: true
          type: string
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        qualityMetadata:
          description: Conversation metadata related to quality management.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        agentId:
          type: string
          description: >-
            An opaque, user-specified string representing the human agent who
            handled the conversation.
        dialogflowIntents:
          readOnly: true
          description: >-
            Output only. All the matched Dialogflow intents in the call. The key
            corresponds to a Dialogflow intent, format:
            projects/{project}/agent/{agent}/intents/{intent}
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent
          type: object
        expireTime:
          description: >-
            The time at which this conversation should expire. After this time,
            the conversation data and any associated analyses will be deleted.
          type: string
          format: google-datetime
        latestSummary:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
          description: Output only. Latest summary of the conversation.
          readOnly: true
        metadataJson:
          type: string
          description: >-
            Input only. JSON Metadata encoded as a string. This field is
            primarily used by Insights integrations with various telphony
            systems and must be in one of Insights' supported formats.
        name:
          type: string
          description: >-
            Immutable. The resource name of the conversation. Format:
            projects/{project}/locations/{location}/conversations/{conversation}
        medium:
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: >-
            Immutable. The conversation medium, if unspecified will default to
            PHONE_CALL.
          type: string
        transcript:
          readOnly: true
          description: Output only. The conversation transcript.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript
        dataSource:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource
          description: The source of the audio and transcription for the conversation.
        runtimeAnnotations:
          description: >-
            Output only. The annotations that were generated during the customer
            and agent interaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
          type: array
          readOnly: true
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        labels:
          additionalProperties:
            type: string
          description: >-
            A map for the user to specify any custom fields. A maximum of 20
            labels per conversation is allowed, with a maximum of 256 characters
            per entry.
          type: object
        updateTime:
          description: >-
            Output only. The most recent time at which the conversation was
            updated.
          format: google-datetime
          type: string
          readOnly: true
      type: object
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleLongrunningOperation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      type: object
      id: GoogleLongrunningOperation
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      description: Dialogflow interaction data.
      properties:
        confidence:
          type: number
          format: float
          description: >-
            The confidence of the match ranging from 0.0 (completely uncertain)
            to 1.0 (completely certain).
        dialogflowIntentId:
          description: >-
            The Dialogflow intent resource path. Format:
            projects/{project}/agent/{agent}/intents/{intent}
          type: string
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      description: The response of listing views.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        views:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          type: array
          description: The views that match the request.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      type: object
      description: The request to deploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      properties:
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        channelTag:
          type: integer
          format: int32
          description: The channel of the audio that the data applies to.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      id: >-
        GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
      properties:
        dataset:
          description: >-
            Required. The name of the BigQuery dataset that the snapshot result
            should be exported to. If this dataset does not exist, the export
            call returns an INVALID_ARGUMENT error.
          type: string
        table:
          type: string
          description: >-
            The BigQuery table name to which the insights data should be
            written. If this table does not exist, the export call returns an
            INVALID_ARGUMENT error.
        projectId:
          type: string
          description: >-
            A project ID or number. If specified, then export will attempt to
            write data to this project instead of the resource project.
            Otherwise, the resource project will be used.
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      properties:
        channelTag:
          description: >-
            The channel of the audio where the annotation occurs. For
            single-channel audio, this field is not populated.
          type: integer
          format: int32
        intentMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
          description: Data specifying an intent match.
        interruptionData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData
          description: Data specifying an interruption.
        annotationEndBoundary:
          description: >-
            The boundary in the conversation where the annotation ends,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        silenceData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData
          description: Data specifying silence.
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
        annotationStartBoundary:
          description: >-
            The boundary in the conversation where the annotation starts,
            inclusive.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
        holdData:
          description: Data specifying a hold.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData
        issueMatchData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
          description: Data specifying an issue match.
        sentimentData:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData
          description: Data specifying sentiment.
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
      description: A piece of metadata that applies to a window of a call.
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
      properties:
        issueAssignment:
          $ref: >-
            #/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
          description: Information about the issue's assignment.
      description: The data for an issue match annotation.
      type: object
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      type: object
      description: >-
        A point in a conversation that marks the start or the end of an
        annotation.
      properties:
        transcriptIndex:
          format: int32
          description: >-
            The index in the sequence of transcribed pieces of the conversation
            where the boundary is located. This index starts at zero.
          type: integer
        wordIndex:
          format: int32
          description: >-
            The word index of this boundary with respect to the first word in
            the transcript piece. This index starts at zero.
          type: integer
    GoogleCloudContactcenterinsightsV1ConversationQualityMetadata:
      properties:
        agentInfo:
          description: Information about agents involved in the call.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
        customerSatisfactionRating:
          type: integer
          format: int32
          description: >-
            An arbitrary integer value indicating the customer's satisfaction
            rating.
        menuPath:
          description: >-
            An arbitrary string value specifying the menu path the customer
            took.
          type: string
        waitDuration:
          type: string
          format: google-duration
          description: The amount of time the customer waited to connect with an agent.
      description: Conversation metadata related to quality management.
      id: GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
      type: object
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/issues/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_analyze:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/bulk_delete'
    encryption_spec:
      id: google.contactcenterinsights.encryption_spec
      name: encryption_spec
      title: Encryption_spec
      methods:
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_encryption_spec:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1encryptionSpec/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_spec/methods/get_encryption_spec
        insert: []
        update: []
        replace: []
        delete: []
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/settings/methods/update_settings'
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:export:
    parameters: *ref_1
    post:
      description: Exports an issue model to the provided destination.
      operationId: contactcenterinsights.projects.locations.issueModels.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ExportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: >-
        Deploys an issue model. Returns an error if a model is already deployed.
        An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:import:
    parameters: *ref_1
    post:
      description: Imports an issue model from a Cloud Storage bucket.
      operationId: contactcenterinsights.projects.locations.issueModels.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1ImportIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: >-
        contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: >-
        Undeploys an issue model. An issue model can not be used in analysis
        after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Analysis
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    post:
      description: >-
        Creates an analysis. The long running operation is done when the
        analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:upload:
    parameters: *ref_1
    post:
      description: >-
        Create a long-running conversation upload operation. This method differs
        from `CreateConversation` by allowing audio transcription and optional
        DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: >-
        Imports conversations and processes them according to the user's
        configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a conversation. Does not support audio transcription or DLP
        redaction. Use `conversations.upload` instead.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Conversation
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:initialize:
    parameters: *ref_1
    post:
      description: >-
        Initializes a location-level encryption key specification. An error will
        be thrown if the location has resources already created before the
        initialization. Once the encryption specification is initialized at a
        location, it is immutable and all newly created resources under the
        location will be encrypted with the existing specification.
      operationId: contactcenterinsights.projects.locations.encryptionSpec.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/encryptionSpec:
    parameters: *ref_1
    get:
      description: Gets location-level encryption key specification.
      operationId: contactcenterinsights.projects.locations.getEncryptionSpec
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1EncryptionSpec
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContactcenterinsightsV1Settings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
