openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20221219'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/contact-center/insights/docs
servers:
  - url: https://contactcenterinsights.googleapis.com
components:
  schemas:
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        endTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
        partialErrors:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          type: array
        request:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
          description: Output only. The original request for ingest.
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      type: object
      properties: {}
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1SentimentData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SentimentData
      description: The data for a sentiment annotation.
      properties:
        magnitude:
          format: float
          type: number
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      type: object
      properties:
        uri:
          type: string
          description: Article URI.
        title:
          description: Article title.
          type: string
        confidenceScore:
          type: number
          format: float
          description: The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        metadata:
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
          additionalProperties:
            type: string
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      properties:
        dialogflowIntentId:
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
          type: string
        confidence:
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      type: object
      description: Metadata for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      properties:
        partialErrors:
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
          readOnly: true
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      properties:
        phraseMatcher:
          description: The unique identifier (the resource name) of the phrase matcher.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
      properties: {}
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudContactcenterinsightsV1Analysis:
      properties:
        analysisResult:
          readOnly: true
          description: Output only. The result of the analysis, which is populated when the analysis finishes.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
        requestTime:
          format: google-datetime
          description: Output only. The time at which the analysis was requested.
          readOnly: true
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which the analysis was created, which occurs when the long-running operation completes.
          type: string
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1Analysis
      description: The analysis resource.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      description: Metadata for creating an issue model.
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      description: Aggregated statistics about an issue.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      properties:
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        labeledConversationsCount:
          description: Number of conversations attached to the issue at this point in time.
          type: string
          format: int64
        displayName:
          type: string
          description: Display name of the issue.
      type: object
    GoogleCloudContactcenterinsightsV1View:
      type: object
      description: The View resource.
      id: GoogleCloudContactcenterinsightsV1View
      properties:
        value:
          description: String with specific view properties, must be non-empty.
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The most recent time at which the view was updated.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time at which this view was created.
          format: google-datetime
          type: string
        name:
          type: string
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
        displayName:
          description: The human-readable display name of the view.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
      type: object
      properties: {}
      description: The response to an IngestConversations operation.
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      type: object
      description: The request to deploy an issue model.
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1InterruptionData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
      properties: {}
      description: Response for an export insights operation.
      type: object
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      type: object
      description: The response of listing phrase matchers.
      properties:
        phraseMatchers:
          type: array
          description: The phrase matchers that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      type: object
      properties:
        unclassifiedConversationsCount:
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          type: string
        analyzedConversationsCount:
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
          type: string
        issueStats:
          description: Statistics on each issue. Key is the issue's resource name.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      properties:
        intentUniqueId:
          type: string
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
      description: The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      type: object
      properties:
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
        trainingConversationsCount:
          format: int64
          readOnly: true
          type: string
          description: Output only. Number of conversations used in training. Output only.
        filter:
          type: string
          description: A filter to reduce the conversations used for training the model to a specific subset.
      description: Configs for the input data used to create the issue model.
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      type: object
      description: Response of querying an issue model's statistics.
      properties:
        currentStats:
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      description: Selector of all available annotators and phrase matchers to run.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      properties:
        phraseMatchers:
          type: array
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          items:
            type: string
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        issueModels:
          items:
            type: string
          description: The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
          type: array
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      properties:
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
        writeDisposition:
          type: string
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - If the table already exists, BigQuery will overwrite the table data and use the schema from the load.
            - If the table already exists, BigQuery will append data to the table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
      description: The request to export insights.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      description: One channel of conversation-level sentiment data.
      properties:
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        channelTag:
          format: int32
          description: The channel of the audio that the data applies to.
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1GcsSource:
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
      properties:
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
      description: A Cloud Storage source of conversation data.
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      properties:
        smartReply:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
          description: Agent Assist Smart Reply data.
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: The boundary in the conversation where the annotation ends, inclusive.
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
          description: Dialogflow interaction data.
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        createTime:
          type: string
          format: google-datetime
          description: The time at which this annotation was created.
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        startBoundary:
          description: The boundary in the conversation where the annotation starts, inclusive.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      description: A message representing a rule in the phrase matcher.
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      properties:
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - If any of the phrase match rules are met, there is a match.
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          description: Required. The type of this phrase match rule group.
          type: string
        phraseMatchRules:
          description: A list of phase match rules that are included in this group.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      properties:
        issues:
          type: array
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      description: The response of listing issues.
      type: object
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      description: The request to create an issue model.
      type: object
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      properties:
        filter:
          description: Required. Filter used to select the subset of conversations to analyze.
          type: string
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        analysisPercentage:
          description: Required. Percentage of selected conversation to analyze, between [0, 100].
          format: float
          type: number
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
      type: object
    GoogleCloudContactcenterinsightsV1Settings:
      properties:
        createTime:
          format: google-datetime
          description: Output only. The time at which the settings was created.
          readOnly: true
          type: string
        pubsubNotificationSettings:
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. The time at which the settings were last updated.
          format: google-datetime
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
        languageCode:
          type: string
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
        conversationTtl:
          format: google-duration
          type: string
          description: The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.
        name:
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
          type: string
      type: object
      description: The settings resource.
      id: GoogleCloudContactcenterinsightsV1Settings
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      properties:
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
        analysisPercentage:
          format: float
          description: Required. Percentage of selected conversation to analyze, between [0, 100].
          type: number
        annotatorSelector:
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
      description: The request to analyze conversations in bulk.
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
      description: Metadata for undeploying an issue model.
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
      properties:
        annotations:
          description: A list of call annotations that apply to this call.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
        phraseMatchers:
          type: object
          description: All the matched phrase matchers in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
        entities:
          description: All the entities in the call.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
        intents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
          description: All the matched intents in the call.
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
        sentiments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
          type: array
      type: object
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      description: Metadata for creating an issue model.
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
          description: The original request for creation.
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      description: Configuration for processing transcript objects.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      description: Metadata for deleting an issue model.
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      properties:
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
        userId:
          description: A user-specified ID representing the participant.
          type: string
        role:
          description: The role of the participant.
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      type: object
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      type: object
      description: Information about the issue.
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
      properties:
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          format: double
          type: number
          description: Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
        displayName:
          type: string
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      description: Metadata for a create analysis operation.
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
        annotatorSelector:
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      type: object
      description: The response to deploy an issue model.
      properties: {}
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      properties:
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
        failedAnalysesCount:
          type: integer
          description: The number of requested analyses that have failed so far.
          format: int32
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        totalRequestedAnalysesCount:
          type: integer
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        endTime:
          type: string
          format: google-datetime
          description: The time the operation finished running.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
    GoogleCloudContactcenterinsightsV1Conversation:
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
        latestAnalysis:
          description: Output only. The conversation's latest analysis, if one exists.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        startTime:
          format: google-datetime
          type: string
          description: The time at which the conversation started.
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
        name:
          type: string
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        agentId:
          type: string
          description: An opaque, user-specified string representing the human agent who handled the conversation.
        dialogflowIntents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          readOnly: true
        updateTime:
          description: Output only. The most recent time at which the conversation was updated.
          format: google-datetime
          type: string
          readOnly: true
        duration:
          readOnly: true
          description: Output only. The duration of the conversation.
          type: string
          format: google-duration
        ttl:
          format: google-duration
          type: string
          description: Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
        expireTime:
          type: string
          description: The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
          format: google-datetime
        obfuscatedUserId:
          type: string
          description: Obfuscated user ID which the customer sent to us.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time at which the conversation was created.
        transcript:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          description: Output only. The conversation transcript.
        runtimeAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          readOnly: true
          description: Output only. The annotations that were generated during the customer and agent interaction.
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
          description: Call-specific metadata.
        turnCount:
          description: Output only. The number of turns in the conversation.
          format: int32
          type: integer
          readOnly: true
        dataSource:
          description: The source of the audio and transcription for the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      properties:
        revisionId:
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
          readOnly: true
        roleMatch:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          type: string
        versionTag:
          description: The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
          type: string
        displayName:
          type: string
          description: The human-readable name of the phrase matcher.
        active:
          type: boolean
          description: Applies the phrase matcher only when it is active.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the phrase matcher was updated.
          type: string
        activationUpdateTime:
          description: Output only. The most recent time at which the activation status was updated.
          type: string
          format: google-datetime
          readOnly: true
        type:
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - If any of the phrase match rule groups are met, there is a match.
          type: string
          description: Required. The type of this phrase matcher.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        revisionCreateTime:
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
          type: string
          format: google-datetime
          readOnly: true
        phraseMatchRuleGroups:
          type: array
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
      type: object
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
      description: The phrase matcher resource.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      properties: {}
      type: object
      description: The response to undeploy an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      type: object
      properties:
        agentId:
          description: An opaque, user-specified string representing the human agent who handled the conversations.
          type: string
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      description: The data for an issue match annotation.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      type: object
      properties:
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
      description: The request to ingest conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: GoogleLongrunningOperation
      properties:
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      properties:
        intervalDuration:
          type: string
          description: The duration of each interval.
          format: google-duration
        points:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          description: An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      description: A time series representing conversations over time.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      properties:
        customerChannel:
          type: integer
          description: The audio channel that contains the customer.
          format: int32
        agentChannel:
          description: The audio channel that contains the agent.
          type: integer
          format: int32
      description: Call-specific metadata.
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      type: object
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        wordIndex:
          format: int32
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          type: integer
        transcriptIndex:
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
          type: integer
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      description: The response of listing views.
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
      type: object
      properties:
        views:
          description: The views that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      properties:
        analyzedConversationsCount:
          type: string
          format: int64
          description: Number of conversations the issue model has analyzed at this point in time.
        unclassifiedConversationsCount:
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          format: int64
          type: string
        issueStats:
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      description: The request to create an issue model.
      type: object
      properties:
        parent:
          type: string
          description: Required. The parent resource of the issue model.
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: Required. The issue model to create.
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      type: object
      properties:
        agentId:
          type: string
          description: An opaque, user-specified string representing the human agent who handled the conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1IssueModel:
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueModel
      description: The issue model resource.
      properties:
        updateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
        createTime:
          type: string
          readOnly: true
          description: Output only. The time at which this issue model was created.
          format: google-datetime
        issueCount:
          type: string
          description: Output only. Number of issues in this issue model.
          readOnly: true
          format: int64
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        displayName:
          type: string
          description: The representative name for the issue model.
        state:
          type: string
          description: Output only. State of the model.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          readOnly: true
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      description: A Dialogflow source of conversation data.
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
      properties:
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          readOnly: true
          type: string
        audioUri:
          description: Cloud Storage URI that points to a file that contains the conversation audio.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          description: The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
        dataset:
          description: Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
        projectId:
          description: A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
    GoogleCloudContactcenterinsightsV1Entity:
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
        displayName:
          description: The representative name for the entity.
          type: string
        salience:
          description: The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
          type: number
          format: float
        type:
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          type: string
          description: The entity type.
      id: GoogleCloudContactcenterinsightsV1Entity
      description: The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      description: Metadata for undeploying an issue model.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
    GoogleCloudContactcenterinsightsV1Issue:
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time at which this issue was created.
        displayName:
          description: The representative name for the issue.
          type: string
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        sampleUtterances:
          type: array
          items:
            type: string
          readOnly: true
          description: Output only. Resource names of the sample representative utterances that match to this issue.
        updateTime:
          description: Output only. The most recent time that this issue was updated.
          readOnly: true
          format: google-datetime
          type: string
      type: object
      description: The issue resource.
      id: GoogleCloudContactcenterinsightsV1Issue
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
      properties:
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
          description: The original request for deletion.
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
      description: Metadata for deleting an issue model.
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
      description: The result of an analysis.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
      description: The response for a bulk analyze conversations operation.
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      type: object
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
      properties:
        entityUniqueId:
          type: string
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
        type:
          type: string
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
        sentiment:
          description: Sentiment expressed for this mention of the entity.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        conversations:
          type: array
          description: The conversations that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        nextPageToken:
          description: A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.
          type: string
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
      description: The response of listing conversations.
      type: object
    GoogleCloudContactcenterinsightsV1Intent:
      id: GoogleCloudContactcenterinsightsV1Intent
      description: The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
      properties:
        displayName:
          description: The human-readable name of the intent.
          type: string
        id:
          description: The unique identifier of the intent.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
      properties:
        endOffset:
          description: Time offset of the end of this word relative to the beginning of the total conversation.
          type: string
          format: google-duration
        startOffset:
          type: string
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      description: The issue model resource.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
      properties:
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        inputDataConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
          description: Configs for the input data that used to create the issue model.
        issueCount:
          format: int64
          description: Output only. Number of issues in this issue model.
          readOnly: true
          type: string
        displayName:
          type: string
          description: The representative name for the issue model.
        createTime:
          description: Output only. The time at which this issue model was created.
          format: google-datetime
          type: string
          readOnly: true
        updateTime:
          type: string
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
        trainingStats:
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
          readOnly: true
        state:
          description: Output only. State of the model.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      description: Default configuration when creating Analyses in Insights.
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
        runtimeIntegrationAnalysisPercentage:
          description: Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].
          format: double
          type: number
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
      type: object
      description: A message representing the transcript of a conversation.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        projectId:
          description: A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
          type: string
        table:
          type: string
          description: The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
        dataset:
          description: Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
          type: string
      description: A BigQuery Table Reference.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
      type: object
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      description: The response for calculating conversation statistics.
      type: object
      properties:
        issueMatches:
          additionalProperties:
            format: int32
            type: integer
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
        customHighlighterMatches:
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
          type: object
          additionalProperties:
            format: int32
            type: integer
        averageTurnCount:
          format: int32
          description: The average number of turns per conversation.
          type: integer
        issueMatchesStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
        conversationCountTimeSeries:
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
        smartHighlighterMatches:
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
          additionalProperties:
            format: int32
            type: integer
          type: object
        averageDuration:
          format: google-duration
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          type: string
        conversationCount:
          description: The total number of conversations.
          type: integer
          format: int32
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      properties:
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
          description: Data specifying an issue match.
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: The boundary in the conversation where the annotation starts, inclusive.
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        entityMentionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
          description: Data specifying an entity mention.
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Data specifying sentiment.
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
        annotationEndBoundary:
          description: The boundary in the conversation where the annotation ends, inclusive.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        silenceData:
          description: Data specifying silence.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
          description: Data specifying an interruption.
        channelTag:
          format: int32
          description: The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
      description: A piece of metadata that applies to a window of a call.
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      type: object
      description: Selector of all available annotators and phrase matchers to run.
      properties:
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        issueModels:
          description: The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
          type: array
          items:
            type: string
        runPhraseMatcherAnnotator:
          type: boolean
          description: Whether to run the active phrase matcher annotator(s).
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      description: The metadata for a bulk analyze conversations operation.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      properties:
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        request:
          description: The original request for bulk analyze.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
        completedAnalysesCount:
          description: The number of requested analyses that have completed successfully so far.
          format: int32
          type: integer
        totalRequestedAnalysesCount:
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
        createTime:
          type: string
          description: The time the operation was created.
          format: google-datetime
      type: object
    GoogleCloudContactcenterinsightsV1HoldData:
      description: The data for a hold annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1HoldData
      type: object
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      description: Agent Assist frequently-asked-question answer data.
      properties:
        question:
          type: string
          description: The corresponding FAQ question.
        metadata:
          type: object
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          additionalProperties:
            type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        confidenceScore:
          format: float
          description: The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
      type: object
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      type: object
      description: Metadata for an export insights operation.
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
          description: The original request for export.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        partialErrors:
          description: Partial errors during export operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      type: object
      properties:
        writeDisposition:
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - If the table already exists, BigQuery will overwrite the table data and use the schema from the load.
            - If the table already exists, BigQuery will append data to the table.
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          type: string
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        parent:
          description: Required. The parent resource to export data from.
          type: string
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      type: object
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: All the matched issues.
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      properties:
        medium:
          description: Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        trainingConversationsCount:
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
          type: string
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
      type: object
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      type: object
      properties:
        negated:
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
          type: boolean
        query:
          type: string
          description: Required. The phrase to be matched.
        config:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
          description: Provides additional information about the rule that specifies how to apply the rule.
      description: The data for a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      description: The metadata for an IngestConversations operation.
      properties:
        partialErrors:
          readOnly: true
          type: array
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          readOnly: true
          description: Output only. The original request for ingest.
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      description: The request to undeploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      properties:
        labeledConversationsCount:
          type: string
          description: Number of conversations attached to the issue at this point in time.
          format: int64
        displayName:
          description: Display name of the issue.
          type: string
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
      type: object
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      description: The feedback that the customer has about a certain answer in the conversation.
      properties:
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      properties:
        caseSensitive:
          type: boolean
          description: Whether to consider case sensitivity when performing an exact match.
      description: Exact match configuration.
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      description: Configuration information of a phrase match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      type: object
      properties:
        exactMatchConfig:
          description: The configuration for the exact match rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      properties:
        issueModels:
          description: The issue models that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          type: array
      type: object
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        analyses:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          type: array
          description: The analyses that match the request.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      type: object
      description: The response to list analyses.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
      description: Configuration for Cloud Storage bucket sources.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      properties:
        confidence:
          type: number
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          format: float
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        channelTag:
          description: For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
          format: int32
          type: integer
        text:
          type: string
          description: The text of this segment.
        words:
          type: array
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
        messageTime:
          format: google-datetime
          type: string
          description: The time that the message occurred, if provided.
        sentiment:
          description: The sentiment for this transcript segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
      description: A segment of a full transcript.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
      type: object
      properties:
        medium:
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          enumDescriptions:
            - Default value, if unspecified will default to PHONE_CALL.
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
      properties:
        conversation:
          readOnly: true
          type: string
          description: Output only. The Conversation that this Analysis Operation belongs to.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        annotatorSelector:
          readOnly: true
          description: Output only. The annotator selector used for the analysis (if any).
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
      type: object
      description: Metadata for a create analysis operation.
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      properties:
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        confidenceScore:
          description: The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: double
          type: number
        suggestion:
          type: string
          description: The content of the suggestion.
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
      description: Agent Assist Smart Compose suggestion data.
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      description: The request to deploy an issue model.
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      properties: {}
      description: The response to undeploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      properties:
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        transcriptObjectConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
          description: Configuration for when `source` contains conversation transcripts.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
      description: The request to ingest conversations.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      type: object
      description: A single interval in a time series.
      properties:
        startTime:
          description: The start time of this interval.
          format: google-datetime
          type: string
        conversationCount:
          description: The number of conversations created in this interval.
          format: int32
          type: integer
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      type: object
      description: The request to undeploy an issue model.
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1SilenceData:
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1SilenceData
      type: object
      properties: {}
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      description: Agent Assist Smart Reply data.
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      properties:
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
        reply:
          type: string
          description: The content of the reply.
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          description: The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: double
          type: number
      type: object
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      type: object
      description: The conversation source, which is a combination of transcript and audio.
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
          description: A Cloud Storage location specification for the audio and transcript.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      description: Metadata from Dialogflow relating to the current transcript segment.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      type: object
      properties:
        smartReplyAllowlistCovered:
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
          type: boolean
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      description: The response for a bulk analyze conversations operation.
      properties:
        failedAnalysisCount:
          type: integer
          description: Count of failed analyses.
          format: int32
        successfulAnalysisCount:
          format: int32
          description: Count of successful analyses.
          type: integer
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      type: object
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase_matchers
      methods:
        projects_locations_phraseMatchers_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_phraseMatchers_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/projects_locations_phraseMatchers_delete'
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        projects_locations_issueModels_issues_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_issues_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/projects_locations_issueModels_issues_delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue_models
      methods:
        projects_locations_issueModels_deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_issueModels_calculateIssueModelStats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_get'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/projects_locations_issueModels_delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        projects_locations_conversations_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_bulkAnalyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_calculateStats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/projects_locations_conversations_delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        projects_locations_conversations_analyses_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_conversations_analyses_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/projects_locations_conversations_analyses_delete'
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        projects_locations_insightsdata_export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        projects_locations_views_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_views_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_get'
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/projects_locations_views_delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete: []
    locations:
      id: google.contactcenterinsights.locations
      name: locations
      title: Locations
      methods:
        projects_locations_updateSettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    locations__settings:
      id: google.contactcenterinsights.locations__settings
      name: locations__settings
      title: Locations__settings
      methods:
        projects_locations_getSettings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations__settings/methods/projects_locations_getSettings'
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}:
    parameters: *ref_1
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: delete
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: select
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}:
    parameters: *ref_1
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: select
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: delete
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues:
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy:
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: select
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels:
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: insert
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy:
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats:
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:
    parameters: *ref_1
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: insert
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: conversations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze:
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats:
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest:
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-verb: delete
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: select
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}:
    parameters: *ref_1
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: select
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses:
    parameters: *ref_1
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: insert
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export:
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/views:
    parameters: *ref_1
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: views
      x-stackQL-verb: select
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}:
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: delete
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__settings
      x-stackQL-verb: select
