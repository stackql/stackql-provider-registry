openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Insights API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230813'
  x-generated-date: '2023-08-22'
externalDocs:
  url: 'https://cloud.google.com/contact-center/insights/docs'
servers:
  - url: 'https://contactcenterinsights.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata:
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        annotatorSelector:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
        conversation:
          description: Output only. The Conversation that this Analysis Operation belongs to.
          type: string
          readOnly: true
      description: Metadata for a create analysis operation.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig:
      type: object
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
      properties:
        medium:
          type: string
          deprecated: true
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        trainingConversationsCount:
          format: int64
          type: string
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        startOffset:
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          format: google-duration
          type: string
        word:
          description: The word itself. Includes punctuation marks that surround the word.
          type: string
        endOffset:
          format: google-duration
          type: string
          description: Time offset of the end of this word relative to the beginning of the total conversation.
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
      type: object
      description: Word-level info for words in a transcript.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
    GoogleCloudContactcenterinsightsV1IssueAssignment:
      description: Information about the issue.
      properties:
        issue:
          type: string
          description: Resource name of the assigned issue.
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        score:
          format: double
          type: number
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
      type: object
      id: GoogleCloudContactcenterinsightsV1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1RedactionConfig:
      type: object
      description: DLP resources used for redaction while ingesting conversations.
      id: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
      properties:
        inspectTemplate:
          type: string
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
        deidentifyTemplate:
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
          type: string
    GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig:
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
      description: Configuration for summarization.
      type: object
      properties:
        summarizationModel:
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
          description: Default summarization model to be used.
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          format: int32
          type: integer
        failedAnalysisCount:
          format: int32
          type: integer
          description: Count of failed analyses.
      description: The response for a bulk analyze conversations operation.
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse:
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
      description: The response to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1CreateIssueModelRequest:
      properties:
        parent:
          description: Required. The parent resource of the issue model.
          type: string
        issueModel:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: Required. The issue model to create.
      description: The request to create an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata:
      properties:
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        createTime:
          type: string
          format: google-datetime
          description: The time the operation was created.
        endTime:
          type: string
          description: The time the operation finished running.
          format: google-datetime
        failedAnalysesCount:
          description: The number of requested analyses that have failed so far.
          type: integer
          format: int32
        totalRequestedAnalysesCount:
          type: integer
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      type: object
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudContactcenterinsightsV1SmartReplyData:
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidenceScore:
          format: double
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          type: object
        reply:
          type: string
          description: The content of the reply.
      id: GoogleCloudContactcenterinsightsV1SmartReplyData
      description: Agent Assist Smart Reply data.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest:
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the issue model to delete.
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
      description: The request to delete an issue model.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStats:
      type: object
      properties:
        analyzedConversationsCount:
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
          type: string
        issueStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          description: Statistics on each issue. Key is the issue's resource name.
        unclassifiedConversationsCount:
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStats
      description: Aggregated statistics about an issue model.
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResult:
      description: The result of an analysis.
      type: object
      properties:
        callAnalysisMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata'
          description: Call-specific metadata created by the analysis.
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
    GoogleCloudContactcenterinsightsV1ListIssuesResponse:
      description: The response of listing issues.
      id: GoogleCloudContactcenterinsightsV1ListIssuesResponse
      properties:
        issues:
          type: array
          description: The issues that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      type: object
    GoogleCloudContactcenterinsightsV1Issue:
      id: GoogleCloudContactcenterinsightsV1Issue
      description: The issue resource.
      type: object
      properties:
        sampleUtterances:
          type: array
          readOnly: true
          description: Output only. Resource names of the sample representative utterances that match to this issue.
          items:
            type: string
        name:
          type: string
          description: 'Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        displayName:
          type: string
          description: The representative name for the issue.
        createTime:
          description: Output only. The time at which this issue was created.
          type: string
          format: google-datetime
          readOnly: true
        updateTime:
          readOnly: true
          type: string
          description: Output only. The most recent time that this issue was updated.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1GcsSource:
      type: object
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1alpha1GcsSource
    GoogleCloudContactcenterinsightsV1Conversation:
      properties:
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        dialogflowIntents:
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowIntent'
        updateTime:
          readOnly: true
          description: Output only. The most recent time at which the conversation was updated.
          format: google-datetime
          type: string
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
        callMetadata:
          description: Call-specific metadata.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationCallMetadata'
        ttl:
          format: google-duration
          type: string
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time at which the conversation was created.
          readOnly: true
          type: string
        turnCount:
          readOnly: true
          format: int32
          type: integer
          description: Output only. The number of turns in the conversation.
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        duration:
          format: google-duration
          readOnly: true
          description: Output only. The duration of the conversation.
          type: string
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscript'
          readOnly: true
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
          description: 'Output only. The conversation''s latest analysis, if one exists.'
          readOnly: true
        latestSummary:
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
          readOnly: true
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        runtimeAnnotations:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RuntimeAnnotation'
          description: Output only. The annotations that were generated during the customer and agent interaction.
          type: array
        startTime:
          description: The time at which the conversation started.
          type: string
          format: google-datetime
        medium:
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        labels:
          type: object
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
          additionalProperties:
            type: string
      description: The conversation resource.
      id: GoogleCloudContactcenterinsightsV1Conversation
      type: object
    GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
      type: object
      properties:
        issueModelResult:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelResult'
          description: Overall conversation-level issue modeling result.
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Entity'
          description: All the entities in the call.
          type: object
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Intent'
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        annotations:
          description: A list of call annotations that apply to this call.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CallAnnotation'
          type: array
    GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse:
      description: Response of querying an issue model's statistics.
      id: GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
      properties:
        currentStats:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: The latest label statistics for the queried issue model. Includes results on both training data and data labeled after deployment.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata:
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        partialErrors:
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: Partial errors during export operation that might cause the operation output to be incomplete.
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest'
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
      description: Metadata for an export insights operation.
      type: object
    GoogleCloudContactcenterinsightsV1ListIssueModelsResponse:
      type: object
      description: The response of listing issue models.
      id: GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
      properties:
        issueModels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
          description: The issue models that match the request.
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest:
      type: object
      properties:
        writeDisposition:
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          description: Options for what to do if the destination table already exists.
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
          type: string
        parent:
          type: string
          description: Required. The parent resource to export data from.
        kmsKey:
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
          type: string
        filter:
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
          type: string
        bigQueryDestination:
          description: Specified if sink is a BigQuery table.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination'
      description: The request to export insights.
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest:
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
      properties:
        analysisPercentage:
          format: float
          type: number
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        parent:
          type: string
          description: Required. The parent resource to create analyses in.
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
      description: A Dialogflow source of conversation data.
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        dialogflowConversation:
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
          readOnly: true
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData:
      type: object
      properties:
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
        confidence:
          format: float
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
          type: number
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
      description: Dialogflow interaction data.
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource:
      description: Configuration for Cloud Storage bucket sources.
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest:
      description: The request to analyze conversations in bulk.
      id: GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
      type: object
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        parent:
          description: Required. The parent resource to create analyses in.
          type: string
        analysisPercentage:
          format: float
          type: number
          description: 'Required. Percentage of selected conversation to analyze, between [0, 100].'
        filter:
          type: string
          description: Required. Filter used to select the subset of conversations to analyze.
    GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata:
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
      properties:
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
        request:
          description: The original request for export.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          description: Partial errors during export operation that might cause the operation output to be incomplete.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
      type: object
      description: Metadata for an export insights operation.
    GoogleCloudContactcenterinsightsV1alpha1IssueModel:
      description: The issue model resource.
      properties:
        issueCount:
          description: Output only. Number of issues in this issue model.
          type: string
          format: int64
          readOnly: true
        displayName:
          description: The representative name for the issue model.
          type: string
        name:
          type: string
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
        languageCode:
          type: string
          description: Language of the model.
        updateTime:
          description: Output only. The most recent time at which the issue model was updated.
          format: google-datetime
          type: string
          readOnly: true
        trainingStats:
          readOnly: true
          description: Output only. Immutable. The issue model's label statistics on its training data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats'
        modelType:
          description: Type of the model.
          type: string
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig'
        state:
          type: string
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          description: Output only. State of the model.
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time at which this issue model was created.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModel
    GoogleCloudContactcenterinsightsV1alpha1Conversation:
      properties:
        dataSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource'
          description: The source of the audio and transcription for the conversation.
        latestSummary:
          readOnly: true
          description: Output only. Latest summary of the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
        startTime:
          description: The time at which the conversation started.
          format: google-datetime
          type: string
        dialogflowIntents:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent'
          type: object
          readOnly: true
          description: 'Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}'
        name:
          description: 'Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}'
          type: string
        languageCode:
          type: string
          description: A user-specified language code for the conversation.
        ttl:
          format: google-duration
          description: 'Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.'
          type: string
        medium:
          description: 'Immutable. The conversation medium, if unspecified will default to PHONE_CALL.'
          type: string
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The most recent time at which the conversation was updated.
        runtimeAnnotations:
          description: Output only. The annotations that were generated during the customer and agent interaction.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation'
          readOnly: true
          type: array
        latestAnalysis:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Analysis'
          readOnly: true
          description: 'Output only. The conversation''s latest analysis, if one exists.'
        transcript:
          description: Output only. The conversation transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript'
          readOnly: true
        duration:
          readOnly: true
          format: google-duration
          description: Output only. The duration of the conversation.
          type: string
        turnCount:
          format: int32
          readOnly: true
          description: Output only. The number of turns in the conversation.
          type: integer
        obfuscatedUserId:
          description: Obfuscated user ID which the customer sent to us.
          type: string
        expireTime:
          format: google-datetime
          type: string
          description: 'The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.'
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversation.'
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.'
        callMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata'
          description: Call-specific metadata.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time at which the conversation was created.
          format: google-datetime
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Conversation
      description: The conversation resource.
    GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata:
      description: Metadata for deploying an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
      properties:
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        request:
          description: The original request for deployment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
    GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse:
      id: GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
      description: The response of listing phrase matchers.
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        phraseMatchers:
          description: The phrase matchers that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
          type: array
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig:
      description: Configuration information of a phrase match rule.
      properties:
        exactMatchConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExactMatchConfig'
          description: The configuration for the exact match rule.
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
      type: object
    GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData:
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        suggestion:
          description: The content of the suggestion.
          type: string
        confidenceScore:
          format: double
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          type: object
          additionalProperties:
            type: string
      description: Agent Assist Smart Compose suggestion data.
      id: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
      type: object
    GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest:
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
      type: object
      description: The request to undeploy an issue model.
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest:
      properties:
        conversation:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1Conversation'
          description: Required. The conversation resource to create.
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
        parent:
          description: Required. The parent resource of the conversation.
          type: string
        redactionConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
      type: object
      description: Request to upload a conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata:
      type: object
      properties:
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest'
          description: The original request for deployment.
      description: Metadata for deploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
      properties:
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        uri:
          type: string
          description: Article URI.
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
        title:
          description: Article title.
          type: string
        source:
          type: string
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
      description: Agent Assist Article Suggestion data.
    GoogleCloudContactcenterinsightsV1ImportIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1ImportIssueModelResponse
      type: object
      properties: {}
      description: Response from import issue model
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
      properties:
        partialErrors:
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          readOnly: true
          type: array
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        ingestConversationsStats:
          readOnly: true
          description: Output only. Statistics for IngestConversations operation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats'
        createTime:
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
        request:
          readOnly: true
          description: Output only. The original request for ingest.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      description: The metadata for an IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1DialogflowSource:
      id: GoogleCloudContactcenterinsightsV1DialogflowSource
      type: object
      properties:
        dialogflowConversation:
          readOnly: true
          type: string
          description: 'Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}'
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
      description: A Dialogflow source of conversation data.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
      description: A segment of a full transcript.
      type: object
      properties:
        messageTime:
          type: string
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
        words:
          type: array
          description: A list of the word-specific information for each word in the segment.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The sentiment for this transcript segment.
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant'
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        languageCode:
          type: string
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
        channelTag:
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          type: integer
          format: int32
        text:
          type: string
          description: The text of this segment.
        confidence:
          type: number
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest:
      description: The request to create an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
      properties:
        issueModel:
          description: Required. The issue model to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModel'
        parent:
          description: Required. The parent resource of the issue model.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata:
      type: object
      properties:
        phraseMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: All the matched phrase matchers in the call.
          type: object
        entities:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Entity'
          type: object
          description: All the entities in the call.
        sentiments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment'
          description: Overall conversation-level sentiment for each channel of the call.
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CallAnnotation'
          description: A list of call annotations that apply to this call.
        intents:
          type: object
          description: All the matched intents in the call.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Intent'
        issueModelResult:
          description: Overall conversation-level issue modeling result.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelResult'
      id: GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
      description: Call-specific metadata created during analysis.
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
    GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant:
      description: The call participant speaking for a given utterance.
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
      properties:
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          deprecated: true
          type: string
        obfuscatedExternalUserId:
          description: Obfuscated user ID from Dialogflow.
          type: string
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipantName:
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData:
      properties:
        suggestion:
          type: string
          description: The content of the suggestion.
        metadata:
          description: Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        confidenceScore:
          type: number
          format: double
          description: 'The system''s confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      id: GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
      type: object
      description: Agent Assist Smart Compose suggestion data.
    GoogleCloudContactcenterinsightsV1IssueMatchData:
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          description: Information about the issue's assignment.
      id: GoogleCloudContactcenterinsightsV1IssueMatchData
      type: object
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
      description: The metadata for a bulk analyze conversations operation.
      properties:
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        failedAnalysesCount:
          format: int32
          type: integer
          description: The number of requested analyses that have failed so far.
        totalRequestedAnalysesCount:
          format: int32
          description: Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
          type: integer
        createTime:
          format: google-datetime
          description: The time the operation was created.
          type: string
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
          description: The original request for bulk analyze.
        completedAnalysesCount:
          format: int32
          description: The number of requested analyses that have completed successfully so far.
          type: integer
      type: object
    GoogleCloudContactcenterinsightsV1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
      properties:
        name:
          type: string
          description: Required. The issue model to deploy.
      description: The request to deploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
      description: The response to an IngestConversations operation.
      properties: {}
    GoogleCloudContactcenterinsightsV1DeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
      description: The response to deploy an issue model.
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata:
      type: object
      description: Metadata for a create analysis operation.
      properties:
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: Output only. The annotator selector used for the analysis (if any).
          readOnly: true
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        conversation:
          type: string
          description: Output only. The Conversation that this Analysis Operation belongs to.
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
    GoogleCloudContactcenterinsightsV1HoldData:
      id: GoogleCloudContactcenterinsightsV1HoldData
      properties: {}
      description: The data for a hold annotation.
      type: object
    GoogleCloudContactcenterinsightsV1RedactionConfig:
      properties:
        deidentifyTemplate:
          type: string
          description: 'The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`'
        inspectTemplate:
          description: 'The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`'
          type: string
      type: object
      description: DLP resources used for redaction while ingesting conversations.
      id: GoogleCloudContactcenterinsightsV1RedactionConfig
    GoogleCloudContactcenterinsightsV1AnnotatorSelector:
      description: Selector of all available annotators and phrase matchers to run.
      type: object
      id: GoogleCloudContactcenterinsightsV1AnnotatorSelector
      properties:
        runInterruptionAnnotator:
          description: Whether to run the interruption annotator.
          type: boolean
        summarizationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig'
          description: Configuration for the summarization annotator.
        runEntityAnnotator:
          description: Whether to run the entity annotator.
          type: boolean
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        issueModels:
          items:
            type: string
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runSilenceAnnotator:
          description: Whether to run the silence annotator.
          type: boolean
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
    GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          format: google-datetime
          readOnly: true
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CreateIssueModelRequest'
      type: object
      description: Metadata for creating an issue model.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
      properties: {}
      description: The response to undeploy an issue model.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1HoldData:
      description: The data for a hold annotation.
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1HoldData
    GoogleCloudContactcenterinsightsV1UploadConversationRequest:
      id: GoogleCloudContactcenterinsightsV1UploadConversationRequest
      description: Request to upload a conversation.
      type: object
      properties:
        conversation:
          description: Required. The conversation resource to create.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
        redactionConfig:
          description: 'Optional. DLP settings for transcript redaction. Optional, will default to the config specified in Settings.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        conversationId:
          type: string
          description: 'Optional. A unique ID for the new conversation. This ID will become the final component of the conversation''s resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`'
        parent:
          description: Required. The parent resource of the conversation.
          type: string
    GoogleCloudContactcenterinsightsV1alpha1Entity:
      id: GoogleCloudContactcenterinsightsV1alpha1Entity
      type: object
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      properties:
        metadata:
          additionalProperties:
            type: string
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          type: object
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: The aggregate sentiment expressed for this entity in the conversation.
        displayName:
          description: The representative name for the entity.
          type: string
        salience:
          format: float
          type: number
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          description: The entity type.
    GoogleCloudContactcenterinsightsV1alpha1Analysis:
      description: The analysis resource.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1Analysis
      properties:
        annotatorSelector:
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector'
        requestTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time at which the analysis was requested.
        name:
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
          type: string
        createTime:
          format: google-datetime
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
          readOnly: true
        analysisResult:
          readOnly: true
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnalysisResult'
    GoogleCloudContactcenterinsightsV1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      properties:
        issueMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueMatchData'
          description: Data specifying an issue match.
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
          type: integer
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SilenceData'
          description: Data specifying silence.
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1EntityMentionData'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1HoldData'
          description: Data specifying a hold.
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        phraseMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchData'
          description: Data specifying a phrase match.
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1InterruptionData'
          description: Data specifying an interruption.
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IntentMatchData'
          description: Data specifying an intent match.
      type: object
      id: GoogleCloudContactcenterinsightsV1CallAnnotation
    GoogleCloudContactcenterinsightsV1ArticleSuggestionData:
      description: Agent Assist Article Suggestion data.
      type: object
      id: GoogleCloudContactcenterinsightsV1ArticleSuggestionData
      properties:
        metadata:
          description: Map that contains metadata about the Article Suggestion and the document that it originates from.
          type: object
          additionalProperties:
            type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}'
          type: string
        queryRecord:
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
          type: string
        uri:
          description: Article URI.
          type: string
        confidenceScore:
          type: number
          format: float
          description: 'The system''s confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
        title:
          description: Article title.
          type: string
    GoogleLongrunningListOperationsResponse:
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata:
      properties:
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest'
          description: The original request for undeployment.
      type: object
      description: Metadata for undeploying an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
    GoogleCloudContactcenterinsightsV1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1AnnotationBoundary
      properties:
        transcriptIndex:
          format: int32
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          type: integer
        wordIndex:
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
          format: int32
          type: integer
      description: A point in a conversation that marks the start or the end of an annotation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse:
      properties: {}
      type: object
      description: Response from export issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ExportIssueModelResponse
    GoogleCloudContactcenterinsightsV1IssueModel:
      id: GoogleCloudContactcenterinsightsV1IssueModel
      properties:
        trainingStats:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStats'
          description: Output only. Immutable. The issue model's label statistics on its training data.
        languageCode:
          type: string
          description: Language of the model.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The most recent time at which the issue model was updated.
          type: string
        displayName:
          description: The representative name for the issue model.
          type: string
        modelType:
          type: string
          description: Type of the model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - TYPE_V1
            - TYPE_V2
          enumDescriptions:
            - Unspecified model type.
            - Type V1.
            - Type V2.
        inputDataConfig:
          description: Configs for the input data that used to create the issue model.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig'
        issueCount:
          readOnly: true
          format: int64
          description: Output only. Number of issues in this issue model.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
          type: string
          description: Output only. State of the model.
          readOnly: true
          enumDescriptions:
            - Unspecified.
            - Model is not deployed but is ready to deploy.
            - Model is being deployed.
            - Model is deployed and is ready to be used. A model can only be used in analysis if it's in this state.
            - Model is being undeployed.
            - Model is being deleted.
        createTime:
          readOnly: true
          description: Output only. The time at which this issue model was created.
          type: string
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
      description: The issue model resource.
      type: object
    GoogleCloudContactcenterinsightsV1FaqAnswerData:
      description: Agent Assist frequently-asked-question answer data.
      id: GoogleCloudContactcenterinsightsV1FaqAnswerData
      type: object
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
    GoogleCloudContactcenterinsightsV1alpha1IssueMatchData:
      description: The data for an issue match annotation.
      properties:
        issueAssignment:
          description: Information about the issue's assignment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
    GoogleCloudContactcenterinsightsV1ListConversationsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.'
        conversations:
          description: The conversations that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
          type: array
      type: object
      description: The response of listing conversations.
      id: GoogleCloudContactcenterinsightsV1ListConversationsResponse
    GoogleCloudContactcenterinsightsV1ListAnalysesResponse:
      description: The response to list analyses.
      id: GoogleCloudContactcenterinsightsV1ListAnalysesResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        analyses:
          description: The analyses that match the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      type: object
    GoogleCloudContactcenterinsightsV1IntentMatchData:
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      id: GoogleCloudContactcenterinsightsV1IntentMatchData
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      type: object
    GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata:
      type: object
      description: Metadata for deleting an issue model.
      properties:
        request:
          description: The original request for deletion.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest'
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
    GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse:
      type: object
      description: Response for an export insights operation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse:
      properties: {}
      description: The response to deploy an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
      properties:
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        table:
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
      description: A BigQuery Table Reference.
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation:
      properties:
        createTime:
          type: string
          description: The time at which this annotation was created.
          format: google-datetime
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartReplyData'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback'
        conversationSummarizationSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData'
          description: Conversation summarization suggestion data.
        smartComposeSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData'
          description: Agent Assist Smart Compose suggestion data.
        annotationId:
          type: string
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
        dialogflowInteraction:
          description: Dialogflow interaction data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData'
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        endBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        articleSuggestion:
          description: Agent Assist Article Suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData'
      type: object
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
    GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest:
      description: The request to undeploy an issue model.
      type: object
      properties:
        name:
          description: Required. The issue model to undeploy.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig:
      properties:
        agentId:
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
          type: string
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
      description: Configuration that applies to all conversations.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval:
      description: A single interval in a time series.
      properties:
        startTime:
          format: google-datetime
          description: The start time of this interval.
          type: string
        conversationCount:
          format: int32
          description: The number of conversations created in this interval.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
    GoogleCloudContactcenterinsightsV1IssueModelResult:
      description: Issue Modeling result on a conversation.
      id: GoogleCloudContactcenterinsightsV1IssueModelResult
      properties:
        issues:
          description: All the matched issues.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueAssignment'
          type: array
        issueModel:
          type: string
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
      type: object
    GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData:
      type: object
      description: Agent Assist frequently-asked-question answer data.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Map that contains metadata about the FAQ answer and the document that it originates from.
          type: object
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: 'The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.'
          type: string
        answer:
          type: string
          description: The piece of text from the `source` knowledge base document.
        confidenceScore:
          format: float
          description: 'The system''s confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          type: number
      id: GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
    GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
      type: object
      properties:
        channelTag:
          type: integer
          description: The channel of the audio that the data applies to.
          format: int32
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
      description: One channel of conversation-level sentiment data.
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats:
      type: object
      properties:
        issue:
          type: string
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
        labeledConversationsCount:
          format: int64
          description: Number of conversations attached to the issue at this point in time.
          type: string
        displayName:
          description: Display name of the issue.
          type: string
      id: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1UploadConversationMetadata:
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        request:
          readOnly: true
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
        analysisOperation:
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          readOnly: true
          type: string
        appliedRedactionConfig:
          readOnly: true
          description: Output only. The redaction config applied to the uploaded conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
      description: The metadata for an UploadConversation operation.
      id: GoogleCloudContactcenterinsightsV1UploadConversationMetadata
      type: object
    GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig:
      type: object
      id: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
      description: Default configuration when creating Analyses in Insights.
      properties:
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        runtimeIntegrationAnalysisPercentage:
          description: 'Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].'
          type: number
          format: double
        uploadConversationAnalysisPercentage:
          format: double
          type: number
          description: 'Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].'
    GoogleCloudContactcenterinsightsV1ConversationCallMetadata:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationCallMetadata
      description: Call-specific metadata.
      properties:
        customerChannel:
          description: The audio channel that contains the customer.
          type: integer
          format: int32
        agentChannel:
          description: The audio channel that contains the agent.
          format: int32
          type: integer
    GoogleCloudContactcenterinsightsV1alpha1SilenceData:
      description: The data for a silence annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1SilenceData
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1alpha1SentimentData:
      properties:
        magnitude:
          type: number
          format: float
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
        score:
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          type: number
          format: float
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1alpha1SentimentData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1Intent:
      id: GoogleCloudContactcenterinsightsV1alpha1Intent
      type: object
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      properties:
        id:
          description: The unique identifier of the intent.
          type: string
        displayName:
          description: The human-readable name of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1Intent:
      id: GoogleCloudContactcenterinsightsV1Intent
      type: object
      description: 'The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.'
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
        id:
          description: The unique identifier of the intent.
          type: string
    GoogleCloudContactcenterinsightsV1Entity:
      type: object
      id: GoogleCloudContactcenterinsightsV1Entity
      description: 'The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.'
      properties:
        type:
          type: string
          enumDescriptions:
            - Unspecified.
            - Person.
            - Location.
            - Organization.
            - Event.
            - Artwork.
            - Consumer product.
            - Other types of entities.
            - 'Phone number. The metadata lists the phone number (formatted according to local convention), plus whichever additional elements appear in the text: * `number` - The actual number, broken down into sections according to local convention. * `national_prefix` - Country code, if detected. * `area_code` - Region or area code, if detected. * `extension` - Phone extension (to be dialed after connection), if detected.'
            - 'Address. The metadata identifies the street number and locality plus whichever additional elements appear in the text: * `street_number` - Street number. * `locality` - City or town. * `street_name` - Street/route name, if detected. * `postal_code` - Postal code, if detected. * `country` - Country, if detected. * `broad_region` - Administrative area, such as the state, if detected. * `narrow_region` - Smaller administrative area, such as county, if detected. * `sublocality` - Used in Asian addresses to demark a district within a city, if detected.'
            - 'Date. The metadata identifies the components of the date: * `year` - Four digit year, if detected. * `month` - Two digit month number, if detected. * `day` - Two digit day number, if detected.'
            - Number. The metadata is the number itself.
            - Price. The metadata identifies the `value` and `currency`.
          enum:
            - TYPE_UNSPECIFIED
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          description: The entity type.
        displayName:
          description: The representative name for the entity.
          type: string
        sentiment:
          description: The aggregate sentiment expressed for this entity in the conversation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
        salience:
          format: float
          description: 'The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.'
          type: number
        metadata:
          description: 'Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.'
          type: object
          additionalProperties:
            type: string
    GoogleCloudContactcenterinsightsV1ConversationDataSource:
      properties:
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1GcsSource'
        dialogflowSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowSource'
          description: The source when the conversation comes from Dialogflow.
      description: 'The conversation source, which is a combination of transcript and audio.'
      id: GoogleCloudContactcenterinsightsV1ConversationDataSource
      type: object
    GoogleCloudContactcenterinsightsV1ExactMatchConfig:
      description: Exact match configuration.
      properties:
        caseSensitive:
          type: boolean
          description: Whether to consider case sensitivity when performing an exact match.
      id: GoogleCloudContactcenterinsightsV1ExactMatchConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1EntityMentionData:
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        type:
          description: The type of the entity mention.
          type: string
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
      id: GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
      type: object
    GoogleCloudContactcenterinsightsV1ConversationParticipant:
      properties:
        userId:
          description: A user-specified ID representing the participant.
          type: string
        dialogflowParticipantName:
          type: string
          description: 'The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
        dialogflowParticipant:
          description: 'Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}'
          deprecated: true
          type: string
        role:
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role of the participant.
        obfuscatedExternalUserId:
          type: string
          description: Obfuscated user ID from Dialogflow.
      id: GoogleCloudContactcenterinsightsV1ConversationParticipant
      description: The call participant speaking for a given utterance.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IssueAssignment:
      properties:
        displayName:
          description: Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
          type: string
        issue:
          description: Resource name of the assigned issue.
          type: string
        score:
          format: double
          description: 'Score indicating the likelihood of the issue assignment. currently bounded on [0,1].'
          type: number
      description: Information about the issue.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
      properties:
        partialErrors:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          type: array
          readOnly: true
          description: Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        request:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest'
          description: Output only. The original request for ingest.
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        ingestConversationsStats:
          description: Output only. Statistics for IngestConversations operation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats'
      description: The metadata for an IngestConversations operation.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
      description: The metadata for an UploadConversation operation.
      type: object
      properties:
        request:
          description: Output only. The original request.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest'
          readOnly: true
        analysisOperation:
          type: string
          description: 'Output only. The operation name for a successfully created analysis operation, if any.'
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
        appliedRedactionConfig:
          description: Output only. The redaction config applied to the uploaded conversation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1RedactionConfig'
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
    GoogleCloudContactcenterinsightsV1IngestConversationsResponse:
      properties: {}
      type: object
      description: The response to an IngestConversations operation.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsResponse
    GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
      properties:
        agentChannel:
          format: int32
          description: The audio channel that contains the agent.
          type: integer
        customerChannel:
          format: int32
          description: The audio channel that contains the customer.
          type: integer
      description: Call-specific metadata.
      type: object
    GoogleCloudContactcenterinsightsV1InterruptionData:
      properties: {}
      type: object
      id: GoogleCloudContactcenterinsightsV1InterruptionData
      description: The data for an interruption annotation.
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
      properties:
        smartReplyAllowlistCovered:
          type: boolean
          description: Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
      description: Metadata from Dialogflow relating to the current transcript segment.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1ConversationTranscript
      properties:
        transcriptSegments:
          description: A list of sequential transcript segments that comprise the conversation.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment'
      type: object
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse:
      properties:
        successfulAnalysisCount:
          description: Count of successful analyses.
          type: integer
          format: int32
        failedAnalysisCount:
          type: integer
          format: int32
          description: Count of failed analyses.
      description: The response for a bulk analyze conversations operation.
      type: object
      id: GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
    GoogleCloudContactcenterinsightsV1AnswerFeedback:
      type: object
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1AnswerFeedback
      properties:
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        displayed:
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
          type: boolean
        correctnessLevel:
          type: string
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          description: The correctness level of an answer.
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
    GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback:
      type: object
      properties:
        clicked:
          type: boolean
          description: Indicates whether an answer or item was clicked by the human agent.
        correctnessLevel:
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          description: The correctness level of an answer.
          type: string
          enumDescriptions:
            - Correctness level unspecified.
            - Answer is totally wrong.
            - Answer is partially correct.
            - Answer is fully correct.
        displayed:
          type: boolean
          description: Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
      description: The feedback that the customer has about a certain answer in the conversation.
      id: GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
    GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData:
      properties:
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
      id: GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      type: object
    GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData:
      properties:
        answerRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        confidence:
          format: float
          description: The confidence score of the summarization.
          type: number
        metadata:
          type: object
          description: A map that contains metadata about the summarization and the document from which it originates.
          additionalProperties:
            type: string
        textSections:
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
        text:
          type: string
          description: The summarization content that is concatenated into one string.
      type: object
      description: Conversation summarization suggestion data.
      id: GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
    GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
      type: object
      description: Metadata for creating an issue model.
      properties:
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        createTime:
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
          format: google-datetime
        request:
          description: The original request for creation.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest'
    GoogleCloudContactcenterinsightsV1DialogflowIntent:
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      type: object
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      id: GoogleCloudContactcenterinsightsV1DialogflowIntent
    GoogleCloudContactcenterinsightsV1SilenceData:
      type: object
      id: GoogleCloudContactcenterinsightsV1SilenceData
      description: The data for a silence annotation.
      properties: {}
    GoogleCloudContactcenterinsightsV1ConversationLevelSentiment:
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
      properties:
        channelTag:
          format: int32
          description: The channel of the audio that the data applies to.
          type: integer
        sentimentData:
          description: Data specifying sentiment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
      description: One channel of conversation-level sentiment data.
    GoogleCloudContactcenterinsightsV1AnalysisResult:
      type: object
      properties:
        callAnalysisMetadata:
          description: Call-specific metadata created by the analysis.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata'
        endTime:
          description: The time at which the analysis ended.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1AnalysisResult
      description: The result of an analysis.
    GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest:
      description: The request to delete an issue model.
      type: object
      properties:
        name:
          description: Required. The name of the issue model to delete.
          type: string
      id: GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
    GoogleCloudContactcenterinsightsV1RuntimeAnnotation:
      properties:
        createTime:
          description: The time at which this annotation was created.
          type: string
          format: google-datetime
        smartComposeSuggestion:
          description: Agent Assist Smart Compose suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData'
        annotationId:
          description: 'The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}'
          type: string
        dialogflowInteraction:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DialogflowInteractionData'
          description: Dialogflow interaction data.
        startBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        answerFeedback:
          description: The feedback that the customer has about the answer in `data`.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnswerFeedback'
        endBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
        articleSuggestion:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ArticleSuggestionData'
          description: Agent Assist Article Suggestion data.
        faqAnswer:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1FaqAnswerData'
          description: Agent Assist FAQ answer data.
        smartReply:
          description: Agent Assist Smart Reply data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SmartReplyData'
        conversationSummarizationSuggestion:
          description: Conversation summarization suggestion data.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData'
      description: An annotation that was generated during the customer and agent interaction.
      id: GoogleCloudContactcenterinsightsV1RuntimeAnnotation
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment:
      description: A segment of a full transcript.
      properties:
        languageCode:
          description: 'The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo'
          type: array
          description: A list of the word-specific information for each word in the segment.
        messageTime:
          format: google-datetime
          description: 'The time that the message occurred, if provided.'
          type: string
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
          type: number
        dialogflowSegmentMetadata:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata'
          description: CCAI metadata relating to the current transcript segment.
        channelTag:
          description: 'For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from ''1'' to ''N''. A channel tag of 0 indicates that the audio is mono.'
          format: int32
          type: integer
        text:
          description: The text of this segment.
          type: string
        segmentParticipant:
          description: The participant of this segment.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ConversationParticipant'
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: The sentiment for this transcript segment.
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata:
      description: Metadata for deleting an issue model.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest'
          description: The original request for deletion.
        endTime:
          readOnly: true
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
    GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData:
      description: Conversation summarization suggestion data.
      type: object
      properties:
        text:
          description: The summarization content that is concatenated into one string.
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: A map that contains metadata about the summarization and the document from which it originates.
        textSections:
          type: object
          description: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          additionalProperties:
            type: string
        conversationModel:
          description: 'The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}'
          type: string
        answerRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
        confidence:
          format: float
          description: The confidence score of the summarization.
          type: number
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1View:
      description: The View resource.
      id: GoogleCloudContactcenterinsightsV1View
      type: object
      properties:
        value:
          type: string
          description: 'String with specific view properties, must be non-empty.'
        displayName:
          description: The human-readable display name of the view.
          type: string
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time at which this view was created.
        updateTime:
          description: Output only. The most recent time at which the view was updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}'
          type: string
    GoogleCloudContactcenterinsightsV1alpha1IntentMatchData:
      type: object
      properties:
        intentUniqueId:
          description: The id of the matched intent. Can be used to retrieve the corresponding intent information.
          type: string
      description: 'The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.'
      id: GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
    GoogleCloudContactcenterinsightsV1alpha1IssueModelResult:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
      description: Issue Modeling result on a conversation.
      properties:
        issueModel:
          description: 'Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}'
          type: string
        issues:
          description: All the matched issues.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueAssignment'
    GoogleCloudContactcenterinsightsV1Settings:
      description: The settings resource.
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time at which the settings was created.
          type: string
        updateTime:
          description: Output only. The time at which the settings were last updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: 'Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings'
          type: string
        conversationTtl:
          description: 'The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.'
          type: string
          format: google-duration
        pubsubNotificationSettings:
          type: object
          description: 'A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}'
          additionalProperties:
            type: string
        redactionConfig:
          description: Default DLP redaction resources to be applied while ingesting conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1RedactionConfig'
        languageCode:
          description: A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
          type: string
        analysisConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig'
          description: Default analysis settings.
      id: GoogleCloudContactcenterinsightsV1Settings
    GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats:
      description: Statistics for IngestConversations operation.
      properties:
        duplicatesSkippedCount:
          readOnly: true
          type: integer
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          format: int32
        successfulIngestCount:
          readOnly: true
          description: Output only. The number of new conversations added during this ingest operation.
          format: int32
          type: integer
        failedIngestCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
        processedObjectCount:
          readOnly: true
          format: int32
          description: Output only. The number of objects processed during the ingest operation.
          type: integer
      type: object
      id: GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
    GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse:
      description: Response from import issue model
      id: GoogleCloudContactcenterinsightsV1alpha1ImportIssueModelResponse
      properties: {}
      type: object
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo:
      properties:
        startOffset:
          format: google-duration
          description: Time offset of the start of this word relative to the beginning of the total conversation.
          type: string
        word:
          type: string
          description: The word itself. Includes punctuation marks that surround the word.
        confidence:
          format: float
          description: A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
          type: number
        endOffset:
          type: string
          format: google-duration
          description: Time offset of the end of this word relative to the beginning of the total conversation.
      type: object
      id: GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
      description: Word-level info for words in a transcript.
    GoogleCloudContactcenterinsightsV1ExportIssueModelResponse:
      description: Response from export issue model
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1ExportIssueModelResponse
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats:
      properties:
        failedIngestCount:
          description: Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
          type: integer
          format: int32
          readOnly: true
        duplicatesSkippedCount:
          description: Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
          type: integer
          format: int32
          readOnly: true
        successfulIngestCount:
          description: Output only. The number of new conversations added during this ingest operation.
          type: integer
          format: int32
          readOnly: true
        processedObjectCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of objects processed during the ingest operation.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
      type: object
      description: Statistics for IngestConversations operation.
    GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata:
      id: GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
      description: Metadata for undeploying an issue model.
      type: object
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        request:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
          description: The original request for undeployment.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
      description: The request to ingest conversations.
      properties:
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        parent:
          type: string
          description: Required. The parent resource for new conversations.
        conversationConfig:
          description: Configuration that applies to all conversations.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig'
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig'
    GoogleCloudContactcenterinsightsV1EntityMentionData:
      description: The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
      properties:
        sentiment:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1SentimentData'
          description: Sentiment expressed for this mention of the entity.
        type:
          type: string
          description: The type of the entity mention.
          enum:
            - MENTION_TYPE_UNSPECIFIED
            - PROPER
            - COMMON
          enumDescriptions:
            - Unspecified.
            - Proper noun.
            - Common noun (or noun compound).
        entityUniqueId:
          description: The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
          type: string
      id: GoogleCloudContactcenterinsightsV1EntityMentionData
      type: object
    GoogleCloudContactcenterinsightsV1PhraseMatcher:
      type: object
      description: The phrase matcher resource.
      properties:
        revisionCreateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
        phraseMatchRuleGroups:
          type: array
          description: A list of phase match rule groups that are included in this matcher.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup'
        type:
          type: string
          description: Required. The type of this phrase matcher.
          enum:
            - PHRASE_MATCHER_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rule groups or there is no match.
            - 'If any of the phrase match rule groups are met, there is a match.'
        versionTag:
          description: 'The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.'
          type: string
        name:
          description: 'The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: string
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
        revisionId:
          readOnly: true
          type: string
          description: 'Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567'
        activationUpdateTime:
          description: Output only. The most recent time at which the activation status was updated.
          readOnly: true
          type: string
          format: google-datetime
        active:
          description: Applies the phrase matcher only when it is active.
          type: boolean
        roleMatch:
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
            - ANY_AGENT
          description: The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
          type: string
          enumDescriptions:
            - Participant's role is not set.
            - Participant is a human agent.
            - Participant is an automated agent.
            - Participant is an end user who conversed with the contact center.
            - Participant is either a human or automated agent.
        updateTime:
          type: string
          description: Output only. The most recent time at which the phrase matcher was updated.
          format: google-datetime
          readOnly: true
      id: GoogleCloudContactcenterinsightsV1PhraseMatcher
    GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries:
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
      type: object
      properties:
        points:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval'
          description: 'An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.'
          type: array
        intervalDuration:
          type: string
          format: google-duration
          description: The duration of each interval.
      description: A time series representing conversations over time.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig:
      description: Configs for the input data used to create the issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
      type: object
      properties:
        filter:
          description: A filter to reduce the conversations used for training the model to a specific subset.
          type: string
        trainingConversationsCount:
          type: string
          format: int64
          description: Output only. Number of conversations used in training. Output only.
          readOnly: true
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          deprecated: true
          type: string
          description: 'Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.'
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats:
      description: Aggregated statistics about an issue model.
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
      type: object
      properties:
        analyzedConversationsCount:
          type: string
          description: Number of conversations the issue model has analyzed at this point in time.
          format: int64
        issueStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats'
          type: object
          description: Statistics on each issue. Key is the issue's resource name.
        unclassifiedConversationsCount:
          type: string
          format: int64
          description: Number of analyzed conversations for which no issue was applicable at this point in time.
    GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats:
      properties:
        issue:
          description: 'Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}'
          type: string
        displayName:
          description: Display name of the issue.
          type: string
        labeledConversationsCount:
          type: string
          format: int64
          description: Number of conversations attached to the issue at this point in time.
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
      description: Aggregated statistics about an issue.
    GoogleCloudContactcenterinsightsV1Analysis:
      description: The analysis resource.
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: 'Output only. The time at which the analysis was created, which occurs when the long-running operation completes.'
        annotatorSelector:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnnotatorSelector'
          description: 'To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.'
        analysisResult:
          description: 'Output only. The result of the analysis, which is populated when the analysis finishes.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1AnalysisResult'
        name:
          type: string
          description: 'Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}'
        requestTime:
          readOnly: true
          description: Output only. The time at which the analysis was requested.
          type: string
          format: google-datetime
      id: GoogleCloudContactcenterinsightsV1Analysis
      type: object
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig:
      type: object
      properties:
        agentId:
          type: string
          description: 'An opaque, user-specified string representing the human agent who handled the conversations.'
      description: Configuration that applies to all conversations.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
    GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
      description: A point in a conversation that marks the start or the end of an annotation.
      properties:
        transcriptIndex:
          type: integer
          description: The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
          format: int32
        wordIndex:
          format: int32
          type: integer
          description: The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
      type: object
    GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest:
      id: GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
      type: object
      properties:
        name:
          description: Required. The issue model to deploy.
          type: string
      description: The request to deploy an issue model.
    GoogleCloudContactcenterinsightsV1GcsSource:
      properties:
        audioUri:
          type: string
          description: Cloud Storage URI that points to a file that contains the conversation audio.
        transcriptUri:
          type: string
          description: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
      description: A Cloud Storage source of conversation data.
      id: GoogleCloudContactcenterinsightsV1GcsSource
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript:
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
      properties:
        transcriptSegments:
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment'
          type: array
          description: A list of sequential transcript segments that comprise the conversation.
      type: object
      description: A message representing the transcript of a conversation.
    GoogleCloudContactcenterinsightsV1alpha1InterruptionData:
      description: The data for an interruption annotation.
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1InterruptionData
      type: object
    GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse:
      description: Response for an export insights operation.
      type: object
      properties: {}
      id: GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
    GoogleCloudContactcenterinsightsV1DialogflowInteractionData:
      description: Dialogflow interaction data.
      type: object
      id: GoogleCloudContactcenterinsightsV1DialogflowInteractionData
      properties:
        dialogflowIntentId:
          type: string
          description: 'The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}'
        confidence:
          format: float
          type: number
          description: The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
    GoogleCloudContactcenterinsightsV1alpha1SmartReplyData:
      properties:
        reply:
          type: string
          description: The content of the reply.
        metadata:
          description: Map that contains metadata about the Smart Reply and the document from which it originates.
          additionalProperties:
            type: string
          type: object
        confidenceScore:
          type: number
          description: 'The system''s confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).'
          format: double
        queryRecord:
          type: string
          description: 'The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}'
      id: GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
      type: object
      description: Agent Assist Smart Reply data.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector:
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      type: object
      properties:
        runIntentAnnotator:
          description: Whether to run the intent annotator.
          type: boolean
        issueModels:
          description: 'The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.'
          type: array
          items:
            type: string
        runPhraseMatcherAnnotator:
          description: Whether to run the active phrase matcher annotator(s).
          type: boolean
        phraseMatchers:
          description: 'The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}'
          type: array
          items:
            type: string
        runInterruptionAnnotator:
          type: boolean
          description: Whether to run the interruption annotator.
        runEntityAnnotator:
          type: boolean
          description: Whether to run the entity annotator.
        runSentimentAnnotator:
          type: boolean
          description: Whether to run the sentiment annotator.
        summarizationConfig:
          description: Configuration for the summarization annotator.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig'
        runSilenceAnnotator:
          type: boolean
          description: Whether to run the silence annotator.
        runSummarizationAnnotator:
          description: Whether to run the summarization annotator.
          type: boolean
        runIssueModelAnnotator:
          type: boolean
          description: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
      description: Selector of all available annotators and phrase matchers to run.
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse:
      description: The response for calculating conversation statistics.
      type: object
      properties:
        averageTurnCount:
          description: The average number of turns per conversation.
          format: int32
          type: integer
        issueMatchesStats:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats'
          type: object
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`'
        conversationCountTimeSeries:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries'
          description: A time series representing the count of conversations created over time that match that requested filter criteria.
        customHighlighterMatches:
          additionalProperties:
            type: integer
            format: int32
          type: object
          description: A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
        issueMatches:
          type: object
          additionalProperties:
            format: int32
            type: integer
          deprecated: true
          description: 'A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.'
        smartHighlighterMatches:
          description: A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
          type: object
          additionalProperties:
            format: int32
            type: integer
        averageDuration:
          description: The average duration of all conversations. The average is calculated using only conversations that have a time duration.
          format: google-duration
          type: string
        conversationCount:
          type: integer
          description: The total number of conversations.
          format: int32
      id: GoogleCloudContactcenterinsightsV1CalculateStatsResponse
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination:
      properties:
        table:
          type: string
          description: 'The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.'
        projectId:
          description: 'A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.'
          type: string
        dataset:
          description: 'Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.'
          type: string
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
      description: A BigQuery Table Reference.
      type: object
    GoogleCloudContactcenterinsightsV1SentimentData:
      description: The data for a sentiment annotation.
      id: GoogleCloudContactcenterinsightsV1SentimentData
      type: object
      properties:
        magnitude:
          description: A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
          type: number
          format: float
        score:
          type: number
          description: The sentiment score between -1.0 (negative) and 1.0 (positive).
          format: float
    GoogleCloudContactcenterinsightsV1ListViewsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        views:
          description: The views that match the request.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
          type: array
      type: object
      description: The response of listing views.
      id: GoogleCloudContactcenterinsightsV1ListViewsResponse
    GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource:
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
      properties:
        dialogflowSource:
          description: The source when the conversation comes from Dialogflow.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1DialogflowSource'
        gcsSource:
          description: A Cloud Storage location specification for the audio and transcript.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1GcsSource'
      description: 'The conversation source, which is a combination of transcript and audio.'
    GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent:
      properties:
        displayName:
          type: string
          description: The human-readable name of the intent.
      description: 'The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.'
      type: object
      id: GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
    GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest:
      properties:
        parent:
          description: Required. The parent resource to export data from.
          type: string
        kmsKey:
          type: string
          description: 'A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}'
        filter:
          type: string
          description: A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
        bigQueryDestination:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination'
          description: Specified if sink is a BigQuery table.
        writeDisposition:
          description: Options for what to do if the destination table already exists.
          type: string
          enum:
            - WRITE_DISPOSITION_UNSPECIFIED
            - WRITE_TRUNCATE
            - WRITE_APPEND
          enumDescriptions:
            - Write disposition is not specified. Defaults to WRITE_TRUNCATE.
            - 'If the table already exists, BigQuery will overwrite the table data and use the schema from the load.'
            - 'If the table already exists, BigQuery will append data to the table.'
      id: GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
      type: object
      description: The request to export insights.
    GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
      description: A piece of metadata that applies to a window of a call.
      id: GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
      type: object
      properties:
        channelTag:
          description: 'The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.'
          format: int32
          type: integer
        phraseMatchData:
          description: Data specifying a phrase match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData'
        holdData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1HoldData'
          description: Data specifying a hold.
        annotationEndBoundary:
          description: 'The boundary in the conversation where the annotation ends, inclusive.'
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
        entityMentionData:
          description: Data specifying an entity mention.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1EntityMentionData'
        intentMatchData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IntentMatchData'
          description: Data specifying an intent match.
        silenceData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SilenceData'
          description: Data specifying silence.
        annotationStartBoundary:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary'
          description: 'The boundary in the conversation where the annotation starts, inclusive.'
        sentimentData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1SentimentData'
          description: Data specifying sentiment.
        interruptionData:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1InterruptionData'
          description: Data specifying an interruption.
        issueMatchData:
          description: Data specifying an issue match.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1alpha1IssueMatchData'
    GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup:
      properties:
        type:
          enum:
            - PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED
            - ALL_OF
            - ANY_OF
          type: string
          description: Required. The type of this phrase match rule group.
          enumDescriptions:
            - Unspecified.
            - Must meet all phrase match rules or there is no match.
            - 'If any of the phrase match rules are met, there is a match.'
        phraseMatchRules:
          description: A list of phrase match rules that are included in this group.
          items:
            $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRule'
          type: array
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
      type: object
      description: A message representing a rule in the phrase matcher.
    GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig:
      properties:
        summarizationModel:
          type: string
          enum:
            - SUMMARIZATION_MODEL_UNSPECIFIED
            - BASELINE_MODEL
          description: Default summarization model to be used.
          enumDescriptions:
            - Unspecified summarization model.
            - The Insights baseline model.
        conversationProfile:
          description: 'Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}'
          type: string
      type: object
      description: Configuration for summarization.
      id: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
    GoogleCloudContactcenterinsightsV1PhraseMatchData:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchData
      type: object
      description: The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
      properties:
        phraseMatcher:
          type: string
          description: The unique identifier (the resource name) of the phrase matcher.
        displayName:
          description: The human-readable name of the phrase matcher.
          type: string
    GoogleCloudContactcenterinsightsV1PhraseMatchRule:
      id: GoogleCloudContactcenterinsightsV1PhraseMatchRule
      type: object
      description: The data for a phrase match rule.
      properties:
        config:
          description: Provides additional information about the rule that specifies how to apply the rule.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig'
        query:
          description: Required. The phrase to be matched.
          type: string
        negated:
          type: boolean
          description: Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig:
      type: object
      description: Configuration for processing transcript objects.
      properties:
        medium:
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          type: string
          description: Required. The medium transcript objects represent.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
    GoogleCloudContactcenterinsightsV1IngestConversationsRequest:
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequest
      description: The request to ingest conversations.
      type: object
      properties:
        transcriptObjectConfig:
          description: Configuration for when `source` contains conversation transcripts.
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig'
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource'
          description: A cloud storage bucket source.
        conversationConfig:
          $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig'
          description: Configuration that applies to all conversations.
        parent:
          description: Required. The parent resource for new conversations.
          type: string
    GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig:
      description: Configuration for processing transcript objects.
      properties:
        medium:
          type: string
          description: Required. The medium transcript objects represent.
          enum:
            - MEDIUM_UNSPECIFIED
            - PHONE_CALL
            - CHAT
          enumDescriptions:
            - 'Default value, if unspecified will default to PHONE_CALL.'
            - The format for conversations that took place over the phone.
            - The format for conversations that took place over chat.
      id: GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
      type: object
    GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource:
      type: object
      properties:
        bucketUri:
          description: Required. The Cloud Storage bucket containing source objects.
          type: string
      description: Configuration for Cloud Storage bucket sources.
      id: GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    phrase_matchers:
      id: google.contactcenterinsights.phrase_matchers
      name: phrase_matchers
      title: Phrase Matchers
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers~1{phraseMatchersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.phraseMatchers
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1phraseMatchers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/phrase_matchers/methods/delete'
    views:
      id: google.contactcenterinsights.views
      name: views
      title: Views
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views~1{viewsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.views
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    analyses:
      id: google.contactcenterinsights.analyses
      name: analyses
      title: Analyses
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses~1{analysesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.analyses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}~1analyses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/get'
          - $ref: '#/components/x-stackQL-resources/analyses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/analyses/methods/delete'
    conversations:
      id: google.contactcenterinsights.conversations
      name: conversations
      title: Conversations
      methods:
        bulk_analyze:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:bulkAnalyze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations~1{conversationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.conversations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ingest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:ingest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:upload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1conversations:calculateStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/get'
          - $ref: '#/components/x-stackQL-resources/conversations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/conversations/methods/delete'
    operations:
      id: google.contactcenterinsights.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    insightsdata:
      id: google.contactcenterinsights.insightsdata
      name: insightsdata
      title: Insightsdata
      methods:
        export:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsdata:export/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    issues:
      id: google.contactcenterinsights.issues
      name: issues
      title: Issues
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues~1{issuesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issues/methods/delete'
    issue_models:
      id: google.contactcenterinsights.issue_models
      name: issue_models
      title: Issue Models
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undeploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:undeploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        calculate_issue_model_stats:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:calculateIssueModelStats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1issueModels~1{issueModelsId}:deploy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/list'
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/issue_models/methods/delete'
    settings:
      id: google.contactcenterinsights.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers/{phraseMatchersId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
    delete:
      description: Deletes a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: phraseMatchersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/phraseMatchers':
    parameters: *ref_1
    post:
      description: Creates a phrase matcher.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1PhraseMatcher'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists phrase matchers.
      operationId: contactcenterinsights.projects.locations.phraseMatchers.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: phrase_matchers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.phraseMatchers
  '/v1/projects/{projectsId}/locations/{locationsId}/views/{viewsId}':
    parameters: *ref_1
    delete:
      description: Deletes a view.
      operationId: contactcenterinsights.projects.locations.views.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a view.
      operationId: contactcenterinsights.projects.locations.views.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a view.
      operationId: contactcenterinsights.projects.locations.views.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: viewsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/views':
    parameters: *ref_1
    post:
      description: Creates a view.
      operationId: contactcenterinsights.projects.locations.views.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1View'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists views.
      operationId: contactcenterinsights.projects.locations.views.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: views
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.views
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses/{analysesId}':
    parameters: *ref_1
    delete:
      description: Deletes an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an analysis.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: path
          name: analysesId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/analyses':
    parameters: *ref_1
    post:
      description: Creates an analysis. The long running operation is done when the analysis has completed.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Analysis'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: analyses
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists analyses.
      operationId: contactcenterinsights.projects.locations.conversations.analyses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListAnalysesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: analyses
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.analyses
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:bulkAnalyze':
    parameters: *ref_1
    post:
      description: Analyzes multiple conversations in a single request.
      operationId: contactcenterinsights.projects.locations.conversations.bulkAnalyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: bulk_analyze
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}':
    parameters: *ref_1
    patch:
      description: Updates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: conversationsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: conversations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations':
    parameters: *ref_1
    get:
      description: Lists conversations.
      operationId: contactcenterinsights.projects.locations.conversations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListConversationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.conversations
    post:
      description: Creates a conversation.
      operationId: contactcenterinsights.projects.locations.conversations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Conversation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: conversationId
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:ingest':
    parameters: *ref_1
    post:
      description: Imports conversations and processes them according to the user's configuration.
      operationId: contactcenterinsights.projects.locations.conversations.ingest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IngestConversationsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: ingest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:upload':
    parameters: *ref_1
    post:
      description: Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
      operationId: contactcenterinsights.projects.locations.conversations.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UploadConversationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: upload
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/conversations:calculateStats':
    parameters: *ref_1
    get:
      description: Gets conversation statistics.
      operationId: contactcenterinsights.projects.locations.conversations.calculateStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: conversations
      x-stackQL-method: calculate_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenterinsights.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenterinsights.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenterinsights.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/insightsdata:export':
    parameters: *ref_1
    post:
      description: Export insights data to a destination defined in the request body.
      operationId: contactcenterinsights.projects.locations.insightsdata.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insightsdata
      x-stackQL-method: export
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues/{issuesId}':
    parameters: *ref_1
    delete:
      description: Deletes an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets an issue.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Issue'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: path
          name: issuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}/issues':
    parameters: *ref_1
    get:
      description: Lists issues.
      operationId: contactcenterinsights.projects.locations.issueModels.issues.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issues
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels':
    parameters: *ref_1
    post:
      description: Creates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists issue models.
      operationId: contactcenterinsights.projects.locations.issueModels.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1ListIssueModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:undeploy':
    parameters: *ref_1
    post:
      description: Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
      operationId: contactcenterinsights.projects.locations.issueModels.undeploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: undeploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:calculateIssueModelStats':
    parameters: *ref_1
    get:
      description: Gets an issue model's statistics.
      operationId: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: calculate_issue_model_stats
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}':
    parameters: *ref_1
    get:
      description: Gets an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates an issue model.
      operationId: contactcenterinsights.projects.locations.issueModels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1IssueModel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/issueModels/{issueModelsId}:deploy':
    parameters: *ref_1
    post:
      description: Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
      operationId: contactcenterinsights.projects.locations.issueModels.deploy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1DeployIssueModelRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: issueModelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: issue_models
      x-stackQL-method: deploy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    patch:
      description: Updates project-level settings.
      operationId: contactcenterinsights.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets project-level settings.
      operationId: contactcenterinsights.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContactcenterinsightsV1Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
