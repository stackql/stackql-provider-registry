openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Parameter Manager API
  description: >-
    Parameter Manager is a single source of truth to store, access and manage
    the lifecycle of your workload parameters. Parameter Manager aims to make
    management of sensitive application parameters effortless for customers
    without diminishing focus on security.
  version: v1
  x-discovery-doc-revision: '20250820'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/secret-manager/parameter-manager/docs/overview
servers:
  - url: https://parametermanager.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListParametersResponse:
      id: ListParametersResponse
      description: Message for response to listing Parameters
      type: object
      properties:
        parameters:
          description: The list of Parameters
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Unordered list. Locations that could not be reached.
          type: array
          items:
            type: string
    Parameter:
      id: Parameter
      description: Message describing Parameter resource
      type: object
      properties:
        name:
          description: >-
            Identifier. [Output only] The resource name of the Parameter in the
            format `projects/*/locations/*/parameters/*`.
          type: string
        createTime:
          description: Output only. [Output only] Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        format:
          description: Optional. Specifies the format of a Parameter.
          type: string
          enumDescriptions:
            - >-
              The default / unset value. The API will default to the UNFORMATTED
              format.
            - Unformatted.
            - YAML format.
            - JSON format.
          enum:
            - PARAMETER_FORMAT_UNSPECIFIED
            - UNFORMATTED
            - YAML
            - JSON
        policyMember:
          description: >-
            Output only. [Output-only] policy member strings of a Google Cloud
            resource.
          readOnly: true
          $ref: '#/components/schemas/ResourcePolicyMember'
        kmsKey:
          description: >-
            Optional. Customer managed encryption key (CMEK) to use for
            encrypting the Parameter Versions. If not set, the default
            Google-managed encryption key will be used. Cloud KMS CryptoKeys
            must reside in the same location as the Parameter. The expected
            format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          type: string
    ResourcePolicyMember:
      id: ResourcePolicyMember
      description: >-
        Output-only policy member strings of a Google Cloud resource's built-in
        identity.
      type: object
      properties:
        iamPolicyNamePrincipal:
          description: >-
            Output only. IAM policy binding member referring to a Google Cloud
            resource by user-assigned name (https://google.aip.dev/122). If a
            resource is deleted and recreated with the same name, the binding
            will be applicable to the new resource. Example:
            `principal://parametermanager.googleapis.com/projects/12345/name/locations/us-central1-a/parameters/my-parameter`
          readOnly: true
          type: string
        iamPolicyUidPrincipal:
          description: >-
            Output only. IAM policy binding member referring to a Google Cloud
            resource by system-assigned unique identifier
            (https://google.aip.dev/148#uid). If a resource is deleted and
            recreated with the same name, the binding will not be applicable to
            the new resource Example:
            `principal://parametermanager.googleapis.com/projects/12345/uid/locations/us-central1-a/parameters/a918fed5`
          readOnly: true
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListParameterVersionsResponse:
      id: ListParameterVersionsResponse
      description: Message for response to listing ParameterVersions
      type: object
      properties:
        parameterVersions:
          description: The list of ParameterVersions
          type: array
          items:
            $ref: '#/components/schemas/ParameterVersion'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Unordered list. Locations that could not be reached.
          type: array
          items:
            type: string
    ParameterVersion:
      id: ParameterVersion
      description: Message describing ParameterVersion resource
      type: object
      properties:
        name:
          description: >-
            Identifier. [Output only] The resource name of the ParameterVersion
            in the format `projects/*/locations/*/parameters/*/versions/*`.
          type: string
        createTime:
          description: Output only. [Output only] Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        disabled:
          description: >-
            Optional. Disabled boolean to determine if a ParameterVersion acts
            as a metadata only resource (payload is never returned if disabled
            is true). If true any calls will always default to BASIC view even
            if the user explicitly passes FULL view as part of the request. A
            render call on a disabled resource fails with an error. Default
            value is False.
          type: boolean
        payload:
          description: >-
            Required. Immutable. Payload content of a ParameterVersion resource.
            This is only returned when the request provides the View value of
            FULL (default for GET request).
          $ref: '#/components/schemas/ParameterVersionPayload'
        kmsKeyVersion:
          description: >-
            Optional. Output only. [Output only] The resource name of the KMS
            key version used to encrypt the ParameterVersion payload. This field
            is populated only if the Parameter resource has customer managed
            encryption key (CMEK) configured.
          readOnly: true
          type: string
    ParameterVersionPayload:
      id: ParameterVersionPayload
      description: Message for storing a ParameterVersion resource's payload data
      type: object
      properties:
        data:
          description: Required. bytes data for storing payload.
          type: string
          format: byte
    RenderParameterVersionResponse:
      id: RenderParameterVersionResponse
      description: Message describing RenderParameterVersionResponse resource
      type: object
      properties:
        parameterVersion:
          description: >-
            Output only. Resource identifier of a ParameterVersion in the format
            `projects/*/locations/*/parameters/*/versions/*`.
          readOnly: true
          type: string
        payload:
          description: Payload content of a ParameterVersion resource.
          $ref: '#/components/schemas/ParameterVersionPayload'
        renderedPayload:
          description: >-
            Output only. Server generated rendered version of the user provided
            payload data (ParameterVersionPayload) which has substitutions of
            all (if any) references to a SecretManager SecretVersion resources.
            This substitution only works for a Parameter which is in JSON or
            YAML format.
          readOnly: true
          type: string
          format: byte
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.parametermanager.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    parameters:
      id: google.parametermanager.parameters
      name: parameters
      title: Parameters
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.parameters
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/get'
          - $ref: '#/components/x-stackQL-resources/parameters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/delete'
    versions:
      id: google.parametermanager.versions
      name: versions
      title: Versions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.parameterVersions
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions~1{versionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions~1{versionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions~1{versionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        render:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1parameters~1{parametersId}~1versions~1{versionsId}:render/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/versions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/versions/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/versions/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: parametermanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: parametermanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/parameters:
    parameters: *ref_1
    get:
      description: Lists Parameters in a given project and location.
      operationId: parametermanager.projects.locations.parameters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParametersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Parameter in a given project and location.
      operationId: parametermanager.projects.locations.parameters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: parameterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/parameters/{parametersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Parameter.
      operationId: parametermanager.projects.locations.parameters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
    patch:
      description: Updates a single Parameter.
      operationId: parametermanager.projects.locations.parameters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single Parameter.
      operationId: parametermanager.projects.locations.parameters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/parameters/{parametersId}/versions:
    parameters: *ref_1
    get:
      description: Lists ParameterVersions in a given project, location, and parameter.
      operationId: parametermanager.projects.locations.parameters.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParameterVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new ParameterVersion in a given project, location, and
        parameter.
      operationId: parametermanager.projects.locations.parameters.versions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: query
          name: parameterVersionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/parameters/{parametersId}/versions/{versionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ParameterVersion.
      operationId: parametermanager.projects.locations.parameters.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates a single ParameterVersion.
      operationId: parametermanager.projects.locations.parameters.versions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single ParameterVersion.
      operationId: parametermanager.projects.locations.parameters.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/parameters/{parametersId}/versions/{versionsId}:render:
    parameters: *ref_1
    get:
      description: Gets rendered version of a ParameterVersion.
      operationId: parametermanager.projects.locations.parameters.versions.render
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderParameterVersionResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: parametersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
