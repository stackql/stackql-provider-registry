openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Data pipelines API
  description: Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
  version: v1
  x-discovery-doc-revision: '20221210'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/dataflow/docs/guides/data-pipelines
servers:
  - url: https://datapipelines.googleapis.com
components:
  schemas:
    GoogleCloudDatapipelinesV1DataflowJobDetails:
      properties:
        currentWorkers:
          readOnly: true
          format: int32
          type: integer
          description: Output only. The current number of workers used to run the jobs. Only set to a value if the job is still running.
        resourceInfo:
          additionalProperties:
            format: double
            type: number
          type: object
          description: Cached version of all the metrics of interest for the job. This value gets stored here when the job is terminated. As long as the job is running, this field is populated from the Dataflow API.
        sdkVersion:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1SdkVersion'
          readOnly: true
          description: Output only. The SDK version used to run the job.
      id: GoogleCloudDatapipelinesV1DataflowJobDetails
      description: Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
      type: object
    GoogleCloudDatapipelinesV1ListJobsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        jobs:
          description: Results that were accessible to the caller. Results are always in descending order of job creation date.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Job'
      type: object
      id: GoogleCloudDatapipelinesV1ListJobsResponse
      description: Response message for ListJobs
    GoogleCloudDatapipelinesV1ScheduleSpec:
      description: Details of the schedule the pipeline runs on.
      properties:
        timeZone:
          type: string
          description: Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
        schedule:
          type: string
          description: Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
        nextJobTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When the next Scheduler job is going to run.
      type: object
      id: GoogleCloudDatapipelinesV1ScheduleSpec
    GoogleCloudDatapipelinesV1Workload:
      id: GoogleCloudDatapipelinesV1Workload
      type: object
      properties:
        dataflowLaunchTemplateRequest:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateRequest'
          description: Template information and additional parameters needed to launch a Dataflow job using the standard launch API.
        dataflowFlexTemplateRequest:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest'
          description: Template information and additional parameters needed to launch a Dataflow job using the flex launch API.
      description: Workload details for creating the pipeline jobs.
    GoogleCloudDatapipelinesV1SdkVersion:
      id: GoogleCloudDatapipelinesV1SdkVersion
      properties:
        sdkSupportStatus:
          type: string
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
          enumDescriptions:
            - Dataflow is unaware of this version.
            - This is a known version of an SDK, and is supported.
            - A newer version of the SDK exists, and an update is recommended.
            - This version of the SDK is deprecated and will eventually be unsupported.
            - Support for this SDK version has ended and it should no longer be used.
          description: The support status for this SDK version.
        versionDisplayName:
          description: A readable string describing the version of the SDK.
          type: string
        version:
          type: string
          description: The version of the SDK used to run the job.
      description: The version of the SDK used to run the job.
      type: object
    GoogleCloudDatapipelinesV1StopPipelineRequest:
      description: Request message for StopPipeline.
      id: GoogleCloudDatapipelinesV1StopPipelineRequest
      properties: {}
      type: object
    GoogleCloudDatapipelinesV1LaunchTemplateParameters:
      type: object
      description: Parameters to provide to the template being launched.
      properties:
        transformNameMapping:
          description: Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
          type: object
          additionalProperties:
            type: string
        update:
          description: If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
          type: boolean
        jobName:
          description: Required. The job name to use for the created job.
          type: string
        parameters:
          description: The runtime parameters to pass to the job.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RuntimeEnvironment'
          description: The runtime environment for the job.
      id: GoogleCloudDatapipelinesV1LaunchTemplateParameters
    GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment:
      type: object
      properties:
        subnetwork:
          description: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
          type: string
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
        serviceAccountEmail:
          type: string
          description: The email address of the service account to run the job as.
        tempLocation:
          type: string
          description: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
        maxWorkers:
          format: int32
          type: integer
          description: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
        zone:
          type: string
          description: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        workerRegion:
          type: string
          description: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
        network:
          description: Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
          type: string
        flexrsGoal:
          type: string
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          description: Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
        ipConfiguration:
          type: string
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          enumDescriptions:
            - The configuration is unknown, or unspecified.
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        numWorkers:
          description: The initial number of Compute Engine instances for the job.
          type: integer
          format: int32
        workerZone:
          description: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
          type: string
        additionalExperiments:
          type: array
          description: Additional experiment flags for the job.
          items:
            type: string
        additionalUserLabels:
          type: object
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ "name": "wrench", "mass": "1kg", "count": "3" }`.'
          additionalProperties:
            type: string
      id: GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
      description: The environment values to be set at runtime for a Flex Template.
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: GoogleProtobufEmpty
    GoogleCloudDatapipelinesV1Job:
      properties:
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: Status capturing any error code or message related to job creation or execution.
        state:
          description: The current state of the job.
          enumDescriptions:
            - The job state isn't specified.
            - The job is waiting to start execution.
            - The job is executing.
            - The job has finished execution successfully.
            - The job has finished execution with a failure.
            - The job has been terminated upon user request.
          enum:
            - STATE_UNSPECIFIED
            - STATE_PENDING
            - STATE_RUNNING
            - STATE_DONE
            - STATE_FAILED
            - STATE_CANCELLED
          type: string
        name:
          type: string
          description: Required. The fully qualified resource name for the job.
        id:
          description: Output only. The internal ID for the job.
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time of job creation.
          type: string
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time of job termination. This is absent if the job is still running.
        dataflowJobDetails:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1DataflowJobDetails'
          description: All the details that are specific to a Dataflow job.
      id: GoogleCloudDatapipelinesV1Job
      type: object
      description: Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API).
    GoogleCloudDatapipelinesV1RunPipelineRequest:
      id: GoogleCloudDatapipelinesV1RunPipelineRequest
      description: Request message for RunPipeline
      type: object
      properties: {}
    GoogleCloudDatapipelinesV1LaunchTemplateRequest:
      id: GoogleCloudDatapipelinesV1LaunchTemplateRequest
      description: A request to launch a template.
      type: object
      properties:
        launchParameters:
          description: The parameters of the template to launch. This should be part of the body of the POST request.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateParameters'
        validateOnly:
          type: boolean
          description: If true, the request is validated but not actually executed. Defaults to false.
        gcsPath:
          description: A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.
          type: string
        location:
          description: The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.
          type: string
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
    GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter:
      properties:
        update:
          description: Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.
          type: boolean
        jobName:
          description: Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.
          type: string
        parameters:
          additionalProperties:
            type: string
          description: 'The parameters for the Flex Template. Example: `{"num_workers":"5"}`'
          type: object
        environment:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment'
          description: The runtime environment for the Flex Template job.
        transformNameMappings:
          additionalProperties:
            type: string
          description: 'Use this to pass transform name mappings for streaming update jobs. Example: `{"oldTransformName":"newTransformName",...}`'
          type: object
        launchOptions:
          type: object
          description: Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
          additionalProperties:
            type: string
        containerSpecGcsPath:
          type: string
          description: Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.
      type: object
      id: GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter
      description: Launch Flex Template parameter.
    GoogleCloudDatapipelinesV1RuntimeEnvironment:
      description: The environment values to set at runtime.
      properties:
        network:
          type: string
          description: Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/'
        machineType:
          type: string
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
        maxWorkers:
          type: integer
          format: int32
          description: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        tempLocation:
          type: string
          description: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
        workerRegion:
          type: string
          description: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
        subnetwork:
          type: string
          description: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
        additionalUserLabels:
          description: 'Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          type: object
          additionalProperties:
            type: string
        workerZone:
          type: string
          description: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
        ipConfiguration:
          type: string
          enumDescriptions:
            - The configuration is unknown, or unspecified.
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
        zone:
          description: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
          type: string
        bypassTempDirValidation:
          type: boolean
          description: Whether to bypass the safety checks for the job's temporary directory. Use with caution.
        numWorkers:
          description: The initial number of Compute Engine instances for the job.
          format: int32
          type: integer
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        additionalExperiments:
          items:
            type: string
          type: array
          description: Additional experiment flags for the job.
      id: GoogleCloudDatapipelinesV1RuntimeEnvironment
      type: object
    GoogleCloudDatapipelinesV1ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          items:
            $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
          description: Results that matched the filter criteria and were accessible to the caller. Results are always in descending order of pipeline creation date.
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      description: Response message for ListPipelines.
      id: GoogleCloudDatapipelinesV1ListPipelinesResponse
    GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest:
      properties:
        launchParameter:
          description: Required. Parameter to launch a job from a Flex Template.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter'
        validateOnly:
          type: boolean
          description: If true, the request is validated but not actually executed. Defaults to false.
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
        location:
          description: Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.
          type: string
      type: object
      id: GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest
      description: A request to launch a Dataflow job from a Flex Template.
    GoogleRpcStatus:
      type: object
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudDatapipelinesV1RunPipelineResponse:
      id: GoogleCloudDatapipelinesV1RunPipelineResponse
      properties:
        job:
          description: Job that was created as part of RunPipeline operation.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Job'
      type: object
      description: Response message for RunPipeline
    GoogleCloudDatapipelinesV1Pipeline:
      type: object
      properties:
        type:
          description: Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
          enumDescriptions:
            - The pipeline type isn't specified.
            - A batch pipeline. It runs jobs on a specific schedule, and each job will automatically terminate once execution is finished.
            - A streaming pipeline. The underlying job is continuously running until it is manually terminated by the user. This type of pipeline doesn't have a schedule to run on, and the linked job gets created when the pipeline is created.
          type: string
          enum:
            - PIPELINE_TYPE_UNSPECIFIED
            - PIPELINE_TYPE_BATCH
            - PIPELINE_TYPE_STREAMING
        pipelineSources:
          description: Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
          additionalProperties:
            type: string
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - STATE_RESUMING
            - STATE_ACTIVE
            - STATE_STOPPING
            - STATE_ARCHIVED
            - STATE_PAUSED
          description: Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
          type: string
          enumDescriptions:
            - The pipeline state isn't specified.
            - The pipeline is getting started or resumed. When finished, the pipeline state will be 'PIPELINE_STATE_ACTIVE'.
            - The pipeline is actively running.
            - The pipeline is in the process of stopping. When finished, the pipeline state will be 'PIPELINE_STATE_ARCHIVED'.
            - The pipeline has been stopped. This is a terminal state and cannot be undone.
            - The pipeline is paused. This is a non-terminal state. When the pipeline is paused, it will hold processing jobs, but can be resumed later. For a batch pipeline, this means pausing the scheduler job. For a streaming pipeline, creating a job snapshot to resume from will give the same effect.
        name:
          type: string
          description: 'The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline''s location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it''s only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.'
        displayName:
          type: string
          description: Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
        workload:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Workload'
          description: Workload information for creating new jobs.
        schedulerServiceAccountEmail:
          type: string
          description: Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
          type: string
        jobCount:
          description: Output only. Number of jobs.
          format: int32
          type: integer
          readOnly: true
        lastUpdateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
        scheduleInfo:
          description: Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the schedule. If not, users are responsible for creating jobs externally.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ScheduleSpec'
      description: The main pipeline entity and all the necessary metadata for launching and managing linked jobs.
      id: GoogleCloudDatapipelinesV1Pipeline
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    pipelines:
      id: google.datapipelines.pipelines
      name: pipelines
      title: Pipelines
      methods:
        projects_locations_pipelines_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_pipelines_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/projects_locations_pipelines_get'
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/projects_locations_pipelines_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/projects_locations_pipelines_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/projects_locations_pipelines_delete'
    jobs:
      id: google.datapipelines.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_pipelines_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_pipelines_jobs_list'
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
    delete:
      description: Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.
      operationId: datapipelines.projects.locations.pipelines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: delete
    get:
      description: Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: select
    patch:
      description: Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the UpdatePipeline request until you receive a successful response.
      operationId: datapipelines.projects.locations.pipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}:run:
    parameters: *ref_1
    post:
      description: Creates a job for the specified pipeline directly. You can use this method when the internal scheduler is not configured and you want to trigger the job directly or through an external system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error if the user doesn't have permission to access the pipeline or run jobs for the pipeline.
      operationId: datapipelines.projects.locations.pipelines.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}:stop:
    parameters: *ref_1
    post:
      description: Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's deleted, and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is retained.
      operationId: datapipelines.projects.locations.pipelines.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1StopPipelineRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/pipelines:
    parameters: *ref_1
    get:
      description: Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ListPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: select
    post:
      description: Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.
      operationId: datapipelines.projects.locations.pipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}/jobs:
    parameters: *ref_1
    get:
      description: Lists jobs for a given pipeline. Throws a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
