openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Data pipelines API
  description: 'Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.'
  version: v1
  x-discovery-doc-revision: '20230806'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/dataflow/docs/guides/data-pipelines'
servers:
  - url: 'https://datapipelines.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudDatapipelinesV1Workload:
      type: object
      properties:
        dataflowLaunchTemplateRequest:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateRequest'
          description: Template information and additional parameters needed to launch a Dataflow job using the standard launch API.
        dataflowFlexTemplateRequest:
          description: Template information and additional parameters needed to launch a Dataflow job using the flex launch API.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest'
      description: Workload details for creating the pipeline jobs.
      id: GoogleCloudDatapipelinesV1Workload
    GoogleRpcStatus:
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    GoogleCloudDatapipelinesV1DataflowJobDetails:
      type: object
      properties:
        currentWorkers:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The current number of workers used to run the jobs. Only set to a value if the job is still running.
        resourceInfo:
          type: object
          description: 'Cached version of all the metrics of interest for the job. This value gets stored here when the job is terminated. As long as the job is running, this field is populated from the Dataflow API.'
          additionalProperties:
            format: double
            type: number
        sdkVersion:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1SdkVersion'
          description: Output only. The SDK version used to run the job.
          readOnly: true
      description: Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
      id: GoogleCloudDatapipelinesV1DataflowJobDetails
    GoogleCloudDatapipelinesV1Pipeline:
      id: GoogleCloudDatapipelinesV1Pipeline
      type: object
      description: The main pipeline entity and all the necessary metadata for launching and managing linked jobs.
      properties:
        lastUpdateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
          type: string
        displayName:
          description: 'Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).'
          type: string
        scheduleInfo:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ScheduleSpec'
          description: 'Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the schedule. If not, users are responsible for creating jobs externally.'
        state:
          enumDescriptions:
            - The pipeline state isn't specified.
            - 'The pipeline is getting started or resumed. When finished, the pipeline state will be ''PIPELINE_STATE_ACTIVE''.'
            - The pipeline is actively running.
            - 'The pipeline is in the process of stopping. When finished, the pipeline state will be ''PIPELINE_STATE_ARCHIVED''.'
            - The pipeline has been stopped. This is a terminal state and cannot be undone.
            - 'The pipeline is paused. This is a non-terminal state. When the pipeline is paused, it will hold processing jobs, but can be resumed later. For a batch pipeline, this means pausing the scheduler job. For a streaming pipeline, creating a job snapshot to resume from will give the same effect.'
          enum:
            - STATE_UNSPECIFIED
            - STATE_RESUMING
            - STATE_ACTIVE
            - STATE_STOPPING
            - STATE_ARCHIVED
            - STATE_PAUSED
          description: 'Required. The state of the pipeline. When the pipeline is created, the state is set to ''PIPELINE_STATE_ACTIVE'' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.'
          type: string
        name:
          description: 'The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline''s location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it''s only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.'
          type: string
        workload:
          description: Workload information for creating new jobs.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Workload'
        createTime:
          description: Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
          format: google-datetime
          type: string
          readOnly: true
        pipelineSources:
          description: 'Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.'
          additionalProperties:
            type: string
          type: object
        schedulerServiceAccountEmail:
          type: string
          description: 'Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.'
        jobCount:
          description: Output only. Number of jobs.
          type: integer
          format: int32
          readOnly: true
        type:
          enum:
            - PIPELINE_TYPE_UNSPECIFIED
            - PIPELINE_TYPE_BATCH
            - PIPELINE_TYPE_STREAMING
          type: string
          description: Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
          enumDescriptions:
            - The pipeline type isn't specified.
            - 'A batch pipeline. It runs jobs on a specific schedule, and each job will automatically terminate once execution is finished.'
            - 'A streaming pipeline. The underlying job is continuously running until it is manually terminated by the user. This type of pipeline doesn''t have a schedule to run on, and the linked job gets created when the pipeline is created.'
    GoogleCloudDatapipelinesV1RunPipelineResponse:
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Job'
          description: Job that was created as part of RunPipeline operation.
      type: object
      id: GoogleCloudDatapipelinesV1RunPipelineResponse
      description: Response message for RunPipeline
    GoogleCloudDatapipelinesV1Job:
      description: Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API).
      properties:
        name:
          type: string
          description: Required. The fully qualified resource name for the job.
        endTime:
          description: Output only. The time of job termination. This is absent if the job is still running.
          type: string
          format: google-datetime
          readOnly: true
        id:
          readOnly: true
          description: Output only. The internal ID for the job.
          type: string
        createTime:
          description: Output only. The time of job creation.
          type: string
          readOnly: true
          format: google-datetime
        state:
          enumDescriptions:
            - The job state isn't specified.
            - The job is waiting to start execution.
            - The job is executing.
            - The job has finished execution successfully.
            - The job has finished execution with a failure.
            - The job has been terminated upon user request.
          enum:
            - STATE_UNSPECIFIED
            - STATE_PENDING
            - STATE_RUNNING
            - STATE_DONE
            - STATE_FAILED
            - STATE_CANCELLED
          description: The current state of the job.
          type: string
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: Status capturing any error code or message related to job creation or execution.
        dataflowJobDetails:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1DataflowJobDetails'
          description: All the details that are specific to a Dataflow job.
      type: object
      id: GoogleCloudDatapipelinesV1Job
    GoogleCloudDatapipelinesV1SdkVersion:
      id: GoogleCloudDatapipelinesV1SdkVersion
      description: The version of the SDK used to run the job.
      type: object
      properties:
        versionDisplayName:
          type: string
          description: A readable string describing the version of the SDK.
        version:
          description: The version of the SDK used to run the job.
          type: string
        sdkSupportStatus:
          type: string
          enumDescriptions:
            - Dataflow is unaware of this version.
            - 'This is a known version of an SDK, and is supported.'
            - 'A newer version of the SDK exists, and an update is recommended.'
            - This version of the SDK is deprecated and will eventually be unsupported.
            - Support for this SDK version has ended and it should no longer be used.
          description: The support status for this SDK version.
          enum:
            - UNKNOWN
            - SUPPORTED
            - STALE
            - DEPRECATED
            - UNSUPPORTED
    GoogleCloudDatapipelinesV1ListJobsResponse:
      type: object
      description: Response message for ListJobs
      id: GoogleCloudDatapipelinesV1ListJobsResponse
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        jobs:
          description: Results that were accessible to the caller. Results are always in descending order of job creation date.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Job'
    GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest:
      description: A request to launch a Dataflow job from a Flex Template.
      properties:
        validateOnly:
          type: boolean
          description: 'If true, the request is validated but not actually executed. Defaults to false.'
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
        launchParameter:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter'
          description: Required. Parameter to launch a job from a Flex Template.
        location:
          type: string
          description: 'Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.'
      id: GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest
      type: object
    GoogleCloudDatapipelinesV1StopPipelineRequest:
      type: object
      properties: {}
      description: Request message for StopPipeline.
      id: GoogleCloudDatapipelinesV1StopPipelineRequest
    GoogleCloudDatapipelinesV1RuntimeEnvironment:
      description: The environment values to set at runtime.
      properties:
        tempLocation:
          type: string
          description: 'The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
        ipConfiguration:
          type: string
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
          description: Configuration for VM IPs.
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
        machineType:
          type: string
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        subnetwork:
          type: string
          description: 'Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
        numWorkers:
          type: integer
          format: int32
          description: The initial number of Compute Engine instances for the job.
        serviceAccountEmail:
          description: The email address of the service account to run the job as.
          type: string
        network:
          type: string
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
        kmsKeyName:
          type: string
          description: 'Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/'
        additionalExperiments:
          type: array
          description: Additional experiment flags for the job.
          items:
            type: string
        zone:
          type: string
          description: 'The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
        workerRegion:
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane''s region.'
          type: string
        maxWorkers:
          format: int32
          description: 'The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.'
          type: integer
        bypassTempDirValidation:
          type: boolean
          description: Whether to bypass the safety checks for the job's temporary directory. Use with caution.
        additionalUserLabels:
          description: 'Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.'
          additionalProperties:
            type: string
          type: object
        workerZone:
          type: string
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane''s region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
      type: object
      id: GoogleCloudDatapipelinesV1RuntimeEnvironment
    GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment:
      type: object
      properties:
        ipConfiguration:
          enum:
            - WORKER_IP_UNSPECIFIED
            - WORKER_IP_PUBLIC
            - WORKER_IP_PRIVATE
          type: string
          description: Configuration for VM IPs.
          enumDescriptions:
            - 'The configuration is unknown, or unspecified.'
            - Workers should have public IP addresses.
            - Workers should have private IP addresses.
        zone:
          description: 'The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.'
          type: string
        machineType:
          description: The machine type to use for the job. Defaults to the value from the template if not specified.
          type: string
        workerRegion:
          type: string
          description: 'The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.'
        subnetwork:
          description: 'Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.'
          type: string
        kmsKeyName:
          description: 'Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/'
          type: string
        additionalExperiments:
          description: Additional experiment flags for the job.
          items:
            type: string
          type: array
        network:
          description: 'Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".'
          type: string
        enableStreamingEngine:
          description: Whether to enable Streaming Engine for the job.
          type: boolean
        maxWorkers:
          description: 'The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.'
          type: integer
          format: int32
        serviceAccountEmail:
          type: string
          description: The email address of the service account to run the job as.
        additionalUserLabels:
          additionalProperties:
            type: string
          type: object
          description: 'Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ "name": "wrench", "mass": "1kg", "count": "3" }`.'
        numWorkers:
          description: The initial number of Compute Engine instances for the job.
          format: int32
          type: integer
        flexrsGoal:
          description: 'Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs'
          enumDescriptions:
            - Run in the default mode.
            - Optimize for lower execution time.
            - Optimize for lower cost.
          type: string
          enum:
            - FLEXRS_UNSPECIFIED
            - FLEXRS_SPEED_OPTIMIZED
            - FLEXRS_COST_OPTIMIZED
        tempLocation:
          description: 'The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.'
          type: string
        workerZone:
          description: 'The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.'
          type: string
      description: The environment values to be set at runtime for a Flex Template.
      id: GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
    GoogleCloudDatapipelinesV1ScheduleSpec:
      type: object
      description: Details of the schedule the pipeline runs on.
      properties:
        timeZone:
          type: string
          description: 'Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.'
        schedule:
          description: Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
          type: string
        nextJobTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. When the next Scheduler job is going to run.
      id: GoogleCloudDatapipelinesV1ScheduleSpec
    GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter:
      properties:
        parameters:
          type: object
          description: 'The parameters for the Flex Template. Example: `{"num_workers":"5"}`'
          additionalProperties:
            type: string
        transformNameMappings:
          description: 'Use this to pass transform name mappings for streaming update jobs. Example: `{"oldTransformName":"newTransformName",...}`'
          additionalProperties:
            type: string
          type: object
        launchOptions:
          type: object
          description: Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
          additionalProperties:
            type: string
        jobName:
          type: string
          description: 'Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.'
        containerSpecGcsPath:
          type: string
          description: Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.
        update:
          description: 'Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.'
          type: boolean
        environment:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment'
          description: The runtime environment for the Flex Template job.
      description: Launch Flex Template parameter.
      id: GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter
      type: object
    GoogleCloudDatapipelinesV1ListPipelinesResponse:
      type: object
      description: Response message for ListPipelines.
      properties:
        nextPageToken:
          type: string
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
        pipelines:
          description: Results that matched the filter criteria and were accessible to the caller. Results are always in descending order of pipeline creation date.
          items:
            $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
          type: array
      id: GoogleCloudDatapipelinesV1ListPipelinesResponse
    GoogleCloudDatapipelinesV1LaunchTemplateRequest:
      id: GoogleCloudDatapipelinesV1LaunchTemplateRequest
      properties:
        gcsPath:
          description: 'A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with ''gs://''.'
          type: string
        launchParameters:
          description: The parameters of the template to launch. This should be part of the body of the POST request.
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1LaunchTemplateParameters'
        projectId:
          description: Required. The ID of the Cloud Platform project that the job belongs to.
          type: string
        validateOnly:
          description: 'If true, the request is validated but not actually executed. Defaults to false.'
          type: boolean
        location:
          description: 'The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.'
          type: string
      type: object
      description: A request to launch a template.
    GoogleCloudDatapipelinesV1LaunchTemplateParameters:
      type: object
      description: Parameters to provide to the template being launched.
      properties:
        jobName:
          type: string
          description: Required. The job name to use for the created job.
        environment:
          $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RuntimeEnvironment'
          description: The runtime environment for the job.
        parameters:
          description: The runtime parameters to pass to the job.
          type: object
          additionalProperties:
            type: string
        update:
          description: 'If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.'
          type: boolean
        transformNameMapping:
          type: object
          description: Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
          additionalProperties:
            type: string
      id: GoogleCloudDatapipelinesV1LaunchTemplateParameters
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    GoogleCloudDatapipelinesV1RunPipelineRequest:
      type: object
      description: Request message for RunPipeline
      properties: {}
      id: GoogleCloudDatapipelinesV1RunPipelineRequest
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    pipelines:
      id: google.datapipelines.pipelines
      name: pipelines
      title: Pipelines
      methods:
        stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pipelines
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/delete'
    jobs:
      id: google.datapipelines.jobs
      name: jobs
      title: Jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1pipelines~1{pipelinesId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}:stop':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: 'Freezes pipeline execution permanently. If there''s a corresponding scheduler entry, it''s deleted, and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is retained.'
      operationId: datapipelines.projects.locations.pipelines.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1StopPipelineRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}:run':
    parameters: *ref_1
    post:
      description: Creates a job for the specified pipeline directly. You can use this method when the internal scheduler is not configured and you want to trigger the job directly or through an external system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error if the user doesn't have permission to access the pipeline or run jobs for the pipeline.
      operationId: datapipelines.projects.locations.pipelines.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1RunPipelineResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}':
    parameters: *ref_1
    patch:
      description: 'Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the pipeline doesn''t exist. If UpdatePipeline does not return successfully, you can retry the UpdatePipeline request until you receive a successful response.'
      operationId: datapipelines.projects.locations.pipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.'
      operationId: datapipelines.projects.locations.pipelines.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelines':
    parameters: *ref_1
    get:
      description: Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ListPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.pipelines
    post:
      description: 'Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.'
      operationId: datapipelines.projects.locations.pipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1Pipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pipelines
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/pipelines/{pipelinesId}/jobs':
    parameters: *ref_1
    get:
      description: Lists jobs for a given pipeline. Throws a "FORBIDDEN" error if the caller doesn't have permission to access it.
      operationId: datapipelines.projects.locations.pipelines.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatapipelinesV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: pipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
