openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: BigQuery Data Transfer API
  description: Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.
  version: v1
  x-discovery-doc-revision: '20230812'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/bigquery-transfer/'
servers:
  - url: 'https://bigquerydatatransfer.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/bigquery': View and manage your data in Google BigQuery and see the email address for your Google Account
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    EncryptionConfiguration:
      properties:
        kmsKeyName:
          description: The name of the KMS key used for encrypting BigQuery data.
          type: string
      id: EncryptionConfiguration
      description: Represents the encryption configuration for a transfer.
      type: object
    UserInfo:
      type: object
      id: UserInfo
      description: Information about a user.
      properties:
        email:
          description: E-mail address of the user.
          type: string
    TimeRange:
      type: object
      id: TimeRange
      description: 'A specification for a time range, this will request transfer runs with run_time between start_time (inclusive) and end_time (exclusive).'
      properties:
        startTime:
          type: string
          description: 'Start time of the range of transfer runs. For example, `"2017-05-25T00:00:00+00:00"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive).'
          format: google-datetime
        endTime:
          type: string
          description: 'End time of the range of transfer runs. For example, `"2017-05-30T00:00:00+00:00"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive).'
          format: google-datetime
    ListDataSourcesResponse:
      type: object
      properties:
        dataSources:
          items:
            $ref: '#/components/schemas/DataSource'
          type: array
          description: List of supported data sources and their transfer settings.
        nextPageToken:
          description: 'Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.'
          type: string
          readOnly: true
      description: Returns list of supported data sources and their metadata.
      id: ListDataSourcesResponse
    StartManualTransferRunsRequest:
      type: object
      properties:
        requestedRunTime:
          description: A run_time timestamp for historical data files or reports that are scheduled to be transferred by the scheduled transfer run. requested_run_time must be a past time and cannot include future time values.
          format: google-datetime
          type: string
        requestedTimeRange:
          $ref: '#/components/schemas/TimeRange'
          description: A time_range start and end timestamp for historical data files or reports that are scheduled to be transferred by the scheduled transfer run. requested_time_range must be a past time and cannot include future time values.
      description: A request to start manual transfer runs.
      id: StartManualTransferRunsRequest
    ListTransferRunsResponse:
      type: object
      properties:
        transferRuns:
          readOnly: true
          type: array
          description: Output only. The stored pipeline transfer runs.
          items:
            $ref: '#/components/schemas/TransferRun'
        nextPageToken:
          readOnly: true
          description: 'Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.'
          type: string
      id: ListTransferRunsResponse
      description: The returned list of pipelines in the project.
    StartManualTransferRunsResponse:
      description: A response to start manual transfer runs.
      id: StartManualTransferRunsResponse
      properties:
        runs:
          description: The transfer runs that were created.
          type: array
          items:
            $ref: '#/components/schemas/TransferRun'
      type: object
    DataSourceParameter:
      description: A parameter used to define custom fields in a data source definition.
      id: DataSourceParameter
      properties:
        minValue:
          description: For integer and double values specifies minimum allowed value.
          format: double
          type: number
        paramId:
          type: string
          description: Parameter identifier.
        repeated:
          description: Deprecated. This field has no effect.
          type: boolean
        maxValue:
          description: For integer and double values specifies maximum allowed value.
          type: number
          format: double
        validationRegex:
          description: Regular expression which can be used for parameter validation.
          type: string
        deprecated:
          description: 'If true, it should not be used in new transfers, and it should not be visible to users.'
          type: boolean
        required:
          type: boolean
          description: Is parameter required.
        fields:
          description: Deprecated. This field has no effect.
          items:
            $ref: '#/components/schemas/DataSourceParameter'
          type: array
        description:
          type: string
          description: Parameter description.
        displayName:
          description: Parameter display name in the user interface.
          type: string
        validationHelpUrl:
          description: URL to a help document to further explain the naming requirements.
          type: string
        type:
          type: string
          description: Parameter type.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - INTEGER
            - DOUBLE
            - BOOLEAN
            - RECORD
            - PLUS_PAGE
            - LIST
          enumDescriptions:
            - Type unspecified.
            - String parameter.
            - Integer parameter (64-bits). Will be serialized to json as string.
            - Double precision floating point parameter.
            - Boolean parameter.
            - Deprecated. This field has no effect.
            - Page ID for a Google+ Page.
            - List of strings parameter.
        allowedValues:
          type: array
          items:
            type: string
          description: All possible values for the parameter.
        validationDescription:
          description: 'Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values.'
          type: string
        recurse:
          type: boolean
          description: Deprecated. This field has no effect.
        immutable:
          type: boolean
          description: Cannot be changed after initial creation.
      type: object
    Status:
      id: Status
      type: object
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    ListTransferLogsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.'
          readOnly: true
        transferMessages:
          type: array
          items:
            $ref: '#/components/schemas/TransferMessage'
          readOnly: true
          description: Output only. The stored pipeline transfer messages.
      id: ListTransferLogsResponse
      description: The returned list transfer run messages.
      type: object
    EmailPreferences:
      id: EmailPreferences
      type: object
      properties:
        enableFailureEmail:
          type: boolean
          description: 'If true, email notifications will be sent on transfer run failures.'
      description: Represents preferences for sending email notifications for transfer run events.
    TransferRun:
      type: object
      properties:
        schedule:
          description: 'Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn''t always match this.'
          readOnly: true
          type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. Last time the data transfer run state was updated.
          format: google-datetime
        dataSourceId:
          readOnly: true
          type: string
          description: Output only. Data source id.
        destinationDatasetId:
          type: string
          readOnly: true
          description: Output only. The BigQuery target dataset id.
        state:
          enum:
            - TRANSFER_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
            - CANCELLED
          type: string
          description: Data transfer run state. Ignored for input requests.
          enumDescriptions:
            - State placeholder (0).
            - Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).
            - Data transfer is in progress (3).
            - Data transfer completed successfully (4).
            - Data transfer failed (5).
            - Data transfer is cancelled (6).
        errorStatus:
          description: Status of the transfer run.
          $ref: '#/components/schemas/Status'
        params:
          description: 'Output only. Parameters specific to each data source. For more information see the bq tab in the ''Setting up a data transfer'' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq'
          readOnly: true
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        scheduleTime:
          format: google-datetime
          type: string
          description: Minimum time after which a transfer run can be started.
        runTime:
          type: string
          description: 'For batch transfer runs, specifies the date and time of the data should be ingested.'
          format: google-datetime
        endTime:
          description: Output only. Time when transfer run ended. Parameter ignored by server for input requests.
          format: google-datetime
          type: string
          readOnly: true
        notificationPubsubTopic:
          description: 'Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`'
          readOnly: true
          type: string
        startTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Time when transfer run was started. Parameter ignored by server for input requests.
        emailPreferences:
          description: Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from.
          readOnly: true
          $ref: '#/components/schemas/EmailPreferences'
        userId:
          description: Deprecated. Unique ID of the user on whose behalf transfer is done.
          type: string
          format: int64
        name:
          description: 'The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.'
          type: string
      id: TransferRun
      description: Represents a data transfer run.
    ScheduleTransferRunsResponse:
      type: object
      description: A response to schedule transfer runs for a time range.
      id: ScheduleTransferRunsResponse
      properties:
        runs:
          items:
            $ref: '#/components/schemas/TransferRun'
          type: array
          description: The transfer runs that were scheduled.
    CheckValidCredsRequest:
      properties: {}
      description: 'A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id.'
      type: object
      id: CheckValidCredsRequest
    TransferConfig:
      description: 'Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.'
      type: object
      properties:
        ownerInfo:
          description: 'Output only. Information about the user whose credentials are used to transfer data. Populated only for `transferConfigs.get` requests. In case the user information is not available, this field will not be populated.'
          $ref: '#/components/schemas/UserInfo'
          readOnly: true
        disabled:
          type: boolean
          description: 'Is this config disabled. When set to true, no runs are scheduled for a given transfer.'
        schedule:
          type: string
          description: 'Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.'
        state:
          enumDescriptions:
            - State placeholder (0).
            - Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).
            - Data transfer is in progress (3).
            - Data transfer completed successfully (4).
            - Data transfer failed (5).
            - Data transfer is cancelled (6).
          description: Output only. State of the most recently updated transfer run.
          enum:
            - TRANSFER_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
            - CANCELLED
          readOnly: true
          type: string
        encryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: 'The encryption configuration part. Currently, it is only used for the optional KMS key name. The BigQuery service account of your project must be granted permissions to use the key. Read methods will return the key name applied in effect. Write methods will apply the key if it is present, or otherwise try to apply project default keys if it is absent.'
        datasetRegion:
          type: string
          readOnly: true
          description: Output only. Region in which BigQuery dataset is located.
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Data transfer modification time. Ignored by server on input.
        nextRunTime:
          format: google-datetime
          type: string
          description: Output only. Next time when data transfer will run.
          readOnly: true
        emailPreferences:
          description: Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config.
          $ref: '#/components/schemas/EmailPreferences'
        name:
          description: 'The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.'
          type: string
        userId:
          description: Deprecated. Unique ID of the user on whose behalf transfer is done.
          type: string
          format: int64
        notificationPubsubTopic:
          description: 'Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`'
          type: string
        destinationDatasetId:
          type: string
          description: The BigQuery target dataset id.
        dataRefreshWindowDays:
          description: 'The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.'
          type: integer
          format: int32
        displayName:
          type: string
          description: User specified display name for the data transfer.
        params:
          type: object
          description: 'Parameters specific to each data source. For more information see the bq tab in the ''Setting up a data transfer'' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq'
          additionalProperties:
            description: Properties of the object.
            type: any
        scheduleOptions:
          description: Options customizing the data transfer schedule.
          $ref: '#/components/schemas/ScheduleOptions'
        dataSourceId:
          description: 'Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list'
          type: string
      id: TransferConfig
    DataSource:
      properties:
        manualRunsDisabled:
          description: Disables backfilling and manual run scheduling for the data source.
          type: boolean
        description:
          description: User friendly data source description string.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. Data source resource name.
        dataSourceId:
          type: string
          description: Data source id.
        authorizationType:
          description: Indicates the type of authorization.
          type: string
          enumDescriptions:
            - Type unspecified.
            - Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.
            - Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.
            - Use First Party OAuth.
          enum:
            - AUTHORIZATION_TYPE_UNSPECIFIED
            - AUTHORIZATION_CODE
            - GOOGLE_PLUS_AUTHORIZATION_CODE
            - FIRST_PARTY_OAUTH
        minimumScheduleInterval:
          format: google-duration
          description: The minimum interval for scheduler to schedule runs.
          type: string
        defaultSchedule:
          description: 'Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`.'
          type: string
        updateDeadlineSeconds:
          format: int32
          description: The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED.
          type: integer
        supportsMultipleTransfers:
          type: boolean
          description: Deprecated. This field has no effect.
          deprecated: true
        parameters:
          description: Data source parameters.
          items:
            $ref: '#/components/schemas/DataSourceParameter'
          type: array
        displayName:
          type: string
          description: User friendly data source name.
        dataRefreshType:
          enumDescriptions:
            - 'The data source won''t support data auto refresh, which is default value.'
            - 'The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.'
            - 'The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config.'
          description: 'Specifies whether the data source supports automatic data refresh for the past few days, and how it''s supported. For some data sources, data might not be complete until a few days later, so it''s useful to refresh data automatically.'
          enum:
            - DATA_REFRESH_TYPE_UNSPECIFIED
            - SLIDING_WINDOW
            - CUSTOM_SLIDING_WINDOW
          type: string
        transferType:
          description: Deprecated. This field has no effect.
          enum:
            - TRANSFER_TYPE_UNSPECIFIED
            - BATCH
            - STREAMING
          type: string
          enumDescriptions:
            - Invalid or Unknown transfer type placeholder.
            - Batch data transfer.
            - Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project.
          deprecated: true
        clientId:
          type: string
          description: Data source client id which should be used to receive refresh token.
        scopes:
          items:
            type: string
          type: array
          description: 'Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery'
        defaultDataRefreshWindowDays:
          type: integer
          format: int32
          description: Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`.
        supportsCustomSchedule:
          type: boolean
          description: 'Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule.'
        helpUrl:
          description: Url for the help document for this data source.
          type: string
      id: DataSource
      type: object
      description: Defines the properties and custom parameters for a data source.
    ScheduleOptions:
      description: Options customizing the data transfer schedule.
      type: object
      properties:
        endTime:
          type: string
          description: Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.
          format: google-datetime
        startTime:
          type: string
          description: Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.
          format: google-datetime
        disableAutoScheduling:
          type: boolean
          description: 'If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.'
      id: ScheduleOptions
    TransferMessage:
      id: TransferMessage
      properties:
        messageTime:
          type: string
          format: google-datetime
          description: Time when message was logged.
        severity:
          enum:
            - MESSAGE_SEVERITY_UNSPECIFIED
            - INFO
            - WARNING
            - ERROR
          type: string
          description: Message severity.
          enumDescriptions:
            - No severity specified.
            - Informational message.
            - Warning message.
            - Error message.
        messageText:
          description: Message text.
          type: string
      description: Represents a user facing message for a particular data transfer run.
      type: object
    ListTransferConfigsResponse:
      type: object
      id: ListTransferConfigsResponse
      description: The returned list of pipelines in the project.
      properties:
        transferConfigs:
          description: Output only. The stored pipeline transfer configurations.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TransferConfig'
        nextPageToken:
          type: string
          description: 'Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results.'
          readOnly: true
    CheckValidCredsResponse:
      description: A response indicating whether the credentials exist and are valid.
      type: object
      properties:
        hasValidCreds:
          type: boolean
          description: 'If set to `true`, the credentials exist and are valid.'
      id: CheckValidCredsResponse
    Location:
      id: Location
      properties:
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
      description: A resource that represents a Google Cloud location.
    EnrollDataSourcesRequest:
      description: A request to enroll a set of data sources so they are visible in the BigQuery UI's `Transfer` tab.
      properties:
        dataSourceIds:
          type: array
          items:
            type: string
          description: Data sources that are enrolled. It is required to provide at least one data source id.
      type: object
      id: EnrollDataSourcesRequest
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    ScheduleTransferRunsRequest:
      id: ScheduleTransferRunsRequest
      properties:
        endTime:
          description: 'Required. End time of the range of transfer runs. For example, `"2017-05-30T00:00:00+00:00"`.'
          type: string
          format: google-datetime
        startTime:
          format: google-datetime
          description: 'Required. Start time of the range of transfer runs. For example, `"2017-05-25T00:00:00+00:00"`.'
          type: string
      description: A request to schedule transfer runs for a time range.
      type: object
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    projects:
      id: google.bigquerydatatransfer.projects
      name: projects
      title: Projects
      methods:
        projects_enroll_data_sources:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}:enrollDataSources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    transfer_configs:
      id: google.bigquerydatatransfer.transfer_configs
      name: transfer_configs
      title: Transfer Configs
      methods:
        projects_transfer_configs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_start_manual_runs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}:startManualRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferConfigs
        _projects_transfer_configs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_schedule_runs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}:scheduleRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_start_manual_runs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}:startManualRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferConfigs
        _projects_locations_transfer_configs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_schedule_runs:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}:scheduleRuns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_locations_transfer_configs_get'
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_transfer_configs_get'
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_locations_transfer_configs_list'
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_transfer_configs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_locations_transfer_configs_create'
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_transfer_configs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_locations_transfer_configs_delete'
          - $ref: '#/components/x-stackQL-resources/transfer_configs/methods/projects_transfer_configs_delete'
    runs:
      id: google.bigquerydatatransfer.runs
      name: runs
      title: Runs
      methods:
        projects_transfer_configs_runs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_runs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_transfer_configs_runs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferRuns
        _projects_transfer_configs_runs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_runs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_runs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_runs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferRuns
        _projects_locations_transfer_configs_runs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_locations_transfer_configs_runs_get'
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_transfer_configs_runs_get'
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_locations_transfer_configs_runs_list'
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_transfer_configs_runs_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_locations_transfer_configs_runs_delete'
          - $ref: '#/components/x-stackQL-resources/runs/methods/projects_transfer_configs_runs_delete'
    transfer_logs:
      id: google.bigquerydatatransfer.transfer_logs
      name: transfer_logs
      title: Transfer Logs
      methods:
        projects_transfer_configs_runs_transfer_logs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}~1transferLogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferMessages
        _projects_transfer_configs_runs_transfer_logs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}~1transferLogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_transfer_configs_runs_transfer_logs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}~1transferLogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transferMessages
        _projects_locations_transfer_configs_runs_transfer_logs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1transferConfigs~1{transferConfigsId}~1runs~1{runsId}~1transferLogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transfer_logs/methods/projects_locations_transfer_configs_runs_transfer_logs_list'
          - $ref: '#/components/x-stackQL-resources/transfer_logs/methods/projects_transfer_configs_runs_transfer_logs_list'
        insert: []
        update: []
        delete: []
    locations:
      id: google.bigquerydatatransfer.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_enroll_data_sources:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:enrollDataSources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    data_sources:
      id: google.bigquerydatatransfer.data_sources
      name: data_sources
      title: Data Sources
      methods:
        projects_locations_data_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataSources
        _projects_locations_data_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_sources_check_valid_creds:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSources~1{dataSourcesId}:checkValidCreds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_sources_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataSources~1{dataSourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_data_sources_check_valid_creds:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1dataSources~1{dataSourcesId}:checkValidCreds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_data_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1dataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataSources
        _projects_data_sources_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1dataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_data_sources_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1dataSources~1{dataSourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/projects_locations_data_sources_get'
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/projects_locations_data_sources_list'
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/projects_data_sources_get'
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/projects_data_sources_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}:enrollDataSources':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: 'Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).'
      operationId: bigquerydatatransfer.projects.enrollDataSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollDataSourcesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_enroll_data_sources
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}':
    parameters: *ref_1
    patch:
      description: 'Updates a data transfer configuration. All fields must be set, even if they are not updated.'
      operationId: bigquerydatatransfer.projects.transferConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: versionInfo
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: serviceAccountName
          schema:
            type: string
        - in: query
          name: authorizationCode
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_patch
      x-stackQL-verb: exec
    get:
      description: Returns information about a data transfer config.
      operationId: bigquerydatatransfer.projects.transferConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a data transfer configuration, including any associated transfer runs and logs.'
      operationId: bigquerydatatransfer.projects.transferConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:startManualRuns':
    parameters: *ref_1
    post:
      description: 'Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.'
      operationId: bigquerydatatransfer.projects.transferConfigs.startManualRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartManualTransferRunsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartManualTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_start_manual_runs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/transferConfigs':
    parameters: *ref_1
    get:
      description: Returns information about all transfer configs owned by a project in the specified location.
      operationId: bigquerydatatransfer.projects.transferConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: dataSourceIds
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferConfigs
    post:
      description: Creates a new data transfer configuration.
      operationId: bigquerydatatransfer.projects.transferConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: versionInfo
          schema:
            type: string
        - in: query
          name: authorizationCode
          schema:
            type: string
        - in: query
          name: serviceAccountName
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns':
    parameters: *ref_1
    post:
      description: 'Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.'
      operationId: bigquerydatatransfer.projects.transferConfigs.scheduleRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleTransferRunsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_transfer_configs_schedule_runs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}':
    parameters: *ref_1
    get:
      description: Returns information about the particular transfer run.
      operationId: bigquerydatatransfer.projects.transferConfigs.runs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: projects_transfer_configs_runs_get
      x-stackQL-verb: select
    delete:
      description: Deletes the specified transfer run.
      operationId: bigquerydatatransfer.projects.transferConfigs.runs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: projects_transfer_configs_runs_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs':
    parameters: *ref_1
    get:
      description: Returns information about running and completed transfer runs.
      operationId: bigquerydatatransfer.projects.transferConfigs.runs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: states
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: runAttempt
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: runs
      x-stackQL-method: projects_transfer_configs_runs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferRuns
  '/v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs':
    parameters: *ref_1
    get:
      description: Returns log messages for the transfer run.
      operationId: bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferLogsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: messageTypes
          schema:
            type: string
      x-stackQL-resource: transfer_logs
      x-stackQL-method: projects_transfer_configs_runs_transfer_logs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferMessages
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: bigquerydatatransfer.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: bigquerydatatransfer.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}:enrollDataSources':
    parameters: *ref_1
    post:
      description: 'Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).'
      operationId: bigquerydatatransfer.projects.locations.enrollDataSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollDataSourcesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_enroll_data_sources
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a data transfer configuration, including any associated transfer runs and logs.'
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_delete
      x-stackQL-verb: delete
    patch:
      description: 'Updates a data transfer configuration. All fields must be set, even if they are not updated.'
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceAccountName
          schema:
            type: string
        - in: query
          name: authorizationCode
          schema:
            type: string
        - in: query
          name: versionInfo
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_patch
      x-stackQL-verb: exec
    get:
      description: Returns information about a data transfer config.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:startManualRuns':
    parameters: *ref_1
    post:
      description: 'Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.'
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartManualTransferRunsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartManualTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_start_manual_runs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs':
    parameters: *ref_1
    post:
      description: Creates a new data transfer configuration.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceAccountName
          schema:
            type: string
        - in: query
          name: authorizationCode
          schema:
            type: string
        - in: query
          name: versionInfo
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_create
      x-stackQL-verb: insert
    get:
      description: Returns information about all transfer configs owned by a project in the specified location.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: dataSourceIds
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns':
    parameters: *ref_1
    post:
      description: 'Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.'
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleTransferRunsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: transfer_configs
      x-stackQL-method: projects_locations_transfer_configs_schedule_runs
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}':
    parameters: *ref_1
    delete:
      description: Deletes the specified transfer run.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.runs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: projects_locations_transfer_configs_runs_delete
      x-stackQL-verb: delete
    get:
      description: Returns information about the particular transfer run.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.runs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: projects_locations_transfer_configs_runs_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs':
    parameters: *ref_1
    get:
      description: Returns information about running and completed transfer runs.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.runs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: runAttempt
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: states
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: projects_locations_transfer_configs_runs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferRuns
  '/v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs':
    parameters: *ref_1
    get:
      description: Returns log messages for the transfer run.
      operationId: bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransferLogsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: transferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: messageTypes
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: transfer_logs
      x-stackQL-method: projects_locations_transfer_configs_runs_transfer_logs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.transferMessages
  '/v1/projects/{projectsId}/locations/{locationsId}/dataSources':
    parameters: *ref_1
    get:
      description: Lists supported data sources and returns their settings.
      operationId: bigquerydatatransfer.projects.locations.dataSources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_locations_data_sources_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataSources
  '/v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds':
    parameters: *ref_1
    post:
      description: Returns true if valid credentials exist for the given data source and requesting user.
      operationId: bigquerydatatransfer.projects.locations.dataSources.checkValidCreds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckValidCredsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckValidCredsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_locations_data_sources_check_valid_creds
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}':
    parameters: *ref_1
    get:
      description: Retrieves a supported data source and returns its settings.
      operationId: bigquerydatatransfer.projects.locations.dataSources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_locations_data_sources_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds':
    parameters: *ref_1
    post:
      description: Returns true if valid credentials exist for the given data source and requesting user.
      operationId: bigquerydatatransfer.projects.dataSources.checkValidCreds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckValidCredsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckValidCredsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_data_sources_check_valid_creds
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/dataSources':
    parameters: *ref_1
    get:
      description: Lists supported data sources and returns their settings.
      operationId: bigquerydatatransfer.projects.dataSources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_data_sources_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.dataSources
  '/v1/projects/{projectsId}/dataSources/{dataSourcesId}':
    parameters: *ref_1
    get:
      description: Retrieves a supported data source and returns its settings.
      operationId: bigquerydatatransfer.projects.dataSources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: dataSourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_sources
      x-stackQL-method: projects_data_sources_get
      x-stackQL-verb: select
