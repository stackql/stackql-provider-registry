openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Translation API
  description: Integrates text translation into your website or application.
  version: v3
  x-discovery-doc-revision: '20230808'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/translate/docs/quickstarts'
servers:
  - url: 'https://translation.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/cloud-translation': Translate text from one language to another using Google Translate
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListExamplesResponse:
      id: ListExamplesResponse
      description: Response message for ListExamples.
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this token to the page_token field in the ListExamplesRequest to obtain the corresponding page.
          type: string
        examples:
          type: array
          description: The sentence pairs.
          items:
            $ref: '#/components/schemas/Example'
      type: object
    TranslateTextRequest:
      id: TranslateTextRequest
      type: object
      description: The request message for synchronous translation.
      properties:
        transliterationConfig:
          $ref: '#/components/schemas/TransliterationConfig'
          description: Optional. Transliteration to be applied.
        targetLanguageCode:
          description: 'Required. The ISO-639 language code to use for translation of the input text, set to one of the language codes listed in Language Support.'
          type: string
        glossaryConfig:
          description: 'Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned.'
          $ref: '#/components/schemas/TranslateTextGlossaryConfig'
        contents:
          type: array
          items:
            type: string
          description: 'Required. The content of the input in string format. We recommend the total content be less than 30,000 codepoints. The max length of this field is 1024. Use BatchTranslateText for larger text.'
        mimeType:
          type: string
          description: 'Optional. The format of the source text, for example, "text/html", "text/plain". If left blank, the MIME type defaults to "text/html".'
        labels:
          type: object
          description: 'Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.'
          additionalProperties:
            type: string
        sourceLanguageCode:
          description: 'Optional. The ISO-639 language code of the input text if known, for example, "en-US" or "sr-Latn". Supported language codes are listed in Language Support. If the source language isn''t specified, the API attempts to identify the source language automatically and returns the source language within the response.'
          type: string
        model:
          type: string
          description: 'Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, For global (non-regionalized) requests, use `location-id` `global`. For example, `projects/{project-number-or-id}/locations/global/models/general/nmt`. If not provided, the default Google model (NMT) will be used'
    BatchDocumentInputConfig:
      id: BatchDocumentInputConfig
      properties:
        gcsSource:
          $ref: '#/components/schemas/GcsSource'
          description: 'Google Cloud Storage location for the source input. This can be a single file (for example, `gs://translation-test/input.docx`) or a wildcard (for example, `gs://translation-test/*`). File mime type is determined based on extension. Supported mime type includes: - `pdf`, application/pdf - `docx`, application/vnd.openxmlformats-officedocument.wordprocessingml.document - `pptx`, application/vnd.openxmlformats-officedocument.presentationml.presentation - `xlsx`, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet The max file size to support for `.docx`, `.pptx` and `.xlsx` is 100MB. The max file size to support for `.pdf` is 1GB and the max page limit is 1000 pages. The max file size to support for all input documents is 1GB.'
      type: object
      description: Input configuration for BatchTranslateDocument request.
    DatasetOutputConfig:
      type: object
      properties:
        gcsDestination:
          description: Google Cloud Storage destination to write the output.
          $ref: '#/components/schemas/GcsOutputDestination'
      id: DatasetOutputConfig
      description: Output configuration for datasets.
    RomanizeTextResponse:
      id: RomanizeTextResponse
      properties:
        romanizations:
          type: array
          items:
            $ref: '#/components/schemas/Romanization'
          description: Text romanization responses. This field has the same length as `contents`.
      description: The response message for synchronous romanization.
      type: object
    OutputConfig:
      properties:
        gcsDestination:
          description: 'Google Cloud Storage destination for output content. For every single input file (for example, gs://a/b/c.[extension]), we generate at most 2 * n output files. (n is the # of target_language_codes in the BatchTranslateTextRequest). Output files (tsv) generated are compliant with RFC 4180 except that record delimiters are ''\n'' instead of ''\r\n''. We don''t provide any way to change record delimiters. While the input files are being processed, we write/update an index file ''index.csv'' under ''output_uri_prefix'' (for example, gs://translation-test/index.csv) The index file is generated/updated as new files are being translated. The format is: input_file,target_language_code,translations_file,errors_file, glossary_translations_file,glossary_errors_file input_file is one file we matched using gcs_source.input_uri. target_language_code is provided in the request. translations_file contains the translations. (details provided below) errors_file contains the errors during processing of the file. (details below). Both translations_file and errors_file could be empty strings if we have no content to output. glossary_translations_file and glossary_errors_file are always empty strings if the input_file is tsv. They could also be empty if we have no content to output. Once a row is present in index.csv, the input/output matching never changes. Callers should also expect all the content in input_file are processed and ready to be consumed (that is, no partial output file is written). Since index.csv will be keeping updated during the process, please make sure there is no custom retention policy applied on the output bucket that may avoid file updating. (https://cloud.google.com/storage/docs/bucket-lock#retention-policy) The format of translations_file (for target language code ''trg'') is: `gs://translation_test/a_b_c_''trg''_translations.[extension]` If the input file extension is tsv, the output has the following columns: Column 1: ID of the request provided in the input, if it''s not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: translation without applying a glossary. Empty string if there is an error. Column 4 (only present if a glossary is provided in the request): translation after applying the glossary. Empty string if there is an error applying the glossary. Could be same string as column 3 if there is no glossary applied. If input file extension is a txt or html, the translation is directly written to the output file. If glossary is requested, a separate glossary_translations_file has format of `gs://translation_test/a_b_c_''trg''_glossary_translations.[extension]` The format of errors file (for target language code ''trg'') is: `gs://translation_test/a_b_c_''trg''_errors.[extension]` If the input file extension is tsv, errors_file contains the following: Column 1: ID of the request provided in the input, if it''s not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: Error detail for the translation. Could be empty. Column 4 (only present if a glossary is provided in the request): Error when applying the glossary. If the input file extension is txt or html, glossary_error_file will be generated that contains error details. glossary_error_file has format of `gs://translation_test/a_b_c_''trg''_glossary_errors.[extension]`'
          $ref: '#/components/schemas/GcsDestination'
      id: OutputConfig
      type: object
      description: Output configuration for BatchTranslateText request.
    GcsOutputDestination:
      type: object
      properties:
        outputUriPrefix:
          type: string
          description: 'Required. Google Cloud Storage URI to output directory. For example, `gs://bucket/directory`. The requesting user must have write permission to the bucket. The directory will be created if it doesn''t exist.'
      description: The Google Cloud Storage location for the output content.
      id: GcsOutputDestination
    ListGlossaryEntriesResponse:
      id: ListGlossaryEntriesResponse
      properties:
        nextPageToken:
          type: string
          description: 'Optional. A token to retrieve a page of results. Pass this value in the [ListGLossaryEntriesRequest.page_token] field in the subsequent calls.'
        glossaryEntries:
          items:
            $ref: '#/components/schemas/GlossaryEntry'
          type: array
          description: Optional. The Glossary Entries
      type: object
      description: Response message for ListGlossaryEntries
    GcsSource:
      type: object
      description: The Google Cloud Storage location for the input content.
      id: GcsSource
      properties:
        inputUri:
          type: string
          description: 'Required. Source data URI. For example, `gs://my_bucket/my_object`.'
    DetectedLanguage:
      description: The response message for language detection.
      properties:
        languageCode:
          type: string
          description: 'The ISO-639 language code of the source content in the request, detected automatically.'
        confidence:
          type: number
          description: The confidence of the detection result for this language.
          format: float
      id: DetectedLanguage
      type: object
    SupportedLanguage:
      properties:
        supportSource:
          type: boolean
          description: Can be used as a source language.
        supportTarget:
          description: Can be used as a target language.
          type: boolean
        displayName:
          description: Human-readable name of the language localized in the display language specified in the request.
          type: string
        languageCode:
          type: string
          description: 'Supported language code, generally consisting of its ISO 639-1 identifier, for example, ''en'', ''ja''. In certain cases, ISO-639 codes including language and region identifiers are returned (for example, ''zh-TW'' and ''zh-CN'').'
      description: A single supported language response corresponds to information related to one supported language.
      type: object
      id: SupportedLanguage
    GlossaryTerm:
      description: Represents a single glossary term
      type: object
      id: GlossaryTerm
      properties:
        text:
          description: The text for the glossary term.
          type: string
        languageCode:
          description: The language for this glossary term.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
      type: object
    GcsInputSource:
      id: GcsInputSource
      description: The Google Cloud Storage location for the input content.
      type: object
      properties:
        inputUri:
          description: 'Required. Source data URI. For example, `gs://my_bucket/my_object`.'
          type: string
    ListModelsResponse:
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this token to the page_token field in the ListModelsRequest to obtain the corresponding page.
          type: string
        models:
          type: array
          description: The models read.
          items:
            $ref: '#/components/schemas/Model'
      id: ListModelsResponse
      description: Response message for ListModels.
    ExportDataRequest:
      description: Request message for ExportData.
      id: ExportDataRequest
      properties:
        outputConfig:
          description: Required. The config for the output content.
          $ref: '#/components/schemas/DatasetOutputConfig'
      type: object
    DetectLanguageResponse:
      type: object
      id: DetectLanguageResponse
      description: The response message for language detection.
      properties:
        languages:
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          type: array
          description: 'The most probable language detected by the Translation API. For each request, the Translation API will always return only one result.'
    Glossary:
      type: object
      description: Represents a glossary built from user-provided data.
      id: Glossary
      properties:
        displayName:
          type: string
          description: Optional. The display name of the glossary.
        submitTime:
          readOnly: true
          format: google-datetime
          description: Output only. When CreateGlossary was called.
          type: string
        languageCodesSet:
          $ref: '#/components/schemas/LanguageCodesSet'
          description: Used with equivalent term set glossaries.
        name:
          type: string
          description: 'Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.'
        entryCount:
          type: integer
          readOnly: true
          description: Output only. The number of entries defined in the glossary.
          format: int32
        languagePair:
          $ref: '#/components/schemas/LanguageCodePair'
          description: Used with unidirectional glossaries.
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When the glossary creation was finished.
        inputConfig:
          $ref: '#/components/schemas/GlossaryInputConfig'
          description: Required. Provides examples to build the glossary from. Total glossary must not exceed 10M Unicode codepoints.
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    Status:
      type: object
      properties:
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: CancelOperationRequest
    LanguageCodesSet:
      type: object
      description: Used with equivalent term set glossaries.
      id: LanguageCodesSet
      properties:
        languageCodes:
          description: The ISO-639 language code(s) for terms defined in the glossary. All entries are unique. The list contains at least two entries. Expected to be an exact match for GlossaryTerm.language_code.
          items:
            type: string
          type: array
    TranslateDocumentRequest:
      description: A document translation request.
      type: object
      properties:
        documentInputConfig:
          description: Required. Input configurations.
          $ref: '#/components/schemas/DocumentInputConfig'
        sourceLanguageCode:
          type: string
          description: 'Optional. The ISO-639 language code of the input document if known, for example, "en-US" or "sr-Latn". Supported language codes are listed in Language Support. If the source language isn''t specified, the API attempts to identify the source language automatically and returns the source language within the response. Source language must be specified if the request contains a glossary or a custom model.'
        enableShadowRemovalNativePdf:
          description: 'Optional. If true, use the text removal server to remove the shadow text on background image for native pdf translation. Shadow removal feature can only be enabled when is_translate_native_pdf_only: false && pdf_native_only: false'
          type: boolean
        targetLanguageCode:
          type: string
          description: 'Required. The ISO-639 language code to use for translation of the input document, set to one of the language codes listed in Language Support.'
        customizedAttribution:
          type: string
          description: 'Optional. This flag is to support user customized attribution. If not provided, the default is `Machine Translated by Google`. Customized attribution should follow rules in https://cloud.google.com/translate/attribution#attribution_and_logos'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.'
        enableRotationCorrection:
          type: boolean
          description: 'Optional. If true, enable auto rotation correction in DVS.'
        glossaryConfig:
          description: 'Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned.'
          $ref: '#/components/schemas/TranslateTextGlossaryConfig'
        model:
          description: 'Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If not provided, the default Google model (NMT) will be used for translation.'
          type: string
        isTranslateNativePdfOnly:
          description: 'Optional. is_translate_native_pdf_only field for external customers. If true, the page limit of online native pdf translation is 300 and only native pdf pages will be translated.'
          type: boolean
        documentOutputConfig:
          description: Optional. Output configurations. Defines if the output file should be stored within Cloud Storage as well as the desired output format. If not provided the translated file will only be returned through a byte-stream and its output mime type will be the same as the input file's mime type.
          $ref: '#/components/schemas/DocumentOutputConfig'
      id: TranslateDocumentRequest
    TranslateTextResponse:
      id: TranslateTextResponse
      properties:
        translations:
          type: array
          description: Text translation responses with no glossary applied. This field has the same length as `contents`.
          items:
            $ref: '#/components/schemas/Translation'
        glossaryTranslations:
          items:
            $ref: '#/components/schemas/Translation'
          type: array
          description: Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.
      type: object
    SupportedLanguages:
      description: The response message for discovering supported languages.
      properties:
        languages:
          items:
            $ref: '#/components/schemas/SupportedLanguage'
          description: A list of supported language responses. This list contains an entry for each language the Translation API supports.
          type: array
      id: SupportedLanguages
      type: object
    InputFile:
      type: object
      description: An input file.
      properties:
        usage:
          description: 'Optional. Usage of the file contents. Options are TRAIN|VALIDATION|TEST, or UNASSIGNED (by default) for auto split.'
          type: string
        gcsSource:
          description: Google Cloud Storage file source.
          $ref: '#/components/schemas/GcsInputSource'
      id: InputFile
    ListDatasetsResponse:
      type: object
      id: ListDatasetsResponse
      properties:
        datasets:
          type: array
          description: The datasets read.
          items:
            $ref: '#/components/schemas/Dataset'
        nextPageToken:
          type: string
          description: A token to retrieve next page of results. Pass this token to the page_token field in the ListDatasetsRequest to obtain the corresponding page.
      description: Response message for ListDatasets.
    ImportDataRequest:
      properties:
        inputConfig:
          description: Required. The config for the input content.
          $ref: '#/components/schemas/DatasetInputConfig'
      id: ImportDataRequest
      type: object
      description: Request message for ImportData.
    Operation:
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
      id: Operation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
    GcsDestination:
      type: object
      id: GcsDestination
      properties:
        outputUriPrefix:
          type: string
          description: 'Required. The bucket used in ''output_uri_prefix'' must exist and there must be no files under ''output_uri_prefix''. ''output_uri_prefix'' must end with "/" and start with "gs://". One ''output_uri_prefix'' can only be used by one batch translation job at a time. Otherwise an INVALID_ARGUMENT (400) error is returned.'
      description: The Google Cloud Storage location for the output content.
    DetectLanguageRequest:
      properties:
        content:
          description: The content of the input stored as a string.
          type: string
        model:
          type: string
          description: 'Optional. The language detection model to be used. Format: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}` Only one language detection model is currently supported: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`. If not specified, the default model is used.'
        labels:
          description: 'Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.'
          type: object
          additionalProperties:
            type: string
        mimeType:
          description: 'Optional. The format of the source text, for example, "text/html", "text/plain". If left blank, the MIME type defaults to "text/html".'
          type: string
      id: DetectLanguageRequest
      type: object
      description: The request message for language detection.
    DatasetInputConfig:
      properties:
        inputFiles:
          description: Files containing the sentence pairs to be imported to the dataset.
          items:
            $ref: '#/components/schemas/InputFile'
          type: array
      type: object
      description: Input configuration for datasets.
      id: DatasetInputConfig
    DocumentOutputConfig:
      type: object
      properties:
        mimeType:
          type: string
          description: 'Optional. Specifies the translated document''s mime_type. If not specified, the translated file''s mime type will be the same as the input file''s mime type. Currently only support the output mime type to be the same as input mime type. - application/pdf - application/vnd.openxmlformats-officedocument.wordprocessingml.document - application/vnd.openxmlformats-officedocument.presentationml.presentation - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        gcsDestination:
          description: 'Optional. Google Cloud Storage destination for the translation output, e.g., `gs://my_bucket/my_directory/`. The destination directory provided does not have to be empty, but the bucket must exist. If a file with the same name as the output file already exists in the destination an error will be returned. For a DocumentInputConfig.contents provided document, the output file will have the name "output_[trg]_translations.[ext]", where - [trg] corresponds to the translated file''s language code, - [ext] corresponds to the translated file''s extension according to its mime type. For a DocumentInputConfig.gcs_uri provided document, the output file will have a name according to its URI. For example: an input file with URI: `gs://a/b/c.[extension]` stored in a gcs_destination bucket with name "my_bucket" will have an output URI: `gs://my_bucket/a_b_c_[trg]_translations.[ext]`, where - [trg] corresponds to the translated file''s language code, - [ext] corresponds to the translated file''s extension according to its mime type. If the document was directly provided through the request, then the output document will have the format: `gs://my_bucket/translated_document_[trg]_translations.[ext]`, where - [trg] corresponds to the translated file''s language code, - [ext] corresponds to the translated file''s extension according to its mime type. If a glossary was provided, then the output URI for the glossary translation will be equal to the default output URI but have `glossary_translations` instead of `translations`. For the previous example, its glossary URI would be: `gs://my_bucket/a_b_c_[trg]_glossary_translations.[ext]`. Thus the max number of output files will be 2 (Translated document, Glossary translated document). Callers should expect no partial outputs. If there is any error during document translation, no output will be stored in the Cloud Storage bucket.'
          $ref: '#/components/schemas/GcsDestination'
      description: A document translation request output config.
      id: DocumentOutputConfig
    GlossaryEntry:
      properties:
        termsSet:
          $ref: '#/components/schemas/GlossaryTermsSet'
          description: Used for an equivalent term sets glossary.
        termsPair:
          $ref: '#/components/schemas/GlossaryTermsPair'
          description: Used for an unidirectional glossary.
        name:
          description: 'Required. The resource name of the entry. Format: "projects/*/locations/*/glossaries/*/glossaryEntries/*"'
          type: string
        description:
          description: Describes the glossary entry.
          type: string
      description: Represents a single entry in a glossary.
      type: object
      id: GlossaryEntry
    InputConfig:
      properties:
        mimeType:
          description: 'Optional. Can be "text/plain" or "text/html". For `.tsv`, "text/html" is used if mime_type is missing. For `.html`, this field must be "text/html" or empty. For `.txt`, this field must be "text/plain" or empty.'
          type: string
        gcsSource:
          description: 'Required. Google Cloud Storage location for the source input. This can be a single file (for example, `gs://translation-test/input.tsv`) or a wildcard (for example, `gs://translation-test/*`). If a file extension is `.tsv`, it can contain either one or two columns. The first column (optional) is the id of the text request. If the first column is missing, we use the row number (0-based) from the input file as the ID in the output file. The second column is the actual text to be translated. We recommend each row be <= 10K Unicode codepoints, otherwise an error might be returned. Note that the input tsv must be RFC 4180 compliant. You could use https://github.com/Clever/csvlint to check potential formatting errors in your tsv file. csvlint --delimiter=''\t'' your_input_file.tsv The other supported file extensions are `.txt` or `.html`, which is treated as a single large chunk of text.'
          $ref: '#/components/schemas/GcsSource'
      description: Input configuration for BatchTranslateText request.
      type: object
      id: InputConfig
    GlossaryTermsSet:
      properties:
        terms:
          items:
            $ref: '#/components/schemas/GlossaryTerm'
          type: array
          description: Each term in the set represents a term that can be replaced by the other terms.
      id: GlossaryTermsSet
      description: Represents a single entry for an equivalent term set glossary. This is used for equivalent term sets where each term can be replaced by the other terms in the set.
      type: object
    LanguageCodePair:
      type: object
      id: LanguageCodePair
      properties:
        targetLanguageCode:
          type: string
          description: 'Required. The ISO-639 language code for translation output, for example, "zh-CN". Expected to be an exact match for GlossaryTerm.language_code.'
        sourceLanguageCode:
          type: string
          description: 'Required. The ISO-639 language code of the input text, for example, "en-US". Expected to be an exact match for GlossaryTerm.language_code.'
      description: Used with unidirectional glossaries.
    Example:
      type: object
      description: A sentence pair.
      id: Example
      properties:
        name:
          type: string
          description: 'Output only. The resource name of the example, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}/examples/{example_id}'''
          readOnly: true
        targetText:
          type: string
          description: Sentence in target language.
        usage:
          readOnly: true
          type: string
          description: Output only. Usage of the sentence pair. Options are TRAIN|VALIDATION|TEST.
        sourceText:
          description: Sentence in source language.
          type: string
    BatchTranslateDocumentRequest:
      properties:
        enableShadowRemovalNativePdf:
          type: boolean
          description: 'Optional. If true, use the text removal server to remove the shadow text on background image for native pdf translation. Shadow removal feature can only be enabled when is_translate_native_pdf_only: false && pdf_native_only: false'
        targetLanguageCodes:
          description: Required. The ISO-639 language code to use for translation of the input document. Specify up to 10 language codes here.
          type: array
          items:
            type: string
        inputConfigs:
          description: Required. Input configurations. The total number of files matched should be <= 100. The total content size to translate should be <= 100M Unicode codepoints. The files must use UTF-8 encoding.
          type: array
          items:
            $ref: '#/components/schemas/BatchDocumentInputConfig'
        enableRotationCorrection:
          description: 'Optional. If true, enable auto rotation correction in DVS.'
          type: boolean
        models:
          additionalProperties:
            type: string
          description: 'Optional. The models to use for translation. Map''s key is target language code. Map''s value is the model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.'
          type: object
        outputConfig:
          $ref: '#/components/schemas/BatchDocumentOutputConfig'
          description: 'Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don''t generate output for duplicate inputs.'
        glossaries:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TranslateTextGlossaryConfig'
          description: Optional. Glossaries to be applied. It's keyed by target language code.
        customizedAttribution:
          description: 'Optional. This flag is to support user customized attribution. If not provided, the default is `Machine Translated by Google`. Customized attribution should follow rules in https://cloud.google.com/translate/attribution#attribution_and_logos'
          type: string
        formatConversions:
          type: object
          description: Optional.
          additionalProperties:
            type: string
        sourceLanguageCode:
          type: string
          description: 'Required. The ISO-639 language code of the input document if known, for example, "en-US" or "sr-Latn". Supported language codes are listed in [Language Support](https://cloud.google.com/translate/docs/languages).'
      id: BatchTranslateDocumentRequest
      type: object
      description: The BatchTranslateDocument request.
    TranslateDocumentResponse:
      type: object
      id: TranslateDocumentResponse
      description: A translated document response message.
      properties:
        documentTranslation:
          $ref: '#/components/schemas/DocumentTranslation'
          description: Translated document.
        glossaryDocumentTranslation:
          description: 'The document''s translation output if a glossary is provided in the request. This can be the same as [TranslateDocumentResponse.document_translation] if no glossary terms apply.'
          $ref: '#/components/schemas/DocumentTranslation'
        model:
          description: 'Only present when ''model'' is present in the request. ''model'' is normalized to have a project number. For example: If the ''model'' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.'
          type: string
        glossaryConfig:
          $ref: '#/components/schemas/TranslateTextGlossaryConfig'
          description: The `glossary_config` used for this translation.
    Translation:
      type: object
      description: A single translation response.
      id: Translation
      properties:
        detectedLanguageCode:
          type: string
          description: 'The ISO-639 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty.'
        translatedText:
          type: string
          description: 'Text translated into the target language. If an error occurs during translation, this field might be excluded from the response.'
        model:
          type: string
          description: 'Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.'
        glossaryConfig:
          $ref: '#/components/schemas/TranslateTextGlossaryConfig'
          description: The `glossary_config` used for this translation.
    GlossaryTermsPair:
      description: Represents a single entry for an unidirectional glossary.
      properties:
        targetTerm:
          $ref: '#/components/schemas/GlossaryTerm'
          description: The term that will replace the match source term.
        sourceTerm:
          $ref: '#/components/schemas/GlossaryTerm'
          description: 'The source term is the term that will get match in the text,'
      type: object
      id: GlossaryTermsPair
    DocumentTranslation:
      id: DocumentTranslation
      type: object
      description: A translated document message.
      properties:
        detectedLanguageCode:
          type: string
          description: 'The detected language for the input document. If the user did not provide the source language for the input document, this field will have the language code automatically detected. If the source language was passed, auto-detection of the language does not occur and this field is empty.'
        byteStreamOutputs:
          description: The array of translated documents. It is expected to be size 1 for now. We may produce multiple translated documents in the future for other type of file formats.
          items:
            format: byte
            type: string
          type: array
        mimeType:
          type: string
          description: The translated document's mime type.
    WaitOperationRequest:
      properties:
        timeout:
          format: google-duration
          type: string
          description: 'The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.'
      id: WaitOperationRequest
      description: The request message for Operations.WaitOperation.
      type: object
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
    RomanizeTextRequest:
      id: RomanizeTextRequest
      properties:
        sourceLanguageCode:
          type: string
          description: 'Optional. The ISO-639 language code of the input text if known, for example, "hi" or "zh". If the source language isn''t specified, the API attempts to identify the source language automatically and returns the source language for each content in the response.'
        contents:
          items:
            type: string
          type: array
          description: Required. The content of the input in string format.
      description: The request message for synchronous romanization.
      type: object
    BatchTranslateTextRequest:
      type: object
      properties:
        models:
          additionalProperties:
            type: string
          description: 'Optional. The models to use for translation. Map''s key is target language code. Map''s value is model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.'
          type: object
        glossaries:
          type: object
          description: Optional. Glossaries to be applied for translation. It's keyed by target language code.
          additionalProperties:
            $ref: '#/components/schemas/TranslateTextGlossaryConfig'
        inputConfigs:
          items:
            $ref: '#/components/schemas/InputConfig'
          description: Required. Input configurations. The total number of files matched should be <= 100. The total content size should be <= 100M Unicode codepoints. The files must use UTF-8 encoding.
          type: array
        targetLanguageCodes:
          type: array
          description: Required. Specify up to 10 language codes here.
          items:
            type: string
        sourceLanguageCode:
          description: Required. Source language code.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.'
        outputConfig:
          description: 'Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don''t generate output for duplicate inputs.'
          $ref: '#/components/schemas/OutputConfig'
      description: The batch translation request.
      id: BatchTranslateTextRequest
    TranslateTextGlossaryConfig:
      properties:
        glossary:
          description: 'Required. The `glossary` to be applied for this translation. The format depends on the glossary: - User-provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`'
          type: string
        ignoreCase:
          description: Optional. Indicates match is case insensitive. The default value is `false` if missing.
          type: boolean
      description: Configures which glossary is used for a specific target language and defines options for applying that glossary.
      id: TranslateTextGlossaryConfig
      type: object
    GlossaryInputConfig:
      properties:
        gcsSource:
          description: 'Required. Google Cloud Storage location of glossary data. File format is determined based on the filename extension. API returns [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file formats. Wildcards are not allowed. This must be a single file in one of the following formats: For unidirectional glossaries: - TSV/CSV (`.tsv`/`.csv`): Two column file, tab- or comma-separated. The first column is source text. The second column is target text. No headers in this file. The first row contains data and not column names. - TMX (`.tmx`): TMX file with parallel data defining source/target term pairs. For equivalent term sets glossaries: - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms in multiple languages. See documentation for more information - [glossaries](https://cloud.google.com/translate/docs/advanced/glossary).'
          $ref: '#/components/schemas/GcsSource'
      description: Input configuration for glossaries.
      type: object
      id: GlossaryInputConfig
    TransliterationConfig:
      type: object
      id: TransliterationConfig
      properties:
        enableTransliteration:
          description: 'If true, source text in romanized form can be translated to the target language.'
          type: boolean
      description: Configures transliteration feature on top of translation.
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    BatchDocumentOutputConfig:
      type: object
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GcsDestination'
          description: 'Google Cloud Storage destination for output content. For every single input document (for example, gs://a/b/c.[extension]), we generate at most 2 * n output files. (n is the # of target_language_codes in the BatchTranslateDocumentRequest). While the input documents are being processed, we write/update an index file `index.csv` under `gcs_destination.output_uri_prefix` (for example, gs://translation_output/index.csv) The index file is generated/updated as new files are being translated. The format is: input_document,target_language_code,translation_output,error_output, glossary_translation_output,glossary_error_output `input_document` is one file we matched using gcs_source.input_uri. `target_language_code` is provided in the request. `translation_output` contains the translations. (details provided below) `error_output` contains the error message during processing of the file. Both translations_file and errors_file could be empty strings if we have no content to output. `glossary_translation_output` and `glossary_error_output` are the translated output/error when we apply glossaries. They could also be empty if we have no content to output. Once a row is present in index.csv, the input/output matching never changes. Callers should also expect all the content in input_file are processed and ready to be consumed (that is, no partial output file is written). Since index.csv will be keeping updated during the process, please make sure there is no custom retention policy applied on the output bucket that may avoid file updating. (https://cloud.google.com/storage/docs/bucket-lock#retention-policy) The naming format of translation output files follows (for target language code [trg]): `translation_output`: `gs://translation_output/a_b_c_[trg]_translation.[extension]` `glossary_translation_output`: `gs://translation_test/a_b_c_[trg]_glossary_translation.[extension]`. The output document will maintain the same file format as the input document. The naming format of error output files follows (for target language code [trg]): `error_output`: `gs://translation_test/a_b_c_[trg]_errors.txt` `glossary_error_output`: `gs://translation_test/a_b_c_[trg]_glossary_translation.txt`. The error output is a txt file containing error details.'
      description: Output configuration for BatchTranslateDocument request.
      id: BatchDocumentOutputConfig
    Model:
      id: Model
      properties:
        createTime:
          description: 'Output only. Timestamp when the model resource was created, which is also when the training started.'
          format: google-datetime
          readOnly: true
          type: string
        trainExampleCount:
          description: Output only. Number of examples (sentence pairs) used to train the model.
          format: int32
          type: integer
          readOnly: true
        targetLanguageCode:
          type: string
          description: Output only. The BCP-47 language code of the target language.
          readOnly: true
        name:
          type: string
          description: 'The resource name of the model, in form of `projects/{project-number-or-id}/locations/{location_id}/models/{model_id}`'
        displayName:
          description: 'The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.'
          type: string
        sourceLanguageCode:
          type: string
          description: Output only. The BCP-47 language code of the source language.
          readOnly: true
        testExampleCount:
          readOnly: true
          format: int32
          type: integer
          description: Output only. Number of examples (sentence pairs) used to test the model.
        validateExampleCount:
          format: int32
          readOnly: true
          description: Output only. Number of examples (sentence pairs) used to validate the model.
          type: integer
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this model was last updated.
        dataset:
          type: string
          description: 'The dataset from which the model is trained, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`'
      type: object
      description: A trained translation model.
    DocumentInputConfig:
      properties:
        gcsSource:
          $ref: '#/components/schemas/GcsSource'
          description: 'Google Cloud Storage location. This must be a single file. For example: gs://example_bucket/example_file.pdf'
        content:
          type: string
          description: Document's content represented as a stream of bytes.
          format: byte
        mimeType:
          type: string
          description: 'Specifies the input document''s mime_type. If not specified it will be determined using the file extension for gcs_source provided files. For a file provided through bytes content the mime_type must be provided. Currently supported mime types are: - application/pdf - application/vnd.openxmlformats-officedocument.wordprocessingml.document - application/vnd.openxmlformats-officedocument.presentationml.presentation - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      id: DocumentInputConfig
      description: A document translation request input config.
      type: object
    ListGlossariesResponse:
      description: Response message for ListGlossaries.
      type: object
      properties:
        glossaries:
          items:
            $ref: '#/components/schemas/Glossary'
          type: array
          description: The list of glossaries for a project.
        nextPageToken:
          description: 'A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.'
          type: string
      id: ListGlossariesResponse
    Romanization:
      description: A single romanization response.
      id: Romanization
      type: object
      properties:
        romanizedText:
          description: 'Romanized text. If an error occurs during romanization, this field might be excluded from the response.'
          type: string
        detectedLanguageCode:
          type: string
          description: 'The ISO-639 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty.'
    Dataset:
      type: object
      id: Dataset
      description: A dataset that hosts the examples (sentence pairs) used for translation models.
      properties:
        displayName:
          description: 'The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.'
          type: string
        exampleCount:
          readOnly: true
          format: int32
          description: Output only. The number of examples in the dataset.
          type: integer
        targetLanguageCode:
          description: The BCP-47 language code of the target language.
          type: string
        validateExampleCount:
          readOnly: true
          type: integer
          format: int32
          description: Output only. Number of validation examples (sentence pairs).
        trainExampleCount:
          type: integer
          description: Output only. Number of training examples (sentence pairs).
          format: int32
          readOnly: true
        testExampleCount:
          type: integer
          format: int32
          description: Output only. Number of test examples (sentence pairs).
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Timestamp when this dataset was created.
        sourceLanguageCode:
          type: string
          description: The BCP-47 language code of the source language.
        name:
          description: 'The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`'
          type: string
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp when this dataset was last updated.
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    glossary_entries:
      id: google.translate.glossary_entries
      name: glossary_entries
      title: Glossary Entries
      methods:
        projects_locations_glossaries_glossary_entries_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries~1{glossaryEntriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_glossary_entries_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries~1{glossaryEntriesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_glossary_entries_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries~1{glossaryEntriesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_glossary_entries_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_glossary_entries_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.glossaryEntries
        _projects_locations_glossaries_glossary_entries_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1glossaryEntries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/glossary_entries/methods/projects_locations_glossaries_glossary_entries_get'
          - $ref: '#/components/x-stackQL-resources/glossary_entries/methods/projects_locations_glossaries_glossary_entries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/glossary_entries/methods/projects_locations_glossaries_glossary_entries_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/glossary_entries/methods/projects_locations_glossaries_glossary_entries_delete'
    glossaries:
      id: google.translate.glossaries
      name: glossaries
      title: Glossaries
      methods:
        projects_locations_glossaries_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_patch:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.glossaries
        _projects_locations_glossaries_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/glossaries/methods/projects_locations_glossaries_get'
          - $ref: '#/components/x-stackQL-resources/glossaries/methods/projects_locations_glossaries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/glossaries/methods/projects_locations_glossaries_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/glossaries/methods/projects_locations_glossaries_delete'
    examples:
      id: google.translate.examples
      name: examples
      title: Examples
      methods:
        projects_locations_datasets_examples_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1examples/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.examples
        _projects_locations_datasets_examples_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}~1examples/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/examples/methods/projects_locations_datasets_examples_list'
        insert: []
        update: []
        delete: []
    datasets:
      id: google.translate.datasets
      name: datasets
      title: Datasets
      methods:
        projects_locations_datasets_export_data:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:exportData/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_datasets_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_datasets_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_datasets_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_datasets_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.datasets
        _projects_locations_datasets_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_datasets_import_data:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1datasets~1{datasetsId}:importData/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/projects_locations_datasets_get'
          - $ref: '#/components/x-stackQL-resources/datasets/methods/projects_locations_datasets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/projects_locations_datasets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/projects_locations_datasets_delete'
    models:
      id: google.translate.models
      name: models
      title: Models
      methods:
        projects_locations_models_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_models_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1models~1{modelsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_models_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1models/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.models
        _projects_locations_models_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1models/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_models_create:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1models/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/models/methods/projects_locations_models_get'
          - $ref: '#/components/x-stackQL-resources/models/methods/projects_locations_models_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/models/methods/projects_locations_models_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/models/methods/projects_locations_models_delete'
    operations:
      id: google.translate.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_wait:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:wait/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    locations:
      id: google.translate.locations
      name: locations
      title: Locations
      methods:
        projects_locations_romanize_text:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:romanizeText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_translate_document:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:translateDocument/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batch_translate_text:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:batchTranslateText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_detect_language:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:detectLanguage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_translate_text:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:translateText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_batch_translate_document:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}:batchTranslateDocument/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    supported_languages:
      id: google.translate.supported_languages
      name: supported_languages
      title: Supported Languages
      methods:
        projects_locations_get_supported_languages:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1supportedLanguages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_get_supported_languages:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1supportedLanguages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/supported_languages/methods/projects_locations_get_supported_languages'
          - $ref: '#/components/x-stackQL-resources/supported_languages/methods/projects_get_supported_languages'
        insert: []
        update: []
        delete: []
    projects:
      id: google.translate.projects
      name: projects
      title: Projects
      methods:
        projects_detect_language:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:detectLanguage/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_translate_text:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:translateText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_romanize_text:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}:romanizeText/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v3/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/glossaryEntries/{glossaryEntriesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Gets a single glossary entry by the given id.
      operationId: translate.projects.locations.glossaries.glossaryEntries.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: glossaryEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossary_entries
      x-stackQL-method: projects_locations_glossaries_glossary_entries_get
      x-stackQL-verb: select
    delete:
      description: Deletes a single entry from the glossary
      operationId: translate.projects.locations.glossaries.glossaryEntries.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: glossaryEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossary_entries
      x-stackQL-method: projects_locations_glossaries_glossary_entries_delete
      x-stackQL-verb: delete
    patch:
      description: Updates a glossary entry.
      operationId: translate.projects.locations.glossaries.glossaryEntries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlossaryEntry'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: glossaryEntriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossary_entries
      x-stackQL-method: projects_locations_glossaries_glossary_entries_patch
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/glossaryEntries':
    parameters: *ref_1
    post:
      description: Creates a glossary entry.
      operationId: translate.projects.locations.glossaries.glossaryEntries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlossaryEntry'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossary_entries
      x-stackQL-method: projects_locations_glossaries_glossary_entries_create
      x-stackQL-verb: insert
    get:
      description: List the entries for the glossary.
      operationId: translate.projects.locations.glossaries.glossaryEntries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGlossaryEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: glossary_entries
      x-stackQL-method: projects_locations_glossaries_glossary_entries_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.glossaryEntries
  '/v3/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a glossary, or cancels glossary construction if the glossary isn''t created yet. Returns NOT_FOUND, if the glossary doesn''t exist.'
      operationId: translate.projects.locations.glossaries.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossaries
      x-stackQL-method: projects_locations_glossaries_delete
      x-stackQL-verb: delete
    patch:
      description: Updates a glossary. A LRO is used since the update can be async if the glossary's entry file is updated.
      operationId: translate.projects.locations.glossaries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Glossary'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: glossaries
      x-stackQL-method: projects_locations_glossaries_patch
      x-stackQL-verb: exec
    get:
      description: 'Gets a glossary. Returns NOT_FOUND, if the glossary doesn''t exist.'
      operationId: translate.projects.locations.glossaries.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Glossary'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossaries
      x-stackQL-method: projects_locations_glossaries_get
      x-stackQL-verb: select
  '/v3/projects/{projectsId}/locations/{locationsId}/glossaries':
    parameters: *ref_1
    get:
      description: 'Lists glossaries in a project. Returns NOT_FOUND, if the project doesn''t exist.'
      operationId: translate.projects.locations.glossaries.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGlossariesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: glossaries
      x-stackQL-method: projects_locations_glossaries_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.glossaries
    post:
      description: 'Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if the project doesn''t exist.'
      operationId: translate.projects.locations.glossaries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Glossary'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: glossaries
      x-stackQL-method: projects_locations_glossaries_create
      x-stackQL-verb: insert
  '/v3/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/examples':
    parameters: *ref_1
    get:
      description: Lists sentence pairs in the dataset.
      operationId: translate.projects.locations.datasets.examples.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExamplesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: examples
      x-stackQL-method: projects_locations_datasets_examples_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.examples
  '/v3/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:exportData':
    parameters: *ref_1
    post:
      description: Exports dataset's data to the provided output location.
      operationId: translate.projects.locations.datasets.exportData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_export_data
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}':
    parameters: *ref_1
    delete:
      description: Deletes a dataset and all of its contents.
      operationId: translate.projects.locations.datasets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_delete
      x-stackQL-verb: delete
    get:
      description: Gets a Dataset.
      operationId: translate.projects.locations.datasets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_get
      x-stackQL-verb: select
  '/v3/projects/{projectsId}/locations/{locationsId}/datasets':
    parameters: *ref_1
    post:
      description: Creates a Dataset.
      operationId: translate.projects.locations.datasets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_create
      x-stackQL-verb: insert
    get:
      description: Lists datasets.
      operationId: translate.projects.locations.datasets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.datasets
  '/v3/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:importData':
    parameters: *ref_1
    post:
      description: Import sentence pairs into translation Dataset.
      operationId: translate.projects.locations.datasets.importData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: datasetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasets
      x-stackQL-method: projects_locations_datasets_import_data
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/models/{modelsId}':
    parameters: *ref_1
    delete:
      description: Deletes a model.
      operationId: translate.projects.locations.models.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: projects_locations_models_delete
      x-stackQL-verb: delete
    get:
      description: Gets a model.
      operationId: translate.projects.locations.models.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: modelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: projects_locations_models_get
      x-stackQL-verb: select
  '/v3/projects/{projectsId}/locations/{locationsId}/models':
    parameters: *ref_1
    get:
      description: Lists models.
      operationId: translate.projects.locations.models.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: models
      x-stackQL-method: projects_locations_models_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.models
    post:
      description: Creates a Model.
      operationId: translate.projects.locations.models.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: models
      x-stackQL-method: projects_locations_models_create
      x-stackQL-verb: insert
  '/v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: translate.projects.locations.operations.wait
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_wait
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: translate.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: translate.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
  '/v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: translate.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: translate.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v3/projects/{projectsId}/locations/{locationsId}:romanizeText':
    parameters: *ref_1
    post:
      description: Romanize input text written in non-Latin scripts to Latin text.
      operationId: translate.projects.locations.romanizeText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RomanizeTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizeTextResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_romanize_text
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}:translateDocument':
    parameters: *ref_1
    post:
      description: Translates documents in synchronous mode.
      operationId: translate.projects.locations.translateDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateDocumentRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateDocumentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_translate_document
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}/supportedLanguages':
    parameters: *ref_1
    get:
      description: Returns a list of supported languages for translation.
      operationId: translate.projects.locations.getSupportedLanguages
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedLanguages'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: displayLanguageCode
          schema:
            type: string
      x-stackQL-resource: supported_languages
      x-stackQL-method: projects_locations_get_supported_languages
      x-stackQL-verb: select
  '/v3/projects/{projectsId}/locations/{locationsId}:batchTranslateText':
    parameters: *ref_1
    post:
      description: 'Translates a large volume of text in asynchronous batch mode. This function provides real-time output as the inputs are being processed. If caller cancels a request, the partial results (for an input file, it''s all or nothing) may still be available on the specified output location. This call returns immediately and you can use google.longrunning.Operation.name to poll the status of the call.'
      operationId: translate.projects.locations.batchTranslateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchTranslateTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_batch_translate_text
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: translate.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v3/projects/{projectsId}/locations/{locationsId}:detectLanguage':
    parameters: *ref_1
    post:
      description: Detects the language of text within a request.
      operationId: translate.projects.locations.detectLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectLanguageRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectLanguageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_detect_language
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}:translateText':
    parameters: *ref_1
    post:
      description: Translates input text and returns translated text.
      operationId: translate.projects.locations.translateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateTextResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_translate_text
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: translate.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: select
  '/v3/projects/{projectsId}/locations/{locationsId}:batchTranslateDocument':
    parameters: *ref_1
    post:
      description: 'Translates a large volume of document in asynchronous batch mode. This function provides real-time output as the inputs are being processed. If caller cancels a request, the partial results (for an input file, it''s all or nothing) may still be available on the specified output location. This call returns immediately and you can use google.longrunning.Operation.name to poll the status of the call.'
      operationId: translate.projects.locations.batchTranslateDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchTranslateDocumentRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_batch_translate_document
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}:detectLanguage':
    parameters: *ref_1
    post:
      description: Detects the language of text within a request.
      operationId: translate.projects.detectLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectLanguageRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectLanguageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_detect_language
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}:translateText':
    parameters: *ref_1
    post:
      description: Translates input text and returns translated text.
      operationId: translate.projects.translateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateTextResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_translate_text
      x-stackQL-verb: exec
  '/v3/projects/{projectsId}/supportedLanguages':
    parameters: *ref_1
    get:
      description: Returns a list of supported languages for translation.
      operationId: translate.projects.getSupportedLanguages
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedLanguages'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: displayLanguageCode
          schema:
            type: string
      x-stackQL-resource: supported_languages
      x-stackQL-method: projects_get_supported_languages
      x-stackQL-verb: select
  '/v3/projects/{projectsId}:romanizeText':
    parameters: *ref_1
    post:
      description: Romanize input text written in non-Latin scripts to Latin text.
      operationId: translate.projects.romanizeText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RomanizeTextRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-translation'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-translation'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizeTextResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: projects_romanize_text
      x-stackQL-verb: exec
