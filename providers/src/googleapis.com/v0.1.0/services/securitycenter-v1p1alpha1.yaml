components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
        - '1'
        - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
        - json
        - media
        - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you
        with API access, quota, and reports. Required unless you provide an OAuth
        2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications.
        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Cve:
      description: 'CVE stands for Common Vulnerabilities and Exposures. More information:
        https://cve.mitre.org'
      properties:
        cvssv3:
          $ref: '#/components/schemas/Cvssv3'
          description: Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document
        id:
          description: The unique identifier for the vulnerability. e.g. CVE-2021-34527
          type: string
        references:
          description: Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      type: object
    Cvssv3:
      description: Common Vulnerability Scoring System version 3.
      properties:
        attackComplexity:
          description: This metric describes the conditions beyond the attacker's
            control that must exist in order to exploit the vulnerability.
          enum:
          - ATTACK_COMPLEXITY_UNSPECIFIED
          - ATTACK_COMPLEXITY_LOW
          - ATTACK_COMPLEXITY_HIGH
          type: string
        attackVector:
          description: Base Metrics Represents the intrinsic characteristics of a
            vulnerability that are constant over time and across user environments.
            This metric reflects the context by which vulnerability exploitation is
            possible.
          enum:
          - ATTACK_VECTOR_UNSPECIFIED
          - ATTACK_VECTOR_NETWORK
          - ATTACK_VECTOR_ADJACENT
          - ATTACK_VECTOR_LOCAL
          - ATTACK_VECTOR_PHYSICAL
          type: string
        availabilityImpact:
          description: This metric measures the impact to the availability of the
            impacted component resulting from a successfully exploited vulnerability.
          enum:
          - IMPACT_UNSPECIFIED
          - IMPACT_HIGH
          - IMPACT_LOW
          - IMPACT_NONE
          type: string
        baseScore:
          description: The base score is a function of the base metric scores.
          format: double
          type: number
        confidentialityImpact:
          description: This metric measures the impact to the confidentiality of the
            information resources managed by a software component due to a successfully
            exploited vulnerability.
          enum:
          - IMPACT_UNSPECIFIED
          - IMPACT_HIGH
          - IMPACT_LOW
          - IMPACT_NONE
          type: string
        integrityImpact:
          description: This metric measures the impact to integrity of a successfully
            exploited vulnerability.
          enum:
          - IMPACT_UNSPECIFIED
          - IMPACT_HIGH
          - IMPACT_LOW
          - IMPACT_NONE
          type: string
        privilegesRequired:
          description: This metric describes the level of privileges an attacker must
            possess before successfully exploiting the vulnerability.
          enum:
          - PRIVILEGES_REQUIRED_UNSPECIFIED
          - PRIVILEGES_REQUIRED_NONE
          - PRIVILEGES_REQUIRED_LOW
          - PRIVILEGES_REQUIRED_HIGH
          type: string
        scope:
          description: The Scope metric captures whether a vulnerability in one vulnerable
            component impacts resources in components beyond its security scope.
          enum:
          - SCOPE_UNSPECIFIED
          - SCOPE_UNCHANGED
          - SCOPE_CHANGED
          type: string
        userInteraction:
          description: This metric captures the requirement for a human user, other
            than the attacker, to participate in the successful compromise of the
            vulnerable component.
          enum:
          - USER_INTERACTION_UNSPECIFIED
          - USER_INTERACTION_NONE
          - USER_INTERACTION_REQUIRED
          type: string
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining
        duplicated empty messages in your APIs. A typical example is to use it as
        the request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
        representation for `Empty` is empty JSON object `{}`.'
      properties: {}
      type: object
    Finding:
      description: Security Command Center finding. A finding is a record of assessment
        data like security, risk, health, or privacy, that is ingested into Security
        Command Center for presentation, notification, analysis, policy testing, and
        enforcement. For example, a cross-site scripting (XSS) vulnerability in an
        App Engine application is a finding.
      properties:
        canonicalName:
          description: The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
            depending on the closest CRM ancestor of the resource associated with
            the finding.
          type: string
        category:
          description: 'The additional taxonomy group within findings from a given
            source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"'
          type: string
        createTime:
          description: The time at which the finding was created in Security Command
            Center.
          format: google-datetime
          type: string
        eventTime:
          description: The time at which the event took place, or when an update to
            the finding occurred. For example, if the finding represents an open firewall
            it would capture the time the detector believes the firewall became open.
            The accuracy is determined by the detector. If the finding were to be
            resolved afterward, this time would reflect when the finding was resolved.
            Must not be set to a value greater than the current timestamp.
          format: google-datetime
          type: string
        externalUri:
          description: The URI that, if available, points to a web page outside of
            Security Command Center where additional information about the finding
            can be found. This field is guaranteed to be either empty or a well formed
            URL.
          type: string
        findingClass:
          description: The class of the finding.
          enum:
          - FINDING_CLASS_UNSPECIFIED
          - THREAT
          - VULNERABILITY
          - MISCONFIGURATION
          - OBSERVATION
          type: string
        indicator:
          $ref: '#/components/schemas/Indicator'
          description: 'Represents what''s commonly known as an Indicator of compromise
            (IoC) in computer forensics. This is an artifact observed on a network
            or in an operating system that, with high confidence, indicates a computer
            intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise'
        name:
          description: 'The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"'
          type: string
        parent:
          description: 'The relative resource name of the source the finding belongs
            to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"'
          type: string
        resourceName:
          description: 'For findings on Google Cloud resources, the full resource
            name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
            When the finding is for a non-Google Cloud resource, the resourceName
            can be a customer or partner defined string. This field is immutable after
            creation time.'
          type: string
        securityMarks:
          $ref: '#/components/schemas/SecurityMarks'
          description: Output only. User specified security marks. These marks are
            entirely managed by the user and come from the SecurityMarks resource
            that belongs to the finding.
          readOnly: true
        severity:
          description: The severity of the finding. This field is managed by the source
            that writes the finding.
          enum:
          - SEVERITY_UNSPECIFIED
          - CRITICAL
          - HIGH
          - MEDIUM
          - LOW
          type: string
        sourceProperties:
          additionalProperties: {}
          description: Source specific properties. These properties are managed by
            the source that writes the finding. The key names in the source_properties
            map must be between 1 and 255 characters, and must start with a letter
            and contain alphanumeric characters or underscores only.
          type: object
        state:
          description: The state of the finding.
          enum:
          - STATE_UNSPECIFIED
          - ACTIVE
          - INACTIVE
          type: string
        vulnerability:
          $ref: '#/components/schemas/Vulnerability'
          description: Represents vulnerability specific fields like cve, cvss scores
            etc. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
      type: object
    Folder:
      description: Message that contains the resource name and display name of a folder
        resource.
      properties:
        resourceFolder:
          description: 'Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        resourceFolderDisplayName:
          description: The user defined display name for this folder.
          type: string
      type: object
    GoogleCloudSecuritycenterV1NotificationMessage:
      description: Cloud SCC's Notification
      properties:
        finding:
          $ref: '#/components/schemas/Finding'
          description: If it's a Finding based notification config, this field will
            be populated.
        notificationConfigName:
          description: Name of the notification config that generated current notification.
          type: string
        resource:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Resource'
          description: The Cloud resource tied to this notification's Finding.
      type: object
    GoogleCloudSecuritycenterV1Resource:
      description: Information related to the Google Cloud resource.
      properties:
        displayName:
          description: The human readable name of the resource.
          type: string
        folders:
          description: Output only. Contains a Folder message for each folder in the
            assets ancestry. The first folder is the deepest nested folder, and the
            last folder is the folder directly under the Organization.
          items:
            $ref: '#/components/schemas/Folder'
          readOnly: true
          type: array
        name:
          description: 'The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        parent:
          description: The full resource name of resource's parent.
          type: string
        parentDisplayName:
          description: The human readable name of resource's parent.
          type: string
        project:
          description: The full resource name of project that the resource belongs
            to.
          type: string
        projectDisplayName:
          description: The human readable name of project that the resource belongs
            to.
          type: string
        type:
          description: The full resource type of the resource.
          type: string
      type: object
    GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          description: The state of an asset discovery run.
          enum:
          - STATE_UNSPECIFIED
          - COMPLETED
          - SUPERSEDED
          - TERMINATED
          type: string
      type: object
    GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          description: The state of an asset discovery run.
          enum:
          - STATE_UNSPECIFIED
          - COMPLETED
          - SUPERSEDED
          - TERMINATED
          type: string
      type: object
    GoogleCloudSecuritycenterV1p1beta1Finding:
      description: Security Command Center finding. A finding is a record of assessment
        data (security, risk, health or privacy) ingested into Security Command Center
        for presentation, notification, analysis, policy testing, and enforcement.
        For example, an XSS vulnerability in an App Engine application is a finding.
      properties:
        canonicalName:
          description: The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
            depending on the closest CRM ancestor of the resource associated with
            the finding.
          type: string
        category:
          description: 'The additional taxonomy group within findings from a given
            source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"'
          type: string
        createTime:
          description: The time at which the finding was created in Security Command
            Center.
          format: google-datetime
          type: string
        eventTime:
          description: The time at which the event took place, or when an update to
            the finding occurred. For example, if the finding represents an open firewall
            it would capture the time the detector believes the firewall became open.
            The accuracy is determined by the detector. If the finding were to be
            resolved afterward, this time would reflect when the finding was resolved.
            Must not be set to a value greater than the current timestamp.
          format: google-datetime
          type: string
        externalUri:
          description: The URI that, if available, points to a web page outside of
            Security Command Center where additional information about the finding
            can be found. This field is guaranteed to be either empty or a well formed
            URL.
          type: string
        name:
          description: 'The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"'
          type: string
        parent:
          description: 'The relative resource name of the source the finding belongs
            to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"'
          type: string
        resourceName:
          description: 'For findings on Google Cloud resources, the full resource
            name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
            When the finding is for a non-Google Cloud resource, the resourceName
            can be a customer or partner defined string. This field is immutable after
            creation time.'
          type: string
        securityMarks:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1SecurityMarks'
          description: Output only. User specified security marks. These marks are
            entirely managed by the user and come from the SecurityMarks resource
            that belongs to the finding.
          readOnly: true
        severity:
          description: The severity of the finding. This field is managed by the source
            that writes the finding.
          enum:
          - SEVERITY_UNSPECIFIED
          - CRITICAL
          - HIGH
          - MEDIUM
          - LOW
          type: string
        sourceProperties:
          additionalProperties: {}
          description: Source specific properties. These properties are managed by
            the source that writes the finding. The key names in the source_properties
            map must be between 1 and 255 characters, and must start with a letter
            and contain alphanumeric characters or underscores only.
          type: object
        state:
          description: The state of the finding.
          enum:
          - STATE_UNSPECIFIED
          - ACTIVE
          - INACTIVE
          type: string
      type: object
    GoogleCloudSecuritycenterV1p1beta1Folder:
      description: Message that contains the resource name and display name of a folder
        resource.
      properties:
        resourceFolder:
          description: 'Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        resourceFolderDisplayName:
          description: The user defined display name for this folder.
          type: string
      type: object
    GoogleCloudSecuritycenterV1p1beta1NotificationMessage:
      description: Security Command Center's Notification
      properties:
        finding:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Finding'
          description: If it's a Finding based notification config, this field will
            be populated.
        notificationConfigName:
          description: Name of the notification config that generated current notification.
          type: string
        resource:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Resource'
          description: The Cloud resource tied to the notification.
      type: object
    GoogleCloudSecuritycenterV1p1beta1Resource:
      description: Information related to the Google Cloud resource.
      properties:
        folders:
          description: Output only. Contains a Folder message for each folder in the
            assets ancestry. The first folder is the deepest nested folder, and the
            last folder is the folder directly under the Organization.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Folder'
          readOnly: true
          type: array
        name:
          description: 'The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name'
          type: string
        parent:
          description: The full resource name of resource's parent.
          type: string
        parentDisplayName:
          description: The human readable name of resource's parent.
          type: string
        project:
          description: The full resource name of project that the resource belongs
            to.
          type: string
        projectDisplayName:
          description: The human readable name of project that the resource belongs
            to.
          type: string
      type: object
    GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      properties:
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
        state:
          description: The state of an asset discovery run.
          enum:
          - STATE_UNSPECIFIED
          - COMPLETED
          - SUPERSEDED
          - TERMINATED
          type: string
      type: object
    GoogleCloudSecuritycenterV1p1beta1SecurityMarks:
      description: User specified security marks that are attached to the parent Security
        Command Center resource. Security marks are scoped within a Security Command
        Center organization -- they can be modified and viewed by all users who have
        proper permissions on the organization.
      properties:
        canonicalName:
          description: 'The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"'
          type: string
        marks:
          additionalProperties:
            type: string
          description: 'Mutable user specified security marks belonging to the parent
            resource. Constraints are as follows: * Keys and values are treated as
            case insensitive * Keys must be between 1 - 256 characters (inclusive)
            * Keys must be letters, numbers, underscores, or dashes * Values have
            leading and trailing whitespace trimmed, remaining characters must be
            between 1 - 4096 characters (inclusive)'
          type: object
        name:
          description: 'The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".'
          type: string
      type: object
    Indicator:
      description: 'Represents what''s commonly known as an Indicator of compromise
        (IoC) in computer forensics. This is an artifact observed on a network or
        in an operating system that, with high confidence, indicates a computer intrusion.
        Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise'
      properties:
        domains:
          description: List of domains associated to the Finding.
          items:
            type: string
          type: array
        ipAddresses:
          description: List of ip addresses associated to the Finding.
          items:
            type: string
          type: array
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error` or
            `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as create
            time. Some services might not provide such metadata. Any method that returns
            a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP mapping,
            the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: The normal response of the operation in case of success. If
            the original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For other
            methods, the response should have the type `XxxResponse`, where `Xxx`
            is the original method name. For example, if the original method name
            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    Reference:
      description: Additional Links
      properties:
        source:
          description: Source of the reference e.g. NVD
          type: string
        uri:
          description: Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
          type: string
      type: object
    SecurityMarks:
      description: User specified security marks that are attached to the parent Security
        Command Center resource. Security marks are scoped within a Security Command
        Center organization -- they can be modified and viewed by all users who have
        proper permissions on the organization.
      properties:
        canonicalName:
          description: 'The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"'
          type: string
        marks:
          additionalProperties:
            type: string
          description: 'Mutable user specified security marks belonging to the parent
            resource. Constraints are as follows: * Keys and values are treated as
            case insensitive * Keys must be between 1 - 256 characters (inclusive)
            * Keys must be letters, numbers, underscores, or dashes * Values have
            leading and trailing whitespace trimmed, remaining characters must be
            between 1 - 4096 characters (inclusive)'
          type: object
        name:
          description: 'The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".'
          type: string
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable
        for different programming environments, including REST APIs and RPC APIs.
        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details. You can
        find out more about this error model and how to work with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English.
            Any user-facing error message should be localized and sent in the google.rpc.Status.details
            field, or localized by the client.
          type: string
      type: object
    Vulnerability:
      description: Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
      properties:
        cve:
          $ref: '#/components/schemas/Cve'
          description: CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources: {}
externalDocs:
  url: https://cloud.google.com/security-command-center
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Security Command Center API provides access to temporal views of assets
    and findings within an organization.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Security Command Center API
  version: v1p1alpha1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: openapi
    url: https://securitycenter.googleapis.com/$discovery/rest?version=v1p1alpha1
    version: '3.0'
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: securitycenter
openapi: 3.0.0
paths:
  /v1p1alpha1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the
        client is no longer interested in the operation result. It does not cancel
        the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securitycenter.organizations.operations.delete
      parameters:
      - description: The name of the operation resource to be deleted.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - organizations
    get:
      description: 'Lists operations that match the specified filter in the request.
        If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE:
        the `name` binding allows API services to override the binding to use different
        resource name schemes, such as `users/*/operations`. To override the binding,
        API services can add a binding such as `"/v1/{name=users/*}/operations"` to
        their service configuration. For backwards compatibility, the default name
        includes the operations collection id, however overriding users must ensure
        the name binding is the parent resource, without the operations collection
        id.'
      operationId: securitycenter.organizations.operations.list
      parameters:
      - description: The name of the operation's parent resource.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The standard list filter.
        in: query
        name: filter
        schema:
          type: string
      - description: The standard list page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: The standard list page token.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - organizations
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v1p1alpha1/{name}:cancel:
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    post:
      description: Starts asynchronous cancellation on a long-running operation. The
        server makes a best effort to cancel the operation, but success is not guaranteed.
        If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
        Clients can use Operations.GetOperation or other methods to check whether
        the cancellation succeeded or whether the operation completed despite cancellation.
        On successful cancellation, the operation is not deleted; instead, it becomes
        an operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: securitycenter.organizations.operations.cancel
      parameters:
      - description: The name of the operation resource to be cancelled.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - organizations
servers:
- url: https://securitycenter.googleapis.com/
source:
  url: {}
tags:
- name: organizations
