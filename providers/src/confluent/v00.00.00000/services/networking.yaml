openapi: 3.0.0
servers:
  - url: 'https://api.confluent.cloud'
    description: Confluent Cloud API
info:
  version: ''
  contact:
    name: Confluent Cloud
    url: 'https://www.confluent.io/cloud-contact-us/'
    email: support@confluent.io
  x-api-id: 46234552-5833-42eb-ba0f-883ad3f70d2b
  x-audience: external-public
  x-logo:
    url: 'https://assets.confluent.io/m/5ec23aa91903c00b/'
  title: Confluent Cloud APIs - networking
  description: networking
tags:
  - name: API Keys (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ApiKey` objects represent access to different parts of Confluent Cloud. Some types
      of API keys represent access to a single cluster/resource such as a Kafka cluster,
      Schema Registry cluster or a ksqlDB cluster. Cloud API Keys represent access to resources within an organization
      that are not tied to a specific cluster, such as the Org API, IAM API, Metrics API or Connect API.

      The API allows you to list, create, update and delete your API Keys.


      Related guide: [API Keys in Confluent Cloud](https://docs.confluent.io/cloud/current/client-apps/api-keys.html).

      ## The API Keys Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.ApiKey" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `apikeys_per_org` | API Keys in one Confluent Cloud organization |
  - name: Environments (org/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Environment` objects represent an isolated namespace for your Confluent resources
      for organizational purposes.

      The API allows you to create, delete, and update your environments. You can retrieve
      individual environments as well as a list of all your environments.


      Related guide: [Environments in Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/environments.html).

      ## The Environments Model
      <SchemaDefinition schemaRef="#/components/schemas/org.v2.Environment" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `environments_per_org` | Environments in one Confluent Cloud organization |
  - name: Organizations (org/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Organization` objects represent a customer organization. An organization contains all customer
      resources (e.g., Environments, Kafka Clusters, Service Accounts, API Keys) and is tied to a billing
      agreement (including any annual commitment or support plan).

      The API allows you to list, view, and update your organizations.


      Related guide: [Organizations for Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/hierarchy/organizations/cloud-organization.html).

      ## The Organizations Model
      <SchemaDefinition schemaRef="#/components/schemas/org.v2.Organization" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `organizations_per_user` | Confluent Cloud organizations a user belongs to |
  - name: Users (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `User` objects represent individuals who may access your Confluent resources.

      The API allows you to retrieve, update, and delete individual users, as well as list of all your
      users. This API cannot be used to create new user accounts.


      Related guide: [Users in Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/user-account.html).

      ## The Users Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.User" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `users_per_org` | Users in one Confluent Cloud organization |
  - name: Service Accounts (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ServiceAccount` objects are typically used to represent applications and other non-human principals
      that may access your Confluent resources.

      The API allows you to create, retrieve, update, and delete individual service accounts, as well as
      list all your service accounts.


      Related guide: [Service Accounts in Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/service-account.html).

      ## The Service Accounts Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.ServiceAccount" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `service_accounts_per_org` | Service Accounts in one Confluent Cloud organization |
  - name: Invitations (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Invitation` objects represent invitations to invite users to join your organizations in Confluent Cloud.

      The API allows you to list all your invitations, as well as create, read, and delete a specified invitation.


      Related guide: [User invitations in Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/identity/user-accounts.html).

      ## The Invitations Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.Invitation" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `invitations_per_org` | Invitations in a Confluent Cloud organization |
  - name: IP Groups (iam/v2)
    description: |-
      [![Limited Availability](https://img.shields.io/badge/Lifecycle%20Stage-Limited%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To IP Groups API](https://img.shields.io/badge/-Request%20Access%20To%20IP%20Groups%20API-%23bc8540)](mailto:cloud-support@confluent.io?subject=Request%20to%20join%20IP%20Filtering%20API%20Limited%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Limited%20Access%20for%20IP%20Filtering.%0AMy%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.%0A)

      Definitions of networks which can be named and referred by IP blocks, commonly used to attach to IP Filter rules.


      ## The IP Groups Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.IpGroup" />
  - name: IP Filters (iam/v2)
    description: |-
      [![Limited Availability](https://img.shields.io/badge/Lifecycle%20Stage-Limited%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To IP Filters API](https://img.shields.io/badge/-Request%20Access%20To%20IP%20Filters%20API-%23bc8540)](mailto:ccloud-api-access+iam-v2-limited-availability@confluent.io?subject=Request%20to%20join%20iam/v2%20API%20Limited%20Availability&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Limited%20Availability%20for%20iam/v2%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      `IP Filter` objects are bindings between IP Groups and Confluent resource(s).
      For example, a binding between "CorpNet" and "Management APIs" will enforce that
      access must come from one of the CIDR blocks associated with CorpNet.
      If there are multiple IP filters bound to a resource, a request matching any of the CIDR blocks
      for any of the IP Group will allow the request.
      If there are no IP Filters for a resource, then access will be granted to requests originating
      from any IP Address.


      ## The IP Filters Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.IpFilter" />
  - name: Role Bindings (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      A role binding grants a Principal a role on resources that match a pattern.

      The API allows you to perform create, delete, and list operations on role bindings.


      Related guide: [Role-Based Access Control (RBAC)](https://docs.confluent.io/cloud/current/access-management/access-control/cloud-rbac.html).

      ## The Role Bindings Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.RoleBinding" />
  - name: Subscriptions (notifications/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Subscription` objects represent the intent of the customers to get notifications of particular types.
      A subscription is created for a particular `NotificationType` and the user will get notifications on the
      `Integrations` that are provided while creating the subscription.

      This API allows you to create, retrieve, and update subscriptions,
      as well as to view the list of all your subscriptions. You can also delete subscriptions
      with RECOMMENDED or OPTIONAL notification types. Subscriptions with REQUIRED notification types cannot be deleted.


      Related guide: [Cloud Notifications](https://docs.confluent.io/cloud/current/monitoring/configure-notifications.html#notifications-for-ccloud).

      ## The Subscriptions Model
      <SchemaDefinition schemaRef="#/components/schemas/notifications.v1.Subscription" />
  - name: Integrations (notifications/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      You can create an `Integration` to specify how we can notify you when we receive an alert/notification for
      a subscription. Please note that you can only perform create, update and delete operations for integrations
      of type `Webhook`, `Slack` and `MsTeams`. You cannot create, update or delete integrations of type `RoleEmail`
      and `UserEmail`.


      Related guide: [Cloud Notifications](https://docs.confluent.io/cloud/current/monitoring/configure-notifications.html#notifications-for-ccloud).

      ## The Integrations Model
      <SchemaDefinition schemaRef="#/components/schemas/notifications.v1.Integration" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `integrations_per_org` | Maximum number of integrations in one Confluent Cloud organization |
  - name: Notification Types (notifications/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The type of notifications (and their corresponding metadata) supported by Confluent.


      Related guide: [Cloud Notifications](https://docs.confluent.io/cloud/current/monitoring/configure-notifications.html#notifications-for-ccloud).

      ## The Notification Types Model
      <SchemaDefinition schemaRef="#/components/schemas/notifications.v1.NotificationType" />
  - name: Clusters (cmk/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Clusters` objects represent Apache Kafka Clusters on Confluent Cloud.

      The API allows you to list, create, read, update, and delete your Kafka clusters.


      Related guide: [Confluent Cloud Cluster Management for Apache Kafka APIs](https://docs.confluent.io/cloud/current/clusters/cluster-api.html).

      ## The Clusters Model
      <SchemaDefinition schemaRef="#/components/schemas/cmk.v2.Cluster" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `kafka_clusters_per_environment` | Number of clusters in one Confluent Cloud environment |
  - name: Clusters (ksqldbcm/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Cluster` represents a ksqlDB runtime that you can issue queries to using its API endpoint.
      It executes SQL statements and queries which under the hood get built into corresponding
      Kafka Streams topologies. The API allows you to list, create, read, and delete your ksqlDB clusters.


      Related guide: [ksqlDB in Confluent Cloud](https://docs.confluent.io/cloud/current/ksqldb/ksqldb-cluster-api.html).

      ## The Clusters Model
      <SchemaDefinition schemaRef="#/components/schemas/ksqldbcm.v2.Cluster" />

      ## Quotas and Limits
      This resource is subject to the following quotas:

      | Quota | Description |
      | --- | --- |
      | `ksql.limits.max_apps_per_cluster` | Clusters in one Confluent Cloud Kafka Cluster. |
  - name: Connectors (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      API for Managed Connectors or Custom Connectors in Confluent Cloud.

      The API allows you to list, create, get, update and delete a Managed Connector or Custom Connector in Confluent Cloud.

      Connect metrics are available through the [Metrics v2 API](https://api.telemetry.confluent.cloud/docs#tag/Version-2).

      Related guide: [Confluent Cloud API and Managed Connectors](https://docs.confluent.io/cloud/current/connectors/connect-api-section.html).
  - name: Lifecycle (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      API for managing the lifecycle for a Managed Connector or Custom Connector in Confluent Cloud. Operations currently supported are Pause and Resume.
  - name: Status (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      API for requesting the status or the tasks for a Managed Connector or Custom Connector in Confluent Cloud.
  - name: Managed Connector Plugins (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      API for Managed connectors in Confluent Cloud.
  - name: Offsets (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      API for managing the offsets for a Managed Connector.

      Related guide: [Manage Connector Offsets](https://docs.confluent.io/cloud/current/connectors/offsets.html#manage-offsets-for-fully-managed-connectors-in-ccloud)
  - name: Custom Connector Plugins (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      CustomConnectorPlugins objects represent Custom Connector Plugins on Confluent Cloud.
      The API allows you to list, create, read, update, and delete your Custom Connector Plugins.
      Related guide:
      [Custom Connector Plugin API](https://docs.confluent.io/cloud/current/connectors/connect-api-section.html).


      ## The Custom Connector Plugins Model
      <SchemaDefinition schemaRef="#/components/schemas/connect.v1.CustomConnectorPlugin" />
  - name: Presigned Urls (connect/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Request a presigned upload URL for new Custom Connector Plugin. Note that
      the URL policy expires in one hour. If the policy expires, you can request
      a new presigned upload URL.

      Related guide:
      [Custom Connector Plugin API](https://docs.confluent.io/cloud/current/connectors/connect-api-section.html).


      ## The Presigned Urls Model
      <SchemaDefinition schemaRef="#/components/schemas/connect.v1.PresignedUrl" />
  - name: Cluster (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Configs (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: ACL (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Consumer Group (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Partition (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Topic (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Records (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Cluster Linking (v3)
    description: '[![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)'
  - name: Applied Quotas (service-quota/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      A `quota` object represents a quota configuration for a specific Confluent Cloud resource.
      Use this API to retrieve an individual quota or list of quotas for a given scope.


      Related guide: [Service Quotas for Confluent Cloud](https://docs.confluent.io/cloud/current/quotas/index.html).

      ## The Applied Quotas Model
      <SchemaDefinition schemaRef="#/components/schemas/service-quota.v1.AppliedQuota" />
  - name: Scopes (service-quota/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Gets a list of all available scopes for applied quotas.


      Related guide: [Quota Scopes](https://docs.confluent.io/cloud/current/quotas/quotas.html#query-for-scopes).

      ## The Scopes Model
      <SchemaDefinition schemaRef="#/components/schemas/service-quota.v1.Scope" />
  - name: Entitlements (partner/v2)
    description: |
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Partner v2](https://img.shields.io/badge/-Request%20Access%20To%20Partner%20v2-%23bc8540)](mailto:ccloud-api-access+partner-v2-early-access@confluent.io?subject=Request%20to%20join%20partner/v2%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20partner/v2%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      `Entitlement` objects represent metadata about a marketplace entitlement.

      An entitlement includes metadata about a marketplace purchase
      (start date, end date, billing information, partner IDs, etc).
      The API allows partners to create, read, and list entitlements. (Unless you
      need entitlement creation and customer registration to be separate,
      we recommend using the Signup API to create an organization and entitlement
      at the same time)

      The API only allows authorized partners to interact with the Entitlements API.
  - name: Regions (srcm/v2)
    description: |-
      [![Deprecated](https://img.shields.io/badge/Lifecycle%20Stage-Deprecated-%23ff005c)](#section/Versioning/API-Lifecycle-Policy)

      `Region` objects represent cloud provider regions available when placing Schema Registry clusters.
      The API allows you to list Schema Registry regions.


      Related guides:
      * [Confluent Cloud providers and region support](https://docs.confluent.io/cloud/current/stream-governance/packages.html#cloud-providers-and-region-support).
      * [srcm/v3 Migration Guide](https://docs.confluent.io/cloud/current/stream-governance/packages.html#deprecation-of-srcm-v2-clusters-and-regions-apis-and-upgrade-guide).


      ## The Regions Model
      <SchemaDefinition schemaRef="#/components/schemas/srcm.v2.Region" />
  - name: Clusters (srcm/v2)
    description: |-
      [![Deprecated](https://img.shields.io/badge/Lifecycle%20Stage-Deprecated-%23ff005c)](#section/Versioning/API-Lifecycle-Policy)

      `Clusters` objects represent Schema Registry Clusters on Confluent Cloud.

      The API allows you to list, create, read, and delete your Schema Registry clusters.


      Related guides:
      * [Confluent Cloud Schema Registry Cluster APIs](https://docs.confluent.io/cloud/current/stream-governance/clusters-regions-api.html#schema-registry-cluster-management).
      * [srcm/v3 Migration Guide](https://docs.confluent.io/cloud/current/stream-governance/packages.html#deprecation-of-srcm-v2-clusters-and-regions-apis-and-upgrade-guide).


      ## The Clusters Model
      <SchemaDefinition schemaRef="#/components/schemas/srcm.v2.Cluster" />
  - name: Clusters (srcm/v3)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Clusters` objects represent Schema Registry Clusters on Confluent Cloud.

      The API allows you to list and read your Schema Registry clusters.


      Related guide: [Confluent Cloud Schema Registry Cluster APIs](https://docs.confluent.io/cloud/current/stream-governance/clusters-regions-api.html#schema-registry-cluster-management).

      ## The Clusters Model
      <SchemaDefinition schemaRef="#/components/schemas/srcm.v3.Cluster" />
  - name: Compatibility (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to test schema compatibility.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Config (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to manage and query schema compatibility settings and cluster configurations.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Contexts (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to retrieve information about schema contexts.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Exporters (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete exporters.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Modes (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete schema subjects modes of operation.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Schemas (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete schemas.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Subjects (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete schema subjects and versions.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Key Encryption Keys (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete key encryption keys.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Data Encryption Keys (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete data encryption keys.

      Related guide: [Manage Schemas in Confluent Cloud](https://docs.confluent.io/cloud/current/sr/schemas-manage.html#manage-schemas-in-ccloud).
  - name: Entity (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete catalog entities.

      Related guide: [Catalog API Documentation](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#catalog-api-documentation).
  - name: Search (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to search for entities.

      Related guide: [Catalog API Documentation](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#catalog-api-documentation).
  - name: Types (v1)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      The API allows you to create, retrieve, update, and delete catalog types such as tag definitions.

      Related guide: [Catalog API Documentation](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#catalog-api-documentation).
  - name: Provider Shared Resources (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ProviderSharedResource` object contains details of the data stream
      (topic, schema registry subjects, sharing metadata) that you have shared through Stream Sharing.


      ## The Provider Shared Resources Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.ProviderSharedResource" />
  - name: Provider Shares (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ProviderShare` object respresents the share that you have created through Stream Sharing.


      Related guide: [Provider Stream Shares in Confluent Cloud](https://docs.confluent.io/cloud/current/stream-sharing/produce-shared-data.html#stream-shares).

      ## The Provider Shares Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.ProviderShare" />
  - name: Consumer Shared Resources (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ConsumerSharedResource` object contains details of the data stream
      (topic, schema registry subjects, sharing metadata) that you received through Stream Sharing.


      ## The Consumer Shared Resources Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.ConsumerSharedResource" />
  - name: Consumer Shares (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ConsumerShare` object respresents the share that you received through Stream Sharing.


      Related guide: [Consumer Stream Shares in Confluent Cloud](https://docs.confluent.io/cloud/current/stream-sharing/consume-shared-data.html).

      ## The Consumer Shares Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.ConsumerShare" />
  - name: Shared Tokens (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Encrypted Token shared with consumer


      ## The Shared Tokens Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.SharedToken" />
  - name: Opt Ins (cdx/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Stream sharing opt in options

      ## The Opt Ins Model
      <SchemaDefinition schemaRef="#/components/schemas/cdx.v1.OptIn" />
  - name: Organizations (partner/v2)
    description: |
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Partner v2](https://img.shields.io/badge/-Request%20Access%20To%20Partner%20v2-%23bc8540)](mailto:ccloud-api-access+partner-v2-early-access@confluent.io?subject=Request%20to%20join%20partner/v2%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20partner/v2%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      `Organizations` objects represent an entire Confluent Cloud organization.
      Partners are allowed to get an organization they have signed up or
      list all organizations they have signed up.
  - name: Signup (partner/v2)
    description: |
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Partner v2](https://img.shields.io/badge/-Request%20Access%20To%20Partner%20v2-%23bc8540)](mailto:ccloud-api-access+partner-v2-early-access@confluent.io?subject=Request%20to%20join%20partner/v2%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20partner/v2%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      `Signup` APIs can only be performed by partners.
  - name: Networks (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
      provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
      Shared networks can contain any cluster type.

      The API allows you to list, create, read, update, and delete your networks.


      Related guide: [APIs to manage networks in Confluent Cloud](https://docs.confluent.io/cloud/current/networking/overview.html).

      ## The Networks Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
  - name: Peerings (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Add or remove VPC/VNet peering connections between your VPC/VNet and Confluent Cloud.

      Related guides:
      * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
      * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).
      * [Use VPC peering connections with Confluent Cloud on Google Cloud](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html).


      ## The Peerings Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `peerings_per_network` | Number of peerings per network |
  - name: Transit Gateway Attachments (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      AWS Transit Gateway Attachments

      Related guide: [APIs to manage AWS Transit Gateway Attachments](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html).

      ## The Transit Gateway Attachments Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `tgw_attachments_per_network` | Number of TGW attachments per network |
  - name: Private Link Accesses (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Add or remove access to PrivateLink endpoints by AWS account, Azure subscription and GCP project ID.

      Related guides:
      * [Use Google Cloud Private Service Connect with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/gcp-private-service-connect.html).
      * [Use Azure Private Link with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html).
      * [Use AWS PrivateLink with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).


      ## The Private Link Accesses Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `private_link_accounts_per_network` | Number of AWS accounts per network |
      | `private_link_subscriptions_per_network` | Number of Azure subscriptions per network |
      | `private_service_connect_projects_per_network` | Number of GCP projects per network |
  - name: Network Link Services (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Network Link Service is associated with a Private Link Confluent Cloud Network.
      It enables connectivity from other Private Link Confluent Cloud Networks based on
      the configured accept policies.


      Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

      ## The Network Link Services Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkService" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `network_link_service_per_network` | Number of network link services per network |
  - name: Network Link Endpoints (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      A Network Link Enpoint is associated with a Private Link Confluent Cloud Network at the origin and a
      Network Link Service (associated with another Private Link Confluent Cloud Network) at the target.
      It enables connectivity between the origin network and the target network.
      It can only be associated with a Private Link network.


      Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

      ## The Network Link Endpoints Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkEndpoint" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `network_link_endpoints_per_network` | Number of network link endpoints per network |
  - name: Network Link Service Associations (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      List of incoming Network Link Enpoints associated with the Network Link Service.


      Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

      ## The Network Link Service Associations Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkServiceAssociation" />
  - name: Gateways (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      A gateway is a resource that defines network access to Confluent cloud resources.


      ## The Gateways Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Gateway" />
  - name: IP Addresses (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      IP Addresses

      Related guide: [Use Public Egress IP addresses on Confluent Cloud](https://docs.confluent.io/cloud/current/networking/static-egress-ip-addresses.html)

      ## The IP Addresses Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.IpAddress" />
  - name: Private Link Attachments (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      PrivateLink attachment objects represent reservations to establish PrivateLink connections
      to a cloud region in order to access resources that belong to a Confluent Cloud Environment.
      The API allows you to list, create, read update and delete your PrivateLink attachments.


      ## The Private Link Attachments Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachment" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `private_link_attachments_per_environment` | Number of PrivateLink Attachments per environment |
  - name: Private Link Attachment Connections (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      PrivateLink attachment connection objects represent connections established to a cloud region
      in order to access resources that belong to a Confluent Cloud Environment.
      The API allows you to list, create, read update and delete your PrivateLink attachment connections.


      ## The Private Link Attachment Connections Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachmentConnection" />
  - name: Identity Providers (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `IdentityProvider` objects represent external OAuth-OIDC providers in Confluent Cloud.

      The API allows you to list, create, read, update, and delete your Identity Provider.


      Related guide: [OAuth for Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/authenticate/oauth/overview.html).

      ## The Identity Providers Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.IdentityProvider" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `identity_providers_per_org` | Number of OAuth identity providers per organization |
      | `public_keys_per_provider` | Number of public keys saved per identity provider |
  - name: Jwks (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `JWKS` objects represent public key sets for a specific OAuth/OpenID Connect provider within
      Confluent Cloud.

      The API allows you to refresh JWKS public key data.


      Related guide: [OAuth for Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/authenticate/oauth/overview.html).

      ## The Jwks Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.Jwks" />
  - name: Identity Pools (iam/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `IdentityPool` objects represent groups of identities tied to a given a `IdentityProvider`
      that authorizes them to Confluent Cloud resources.

      It provides a mapping functionality of your `Identity Provider` user to a Confluent identity pool that
      is then used to provide access to Confluent Resources.


      Related guide: [Use identity pools with your OAuth provider](https://docs.confluent.io/cloud/current/access-management/authenticate/oauth/identity-pools.html).

      ## The Identity Pools Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.IdentityPool" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `identity_pools_per_provider` | Number of Identity Pools per Identity Provider |
  - name: OAuth Tokens (sts/v1)
    description: |
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      OAuth Token is a [JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519) that enables the use of
      external identities to access Confluent Cloud APIs
  - name: Client Quotas (kafka-quotas/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `ClientQuota` objects represent Client Quotas you can set at the service account level.

      The API allows you to list, create, read, update, and delete your client quotas.


      Related guide: [Client Quotas in Confluent Cloud](https://docs.confluent.io/cloud/current/clusters/client-quotas.html).

      ## The Client Quotas Model
      <SchemaDefinition schemaRef="#/components/schemas/kafka-quotas.v1.ClientQuota" />
  - name: Pipelines (sd/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Pipeline` objects represent information about a user-defined pipeline of Confluent Cloud components.
      The pipeline's content is available separately.

      The API allows you to create, retrieve, update, and delete your pipelines,
      as well as list all of your pipelines for the particular environment and Kafka cluster.


      Related guide: [Pipelines in Confluent Cloud](https://docs.confluent.io/cloud/current/stream-designer/).

      ## The Pipelines Model
      <SchemaDefinition schemaRef="#/components/schemas/sd.v1.Pipeline" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `pipelines_per_org` | Pipelines in one Confluent Cloud organization |
      | `pipelines_per_cluster` | Pipelines in one Confluent Cloud Kafka cluster |
  - name: Keys (byok/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Key` objects represent customer managed keys on dedicated Confluent Cloud clusters.

      Keys are used to protect data at rest stored in your dedicated Confluent Cloud clusters on AWS, Azure, and GCP.
      This API allows you to upload and retrieve self-managed keys on Confluent Cloud.


      Related guide: [Confluent Cloud Bring Your Own Key (BYOK) Management API](https://docs.confluent.io/cloud/current/clusters/byok/index.html).

      ## The Keys Model
      <SchemaDefinition schemaRef="#/components/schemas/byok.v1.Key" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `byok.max_keys.per_org` | BYOK keys in one Confluent Cloud organisation. |
  - name: Costs (billing/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Cost` objects represent the aggregated billing costs for an organization


      Related guide: [Retrieve costs for a range of dates](https://docs.confluent.io/cloud/current/billing/overview.html#retrieve-costs-for-a-range-of-dates).

      ## The Costs Model
      <SchemaDefinition schemaRef="#/components/schemas/billing.v1.Cost" />
  - name: Group Mappings (iam/v2/sso)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `GroupMapping` objects establish relationships between user groups in your SSO
      identity provider and specific RBAC roles in Confluent Cloud.

      Group mappings enable automated and secure access control to Confluent Cloud resources,
      reducing administrative workload by streamlining user provisioning and authorization.


      Related guide: [Use group mappings with your SSO identity provider](https://docs.confluent.io/cloud/current/access-management/authenticate/sso/group-mapping/overview.html).

      ## The Group Mappings Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.sso.GroupMapping" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `group_mappings_per_org` | Number of group mappings per organization |
  - name: Compute Pools (fcpm/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      A Compute Pool represents a set of compute resources that is used to run your Queries.
      The resources (CPUs, memory,…) provided by a Compute Pool are shared between all Queries that use it.


      ## The Compute Pools Model
      <SchemaDefinition schemaRef="#/components/schemas/fcpm.v2.ComputePool" />
  - name: Regions (fcpm/v2)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Region` objects represent cloud provider regions available when placing Flink compute pools.
      The API allows you to list Flink regions.


      ## The Regions Model
      <SchemaDefinition schemaRef="#/components/schemas/fcpm.v2.Region" />
  - name: Statements (sql/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Statement` represents a core resource used to model SQL statements for execution.
      A statement generalizes DDL, DML, DQL, etc., but doesn’t attempt to handle session
      management or any higher-level functionality.
      The API allows you to list, create, read, and delete your statements.
      ## The Statements Model
      <SchemaDefinition schemaRef="#/components/schemas/sql.v1.Statement" />
  - name: Statement Results (sql/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `StatementResult` represents a result of a `Statement` resource.
      The API allows you to read your statement's results.
      ## The Statement Results Model
      <SchemaDefinition schemaRef="#/components/schemas/sql.v1.StatementResult" />
  - name: Statement Exceptions (sql/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `StatementException` represents an exception of a `Statement` resource.
      The API allows you to read your statement's exceptions.
      ## The Statement Exceptions Model
      <SchemaDefinition schemaRef="#/components/schemas/sql.v1.StatementException" />
  - name: Connections (sql/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Connection` represents a core resource used to model SQL connections for execution.
      A connection generalizes DDL, DML, DQL, etc., but doesn’t attempt to handle session
      management or any higher-level functionality.
      The API allows you to list, create, read, and delete your connections.
      ## The Connections Model
      <SchemaDefinition schemaRef="#/components/schemas/sql.v1.Connection" />
  - name: DNS Forwarders (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      Add, remove, and update DNS forwarder for your gateway.

      Related guides:
      * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
      * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).


      ## The DNS Forwarders Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsForwarder" />
  - name: Access Points (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      AccessPoint objects represent network connections in and out of Gateways.
      This API allows you to list, create, read, update, and delete your access points.


      ## The Access Points Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
  - name: DNS Records (networking/v1)
    description: |-
      [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

      ## The DNS Records Model
      <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
  - name: Certificate Authorities (iam/v2)
    description: |-
      [![Limited Availability](https://img.shields.io/badge/Lifecycle%20Stage-Limited%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `CertificateAuthority` objects represent signing certificate authorities in Confluent Cloud.

      The API allows you to list, create, read, update, and delete your Certificate Authority.


      Related guide: [Manage certificate authorities used for client authentication with X.509 certificates.](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/overview.html).

      ## The Certificate Authorities Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.CertificateAuthority" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `certificate_authorities_per_org` | Number of certificate authorities per organization |
  - name: Certificate Identity Pools (iam/v2)
    description: |-
      [![Limited Availability](https://img.shields.io/badge/Lifecycle%20Stage-Limited%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

      `Identitypool` objects represent workload identities in Confluent Cloud.

      The API allows you to list, create, read, update, and delete your identity pools associated
      with Certificate Authorities


      Related guide: [Manage Certificate Identity Pools for Granular Client Access Management](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/configure.html#step-2-create-certificate-identity-pools-for-granular-access-control).

      ## The Certificate Identity Pools Model
      <SchemaDefinition schemaRef="#/components/schemas/iam.v2.CertificateIdentityPool" />

      ## Quotas and Limits
      This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

      | Quota | Description |
      | --- | --- |
      | `identity_pools_per_certificate_authority` | Number of Identity Pools per Certificate Authority |
  - name: Integrations (pim/v1)
    description: |-
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Provider Integration](https://img.shields.io/badge/-Request%20Access%20To%20Provider%20Integration-%23bc8540)](mailto:ccloud-api-access+pim-v1-early-access@confluent.io?subject=Request%20to%20join%20pim/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20pim/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      `Provider Integration` objects represent access to public cloud service provider (CSP) resources
      that may be accessed by Confluent resources (for example, connectors).

      The API allows you to create, retrieve, and delete individual integrations, and also obtain a
      list of all your provider integrations.


      Related guide: [Provider Integration in Confluent Cloud](https://docs.confluent.io/home/overview.html).

      ## The Integrations Model
      <SchemaDefinition schemaRef="#/components/schemas/pim.v1.Integration" />
  - name: Flink Artifacts (artifact/v1)
    description: |-
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Flink Artifact API EA](https://img.shields.io/badge/-Request%20Access%20To%20Flink%20Artifact%20API%20EA-%23bc8540)](mailto:ccloud-api-access+artifact-v1-early-access@confluent.io?subject=Request%20to%20join%20artifact/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20artifact/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      FlinkArtifact objects represent Flink Artifacts on Confluent Cloud.


      ## The Flink Artifacts Model
      <SchemaDefinition schemaRef="#/components/schemas/artifact.v1.FlinkArtifact" />
  - name: Presigned Urls (artifact/v1)
    description: |-
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Flink Artifact API EA](https://img.shields.io/badge/-Request%20Access%20To%20Flink%20Artifact%20API%20EA-%23bc8540)](mailto:ccloud-api-access+artifact-v1-early-access@confluent.io?subject=Request%20to%20join%20artifact/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20artifact/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      Request a presigned upload URL for new Flink Artifact. Note that
      the URL policy expires in one hour. If the policy expires, you can request
      a new presigned upload URL.


      ## The Presigned Urls Model
      <SchemaDefinition schemaRef="#/components/schemas/artifact.v1.PresignedUrl" />
  - name: Flink Artifact Versions (artifact/v1)
    description: |-
      [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Request Access To Flink Artifact API EA](https://img.shields.io/badge/-Request%20Access%20To%20Flink%20Artifact%20API%20EA-%23bc8540)](mailto:ccloud-api-access+artifact-v1-early-access@confluent.io?subject=Request%20to%20join%20artifact/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20artifact/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)

      FlinkArtifactVersion objects represent Flink Artifact Versions on Confluent Cloud.


      ## The Flink Artifact Versions Model
      <SchemaDefinition schemaRef="#/components/schemas/artifact.v1.FlinkArtifactVersion" />
components:
  schemas:
    MultipleSearchFilter:
      description: Filter a collection by a string search for one or more values
      type: array
      items:
        type: string
    SearchFilter:
      description: Filter a collection by a string search
      type: string
    networking.v1.NetworkList:
      type: object
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud](https://docs.confluent.io/cloud/current/networking/overview.html).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/networks'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/networks?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/networks?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/networks?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.Network'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - region
                      - connection_types
                      - environment
          uniqueItems: true
    ListMeta:
      type: object
      description: ListMeta describes metadata that resource collections may have
      properties:
        first:
          description: 'A link to the first page of results. If a response does not contain a first link, then direct navigation to the first page is not supported.'
          type: string
          format: uri
          nullable: true
          example: 'https://api.confluent.cloud/v2/resourcekinds'
        last:
          description: 'A link to the last page of results. If a response does not contain a last link, then direct navigation to the last page is not supported.'
          type: string
          format: uri
          nullable: true
          example: 'https://api.confluent.cloud/v2/resourcekinds?page_token=bcAOehAY8F16YD84Z1wT'
        prev:
          description: 'A link to the previous page of results. If a response does not contain a prev link, then either there is no previous data or backwards traversal through the result set is not supported.'
          type: string
          format: uri
          nullable: true
          example: 'https://api.confluent.cloud/v2/resourcekinds?page_token=YIXRY97wWYmwzrax4dld'
        next:
          description: 'A link to the next page of results. If a response does not contain a next link, then there is no more data available.'
          type: string
          format: uri
          nullable: true
          example: 'https://api.confluent.cloud/v2/resourcekinds?page_token=UvmDWOB1iwfAIBPj6EYb'
        total_size:
          description: Number of records in the full result set. This response may be paginated and have a smaller number of records.
          type: integer
          format: int32
          minimum: 0
          example: 123
    networking.v1.Network:
      type: object
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud](https://docs.confluent.io/cloud/current/networking/overview.html).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - Network
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/networks/n-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkSpec'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkStatus'
    AclOperation:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - ALL
        - READ
        - WRITE
        - CREATE
        - DELETE
        - ALTER
        - DESCRIBE
        - CLUSTER_ACTION
        - DESCRIBE_CONFIGS
        - ALTER_CONFIGS
        - IDEMPOTENT_WRITE
    AclPatternType:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - MATCH
        - LITERAL
        - PREFIXED
    AclPermission:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - DENY
        - ALLOW
    AclResourceType:
      type: string
      enum:
        - UNKNOWN
        - ANY
        - TOPIC
        - GROUP
        - CLUSTER
        - TRANSACTIONAL_ID
        - DELEGATION_TOKEN
    BrokerTaskType:
      type: string
      enum:
        - add-broker
        - remove-broker
    MirrorTopicStatus:
      enum:
        - ACTIVE
        - FAILED
        - LINK_FAILED
        - LINK_PAUSED
        - PAUSED
        - PENDING_STOPPED
        - SOURCE_UNAVAILABLE
        - STOPPED
        - PENDING_MIRROR
        - PENDING_SYNCHRONIZE
        - PENDING_SETUP_FOR_RESTORE
        - PENDING_RESTORE
      type: string
    Failure:
      type: object
      description: Provides information about problems encountered while performing an operation.
      required:
        - errors
      properties:
        errors:
          description: List of errors which caused this operation to fail
          type: array
          items:
            $ref: '#/components/schemas/Error'
          uniqueItems: true
    AlterConfigBatchRequestData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              value:
                type: string
                nullable: true
              operation:
                type: string
                x-extensible-enum:
                  - SET
                  - DELETE
                nullable: true
        validate_only:
          type: boolean
    CreateAclRequestData:
      type: object
      required:
        - resource_type
        - resource_name
        - pattern_type
        - principal
        - host
        - operation
        - permission
      properties:
        resource_type:
          $ref: '#/components/schemas/AclResourceType'
        resource_name:
          type: string
        pattern_type:
          $ref: '#/components/schemas/AclPatternType'
        principal:
          type: string
        host:
          type: string
        operation:
          $ref: '#/components/schemas/AclOperation'
        permission:
          $ref: '#/components/schemas/AclPermission'
    CreateAclRequestDataList:
      allOf:
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CreateAclRequestData'
    CreateTopicRequestData:
      type: object
      required:
        - topic_name
      properties:
        topic_name:
          type: string
        partitions_count:
          type: integer
        replication_factor:
          type: integer
        configs:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              value:
                type: string
                nullable: true
        validate_only:
          type: boolean
    ProduceRequest:
      type: object
      properties:
        partition_id:
          type: integer
          nullable: true
          format: int32
        headers:
          type: array
          items:
            $ref: '#/components/schemas/ProduceRequestHeader'
        key:
          $ref: '#/components/schemas/ProduceRequestData'
        value:
          $ref: '#/components/schemas/ProduceRequestData'
        timestamp:
          type: string
          format: date-time
          nullable: true
    UpdateConfigRequestData:
      type: object
      properties:
        value:
          type: string
          nullable: true
    CreateLinkRequestData:
      properties:
        source_cluster_id:
          type: string
        destination_cluster_id:
          type: string
        remote_cluster_id:
          description: The expected remote cluster ID.
          type: string
        cluster_link_id:
          description: 'The expected cluster link ID. Can be provided when creating the second side of a bidirectional link for validating the link ID is as expected. If it''s not provided, it''s inferred from the remote cluster.'
          type: string
        configs:
          items:
            $ref: '#/components/schemas/ConfigData'
          type: array
      type: object
    UpdateLinkConfigRequestData:
      properties:
        value:
          type: string
      required:
        - value
      type: object
    CreateMirrorTopicRequestData:
      properties:
        source_topic_name:
          type: string
        mirror_topic_name:
          type: string
        replication_factor:
          type: integer
        configs:
          type: array
          items:
            $ref: '#/components/schemas/ConfigData'
      required:
        - source_topic_name
      type: object
    AlterMirrorsRequestData:
      properties:
        mirror_topic_names:
          description: The mirror topics specified as a list of topic names.
          type: array
          items:
            type: string
        mirror_topic_name_pattern:
          description: The mirror topics specified as a pattern.
          type: string
      type: object
    RemoveBrokersRequestData:
      properties:
        broker_ids:
          type: array
          items:
            type: integer
      required:
        - broker_ids
      type: object
    BrokerReplicaExclusionBatchRequestData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BrokerReplicaExclusionRequestData'
    ObjectMeta:
      description: 'ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.'
      required:
        - self
      properties:
        self:
          description: 'Self is a Uniform Resource Locator (URL) at which an object can be addressed. This URL encodes the service location, API version, and other particulars necessary to locate the resource at a point in time'
          type: string
          format: uri
          readOnly: true
          example: 'https://api.confluent.cloud/v2/kafka-clusters/lkc-f3a90de'
        resource_name:
          description: Resource Name is a Uniform Resource Identifier (URI) that is globally unique across space and time. It is represented as a Confluent Resource Name
          type: string
          format: uri
          readOnly: true
          example: 'crn://confluent.cloud/kafka=lkc-f3a90de'
        created_at:
          type: string
          format: date-time
          example: '2006-01-02T15:04:05-07:00'
          readOnly: true
          description: The date and time at which this object was created. It is represented in RFC3339 format and is in UTC.
        updated_at:
          type: string
          format: date-time
          example: '2006-01-02T15:04:05-07:00'
          readOnly: true
          description: The date and time at which this object was last updated. It is represented in RFC3339 format and is in UTC.
        deleted_at:
          type: string
          format: date-time
          example: '2006-01-02T15:04:05-07:00'
          readOnly: true
          description: The date and time at which this object was (or will be) deleted. It is represented in RFC3339 format and is in UTC.
      readOnly: true
    networking.v1.NetworkSpec:
      type: object
      description: The desired state of the Network
      properties:
        display_name:
          type: string
          description: The name of the network
          example: prod-aws-us-east1
        cloud:
          type: string
          description: The cloud service provider in which the network exists.
          x-extensible-enum:
            - AWS
            - GCP
            - AZURE
          example: AWS
          x-immutable: true
        region:
          type: string
          description: The cloud service provider region in which the network exists.
          example: us-east-1
          x-immutable: true
        connection_types:
          type: array
          description: The connection types requested for use with the network.
          items:
            $ref: '#/components/schemas/networking.v1.ConnectionType'
          uniqueItems: true
          minItems: 1
          x-immutable: true
        cidr:
          type: string
          pattern: ^\d+\.\d+\.\d+\.\d+/\d+$
          description: |
            The IPv4 [CIDR block](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) to used for this network.
            Must be `/16`. Required for VPC peering and AWS TransitGateway.
          example: 10.200.0.0/16
          x-immutable: true
        zones:
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 3
          maxItems: 3
          description: |
            The 3 availability zones for this network. They can optionally be specified for AWS networks
            used with PrivateLink, for GCP networks used with Private Service Connect, and for AWS and GCP
            networks used with Peering.
            Otherwise, they are automatically chosen by Confluent Cloud.

            On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html)
             (e.g. use1-az3)

            On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones)
             (e.g. us-central1-c).

            On Azure, zones are Confluent-chosen names (e.g. 1, 2, 3) since Azure does not
             have universal zone identifiers.
          example:
            - use1-az1
            - use1-az2
            - use1-az3
          x-immutable: true
        zones_info:
          type: array
          minItems: 3
          maxItems: 3
          uniqueItems: true
          items:
            $ref: '#/components/schemas/networking.v1.ZoneInfo'
          description: |
            Each item represents information related to a single zone.

            Note - The attribute is in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
          x-immutable: true
        dns_config:
          description: |
            DNS config only applies to PrivateLink network connection type.

            When resolution is CHASED_PRIVATE, clusters in this network require both public and private DNS
             to resolve cluster endpoints.

            When resolution is PRIVATE, clusters in this network only require private DNS
             to resolve cluster endpoints.
          allOf:
            - $ref: '#/components/schemas/networking.v1.DnsConfig'
          x-immutable: true
        reserved_cidr:
          type: string
          description: |
            The reserved CIDR config is used only by AWS networks with connection_types = Vpc_Peering or Transit_Gateway

            An IPv4 [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
              reserved for Confluent Cloud Network. Must be \24.
              If not specified, Confluent Cloud Network uses 172.20.255.0/24

            Note - The attribute is in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
          example: 172.20.255.0/24
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
            - $ref: '#/components/schemas/TypedEnvScopedObjectReference'
          nullable: true
          description: The gateway associated with this object. The gateway can be one of networking.v1.Gateway. May be `null` or omitted if not associated with a gateway.
          readOnly: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkStatus:
      type: object
      required:
        - phase
        - supported_connection_types
        - active_connection_types
      description: The status of the Network
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - READY
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecyle phase of the network:

            PROVISIONING:  network provisioning is in progress;

            READY:  network is ready;

            FAILED: provisioning failed;

            DEPROVISIONING: network deprovisioning is in progress;
          readOnly: true
          example: READY
        supported_connection_types:
          type: array
          description: The connection types this network supports.
          items:
            $ref: '#/components/schemas/networking.v1.ConnectionType'
          uniqueItems: true
          minItems: 1
          readOnly: true
        active_connection_types:
          type: array
          description: The connection types requested for use with the network.
          items:
            $ref: '#/components/schemas/networking.v1.ConnectionType'
          uniqueItems: true
          minItems: 1
          readOnly: true
        error_code:
          type: string
          description: Error code if network is in a failed state. May be used for programmatic error checking.
          readOnly: true
          example: insufficient_capacity
        error_message:
          type: string
          description: Displayable error message if network is in a failed state
          readOnly: true
          example: Could not provision cloud resources
        dns_domain:
          type: string
          description: The root DNS domain for the network if applicable. Present on networks that support PrivateLink.
          example: 00000.us-east-1.aws.glb.confluent.cloud
          readOnly: true
        zonal_subdomains:
          type: object
          additionalProperties:
            type: string
          description: |
            The DNS subdomain for each zone. Present on networks that support PrivateLink. Keys are zones and
            values are DNS domains.
          example:
            use1-az1: use1-az1.00000.us-east-1.aws.confluent.cloud
            use1-az4: use1-az4.00000.us-east-1.aws.confluent.cloud
            use1-az5: use1-az5.00000.us-east-1.aws.confluent.cloud
          readOnly: true
        cloud:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsNetwork'
            - $ref: '#/components/schemas/networking.v1.GcpNetwork'
            - $ref: '#/components/schemas/networking.v1.AzureNetwork'
          description: The cloud-specific network details. These will be populated when the network reaches the READY state.
          discriminator:
            propertyName: kind
            mapping:
              AwsNetwork: '#/components/schemas/networking.v1.AwsNetwork'
              GcpNetwork: '#/components/schemas/networking.v1.GcpNetwork'
              AzureNetwork: '#/components/schemas/networking.v1.AzureNetwork'
          readOnly: true
        idle_since:
          type: string
          format: date-time
          example: '2024-01-01T00:00:00Z'
          description: The date and time when the network becomes idle
          readOnly: true
      readOnly: true
    Error:
      type: object
      description: Describes a particular error encountered while performing an operation.
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
          maxLength: 255
        status:
          description: 'The HTTP status code applicable to this problem, expressed as a string value.'
          type: string
        code:
          description: 'An application-specific error code, expressed as a string value.'
          type: string
        title:
          description: 'A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.'
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
        source:
          type: object
          description: 'If this error was caused by a particular part of the API request, the source will point to the query string parameter or request body property that caused it.'
          properties:
            pointer:
              description: 'A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. "/spec" for a spec object, or "/spec/title" for a specific field].'
              type: string
            parameter:
              description: A string indicating which query parameter caused the error.
              type: string
        error_code:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProduceRequestHeader:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        value:
          type: string
          format: byte
          nullable: true
    ProduceRequestData:
      type: object
      properties:
        type:
          type: string
          x-extensible-enum:
            - BINARY
            - JSON
            - STRING
        data:
          $ref: '#/components/schemas/AnyValue'
      nullable: true
    ConfigData:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
      required:
        - name
        - value
    BrokerReplicaExclusionRequestData:
      type: object
      required:
        - broker_id
        - reason
      properties:
        broker_id:
          type: integer
        reason:
          type: string
    networking.v1.ConnectionType:
      type: string
      description: Network connection type.
      x-extensible-enum:
        - PEERING
        - TRANSITGATEWAY
        - PRIVATELINK
      example: PRIVATELINK
    networking.v1.ZoneInfo:
      type: object
      description: Cloud provider zone metadata.
      properties:
        zone_id:
          description: Cloud provider zone id
          type: string
          example: use1-az3
        cidr:
          description: |
            The IPv4 [CIDR block](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) to used for this network.
            Must be a `/27`. Required for VPC peering and AWS TransitGateway.
          type: string
          example: 10.20.0.0/27
    networking.v1.DnsConfig:
      type: object
      description: The network DNS config
      required:
        - resolution
      properties:
        resolution:
          type: string
          description: Network DNS resolution type.
          x-extensible-enum:
            - CHASED_PRIVATE
            - PRIVATE
    ObjectReference:
      type: object
      description: ObjectReference provides information for you to locate the referred object
      required:
        - id
        - related
        - resource_name
      properties:
        id:
          type: string
          description: ID of the referred resource
          minLength: 1
          maxLength: 255
        environment:
          type: string
          description: 'Environment of the referred resource, if env-scoped'
          minLength: 1
          maxLength: 255
        related:
          type: string
          format: uri
          description: API URL for accessing or modifying the referred object
          minLength: 1
          readOnly: true
        resource_name:
          type: string
          format: uri
          description: CRN reference to the referred resource
          minLength: 1
          readOnly: true
        api_version:
          type: string
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
        kind:
          type: string
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
    TypedEnvScopedObjectReference:
      type: object
      description: ObjectReference provides information for you to locate the referred object
      required:
        - id
        - related
        - resource_name
      properties:
        id:
          type: string
          description: ID of the referred resource
          minLength: 1
          maxLength: 255
        environment:
          type: string
          description: 'Environment of the referred resource, if env-scoped'
          minLength: 1
          maxLength: 255
        related:
          type: string
          format: uri
          description: API URL for accessing or modifying the referred object
          minLength: 1
          readOnly: true
        resource_name:
          type: string
          format: uri
          description: CRN reference to the referred resource
          minLength: 1
          readOnly: true
        api_version:
          type: string
          description: API group and version of the referred resource
          minLength: 1
          readOnly: true
        kind:
          type: string
          description: Kind of the referred resource
          minLength: 1
          readOnly: true
    networking.v1.AwsNetwork:
      type: object
      description: The AWS network details.
      required:
        - kind
        - vpc
        - account
      properties:
        kind:
          description: Network kind type.
          type: string
          enum:
            - AwsNetwork
        vpc:
          type: string
          description: The Confluent Cloud VPC ID.
          example: vpc-00000000000000000
          readOnly: true
        account:
          type: string
          description: The AWS account ID associated with the Confluent Cloud VPC.
          example: '000000000000'
          readOnly: true
        private_link_endpoint_service:
          type: string
          description: The endpoint service of the Confluent Cloud VPC. (used for PrivateLink) if available.
          example: com.amazonaws.vpce.eu-west-3.vpce-00000000000000000
          readOnly: true
    networking.v1.GcpNetwork:
      type: object
      description: The GCP network details.
      required:
        - kind
        - project
        - vpc_network
      properties:
        kind:
          description: Network kind type.
          type: string
          enum:
            - GcpNetwork
        project:
          type: string
          description: The GCP Project ID associated with the Confluent Cloud VPC.
          example: cc-prod-3
          readOnly: true
        vpc_network:
          type: string
          description: The network name of the Confluent Cloud VPC.
          example: prod-network
          readOnly: true
        private_service_connect_service_attachments:
          type: object
          description: |
            The mapping of zones to Private Service Connect Service
            Attachments if available. Keys are zones and values are
            [GCP Private Service Connect Service
            Attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7)
          additionalProperties:
            type: string
          example:
            us-central1-a: projects/cc-prod/regions/us-central1/serviceAttachments/s-7jjm9-service-attachment-us-central1-a
            us-central1-b: projects/cc-prod/regions/us-central1/serviceAttachments/s-7jjm9-service-attachment-us-central1-b
            us-central1-c: projects/cc-prod/regions/us-central1/serviceAttachments/s-7jjm9-service-attachment-us-central1-c
          readOnly: true
    networking.v1.AzureNetwork:
      type: object
      description: The Azure network details.
      required:
        - kind
        - vnet
        - subscription
      properties:
        kind:
          description: Network kind type.
          type: string
          enum:
            - AzureNetwork
        vnet:
          type: string
          description: The resource ID of the Confluent Cloud VNet.
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/prod-group/providers/Microsoft.Network/virtualNetworks/prod-network
          readOnly: true
        subscription:
          type: string
          description: The Azure Subscription ID associated with the Confluent Cloud VPC.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
        private_link_service_aliases:
          type: object
          description: |
            The mapping of zones to Private Link Service Aliases if available. Keys are zones
            and values are [Azure Private Link Service
            Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
          additionalProperties:
            type: string
          example:
            '1': 0-00000-privatelink-1.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
            '2': 0-00000-privatelink-2.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
            '3': 0-00000-privatelink-3.00000000-0000-0000-0000-000000000000.westeurope.azure.privatelinkservice
          readOnly: true
        private_link_service_resource_ids:
          type: object
          description: |
            The mapping of zones to Private Link Service Resource IDs if available. Keys are zones
            and values are [Azure Private Link Service Resource
            IDs](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
          additionalProperties:
            type: string
          example:
            '1': /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/0-00000/providers/Microsoft.Network/privateLinkServices/0-00000-privatelink-1
            '2': /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/0-00000/providers/Microsoft.Network/privateLinkServices/0-00000-privatelink-2
            '3': /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/0-00000/providers/Microsoft.Network/privateLinkServices/0-00000-privatelink-3
          readOnly: true
    AnyValue:
      nullable: true
    networking.v1.NetworkUpdate:
      type: object
      description: |-
        `Network` represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud
        provider accounts. Dedicated networks support more networking options but can only contain Dedicated clusters.
        Shared networks can contain any cluster type.

        The API allows you to list, create, read, update, and delete your networks.


        Related guide: [APIs to manage networks in Confluent Cloud](https://docs.confluent.io/cloud/current/networking/overview.html).

        ## The Networks Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Network" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `dedicated_networks_per_environment` | Number of dedicated networks per Confluent Cloud environment |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - Network
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/networks/n-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkStatus'
    networking.v1.NetworkSpecUpdate:
      type: object
      description: The desired state of the Network
      properties:
        display_name:
          type: string
          description: The name of the network
          example: prod-aws-us-east1
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
            - $ref: '#/components/schemas/TypedEnvScopedObjectReference'
          nullable: true
          description: The gateway associated with this object. The gateway can be one of networking.v1.Gateway. May be `null` or omitted if not associated with a gateway.
          readOnly: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PeeringList:
      type: object
      description: |-
        Add or remove VPC/VNet peering connections between your VPC/VNet and Confluent Cloud.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).
        * [Use VPC peering connections with Confluent Cloud on Google Cloud](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html).


        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PeeringList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/peerings'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/peerings?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/peerings?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/peerings?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.Peering'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - environment
                      - network
          uniqueItems: true
    networking.v1.Peering:
      type: object
      description: |-
        Add or remove VPC/VNet peering connections between your VPC/VNet and Confluent Cloud.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).
        * [Use VPC peering connections with Confluent Cloud on Google Cloud](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html).


        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - Peering
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/peerings/p-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/peering=p-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PeeringSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PeeringStatus'
    networking.v1.PeeringSpec:
      type: object
      description: The desired state of the Peering
      properties:
        display_name:
          type: string
          description: The name of the peering
          example: prod-peering-use1
        cloud:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPeering'
            - $ref: '#/components/schemas/networking.v1.GcpPeering'
            - $ref: '#/components/schemas/networking.v1.AzurePeering'
          discriminator:
            propertyName: kind
            mapping:
              AwsPeering: '#/components/schemas/networking.v1.AwsPeering'
              GcpPeering: '#/components/schemas/networking.v1.GcpPeering'
              AzurePeering: '#/components/schemas/networking.v1.AzurePeering'
          description: The cloud-specific peering details.
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PeeringStatus:
      type: object
      required:
        - phase
      description: The status of the Peering
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - PENDING_ACCEPT
            - READY
            - FAILED
            - DEPROVISIONING
            - DISCONNECTED
          description: |
            The lifecycle phase of the peering:

              PROVISIONING: peering provisioning is in progress;

              PENDING_ACCEPT: peering connection request is pending acceptance by the customer;

              READY:  peering is ready;

              FAILED: peering is in a failed state;

              DEPROVISIONING: peering deprovisioning is in progress;

              DISCONNECTED: peering has been disconnected in the cloud provider by the customer;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if peering is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if peering is in a failed state
          readOnly: true
      readOnly: true
    networking.v1.AwsPeering:
      type: object
      title: AWS
      description: AWS VPC Peering.
      required:
        - kind
        - account
        - vpc
        - routes
        - customer_region
      properties:
        kind:
          description: Peering kind type.
          type: string
          enum:
            - AwsPeering
        account:
          type: string
          pattern: '^\d{12}$'
          example: '000000000000'
          description: The AWS account ID associated with the VPC you are peering with Confluent Cloud network.
        vpc:
          type: string
          minLength: 1
          description: The VPC ID you are peering with Confluent Cloud network.
          example: vpc-00000000000000000
        routes:
          type: array
          items:
            $ref: '#/components/schemas/networking.v1.Cidr'
          description: |
            The [CIDR blocks](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) of the VPC you are peering
            with Confluent Cloud network. This is used by Confluent Cloud network to route traffic back to your network.
            The CIDR block must be a private range and cannot overlap with the Confluent Cloud CIDR block.
          example:
            - 10.108.16.0/21
        customer_region:
          type: string
          description: The region of the VPC you are peering with Confluent Cloud network.
          example: us-east-1
    networking.v1.GcpPeering:
      type: object
      title: GCP
      description: GCP VPC Peering.
      required:
        - kind
        - project
        - vpc_network
      properties:
        kind:
          description: Peering kind type.
          type: string
          enum:
            - GcpPeering
          example: GcpPeering
        project:
          type: string
          minLength: 1
          description: |
            The Google Cloud project ID associated with the VPC that you are peering with Confluent Cloud network.
          example: my-gcp-project
        vpc_network:
          type: string
          minLength: 1
          description: The name of the VPC that you are peering with Confluent Cloud network.
          example: my-gcp-network
        import_custom_routes:
          type: boolean
          description: |
            Enable customer route import. For more information, see
            [Importing custom routes](https://cloud.google.com/vpc/docs/vpc-peering#importing-exporting-routes).
          example: true
          default: false
    networking.v1.AzurePeering:
      type: object
      title: AZURE
      description: Azure VNet Peering.
      required:
        - kind
        - tenant
        - vnet
        - customer_region
      properties:
        kind:
          description: Peering kind type.
          type: string
          enum:
            - AzurePeering
        tenant:
          type: string
          minLength: 1
          description: |
            The Azure Tenant ID in which your Azure Subscription exists.
            Represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the Azure Portal
            under
            [Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview).
            Must be a valid **32 character UUID string**.
        vnet:
          type: string
          minLength: 1
          description: 'The resource ID of the VNet that you are peering with Confluent Cloud. You can find the name of your Azure VNet in the [Azure Portal on the Overview tab of your Azure Virtual Network](https://portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Network%2FvirtualNetworks).'
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Network/virtualNetworks/my-vnet
        customer_region:
          type: string
          description: The region of the VNet you are peering with Confluent Cloud network.
          example: eastus2
    networking.v1.Cidr:
      type: string
      pattern: ^\d+\.\d+\.\d+\.\d+/\d+$
      description: IPv4 CIDR block
      example: 10.200.0.0/16
    networking.v1.PeeringUpdate:
      type: object
      description: |-
        Add or remove VPC/VNet peering connections between your VPC/VNet and Confluent Cloud.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).
        * [Use VPC peering connections with Confluent Cloud on Google Cloud](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html).


        ## The Peerings Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Peering" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `peerings_per_network` | Number of peerings per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - Peering
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/peerings/p-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/peering=p-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PeeringSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PeeringStatus'
    networking.v1.PeeringSpecUpdate:
      type: object
      description: The desired state of the Peering
      properties:
        display_name:
          type: string
          description: The name of the peering
          example: prod-peering-use1
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.TransitGatewayAttachmentList:
      type: object
      description: |-
        AWS Transit Gateway Attachments

        Related guide: [APIs to manage AWS Transit Gateway Attachments](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html).

        ## The Transit Gateway Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `tgw_attachments_per_network` | Number of TGW attachments per network |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - TransitGatewayAttachmentList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - environment
                      - network
          uniqueItems: true
    networking.v1.TransitGatewayAttachment:
      type: object
      description: |-
        AWS Transit Gateway Attachments

        Related guide: [APIs to manage AWS Transit Gateway Attachments](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html).

        ## The Transit Gateway Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `tgw_attachments_per_network` | Number of TGW attachments per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - TransitGatewayAttachment
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/tga-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/transit-gateway-attachment=tga-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentSpec'
        status:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentStatus'
    networking.v1.TransitGatewayAttachmentSpec:
      type: object
      description: The desired state of the Transit Gateway Attachment
      properties:
        display_name:
          type: string
          description: The name of the TGW attachment
          example: prod-tgw-use1
        cloud:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsTransitGatewayAttachment'
          discriminator:
            propertyName: kind
            mapping:
              AwsTransitGatewayAttachment: '#/components/schemas/networking.v1.AwsTransitGatewayAttachment'
          description: The cloud-specific Transit Gateway details.
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.TransitGatewayAttachmentStatus:
      type: object
      required:
        - phase
      description: The status of the Transit Gateway Attachment
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - READY
            - PENDING_ACCEPT
            - FAILED
            - DEPROVISIONING
            - DISCONNECTED
            - ERROR
          description: |
            The lifecycle phase of the TGW attachment:

              PROVISIONING: attachment provisioning is in progress;

              PENDING_ACCEPT: attachment request is pending acceptance by the customer;

              READY:  attachment is ready;

              FAILED: attachment is in a failed state;

              DEPROVISIONING: attachment deprovisioning is in progress;

              DISCONNECTED: attachment was manually deleted directly in the cloud provider by the customer;

              ERROR: invalid customer input during attachment creation.
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if TGW attachment is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if TGW attachment is in a failed state
          readOnly: true
        cloud:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsTransitGatewayAttachmentStatus'
          description: The cloud-specific TGW attachment details.
          discriminator:
            propertyName: kind
            mapping:
              AwsTransitGatewayAttachmentStatus: '#/components/schemas/networking.v1.AwsTransitGatewayAttachmentStatus'
          readOnly: true
      readOnly: true
    networking.v1.AwsTransitGatewayAttachment:
      type: object
      title: AWS
      description: AWS Transit Gateway Attachment.
      required:
        - kind
        - ram_share_arn
        - transit_gateway_id
        - routes
      properties:
        kind:
          description: AWS Transit Gateway Attachment kind type.
          type: string
          enum:
            - AwsTransitGatewayAttachment
        ram_share_arn:
          description: The full AWS Resource Name (ARN) for the AWS Resource Access Manager (RAM) Share of the Transit Gateways that you want Confluent Cloud to be attached to.
          type: string
          example: 'arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx'
        transit_gateway_id:
          description: The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to.
          type: string
          example: tgw-xxxxxxxxxxxxxxxxx
        routes:
          type: array
          items:
            $ref: '#/components/schemas/networking.v1.Cidr'
          description: List of destination routes.
          example:
            - 100.64.0.0/10
            - 10.0.0.0/8
            - 192.168.0.0/16
            - 172.16.0.0/12
    networking.v1.AwsTransitGatewayAttachmentStatus:
      type: object
      title: AWS
      description: AWS Transit Gateway Attachment details generated by AWS.
      required:
        - transit_gateway_attachment_id
      properties:
        kind:
          description: AWS Transit Gateway Attachment Status kind type.
          type: string
          enum:
            - AwsTransitGatewayAttachmentStatus
        transit_gateway_attachment_id:
          description: The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
          type: string
          example: tgw-attach-xxxxx
          readOnly: true
    networking.v1.TransitGatewayAttachmentUpdate:
      type: object
      description: |-
        AWS Transit Gateway Attachments

        Related guide: [APIs to manage AWS Transit Gateway Attachments](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html).

        ## The Transit Gateway Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.TransitGatewayAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `tgw_attachments_per_network` | Number of TGW attachments per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - TransitGatewayAttachment
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/tga-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/transit-gateway-attachment=tga-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentStatus'
    networking.v1.TransitGatewayAttachmentSpecUpdate:
      type: object
      description: The desired state of the Transit Gateway Attachment
      properties:
        display_name:
          type: string
          description: The name of the TGW attachment
          example: prod-tgw-use1
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAccessList:
      type: object
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account, Azure subscription and GCP project ID.

        Related guides:
        * [Use Google Cloud Private Service Connect with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/gcp-private-service-connect.html).
        * [Use Azure Private Link with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html).
        * [Use AWS PrivateLink with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).


        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_accounts_per_network` | Number of AWS accounts per network |
        | `private_link_subscriptions_per_network` | Number of Azure subscriptions per network |
        | `private_service_connect_projects_per_network` | Number of GCP projects per network |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAccessList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - environment
                      - network
          uniqueItems: true
    networking.v1.PrivateLinkAccess:
      type: object
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account, Azure subscription and GCP project ID.

        Related guides:
        * [Use Google Cloud Private Service Connect with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/gcp-private-service-connect.html).
        * [Use Azure Private Link with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html).
        * [Use AWS PrivateLink with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).


        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_accounts_per_network` | Number of AWS accounts per network |
        | `private_link_subscriptions_per_network` | Number of Azure subscriptions per network |
        | `private_service_connect_projects_per_network` | Number of GCP projects per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAccess
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses/pla-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/private-link-access=pla-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessStatus'
    networking.v1.PrivateLinkAccessSpec:
      type: object
      description: The desired state of the Private Link Access
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink access
          example: prod-pl-use1
        cloud:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPrivateLinkAccess'
            - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkAccess'
            - $ref: '#/components/schemas/networking.v1.GcpPrivateServiceConnectAccess'
          discriminator:
            propertyName: kind
            mapping:
              AwsPrivateLinkAccess: '#/components/schemas/networking.v1.AwsPrivateLinkAccess'
              AzurePrivateLinkAccess: '#/components/schemas/networking.v1.AzurePrivateLinkAccess'
              GcpPrivateServiceConnectAccess: '#/components/schemas/networking.v1.GcpPrivateServiceConnectAccess'
          description: The cloud-specific PrivateLink details.
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAccessStatus:
      type: object
      required:
        - phase
      description: The status of the Private Link Access
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - READY
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the PrivateLink access configuration:

              PROVISIONING: PrivateLink access provisioning is in progress;

              READY:  PrivateLink access is ready;

              FAILED: PrivateLink access is in a failed state;

              DEPROVISIONING: PrivateLink access deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if PrivateLink access is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if PrivateLink access is in a failed state
          readOnly: true
      readOnly: true
    networking.v1.AwsPrivateLinkAccess:
      type: object
      title: AWS
      description: AWS PrivateLink access configuration.
      required:
        - kind
        - account
      properties:
        kind:
          description: PrivateLink kind type.
          type: string
          enum:
            - AwsPrivateLinkAccess
        account:
          type: string
          pattern: '^\d{12}$'
          example: '000000000000'
          description: |
            The AWS account ID for the account containing the VPCs you want to connect from using AWS PrivateLink.
            You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account)
            under **My Account** in your AWS Management Console. Must be a **12 character string**.
    networking.v1.AzurePrivateLinkAccess:
      type: object
      title: AZURE
      description: Azure PrivateLink access configuration.
      required:
        - kind
        - subscription
      properties:
        kind:
          description: PrivateLink kind type.
          type: string
          enum:
            - AzurePrivateLinkAccess
        subscription:
          type: string
          minLength: 1
          description: |
            The Azure subscription ID for the account containing the VNets you want to connect from using
            Azure Private Link. You can find your Azure subscription ID in the subscription section of your
            [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade).
            Must be a valid **32 character UUID string**.
    networking.v1.GcpPrivateServiceConnectAccess:
      type: object
      title: GCP
      description: GCP Private Service Connect access configuration.
      required:
        - kind
        - project
      properties:
        kind:
          description: PrivateLink kind type.
          type: string
          enum:
            - GcpPrivateServiceConnectAccess
        project:
          type: string
          minLength: 1
          description: |
            The GCP project ID for the account containing the VPCs that you want to connect from
            using Private Service Connect. You can find your Google Cloud Project ID under **Project ID** section of
            your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
    networking.v1.PrivateLinkAccessUpdate:
      type: object
      description: |-
        Add or remove access to PrivateLink endpoints by AWS account, Azure subscription and GCP project ID.

        Related guides:
        * [Use Google Cloud Private Service Connect with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/gcp-private-service-connect.html).
        * [Use Azure Private Link with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html).
        * [Use AWS PrivateLink with Confluent Cloud](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).


        ## The Private Link Accesses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAccess" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_accounts_per_network` | Number of AWS accounts per network |
        | `private_link_subscriptions_per_network` | Number of Azure subscriptions per network |
        | `private_service_connect_projects_per_network` | Number of GCP projects per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAccess
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-accesses/pla-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/private-link-access=pla-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAccessStatus'
    networking.v1.PrivateLinkAccessSpecUpdate:
      type: object
      description: The desired state of the Private Link Access
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink access
          example: prod-pl-use1
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkServiceList:
      type: object
      description: |-
        Network Link Service is associated with a Private Link Confluent Cloud Network.
        It enables connectivity from other Private Link Confluent Cloud Networks based on
        the configured accept policies.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Services Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkService" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_service_per_network` | Number of network link services per network |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkServiceList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.NetworkLinkService'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - environment
                      - network
          uniqueItems: true
    networking.v1.NetworkLinkService:
      type: object
      description: |-
        Network Link Service is associated with a Private Link Confluent Cloud Network.
        It enables connectivity from other Private Link Confluent Cloud Networks based on
        the configured accept policies.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Services Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkService" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_service_per_network` | Number of network link services per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkService
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceSpec'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceStatus'
    networking.v1.NetworkLinkServiceSpec:
      type: object
      description: The desired state of the Network Link Service
      properties:
        display_name:
          type: string
          description: The name of the network link service
          example: prod-net-1-nls
        description:
          type: string
          description: The description of the network link service
          example: Allow connections from analytics hub
        accept:
          description: Network Link Service Accept policy
          allOf:
            - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAcceptPolicy'
        environment:
          allOf:
            - $ref: '#/components/schemas/GlobalObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
            - $ref: '#/components/schemas/EnvScopedObjectReference'
          description: The network to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkServiceStatus:
      type: object
      required:
        - phase
      description: The status of the Network Link Service
      properties:
        phase:
          type: string
          x-extensible-enum:
            - READY
          description: |
            The lifecycle phase of the network link service:

            READY:  network link service is ready;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: |
            Error code if network link service is in a failed state.
            May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if network link service is in a failed state
          readOnly: true
      readOnly: true
    networking.v1.NetworkLinkServiceAcceptPolicy:
      type: object
      title: Network Link Service
      description: |
        List of environments/networks from which connections can be accepted on this network link service.
      properties:
        environments:
          description: |
            List of environments from which connections can be accepted.
            All networks win the list of environment will be allowed.
          type: array
          items:
            type: string
          uniqueItems: true
        networks:
          description: |
            List of networks from which connections can be accepted.
          type: array
          items:
            type: string
          uniqueItems: true
    GlobalObjectReference:
      type: object
      description: ObjectReference provides information for you to locate the referred object
      required:
        - id
        - related
        - resource_name
      properties:
        id:
          type: string
          description: ID of the referred resource
          minLength: 1
          maxLength: 255
        related:
          type: string
          format: uri
          description: API URL for accessing or modifying the referred object
          minLength: 1
          readOnly: true
        resource_name:
          type: string
          format: uri
          description: CRN reference to the referred resource
          minLength: 1
          readOnly: true
    EnvScopedObjectReference:
      type: object
      description: ObjectReference provides information for you to locate the referred object
      required:
        - id
        - related
        - resource_name
      properties:
        id:
          type: string
          description: ID of the referred resource
          minLength: 1
          maxLength: 255
        environment:
          type: string
          description: 'Environment of the referred resource, if env-scoped'
          minLength: 1
          maxLength: 255
        related:
          type: string
          format: uri
          description: API URL for accessing or modifying the referred object
          minLength: 1
          readOnly: true
        resource_name:
          type: string
          format: uri
          description: CRN reference to the referred resource
          minLength: 1
          readOnly: true
    networking.v1.NetworkLinkServiceUpdate:
      type: object
      description: |-
        Network Link Service is associated with a Private Link Confluent Cloud Network.
        It enables connectivity from other Private Link Confluent Cloud Networks based on
        the configured accept policies.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Services Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkService" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_service_per_network` | Number of network link services per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkService
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceStatus'
    networking.v1.NetworkLinkServiceSpecUpdate:
      type: object
      description: The desired state of the Network Link Service
      properties:
        display_name:
          type: string
          description: The name of the network link service
          example: prod-net-1-nls
        description:
          type: string
          description: The description of the network link service
          example: Allow connections from analytics hub
        accept:
          description: Network Link Service Accept policy
          allOf:
            - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAcceptPolicy'
        environment:
          allOf:
            - $ref: '#/components/schemas/GlobalObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkEndpointList:
      type: object
      description: |-
        A Network Link Enpoint is associated with a Private Link Confluent Cloud Network at the origin and a
        Network Link Service (associated with another Private Link Confluent Cloud Network) at the target.
        It enables connectivity between the origin network and the target network.
        It can only be associated with a Private Link network.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Endpoints Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkEndpoint" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_endpoints_per_network` | Number of network link endpoints per network |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkEndpointList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpoint'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - environment
                      - network
                      - network_link_service
          uniqueItems: true
    networking.v1.NetworkLinkEndpoint:
      type: object
      description: |-
        A Network Link Enpoint is associated with a Private Link Confluent Cloud Network at the origin and a
        Network Link Service (associated with another Private Link Confluent Cloud Network) at the target.
        It enables connectivity between the origin network and the target network.
        It can only be associated with a Private Link network.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Endpoints Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkEndpoint" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_endpoints_per_network` | Number of network link endpoints per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkEndpoint
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints/nle-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-endpoint=nle-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointSpec'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointStatus'
    networking.v1.NetworkLinkEndpointSpec:
      type: object
      description: The desired state of the Network Link Endpoint
      properties:
        display_name:
          type: string
          description: The name of the network link endpoint
          example: prod-net-1-nle
        description:
          type: string
          description: The description of the network link endpoint
          example: Connect to Network - analytics hub
        environment:
          allOf:
            - $ref: '#/components/schemas/GlobalObjectReference'
          description: The environment to which this belongs.
        network:
          allOf:
            - $ref: '#/components/schemas/EnvScopedObjectReference'
          description: The network to which this belongs.
          x-immutable: true
        network_link_service:
          allOf:
            - $ref: '#/components/schemas/EnvScopedObjectReference'
          description: The network_link_service to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkEndpointStatus:
      type: object
      required:
        - phase
      description: The status of the Network Link Endpoint
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - PENDING_ACCEPT
            - READY
            - FAILED
            - DEPROVISIONING
            - EXPIRED
            - DISCONNECTED
            - DISCONNECTING
            - INACTIVE
          description: |
            The lifecycle phase of the network link endpoint:

              PROVISIONING: network link endpoint provisioning is in progress;

              PENDING_ACCEPT: network link endpoint request is pending acceptance by the the owner of the target;

              READY:  network link endpoint is ready;

              FAILED: network link endpoint is in a failed state;

              DEPROVISIONING: network link endpoint deprovisioning is in progress;

              EXPIRED: network link endpoint request is expired, can only be deleted;

              DISCONNECTED: network link endpoint is in a disconnected state, target owner has removed the permissions;

              DISCONNECTING: network link endpoint disconnection is in progress;

              INACTIVE: network link endpoint is created, but not active since there are no clusters in the network;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if network link is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if network link is in a failed state
          readOnly: true
        expires_at:
          type: string
          format: date-time
          example: '2024-01-01T00:00:00Z'
          description: The date and time when the request expires if it is not accepted by the target network admin.
          readOnly: true
      readOnly: true
    networking.v1.NetworkLinkEndpointUpdate:
      type: object
      description: |-
        A Network Link Enpoint is associated with a Private Link Confluent Cloud Network at the origin and a
        Network Link Service (associated with another Private Link Confluent Cloud Network) at the target.
        It enables connectivity between the origin network and the target network.
        It can only be associated with a Private Link network.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Endpoints Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkEndpoint" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `network_link_endpoints_per_network` | Number of network link endpoints per network |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkEndpoint
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints/nle-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-endpoint=nle-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointStatus'
    networking.v1.NetworkLinkEndpointSpecUpdate:
      type: object
      description: The desired state of the Network Link Endpoint
      properties:
        display_name:
          type: string
          description: The name of the network link endpoint
          example: prod-net-1-nle
        description:
          type: string
          description: The description of the network link endpoint
          example: Connect to Network - analytics hub
        environment:
          allOf:
            - $ref: '#/components/schemas/GlobalObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkServiceAssociationList:
      type: object
      description: |-
        List of incoming Network Link Enpoints associated with the Network Link Service.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Service Associations Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkServiceAssociation" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkServiceAssociationList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-service-associations'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-service-associations?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-service-associations?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-service-associations?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAssociation'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - display_name
                      - network_link_endpoint
                      - network_link_service
                      - environment
          uniqueItems: true
    networking.v1.NetworkLinkServiceAssociation:
      type: object
      description: |-
        List of incoming Network Link Enpoints associated with the Network Link Service.


        Related guide: [Network Linking Overview](https://docs.confluent.io/cloud/current/networking/network-linking.html).

        ## The Network Link Service Associations Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.NetworkLinkServiceAssociation" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - NetworkLinkServiceAssociation
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/network-link-service-associations/nlsa-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-12345/network-link-endpoint=nle-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAssociationSpec'
        status:
          $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAssociationStatus'
    networking.v1.NetworkLinkServiceAssociationSpec:
      type: object
      description: The desired state of the Network Link Service Association
      properties:
        display_name:
          type: string
          description: The name of the network link endpoint
          readOnly: true
          example: prod-net-1-nle
        description:
          type: string
          description: The description of the network link endpoint
          readOnly: true
          example: Connect to Network - analytics hub
        network_link_endpoint:
          type: string
          description: ID of the Network link endpoint.
          readOnly: true
          example: prod-net-1-nle
        network_link_service:
          allOf:
            - $ref: '#/components/schemas/EnvScopedObjectReference'
          description: The network_link_service to which this belongs.
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/GlobalObjectReference'
          description: The environment to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.NetworkLinkServiceAssociationStatus:
      type: object
      required:
        - phase
      description: The status of the Network Link Service Association
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - PENDING_ACCEPT
            - READY
            - FAILED
            - DEPROVISIONING
            - EXPIRED
            - DISCONNECTED
            - DISCONNECTING
            - INACTIVE
          description: |
            The lifecycle phase of the network link endpoint:

              PROVISIONING: network link endpoint provisioning is in progress;

              PENDING_ACCEPT: network link endpoint request is pending acceptance by the the owner of the target;

              READY:  network link endpoint is ready;

              FAILED: network link endpoint is in a failed state;

              DEPROVISIONING: network link endpoint deprovisioning is in progress;

              EXPIRED: network link endpoint request is expired, can only be deleted;

              DISCONNECTED: network link endpoint is in a disconnected state, target owner has removed the permissions;

              DISCONNECTING: network link endpoint disconnection is in progress;

              INACTIVE: network link endpoint is created, but not active since there are no clusters in the network;
          example: READY
          readOnly: true
        error_code:
          type: string
          description: Error code if network link is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if network link is in a failed state
          readOnly: true
        expires_at:
          type: string
          format: date-time
          example: '2024-01-01T00:00:00Z'
          description: The date and time when the request expires if it is not accepted by the target network admin.
          readOnly: true
      readOnly: true
    networking.v1.GatewayList:
      type: object
      description: |-
        A gateway is a resource that defines network access to Confluent cloud resources.


        ## The Gateways Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Gateway" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - GatewayList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/gateways'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/gateways?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/gateways?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/gateways?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.Gateway'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - config
                      - environment
          uniqueItems: true
    networking.v1.Gateway:
      type: object
      description: |-
        A gateway is a resource that defines network access to Confluent cloud resources.


        ## The Gateways Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.Gateway" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - Gateway
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/gateways/g-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=g-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.GatewaySpec'
        status:
          $ref: '#/components/schemas/networking.v1.GatewayStatus'
    networking.v1.GatewaySpec:
      type: object
      description: The desired state of the Gateway
      properties:
        display_name:
          type: string
          description: The name of the gateway
          example: prod-gateway
        config:
          type: object
          description: Gateway type specific configuration
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPeeringGatewaySpec'
            - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkGatewaySpec'
            - $ref: '#/components/schemas/networking.v1.AzurePeeringGatewaySpec'
            - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkGatewaySpec'
          discriminator:
            propertyName: kind
            mapping:
              AwsPeeringGatewaySpec: '#/components/schemas/networking.v1.AwsPeeringGatewaySpec'
              AwsEgressPrivateLinkGatewaySpec: '#/components/schemas/networking.v1.AwsEgressPrivateLinkGatewaySpec'
              AzurePeeringGatewaySpec: '#/components/schemas/networking.v1.AzurePeeringGatewaySpec'
              AzureEgressPrivateLinkGatewaySpec: '#/components/schemas/networking.v1.AzureEgressPrivateLinkGatewaySpec'
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.GatewayStatus:
      type: object
      required:
        - phase
      description: The status of the Gateway
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - READY
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the gateway:

              PROVISIONING: gateway provisioning is in progress;

              READY:  gateway is ready;

              FAILED: gateway is in a failed state;

              DEPROVISIONING: gateway deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if gateway is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if gateway is in a failed state
          readOnly: true
        cloud_gateway:
          type: object
          description: Gateway type specific status
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkGatewayStatus'
            - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkGatewayStatus'
          readOnly: true
          discriminator:
            propertyName: kind
            mapping:
              AwsEgressPrivateLinkGatewayStatus: '#/components/schemas/networking.v1.AwsEgressPrivateLinkGatewayStatus'
              AzureEgressPrivateLinkGatewayStatus: '#/components/schemas/networking.v1.AzureEgressPrivateLinkGatewayStatus'
      readOnly: true
    networking.v1.AwsPeeringGatewaySpec:
      type: object
      description: AWS Peering Gateway details from AWS.
      required:
        - kind
        - region
      properties:
        kind:
          description: AWS Peering Gateway Spec kind type.
          type: string
          enum:
            - AwsPeeringGatewaySpec
        region:
          type: string
          description: AWS region of the Peering Gateway.
    networking.v1.AwsEgressPrivateLinkGatewaySpec:
      type: object
      description: AWS Egress Private Link Gateway details from AWS.
      required:
        - kind
        - region
      properties:
        kind:
          description: AWS Egress Private Link Gateway Spec kind type.
          type: string
          enum:
            - AwsEgressPrivateLinkGatewaySpec
        region:
          type: string
          description: AWS region of the Egress Private Link Gateway.
    networking.v1.AzurePeeringGatewaySpec:
      type: object
      description: Azure Peering Gateway details from Azure.
      required:
        - kind
        - region
      properties:
        kind:
          description: Azure Peering Gateway Spec kind type.
          type: string
          enum:
            - AzurePeeringGatewaySpec
        region:
          type: string
          description: Azure region of the Peering Gateway.
    networking.v1.AzureEgressPrivateLinkGatewaySpec:
      type: object
      description: Azure Egress Private Link Gateway details from Azure.
      required:
        - kind
        - region
      properties:
        kind:
          description: Azure Egress Private Link Gateway Spec kind type.
          type: string
          enum:
            - AzureEgressPrivateLinkGatewaySpec
        region:
          type: string
          description: Azure region of the Egress Private Link Gateway.
    networking.v1.AwsEgressPrivateLinkGatewayStatus:
      type: object
      required:
        - kind
      description: AWS Egress Private Link Gateway details from AWS.
      properties:
        kind:
          description: AWS Egress Private Link Gateway Status kind type.
          type: string
          enum:
            - AwsEgressPrivateLinkGatewayStatus
        principal_arn:
          description: The principal ARN used by the AWS Egress Private Link Gateway.
          type: string
          example: 'arn:aws:iam::123456789012:cc-tenant-1-role'
          readOnly: true
    networking.v1.AzureEgressPrivateLinkGatewayStatus:
      type: object
      required:
        - kind
      description: Azure Egress Private Link Gateway details from Azure.
      properties:
        kind:
          description: Azure Egress Private Link Gateway Status kind type.
          type: string
          enum:
            - AzureEgressPrivateLinkGatewayStatus
        subscription:
          type: string
          description: The Azure Subscription ID associated with the Confluent Cloud VPC.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
    networking.v1.IpAddressList:
      type: object
      description: |-
        IP Addresses

        Related guide: [Use Public Egress IP Addresses on Confluent Cloud](https://docs.confluent.io/cloud/current/networking/static-egress-ip-addresses.html)

        ## The IP Addresses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.IpAddress" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - IpAddressList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/ip-addresses'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/ip-addresses?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/ip-addresses?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/ip-addresses?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.IpAddress'
              - type: object
          uniqueItems: true
    networking.v1.IpAddress:
      type: object
      description: |-
        IP Addresses

        Related guide: [Use Public Egress IP addresses on Confluent Cloud](https://docs.confluent.io/cloud/current/networking/static-egress-ip-addresses.html)

        ## The IP Addresses Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.IpAddress" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - IpAddress
        ip_prefix:
          type: string
          pattern: ^\d+\.\d+\.\d+\.\d+/\d+$
          description: The IP Address range.
          example: 10.200.0.0/28
        cloud:
          type: string
          description: The cloud service provider in which the address exists.
          x-extensible-enum:
            - AWS
            - GCP
            - AZURE
            - ANY
          example: AWS
        region:
          type: string
          description: The region/location where the IP Address is in use.
          example: us-east-1
        services:
          type: array
          description: The service types that will use the address.
          items:
            type: string
            description: Address service type.
            x-extensible-enum:
              - KAFKA
              - CONNECT
              - EXTERNAL_OAUTH
            example: CONNECT
          uniqueItems: true
          minItems: 1
        address_type:
          type: string
          description: Whether the address is used for egress or ingress.
          x-extensible-enum:
            - INGRESS
            - EGRESS
          example: EGRESS
    networking.v1.PrivateLinkAttachmentList:
      type: object
      description: |-
        PrivateLink attachment objects represent reservations to establish PrivateLink connections
        to a cloud region in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachments.


        ## The Private Link Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_attachments_per_environment` | Number of PrivateLink Attachments per environment |
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachmentList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachment'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - region
                      - environment
          uniqueItems: true
    networking.v1.PrivateLinkAttachment:
      type: object
      description: |-
        PrivateLink attachment objects represent reservations to establish PrivateLink connections
        to a cloud region in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachments.


        ## The Private Link Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_attachments_per_environment` | Number of PrivateLink Attachments per environment |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachment
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentStatus'
    networking.v1.PrivateLinkAttachmentSpec:
      type: object
      description: The desired state of the Private Link Attachment
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink attachment.
          example: prod-aws-us-east1
        cloud:
          type: string
          description: |
            The cloud service provider that hosts the resources to access with the PrivateLink attachment.
          x-extensible-enum:
            - AWS
            - GCP
            - AZURE
          example: AWS
          x-immutable: true
        region:
          type: string
          description: |
            The cloud service provider region where the resources to be accessed
            using the PrivateLink attachment are located.
          example: us-east-1
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAttachmentStatus:
      type: object
      required:
        - phase
      description: The status of the Private Link Attachment
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - WAITING_FOR_CONNECTIONS
            - READY
            - FAILED
            - EXPIRED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the PrivateLink attachment:

              PROVISIONING: PrivateLink attachment provisioning is in progress;

              WAITING_FOR_CONNECTIONS: PrivateLink attachment is waiting for connections;

              READY: PrivateLink attachment is ready;

              FAILED: PrivateLink attachment is in a failed state;

              EXPIRED: PrivateLink attachment has timed out waiting for connections, can only be deleted;

              DEPROVISIONING: PrivateLink attachment deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if PrivateLink attachment is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if PrivateLink attachment is in a failed state.
          readOnly: true
        dns_domain:
          type: string
          description: The root DNS domain for the PrivateLink attachment.
          example: us-east-1.aws.private.confluent.cloud
          readOnly: true
        cloud:
          type: object
          description: The cloud specific status of the PrivateLink attachment. These will be populated when the PrivateLink attachment reaches the WAITING_FOR_CONNECTIONS state.
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentStatus'
            - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentStatus'
            - $ref: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentStatus'
          discriminator:
            propertyName: kind
            mapping:
              AwsPrivateLinkAttachmentStatus: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentStatus'
              AzurePrivateLinkAttachmentStatus: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentStatus'
              GcpPrivateLinkAttachmentStatus: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentStatus'
          readOnly: true
      readOnly: true
    networking.v1.AwsPrivateLinkAttachmentStatus:
      description: |
        AWS PrivateLink attachment represents reserved capacity in an
        AWS VPC Endpoint Service that can be used to establish PrivateLink
        connections.
      type: object
      required:
        - kind
        - vpc_endpoint_service
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentStatus kind.
          enum:
            - AwsPrivateLinkAttachmentStatus
          readOnly: true
        vpc_endpoint_service:
          description: |
            AWS VPC Endpoint Service that can be used to establish connections for all zones.
          type: object
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/networking.v1.AwsVpcEndpointService'
    networking.v1.AzurePrivateLinkAttachmentStatus:
      type: object
      description: |
        Azure PrivateLink attachment represents reserved capacity in a
        PrivateLink service that can be used to establish PrivateLink
      required:
        - kind
        - private_link_service
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentStatus kind.
          enum:
            - AzurePrivateLinkAttachmentStatus
          readOnly: true
        private_link_service:
          description: |
            Azure PrivateLink service that can be used to connect to a PrivateEndpoint.
          type: object
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkService'
    networking.v1.GcpPrivateLinkAttachmentStatus:
      type: object
      description: |
        GCP PrivateLink attachment represents reserved capacity in zonal
        GCP PSC Service attachments.  A PSC Endpoint can be connected to
        the Service attachment corresponding to each zone.
      required:
        - kind
        - service_attachments
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentStatus kind.
          enum:
            - GcpPrivateLinkAttachmentStatus
          readOnly: true
        service_attachments:
          description: |
            Array of GCP PSC Service attachments that can be used to connect
            PSC Endpoints for each zone.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/networking.v1.GcpPscServiceAttachment'
    networking.v1.AwsVpcEndpointService:
      description: |
        AWS VPC Endpoint service that can be used to create VPC Endpoints.
      type: object
      required:
        - vpc_endpoint_service_name
      properties:
        vpc_endpoint_service_name:
          type: string
          description: Id of the VPC Endpoint service.
          readOnly: true
    networking.v1.AzurePrivateLinkService:
      type: object
      description: |
        Azure Private Link Service with reserved capacity to connect a Private Endpoint.
      required:
        - private_link_service_alias
        - private_link_service_resource_id
      properties:
        private_link_service_alias:
          description: Azure PrivateLink service alias.
          type: string
          minLength: 1
          readOnly: true
          example: pls-plt-abcdef-az3.38748da8-3322-42f7-b97a-6448c21af653.centralus.azure.privatelinkservice
        private_link_service_resource_id:
          description: Azure PrivateLink service resource id.
          type: string
          minLength: 1
          readOnly: true
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef
    networking.v1.GcpPscServiceAttachment:
      type: object
      description: |
        GCP PSC Service attachment for a zone with reserved capacity to
        connect a PSC Endpoint.
      required:
        - zone
        - private_service_connect_service_attachment
      properties:
        zone:
          description: Zone associated with the PSC Service attachment.
          type: string
          minLength: 1
          readOnly: true
          example: us-central1-a
        private_service_connect_service_attachment:
          description: Id of a Private Service Connect Service Attachment in Confluent Cloud.
          type: string
          minLength: 1
          readOnly: true
          example: projects/example-project/regions/us-central1/serviceAttachments/plt-abcdef-service-attachment-us-central1-a
    networking.v1.PrivateLinkAttachmentUpdate:
      type: object
      description: |-
        PrivateLink attachment objects represent reservations to establish PrivateLink connections
        to a cloud region in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachments.


        ## The Private Link Attachments Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachment" />

        ## Quotas and Limits
        This resource is subject to the [following quotas](https://docs.confluent.io/cloud/current/quotas/overview.html):

        | Quota | Description |
        | --- | --- |
        | `private_link_attachments_per_environment` | Number of PrivateLink Attachments per environment |
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachment
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentStatus'
    networking.v1.PrivateLinkAttachmentSpecUpdate:
      type: object
      description: The desired state of the Private Link Attachment
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink attachment.
          example: prod-aws-us-east1
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAttachmentConnectionList:
      type: object
      description: |-
        PrivateLink attachment connection objects represent connections established to a cloud region
        in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachment connections.


        ## The Private Link Attachment Connections Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachmentConnection" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachmentConnectionList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnection'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - cloud
                      - environment
                      - private_link_attachment
          uniqueItems: true
    networking.v1.PrivateLinkAttachmentConnection:
      type: object
      description: |-
        PrivateLink attachment connection objects represent connections established to a cloud region
        in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachment connections.


        ## The Private Link Attachment Connections Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachmentConnection" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachmentConnection
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/plattc-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment-connection=plattc-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionSpec'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionStatus'
    networking.v1.PrivateLinkAttachmentConnectionSpec:
      type: object
      description: The desired state of the Private Link Attachment Connection
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink attachment connection.
          example: prod-gcp-us-central1-a
        cloud:
          type: object
          description: The cloud-specific PrivateLink attachment connection details.
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentConnection'
            - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentConnection'
            - $ref: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentConnection'
          discriminator:
            propertyName: kind
            mapping:
              AwsPrivateLinkAttachmentConnection: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentConnection'
              AzurePrivateLinkAttachmentConnection: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentConnection'
              GcpPrivateLinkAttachmentConnection: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentConnection'
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        private_link_attachment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The private_link_attachment to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.PrivateLinkAttachmentConnectionStatus:
      type: object
      required:
        - phase
      description: The status of the Private Link Attachment Connection
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - READY
            - FAILED
            - DEPROVISIONING
            - DISCONNECTED
          description: |
            The lifecycle phase of the PrivateLink attachment:

              PROVISIONING: PrivateLink attachment connection provisioning is in progress;

              READY: PrivateLink attachment connection is ready;

              FAILED: PrivateLink attachment connection is in a failed state;

              DEPROVISIONING: PrivateLink attachment connection deprovisioning is in progress;

              DISCONNECTED:|
                PrivateLink attachment connection is in a disconnected state. This means the
                private endpoint associated with this PrivateLink attachment connection has been deleted;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if PrivateLink attachment connection is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if PrivateLink attachment connection is in a failed state.
          readOnly: true
        cloud:
          type: object
          description: The cloud specific status of the PrivateLink attachment connection.
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentConnectionStatus'
            - $ref: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentConnectionStatus'
            - $ref: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentConnectionStatus'
          discriminator:
            propertyName: kind
            mapping:
              AwsPrivateLinkAttachmentConnectionStatus: '#/components/schemas/networking.v1.AwsPrivateLinkAttachmentConnectionStatus'
              AzurePrivateLinkAttachmentConnectionStatus: '#/components/schemas/networking.v1.AzurePrivateLinkAttachmentConnectionStatus'
              GcpPrivateLinkAttachmentConnectionStatus: '#/components/schemas/networking.v1.GcpPrivateLinkAttachmentConnectionStatus'
          readOnly: true
      readOnly: true
    networking.v1.AwsPrivateLinkAttachmentConnection:
      description: Represents a connection between an AWS VPC Endpoint and an Endpoint service.
      type: object
      required:
        - kind
        - vpc_endpoint_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnection kind.
          enum:
            - AwsPrivateLinkAttachmentConnection
        vpc_endpoint_id:
          description: Id of a VPC Endpoint that is connected to the VPC Endpoint service.
          type: string
          minLength: 1
          example: vpce-00000000000000000
    networking.v1.AzurePrivateLinkAttachmentConnection:
      description: Represents a connection between an Azure PrivateLink service and a PrivateEndpoint.
      type: object
      required:
        - kind
        - private_endpoint_resource_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnection kind.
          enum:
            - AzurePrivateLinkAttachmentConnection
        private_endpoint_resource_id:
          description: |
            Resource Id of the PrivateEndpoint that is connected to the PrivateLink service.
          type: string
          minLength: 1
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testvpc/providers/Microsoft.Network/privateEndpoints/pe-plt-abcdef-az3
    networking.v1.GcpPrivateLinkAttachmentConnection:
      type: object
      description: Represents a connection between a GCP PSC Service Attachment and a PSC Endpoint.
      required:
        - kind
        - private_service_connect_connection_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnection kind.
          enum:
            - GcpPrivateLinkAttachmentConnection
        private_service_connect_connection_id:
          description: Id of the Private Service connection.
          type: string
          minLength: 1
          readOnly: true
          example: '00000000000000000'
    networking.v1.AwsPrivateLinkAttachmentConnectionStatus:
      description: Status of a connection to an AWS PrivateLink attachment.
      type: object
      required:
        - kind
        - vpc_endpoint_service_name
        - vpc_endpoint_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnectionStatus kind.
          enum:
            - AwsPrivateLinkAttachmentConnectionStatus
        vpc_endpoint_service_name:
          description: Id of the VPC Endpoint service used for PrivateLink.
          type: string
          minLength: 1
          example: com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000
          readOnly: true
        vpc_endpoint_id:
          description: Id of the VPC Endpoint (if any) that is connected to the VPC Endpoint service.
          type: string
          minLength: 1
          readOnly: true
          example: vpce-00000000000000000
    networking.v1.AzurePrivateLinkAttachmentConnectionStatus:
      description: Status of an Azure PrivateLink attachment connection for an availability zone.
      type: object
      required:
        - kind
        - zone
        - private_link_service_alias
        - private_link_service_resource_id
        - private_endpoint_resource_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnectionStatus kind.
          enum:
            - AzurePrivateLinkAttachmentConnectionStatus
        zone:
          description: Availability zone associated with the Azure PrivateLink service.
          type: string
          minLength: 1
          readOnly: true
          example: '1'
        private_link_service_alias:
          description: Azure PrivateLink service alias for the availability zone.
          type: string
          minLength: 1
          readOnly: true
          example: pls-plt-abcdef-az3.38748da8-3322-42f7-b97a-6448c21af653.centralus.azure.privatelinkservice
        private_link_service_resource_id:
          description: Azure PrivateLink service resource id for the availability zone.
          type: string
          minLength: 1
          readOnly: true
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef-az3
        private_endpoint_resource_id:
          description: |
            Resource Id of the PrivateEndpoint (if any) that is connected to
            the PrivateLink service for this availability zone.
          type: string
          minLength: 1
          readOnly: true
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testvpc/providers/Microsoft.Network/privateEndpoints/pe-plt-abcdef-az3
    networking.v1.GcpPrivateLinkAttachmentConnectionStatus:
      description: Status of a GCP PrivateLink attachment connection for a zone.
      type: object
      required:
        - kind
        - zone
        - private_service_connect_service_attachment
        - private_service_connect_connection_id
      properties:
        kind:
          type: string
          description: PrivateLinkAttachmentConnectionStatus kind.
          enum:
            - GcpPrivateLinkAttachmentConnectionStatus
        zone:
          description: Zone associated with the GCP PrivateLink attachment connection.
          type: string
          minLength: 1
          readOnly: true
          example: us-central1-a
        private_service_connect_service_attachment:
          description: GCP Private Service Connect ServiceAttachment for the zone.
          type: string
          minLength: 1
          readOnly: true
          example: projects/example-project/regions/us-central1/serviceAttachments/plt-abcdef-service-attachment-us-central1-a
        private_service_connect_connection_id:
          description: Id of the Private Service connection.
          type: string
          minLength: 1
          readOnly: true
          example: '00000000000000000'
    networking.v1.PrivateLinkAttachmentConnectionUpdate:
      type: object
      description: |-
        PrivateLink attachment connection objects represent connections established to a cloud region
        in order to access resources that belong to a Confluent Cloud Environment.
        The API allows you to list, create, read update and delete your PrivateLink attachment connections.


        ## The Private Link Attachment Connections Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.PrivateLinkAttachmentConnection" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - PrivateLinkAttachmentConnection
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/plattc-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment-connection=plattc-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionStatus'
    networking.v1.PrivateLinkAttachmentConnectionSpecUpdate:
      type: object
      description: The desired state of the Private Link Attachment Connection
      properties:
        display_name:
          type: string
          description: The name of the PrivateLink attachment connection.
          example: prod-gcp-us-central1-a
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsForwarderList:
      type: object
      description: |-
        Add, remove, and update DNS forwarder for your gateway.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).


        ## The DNS Forwarders Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsForwarder" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsForwarderList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.DnsForwarder'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - domains
                      - config
                      - environment
                      - gateway
          uniqueItems: true
    networking.v1.DnsForwarder:
      type: object
      description: |-
        Add, remove, and update DNS forwarder for your gateway.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).


        ## The DNS Forwarders Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsForwarder" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsForwarder
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders/df-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-forwarder=df-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.DnsForwarderSpec'
        status:
          $ref: '#/components/schemas/networking.v1.DnsForwarderStatus'
    networking.v1.DnsForwarderSpec:
      type: object
      description: The desired state of the Dns Forwarder
      properties:
        display_name:
          type: string
          description: The name of the DNS forwarder
          example: prod-dnsf-1
        domains:
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 0
          maxItems: 10
          description: List of domains for the DNS forwarder to use
          example:
            - example.com
            - domainname.com
        config:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.ForwardViaIp'
          discriminator:
            propertyName: kind
            mapping:
              ForwardViaIp: '#/components/schemas/networking.v1.ForwardViaIp'
          description: The specific details of different kinds of configuration for DNS Forwarder.
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The gateway to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsForwarderStatus:
      type: object
      required:
        - phase
      description: The status of the Dns Forwarder
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - CREATED
            - READY
            - DEGRADED
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the DNS forwarder:

              PROVISIONING: DNS forwarder provisioning is in progress;

              CREATED: DNS forwarder is created. It will automatically become ready once a Kafka cluster is provisioned;

              READY: DNS forwarder is ready;

              FAILED: DNS forwarder is in a failed state;

              DEGRADED: DNS forwarder is in a degraded state, transitioning from 'READY' due to unreachable DNS resolvers;

              DEPROVISIONING: DNS forwarder deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if dns forwarder is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if dns forwarder is in a failed state
          readOnly: true
      readOnly: true
    networking.v1.ForwardViaIp:
      type: object
      title: ForwardViaIp
      description: DNS Forwarder Configured via DNS Server IPs.
      required:
        - kind
        - dns_server_ips
      properties:
        kind:
          description: DNS Forwarder Configured via DNS Server IPs kind type.
          type: string
          enum:
            - ForwardViaIp
        dns_server_ips:
          type: array
          items:
            $ref: '#/components/schemas/networking.v1.Ip'
          uniqueItems: true
          minItems: 1
          maxItems: 3
          description: List of IP addresses of the DNS server
          example:
            - 10.200.0.0
            - 10.200.0.1
    networking.v1.Ip:
      type: string
      pattern: ^\d+\.\d+\.\d+\.\d+$
      description: IPv4 Address
      example: 10.200.0.0
    networking.v1.DnsForwarderUpdate:
      type: object
      description: |-
        Add, remove, and update DNS forwarder for your gateway.

        Related guides:
        * [Use VPC peering connections with Confluent Cloud on AWS](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html).
        * [Use VNet peering connections with Confluent Cloud on Azure](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html).


        ## The DNS Forwarders Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsForwarder" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsForwarder
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/dns-forwarders/df-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-forwarder=df-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.DnsForwarderSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.DnsForwarderStatus'
    networking.v1.DnsForwarderSpecUpdate:
      type: object
      description: The desired state of the Dns Forwarder
      properties:
        display_name:
          type: string
          description: The name of the DNS forwarder
          example: prod-dnsf-1
        domains:
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 0
          maxItems: 10
          description: List of domains for the DNS forwarder to use
          example:
            - example.com
            - domainname.com
        config:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.ForwardViaIp'
          discriminator:
            propertyName: kind
            mapping:
              ForwardViaIp: '#/components/schemas/networking.v1.ForwardViaIp'
          description: The specific details of different kinds of configuration for DNS Forwarder.
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.AccessPointList:
      type: object
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - AccessPointList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/access-points'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/access-points?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/access-points?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/access-points?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.AccessPoint'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - config
                      - environment
                      - gateway
          uniqueItems: true
    networking.v1.AccessPoint:
      type: object
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - AccessPoint
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/access-points/ap-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/access-point=ap-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.AccessPointSpec'
        status:
          $ref: '#/components/schemas/networking.v1.AccessPointStatus'
    networking.v1.AccessPointSpec:
      type: object
      description: The desired state of the Access Point
      properties:
        display_name:
          type: string
          description: The name of the access point.
          example: prod-ap-egress-usw2
        config:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpoint'
            - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpoint'
          discriminator:
            propertyName: kind
            mapping:
              AwsEgressPrivateLinkEndpoint: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpoint'
              AzureEgressPrivateLinkEndpoint: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpoint'
          description: The specific details of the different access point configurations.
          x-immutable: true
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The gateway to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.AccessPointStatus:
      type: object
      required:
        - phase
      description: The status of the Access Point
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - PENDING_ACCEPT
            - READY
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the access point:

              PROVISIONING: Access point provisioning is in progress;

              PENDING_ACCEPT: Access point connection request is pending acceptance by the customer;

              READY:  Access point is ready;

              FAILED: Access point is in a failed state;

              DEPROVISIONING: Access point deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if access point is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if access point is in a failed state.
          readOnly: true
        config:
          type: object
          oneOf:
            - $ref: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpointStatus'
            - $ref: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpointStatus'
          description: Cloud specific status of the access point.
          discriminator:
            propertyName: kind
            mapping:
              AwsEgressPrivateLinkEndpointStatus: '#/components/schemas/networking.v1.AwsEgressPrivateLinkEndpointStatus'
              AzureEgressPrivateLinkEndpointStatus: '#/components/schemas/networking.v1.AzureEgressPrivateLinkEndpointStatus'
          readOnly: true
      readOnly: true
    networking.v1.AwsEgressPrivateLinkEndpoint:
      type: object
      description: AWS VPC Endpoint.
      required:
        - kind
        - vpc_endpoint_service_name
      properties:
        kind:
          type: string
          description: AwsEgressPrivateLinkEndpoint kind.
          enum:
            - AwsEgressPrivateLinkEndpoint
        vpc_endpoint_service_name:
          description: ID of the VPC Endpoint service used for PrivateLink.
          type: string
          minLength: 1
          example: com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000
        enable_high_availability:
          type: boolean
          description: Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs.
          example: false
          x-immutable: true
    networking.v1.AzureEgressPrivateLinkEndpoint:
      type: object
      description: Azure Private Endpoint.
      required:
        - kind
        - private_link_service_resource_id
      properties:
        kind:
          type: string
          description: AzureEgressPrivateLinkEndpoint kind.
          enum:
            - AzureEgressPrivateLinkEndpoint
        private_link_service_resource_id:
          description: Resource ID of the Azure Private Link service.
          type: string
          minLength: 1
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef-az3
        private_link_subresource_name:
          type: string
          description: Name of the subresource for the Private Endpoint to connect to.
          example: sqlServer
    networking.v1.AwsEgressPrivateLinkEndpointStatus:
      type: object
      title: AWS
      description: Status of an AWS PrivateLink Endpoint.
      required:
        - kind
        - vpc_endpoint_id
        - vpc_endpoint_dns_name
      properties:
        kind:
          description: AwsEgressPrivateLinkEndpointStatus kind.
          type: string
          enum:
            - AwsEgressPrivateLinkEndpointStatus
        vpc_endpoint_id:
          description: ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service.
          type: string
          example: vpce-00000000000000000
          readOnly: true
        vpc_endpoint_dns_name:
          description: DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service.
          type: string
          example: vpce-00000000000000000-00000000.vpce-svc-00000000000000000.us-west-2.vpce.amazonaws.com
          readOnly: true
    networking.v1.AzureEgressPrivateLinkEndpointStatus:
      type: object
      description: Status of an Azure Private Endpoint.
      required:
        - kind
        - private_endpoint_resource_id
        - private_endpoint_ip_address
      properties:
        kind:
          description: AzureEgressPrivateLinkEndpointStatus kind.
          type: string
          enum:
            - AzureEgressPrivateLinkEndpointStatus
        private_endpoint_resource_id:
          description: Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
          type: string
          readOnly: true
          example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testvpc/providers/Microsoft.Network/privateEndpoints/pe-plt-abcdef-az3
        private_endpoint_domain:
          description: Domain of the Private Endpoint (if any) that is connected to the Private Link service.
          type: string
          readOnly: true
          example: dbname.database.windows.net
        private_endpoint_ip_address:
          description: IP address of the Private Endpoint (if any) that is connected to the Private Link service.
          type: string
          readOnly: true
          example: 10.2.0.68
    networking.v1.AccessPointUpdate:
      type: object
      description: |-
        AccessPoint objects represent network connections in and out of Gateways.
        This API allows you to list, create, read, update, and delete your access points.


        ## The Access Points Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.AccessPoint" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - AccessPoint
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/access-points/ap-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/access-point=ap-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.AccessPointSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.AccessPointStatus'
    networking.v1.AccessPointSpecUpdate:
      type: object
      description: The desired state of the Access Point
      properties:
        display_name:
          type: string
          description: The name of the access point.
          example: prod-ap-egress-usw2
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsRecordList:
      type: object
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      required:
        - api_version
        - kind
        - metadata
        - data
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsRecordList
        metadata:
          allOf:
            - $ref: '#/components/schemas/ListMeta'
            - properties:
                first:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records'
                last:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records?page_token=bcAOehAY8F16YD84Z1wT'
                prev:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records?page_token=YIXRY97wWYmwzrax4dld'
                next:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records?page_token=UvmDWOB1iwfAIBPj6EYb'
        data:
          type: array
          description: A data property that contains an array of resource items. Each entry in the array is a separate resource.
          items:
            allOf:
              - $ref: '#/components/schemas/networking.v1.DnsRecord'
              - type: object
                required:
                  - id
                  - metadata
                  - spec
                  - status
                properties:
                  spec:
                    type: object
                    required:
                      - domain
                      - config
                      - environment
                      - gateway
          uniqueItems: true
    networking.v1.DnsRecord:
      type: object
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsRecord
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records/dnsrec-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-record=dnsrec-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.DnsRecordSpec'
        status:
          $ref: '#/components/schemas/networking.v1.DnsRecordStatus'
    networking.v1.DnsRecordSpec:
      type: object
      description: The desired state of the Dns Record
      properties:
        display_name:
          type: string
          description: The name of the DNS record.
          example: prod-dnsrec-1
        domain:
          type: string
          description: The fully qualified domain name of the DNS record.
          example: example.com
          x-immutable: true
        config:
          type: object
          description: The config of the DNS record.
          oneOf:
            - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
          discriminator:
            propertyName: kind
            mapping:
              PrivateLinkAccessPoint: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
        gateway:
          allOf:
            - $ref: '#/components/schemas/TypedEnvScopedObjectReference'
          description: The gateway to which this belongs.
          x-immutable: true
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
    networking.v1.DnsRecordStatus:
      type: object
      required:
        - phase
      description: The status of the Dns Record
      properties:
        phase:
          type: string
          x-extensible-enum:
            - PROVISIONING
            - CREATED
            - READY
            - FAILED
            - DEPROVISIONING
          description: |
            The lifecycle phase of the DNS record:

              PROVISIONING: DNS record provisioning is in progress;

              CREATED: DNS record is created. It will automatically become ready once a Kafka cluster is provisioned;

              READY: DNS record is ready;

              FAILED: DNS record is in a failed state;

              DEPROVISIONING: DNS record deprovisioning is in progress;
          readOnly: true
          example: READY
        error_code:
          type: string
          description: Error code if the DNS record is in a failed state. May be used for programmatic error checking.
          readOnly: true
        error_message:
          type: string
          description: Displayable error message if the DNS record is in a failed state.
          readOnly: true
      readOnly: true
    networking.v1.PrivateLinkAccessPoint:
      type: object
      description: DNS record that is associated with a PrivateLink access point.
      required:
        - kind
        - resource_id
      properties:
        kind:
          description: PrivateLinkAccessPoint kind.
          type: string
          enum:
            - PrivateLinkAccessPoint
        resource_id:
          description: ID of the target resource.
          type: string
          minLength: 1
          example: ap-12345
    networking.v1.DnsRecordUpdate:
      type: object
      description: |-
        DNS record objects are associated with Confluent Cloud networking resources. This API allows you to list, create, read, update, and delete your DNS records.

        ## The DNS Records Model
        <SchemaDefinition schemaRef="#/components/schemas/networking.v1.DnsRecord" />
      properties:
        api_version:
          type: string
          enum:
            - networking/v1
          description: APIVersion defines the schema version of this representation of a resource.
          readOnly: true
        kind:
          type: string
          description: Kind defines the object this REST resource represents.
          readOnly: true
          enum:
            - DnsRecord
        id:
          description: 'ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").'
          type: string
          maxLength: 255
          readOnly: true
          example: dlz-f3a90de
        metadata:
          allOf:
            - $ref: '#/components/schemas/ObjectMeta'
            - properties:
                self:
                  example: 'https://api.confluent.cloud/networking/v1/dns-records/dnsrec-12345'
                resource_name:
                  example: 'crn://confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-456xyz/dns-record=dnsrec-12345'
        spec:
          $ref: '#/components/schemas/networking.v1.DnsRecordSpecUpdate'
        status:
          $ref: '#/components/schemas/networking.v1.DnsRecordStatus'
    networking.v1.DnsRecordSpecUpdate:
      type: object
      description: The desired state of the Dns Record
      properties:
        display_name:
          type: string
          description: The name of the DNS record.
          example: prod-dnsrec-1
        config:
          type: object
          description: The config of the DNS record.
          oneOf:
            - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
          discriminator:
            propertyName: kind
            mapping:
              PrivateLinkAccessPoint: '#/components/schemas/networking.v1.PrivateLinkAccessPoint'
        environment:
          allOf:
            - $ref: '#/components/schemas/ObjectReference'
          description: The environment to which this belongs.
      x-enable-id: true
      x-enable-listmeta: true
      x-enable-objectmeta: true
  parameters:
    AclHost:
      name: host
      description: The ACL host.
      in: query
      required: false
      schema:
        type: string
    AclOperation:
      name: operation
      description: The ACL operation.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AclOperation'
    AclOperationRequired:
      name: operation
      description: The ACL operation.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/AclOperation'
    AclPatternType:
      name: pattern_type
      description: The ACL pattern type.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AclPatternType'
    AclPatternTypeRequired:
      name: pattern_type
      description: The ACL pattern type.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/AclPatternType'
    AclPermission:
      name: permission
      description: The ACL permission.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AclPermission'
    AclPermissionRequired:
      name: permission
      description: The ACL permission.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/AclPermission'
    AclPrincipal:
      name: principal
      description: The ACL principal. This is the Service Account name or user name.
      in: query
      required: false
      schema:
        type: string
    AclResourceName:
      name: resource_name
      description: The ACL resource name.
      in: query
      required: false
      schema:
        type: string
    AclResourceType:
      name: resource_type
      description: The ACL resource type.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AclResourceType'
    AclResourceTypeRequired:
      name: resource_type
      description: The ACL resource type.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/AclResourceType'
    BrokerId:
      name: broker_id
      description: The Kafka broker ID.
      in: path
      required: true
      schema:
        type: integer
      example: 1
    ClusterId:
      name: cluster_id
      description: The Kafka cluster ID.
      in: path
      required: true
      schema:
        type: string
      example: cluster-1
    ConfigName:
      name: name
      description: The configuration parameter name.
      in: path
      required: true
      schema:
        type: string
      example: compression.type
    ConsumerGroupId:
      name: consumer_group_id
      description: The consumer group ID.
      in: path
      required: true
      schema:
        type: string
      example: consumer-group-1
    ConsumerId:
      name: consumer_id
      description: The consumer ID.
      in: path
      required: true
      schema:
        type: string
      example: consumer-1
    IncludeAuthorizedOperations:
      name: include_authorized_operations
      description: Specify if authorized operations should be included in the response.
      in: query
      required: false
      schema:
        type: boolean
    PartitionId:
      name: partition_id
      description: The partition ID.
      in: path
      required: true
      schema:
        type: integer
      example: 0
    TopicName:
      name: topic_name
      description: The topic name.
      in: path
      required: true
      schema:
        type: string
      example: topic-1
    BrokerTaskType:
      name: task_type
      description: The Kafka broker task type.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/BrokerTaskType'
      example: remove-broker
    ShouldShutdown:
      name: should_shutdown
      description: 'To shutdown the broker or not, Default: true'
      in: query
      required: false
      schema:
        type: boolean
      example: true
    ValidateOnly:
      name: validate_only
      description: 'To validate the action can be performed successfully or not. Default: false'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    ValidateLink:
      name: validate_link
      description: 'To synchronously validate that the source cluster ID is expected and the dest cluster has the permission to read topics in the source cluster. Default: true'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    IncludeTasks:
      name: include_tasks
      description: 'Whether to include cluster linking tasks in the response. Default: false'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    IncludeStateTransitionErrors:
      name: include_state_transition_errors
      description: 'Whether to include mirror state transition errors in the response. Default: false'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    Force:
      name: force
      description: 'Force the action. Default: false'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    IncludePartitionLevelTruncationData:
      name: include_partition_level_truncation_data
      description: 'Whether to include partition level truncation information when truncating and restoring a topic in the response. Default: false'
      in: query
      required: false
      schema:
        type: boolean
      example: false
    LinkName:
      name: link_name
      description: The link name
      in: path
      required: true
      schema:
        type: string
      example: link-sb1
    LinkConfigName:
      name: config_name
      description: The link config name
      in: path
      required: true
      schema:
        type: string
      example: consumer.offset.sync.enable
    MirrorTopicStatus:
      name: mirror_status
      description: 'The status of the mirror topic. If not specified, all mirror topics will be returned.'
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/MirrorTopicStatus'
      example: ACTIVE
    MirrorTopicName:
      name: mirror_topic_name
      description: Cluster Linking mirror topic name
      in: path
      required: true
      schema:
        type: string
      example: topic-1
    QueryParamLinkName:
      name: link_name
      description: The link name
      in: query
      required: true
      schema:
        type: string
      example: link-sb1
  responses:
    BadRequestError:
      description: Bad Request
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '400'
                code: invalid_filter
                title: Invalid Filter
                detail: The 'delorean' resource can't be filtered by 'num_doors'
                source:
                  parameter: num_doors
    UnauthenticatedError:
      x-summary: Unauthorized
      description: The request lacks valid authentication credentials for this resource.
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
        WWW-Authenticate:
          schema:
            type: string
          description: The unique identifier for the API request.
          example: 'Basic error="invalid_key", error_description="The API Key is invalid"'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '401'
                code: user_unauthenticated
                title: Authentication Required
                detail: Valid authentication credentials must be provided
    UnauthorizedError:
      x-summary: Forbidden
      description: The access credentials were considered insufficient to grant access
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '403'
                code: user_unauthorized
                title: User Access Unauthorized
                detail: The user 'mcfly' is not allowed to access the 'delorean' resource without the 'plutonium' role.
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
        X-RateLimit-Limit:
          schema:
            type: integer
          description: The maximum number of requests you're permitted to make per time period.
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: The number of requests remaining in the current rate limit window.
        X-RateLimit-Reset:
          schema:
            type: integer
          description: |-
            The relative time in seconds until the current rate-limit window resets.  
              
            **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        Retry-After:
          schema:
            type: integer
          description: The number of seconds to wait until the rate limit window resets. Only sent when the rate limit is reached.
    DefaultSystemError:
      description: 'Oops, something went wrong!'
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '500'
                code: out_of_gas
                title: DeLorean Out Of Gas
                detail: 'The DeLorean has run out of gas, but Doc Brown will fill ''er up for you asap'
    OverQuotaError:
      x-summary: Over Quota
      description: The request would exceed one or more quotas.
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '402'
                code: quota_exceeded
                title: Kafka Clusters Per Org Quota Exceeded
                detail: 'The request would exceed the quota: kafka_clusters_per_environment'
    ConflictError:
      x-summary: Conflict
      description: The request is in conflict with the current server state
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
        Location:
          schema:
            type: string
            format: uri
            example: 'https://api.confluent.cloud/{object}/{id}'
          description: Resource URI of conflicting resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '409'
                code: resource_already_exists
                title: Resource Already exists
                detail: The entitlement '91e3e86f-fca6-4f14-98f5-a48e64113ce2' already exists.
    ValidationError:
      description: Validation Failed
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
              - status: '422'
                code: invalid_configuration
                id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                title: Validation Failed
                detail: 'The property ''/cluster/storage_size'' of type string did not match the following type: integer'
                source:
                  pointer: /cluster/storage_size
    NotFoundError:
      description: Not Found
      headers:
        X-Request-Id:
          schema:
            type: string
          description: The unique identifier for the API request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'
          example:
            errors:
              - id: ed42afdc-f0d5-4c0d-b428-9fc6ed6e279d
                status: '404'
                title: Not Found
  securitySchemes:
    cloud-api-key:
      type: http
      scheme: basic
      description: Authenticate with Cloud API Keys using HTTP Basic Auth. Treat the Cloud API Key ID as the username and Cloud API Key Secret as the password.
    confluent-sts-access-token:
      type: oauth2
      description: Authenticate with Confluent API using this credentials (JSON Web Tokens) following OAuth 2.0.
      flows:
        clientCredentials:
          tokenUrl: 'https://api.confluent.cloud/sts/v1/oauth2/token'
          scopes: {}
    api-key:
      type: http
      scheme: basic
      description: Authenticate with API Keys using HTTP Basic Auth. Treat the API Key ID as the username and API Key Secret as the password.
    resource-api-key:
      type: http
      scheme: basic
      description: |
        Authenticate with resource-specific API Keys using HTTP Basic Auth. Treat the resource-specific API Key ID 
        as the username and resource-specific API Key Secret as the password.
    external-access-token:
      type: oauth2
      description: Authenticate with OAuth 2.0.
      flows:
        clientCredentials:
          tokenUrl: 'https://<oauth-identity-provider>/token'
          scopes: {}
    oauth:
      type: oauth2
      description: Authenticate with OAuth 2.0. Currently this is only supported for partner APIs.
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            'partner:alter': enables partners to alter entitlements
            'partner:create': enables partners to create entitlements and signup on behalf of customers
            'partner:delete': enables partners to delete entitlements and organizations
            'partner:describe': enables partners to read and list entitlements and organizations
  requestBodies:
    AlterBrokerConfigBatchRequest:
      description: The alter broker configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
          example:
            data:
              - name: max.connections
                operation: DELETE
              - name: compression.type
                value: gzip
    AlterClusterConfigBatchRequest:
      description: The alter cluster configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
          example:
            data:
              - name: max.connections
                operation: DELETE
              - name: compression.type
                value: gzip
    AlterTopicConfigBatchRequest:
      description: The alter topic configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
          examples:
            batch_alter_topic_configs:
              value:
                data:
                  - name: cleanup.policy
                    operation: DELETE
                  - name: compression.type
                    value: gzip
            validate_only_batch_alter_topic_configs:
              value:
                data:
                  - name: cleanup.policy
                    operation: DELETE
                  - name: compression.type
                    value: gzip
                validate_only: true
    CreateAclRequest:
      description: The ACL creation request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAclRequestData'
          example:
            resource_type: CLUSTER
            resource_name: kafka-cluster
            pattern_type: LITERAL
            principal: 'principalType:principalName'
            host: '*'
            operation: DESCRIBE
            permission: DENY
    BatchCreateAclRequest:
      description: The batch ACL creation request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAclRequestDataList'
          example:
            data:
              - resource_type: CLUSTER
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: 'principalType:principalName'
                host: '*'
                operation: DESCRIBE
                permission: DENY
              - resource_type: TOPIC
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: 'principalType:principalName'
                host: '*'
                operation: READ
                permission: ALLOW
    CreateTopicRequest:
      description: 'The topic creation request. Note that Confluent Cloud allows only specific replication factor values. Because of that the replication factor field should either be omitted or it should use one of the allowed values (see https://docs.confluent.io/cloud/current/client-apps/optimizing/durability.html).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTopicRequestData'
          examples:
            uniform_replication:
              value:
                topic_name: topic-X
                partitions_count: 64
                replication_factor: 3
                configs:
                  - name: cleanup.policy
                    value: compact
                  - name: compression.type
                    value: gzip
            dry_run_create_topic:
              value:
                topic_name: topic-X
                partitions_count: 64
                replication_factor: 3
                validate_only: true
    ProduceRequest:
      description: 'A single record to be produced to Kafka. To produce multiple records in the same request, simply concatenate the records. The delivery reports are concatenated in the same order as the records are sent.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProduceRequest'
          examples:
            binary_and_json:
              description: 'If using type, one of "BINARY", "JSON" or "STRING" is required.'
              value:
                partition_id: 1
                headers:
                  - name: Header-1
                    value: SGVhZGVyLTE=
                  - name: Header-2
                    value: SGVhZGVyLTI=
                key:
                  type: BINARY
                  data: Zm9vYmFy
                value:
                  type: JSON
                  data:
                    foo: bar
                timestamp: '2021-02-05T19:14:42Z'
            string:
              description: 'If using type, one of "BINARY", "JSON" or "STRING" is required.'
              value:
                value:
                  type: STRING
                  data: My message
            empty_value:
              description: key or value can be omitted entirely.
              value:
                key:
                  data: 1000
    UpdateBrokerConfigRequest:
      description: The broker configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
          example:
            value: gzip
    UpdateClusterConfigRequest:
      description: The cluster configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
          example:
            value: gzip
    UpdateTopicConfigRequest:
      description: The topic configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
          example:
            value: gzip
    CreateLinkRequest:
      description: Create a cluster link
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLinkRequestData'
          examples:
            destination_initiated_link:
              description: Create a destination initiated cluster link
              value:
                source_cluster_id: cluster-1
                configs:
                  - name: bootstrap.servers
                    value: cluster-1-bootstrap-server
                  - name: acl.sync.enable
                    value: 'false'
                  - name: consumer.offset.sync.ms
                    value: '30000'
                  - name: sasl.mechanism
                    value: PLAIN
                  - name: sasl.protocol
                    value: SASL_SSL
                  - name: sasl.jaas.config
                    value: sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<Kafka API Key>' password='<Kafka API Secret>';
            source_initiated_link_at_source_cluster:
              description: Create a source initiated cluster link at source cluster
              value:
                destination_cluster_id: cluster-2
                configs:
                  - name: bootstrap.servers
                    value: cluster-2-bootstrap-server
                  - name: link.mode
                    value: SOURCE
                  - name: sasl.mechanism
                    value: PLAIN
                  - name: sasl.protocol
                    value: SASL_SSL
                  - name: sasl.jaas.config
                    value: sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<Kafka API Key>' password='<Kafka API Secret>';
            source_initiated_link_at_destination_cluster:
              description: Create a source initiated cluster link at destination cluster
              value:
                destination_cluster_id: cluster-1
                configs:
                  - name: bootstrap.servers
                    value: cluster-1-bootstrap-server
                  - name: link.mode
                    value: DESTINATION
                  - name: connection.mode
                    value: INBOUND
                  - name: acl.sync.enable
                    value: 'false'
                  - name: sasl.mechanism
                    value: PLAIN
                  - name: sasl.protocol
                    value: SASL_SSL
                  - name: sasl.jaas.config
                    value: sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<Kafka API Key>' password='<Kafka API Secret>';
            bidirectional_link_east:
              description: Create a bidirectional cluster link in east
              value:
                remote_cluster_id: cluster-west
                configs:
                  - name: bootstrap.servers
                    value: cluster-west-bootstrap-server
                  - name: link.mode
                    value: BIDIRECTIONAL
                  - name: cluster.link.prefix
                    value: west.
                  - name: sasl.mechanism
                    value: PLAIN
                  - name: sasl.protocol
                    value: SASL_SSL
                  - name: sasl.jaas.config
                    value: sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<Kafka API Key>' password='<Kafka API Secret>';
            bidirectional_link_west:
              description: Create a bidirectional cluster link in west
              value:
                remote_cluster_id: cluster-east
                cluster_link_id: eEBkTffYSESld6EO898x3w
                configs:
                  - name: bootstrap.servers
                    value: cluster-east-bootstrap-server
                  - name: link.mode
                    value: BIDIRECTIONAL
                  - name: cluster.link.prefix
                    value: east.
                  - name: sasl.mechanism
                    value: PLAIN
                  - name: sasl.protocol
                    value: SASL_SSL
                  - name: sasl.jaas.config
                    value: sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='<Kafka API Key>' password='<Kafka API Secret>';
    UpdateLinkConfigRequest:
      content:
        application/json:
          example:
            value: '300000'
          schema:
            $ref: '#/components/schemas/UpdateLinkConfigRequestData'
      description: Link config value to update
    AlterLinkConfigBatchRequest:
      content:
        application/json:
          example:
            data:
              - name: cleanup.policy
                operation: DELETE
              - name: compression.type
                value: gzip
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
    CreateMirrorTopicRequest:
      description: 'Name and configs of the topics mirroring from and mirroring to. Note that Confluent Cloud allows only specific replication factor values. Because of that the replication factor field should either be omitted or it should use one of the allowed values (see https://docs.confluent.io/cloud/current/client-apps/optimizing/durability.html).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMirrorTopicRequestData'
          examples:
            generic_example:
              description: Generic example of creating a mirror topic
              value:
                source_topic_name: topic-1
                configs:
                  - name: unclean.leader.election.enable
                    value: 'true'
                replication_factor: 1
            example_with_mirror_topic_name:
              description: Example using optional mirror_topic_name flag
              value:
                source_topic_name: topic-1
                mirror_topic_name: link1_topic-1
                configs:
                  - name: unclean.leader.election.enable
                    value: 'true'
                replication_factor: 3
    AlterMirrorsRequest:
      description: Mirror topics to be altered.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlterMirrorsRequestData'
          examples:
            mirror_topic_names:
              description: Example using mirror topic names
              value:
                mirror_topic_names:
                  - topic-1
                  - topic-2
            mirror_topic_name_pattern:
              description: Example using mirror topic name pattern
              value:
                mirror_topic_name_pattern: .*
    RemoveBrokersRequest:
      content:
        application/json:
          example:
            broker_ids:
              - 1
              - 2
              - 3
          schema:
            $ref: '#/components/schemas/RemoveBrokersRequestData'
      description: Broker ids to remove
    BrokerReplicaExclusionBatchRequest:
      description: Alter Broker Replica Exclusions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrokerReplicaExclusionBatchRequestData'
          example:
            data:
              - broker_id: 1
                reason: The broker is to be removed.
              - broker_id: 2
                reason: The broker is to be removed.
  x-stackQL-resources:
    networks:
      id: confluent.networking.networks
      name: networks
      title: Networks
      methods:
        list_networking_v1networks:
          operation:
            $ref: '#/paths/~1networking~1v1~1networks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1network:
          operation:
            $ref: '#/paths/~1networking~1v1~1networks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1network:
          operation:
            $ref: '#/paths/~1networking~1v1~1networks~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1network:
          operation:
            $ref: '#/paths/~1networking~1v1~1networks~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1network:
          operation:
            $ref: '#/paths/~1networking~1v1~1networks~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/networks/methods/get_networking_v1network'
          - $ref: '#/components/x-stackQL-resources/networks/methods/list_networking_v1networks'
        insert:
          - $ref: '#/components/x-stackQL-resources/networks/methods/create_networking_v1network'
        update:
          - $ref: '#/components/x-stackQL-resources/networks/methods/update_networking_v1network'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/networks/methods/delete_networking_v1network'
    peerings:
      id: confluent.networking.peerings
      name: peerings
      title: Peerings
      methods:
        list_networking_v1peerings:
          operation:
            $ref: '#/paths/~1networking~1v1~1peerings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1peering:
          operation:
            $ref: '#/paths/~1networking~1v1~1peerings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1peering:
          operation:
            $ref: '#/paths/~1networking~1v1~1peerings~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1peering:
          operation:
            $ref: '#/paths/~1networking~1v1~1peerings~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1peering:
          operation:
            $ref: '#/paths/~1networking~1v1~1peerings~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/get_networking_v1peering'
          - $ref: '#/components/x-stackQL-resources/peerings/methods/list_networking_v1peerings'
        insert:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/create_networking_v1peering'
        update:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/update_networking_v1peering'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/peerings/methods/delete_networking_v1peering'
    transit_gateway_attachments:
      id: confluent.networking.transit_gateway_attachments
      name: transit_gateway_attachments
      title: Transit Gateway Attachments
      methods:
        list_networking_v1transit_gateway_attachments:
          operation:
            $ref: '#/paths/~1networking~1v1~1transit-gateway-attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1transit_gateway_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1transit-gateway-attachments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1transit_gateway_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1transit-gateway-attachments~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1transit_gateway_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1transit-gateway-attachments~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1transit_gateway_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1transit-gateway-attachments~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/get_networking_v1transit_gateway_attachment'
          - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/list_networking_v1transit_gateway_attachments'
        insert:
          - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/create_networking_v1transit_gateway_attachment'
        update:
          - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/update_networking_v1transit_gateway_attachment'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/delete_networking_v1transit_gateway_attachment'
    private_link_accesses:
      id: confluent.networking.private_link_accesses
      name: private_link_accesses
      title: Private Link Accesses
      methods:
        list_networking_v1private_link_accesses:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-accesses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1private_link_access:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-accesses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1private_link_access:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-accesses~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1private_link_access:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-accesses~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1private_link_access:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-accesses~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_accesses/methods/get_networking_v1private_link_access'
          - $ref: '#/components/x-stackQL-resources/private_link_accesses/methods/list_networking_v1private_link_accesses'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_accesses/methods/create_networking_v1private_link_access'
        update:
          - $ref: '#/components/x-stackQL-resources/private_link_accesses/methods/update_networking_v1private_link_access'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_accesses/methods/delete_networking_v1private_link_access'
    network_link_services:
      id: confluent.networking.network_link_services
      name: network_link_services
      title: Network Link Services
      methods:
        list_networking_v1network_link_services:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1network_link_service:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1network_link_service:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-services~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1network_link_service:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-services~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1network_link_service:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-services~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_link_services/methods/get_networking_v1network_link_service'
          - $ref: '#/components/x-stackQL-resources/network_link_services/methods/list_networking_v1network_link_services'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_link_services/methods/create_networking_v1network_link_service'
        update:
          - $ref: '#/components/x-stackQL-resources/network_link_services/methods/update_networking_v1network_link_service'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_link_services/methods/delete_networking_v1network_link_service'
    network_link_endpoints:
      id: confluent.networking.network_link_endpoints
      name: network_link_endpoints
      title: Network Link Endpoints
      methods:
        list_networking_v1network_link_endpoints:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1network_link_endpoint:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-endpoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1network_link_endpoint:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-endpoints~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1network_link_endpoint:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-endpoints~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1network_link_endpoint:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-endpoints~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_link_endpoints/methods/get_networking_v1network_link_endpoint'
          - $ref: '#/components/x-stackQL-resources/network_link_endpoints/methods/list_networking_v1network_link_endpoints'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_link_endpoints/methods/create_networking_v1network_link_endpoint'
        update:
          - $ref: '#/components/x-stackQL-resources/network_link_endpoints/methods/update_networking_v1network_link_endpoint'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_link_endpoints/methods/delete_networking_v1network_link_endpoint'
    network_link_service_associations:
      id: confluent.networking.network_link_service_associations
      name: network_link_service_associations
      title: Network Link Service Associations
      methods:
        list_networking_v1network_link_service_associations:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-service-associations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        get_networking_v1network_link_service_association:
          operation:
            $ref: '#/paths/~1networking~1v1~1network-link-service-associations~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_link_service_associations/methods/get_networking_v1network_link_service_association'
          - $ref: '#/components/x-stackQL-resources/network_link_service_associations/methods/list_networking_v1network_link_service_associations'
        insert: []
        update: []
        replace: []
        delete: []
    gateways:
      id: confluent.networking.gateways
      name: gateways
      title: Gateways
      methods:
        list_networking_v1gateways:
          operation:
            $ref: '#/paths/~1networking~1v1~1gateways/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        get_networking_v1gateway:
          operation:
            $ref: '#/paths/~1networking~1v1~1gateways~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/get_networking_v1gateway'
          - $ref: '#/components/x-stackQL-resources/gateways/methods/list_networking_v1gateways'
        insert: []
        update: []
        replace: []
        delete: []
    ip_addresses:
      id: confluent.networking.ip_addresses
      name: ip_addresses
      title: Ip Addresses
      methods:
        list_networking_v1ip_addresses:
          operation:
            $ref: '#/paths/~1networking~1v1~1ip-addresses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_addresses/methods/list_networking_v1ip_addresses'
        insert: []
        update: []
        replace: []
        delete: []
    private_link_attachments:
      id: confluent.networking.private_link_attachments
      name: private_link_attachments
      title: Private Link Attachments
      methods:
        list_networking_v1private_link_attachments:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1private_link_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1private_link_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachments~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1private_link_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachments~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1private_link_attachment:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachments~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_attachments/methods/get_networking_v1private_link_attachment'
          - $ref: '#/components/x-stackQL-resources/private_link_attachments/methods/list_networking_v1private_link_attachments'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_attachments/methods/create_networking_v1private_link_attachment'
        update:
          - $ref: '#/components/x-stackQL-resources/private_link_attachments/methods/update_networking_v1private_link_attachment'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_attachments/methods/delete_networking_v1private_link_attachment'
    private_link_attachment_connections:
      id: confluent.networking.private_link_attachment_connections
      name: private_link_attachment_connections
      title: Private Link Attachment Connections
      methods:
        list_networking_v1private_link_attachment_connections:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachment-connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1private_link_attachment_connection:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachment-connections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1private_link_attachment_connection:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachment-connections~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1private_link_attachment_connection:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachment-connections~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1private_link_attachment_connection:
          operation:
            $ref: '#/paths/~1networking~1v1~1private-link-attachment-connections~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_attachment_connections/methods/get_networking_v1private_link_attachment_connection'
          - $ref: '#/components/x-stackQL-resources/private_link_attachment_connections/methods/list_networking_v1private_link_attachment_connections'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_attachment_connections/methods/create_networking_v1private_link_attachment_connection'
        update:
          - $ref: '#/components/x-stackQL-resources/private_link_attachment_connections/methods/update_networking_v1private_link_attachment_connection'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_attachment_connections/methods/delete_networking_v1private_link_attachment_connection'
    dns_forwarders:
      id: confluent.networking.dns_forwarders
      name: dns_forwarders
      title: Dns Forwarders
      methods:
        list_networking_v1dns_forwarders:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-forwarders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1dns_forwarder:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-forwarders/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1dns_forwarder:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-forwarders~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1dns_forwarder:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-forwarders~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1dns_forwarder:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-forwarders~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_forwarders/methods/get_networking_v1dns_forwarder'
          - $ref: '#/components/x-stackQL-resources/dns_forwarders/methods/list_networking_v1dns_forwarders'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_forwarders/methods/create_networking_v1dns_forwarder'
        update:
          - $ref: '#/components/x-stackQL-resources/dns_forwarders/methods/update_networking_v1dns_forwarder'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_forwarders/methods/delete_networking_v1dns_forwarder'
    access_points:
      id: confluent.networking.access_points
      name: access_points
      title: Access Points
      methods:
        list_networking_v1access_points:
          operation:
            $ref: '#/paths/~1networking~1v1~1access-points/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1access_point:
          operation:
            $ref: '#/paths/~1networking~1v1~1access-points/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1access_point:
          operation:
            $ref: '#/paths/~1networking~1v1~1access-points~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1access_point:
          operation:
            $ref: '#/paths/~1networking~1v1~1access-points~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1access_point:
          operation:
            $ref: '#/paths/~1networking~1v1~1access-points~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/get_networking_v1access_point'
          - $ref: '#/components/x-stackQL-resources/access_points/methods/list_networking_v1access_points'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/create_networking_v1access_point'
        update:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/update_networking_v1access_point'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/delete_networking_v1access_point'
    dns_records:
      id: confluent.networking.dns_records
      name: dns_records
      title: Dns Records
      methods:
        list_networking_v1dns_records:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-records/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_networking_v1dns_record:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-records/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_networking_v1dns_record:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-records~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_networking_v1dns_record:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-records~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_networking_v1dns_record:
          operation:
            $ref: '#/paths/~1networking~1v1~1dns-records~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_records/methods/get_networking_v1dns_record'
          - $ref: '#/components/x-stackQL-resources/dns_records/methods/list_networking_v1dns_records'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_records/methods/create_networking_v1dns_record'
        update:
          - $ref: '#/components/x-stackQL-resources/dns_records/methods/update_networking_v1dns_record'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_records/methods/delete_networking_v1dns_record'
paths:
  /networking/v1/networks:
    get:
      operationId: listNetworkingV1Networks
      summary: List of Networks
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all networks.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-gcp-us-central1
            - prod-aws-us-east1
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.cloud
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - GCP
            - AWS
          description: Filter the results by exact match for spec.cloud. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.region
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - us-central1
            - us-east-1
          description: Filter the results by exact match for spec.region. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.connection_types
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - peering
            - privatelink
          description: Filter the results by exact match for spec.connection_types. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.cidr
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - 10.200.0.0/16
          description: Filter the results by exact match for spec.cidr. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - PROVISIONING
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Networks (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/networks?spec.display_name=prod-gcp-us-central1,prod-aws-us-east1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&spec.connection_types=peering,privatelink&spec.cidr=10.200.0.0/16&status.phase=PROVISIONING,READY&environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1Network
      summary: Create a Network
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a network.
      tags:
        - Networks (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.Network'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - region
                        - connection_types
                        - environment
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '202':
          description: A Network is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/networks/{id}'
              description: Network resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Network'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - connection_types
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/networks \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-aws-us-east1","cloud":"AWS","region":"us-east-1","connection_types":["PRIVATELINK"],"cidr":"10.200.0.0/16","zones":["use1-az1","use1-az2","use1-az3"],"zones_info":[{"zone_id":"use1-az3","cidr":"10.20.0.0/27"},{"zone_id":"use1-az3","cidr":"10.20.0.0/27"},{"zone_id":"use1-az3","cidr":"10.20.0.0/27"}],"dns_config":{"resolution":"string"},"reserved_cidr":"172.20.255.0/24","environment":{"id":"env-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/networks")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-aws-us-east1\\\",\\\"cloud\\\":\\\"AWS\\\",\\\"region\\\":\\\"us-east-1\\\",\\\"connection_types\\\":[\\\"PRIVATELINK\\\"],\\\"cidr\\\":\\\"10.200.0.0/16\\\",\\\"zones\\\":[\\\"use1-az1\\\",\\\"use1-az2\\\",\\\"use1-az3\\\"],\\\"zones_info\\\":[{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"},{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"},{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"}],\\\"dns_config\\\":{\\\"resolution\\\":\\\"string\\\"},\\\"reserved_cidr\\\":\\\"172.20.255.0/24\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/networks", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/networks",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-aws-us-east1',
                cloud: 'AWS',
                region: 'us-east-1',
                connection_types: ['PRIVATELINK'],
                cidr: '10.200.0.0/16',
                zones: ['use1-az1', 'use1-az2', 'use1-az3'],
                zones_info: [
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'},
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'},
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'}
                ],
                dns_config: {resolution: 'string'},
                reserved_cidr: '172.20.255.0/24',
                environment: {id: 'env-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/networks");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/networks/{id}':
    get:
      operationId: getNetworkingV1Network
      summary: Read a Network
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a network.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network.
      tags:
        - Networks (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Network'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - connection_types
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/networks/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/networks/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1Network
      summary: Update a Network
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a network.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network.
      tags:
        - Networks (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Network.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Network'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - connection_types
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/networks/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-aws-us-east1","cloud":"AWS","region":"us-east-1","connection_types":["PRIVATELINK"],"cidr":"10.200.0.0/16","zones":["use1-az1","use1-az2","use1-az3"],"zones_info":[{"zone_id":"use1-az3","cidr":"10.20.0.0/27"},{"zone_id":"use1-az3","cidr":"10.20.0.0/27"},{"zone_id":"use1-az3","cidr":"10.20.0.0/27"}],"dns_config":{"resolution":"string"},"reserved_cidr":"172.20.255.0/24","environment":{"id":"env-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/networks/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-aws-us-east1\\\",\\\"cloud\\\":\\\"AWS\\\",\\\"region\\\":\\\"us-east-1\\\",\\\"connection_types\\\":[\\\"PRIVATELINK\\\"],\\\"cidr\\\":\\\"10.200.0.0/16\\\",\\\"zones\\\":[\\\"use1-az1\\\",\\\"use1-az2\\\",\\\"use1-az3\\\"],\\\"zones_info\\\":[{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"},{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"},{\\\"zone_id\\\":\\\"use1-az3\\\",\\\"cidr\\\":\\\"10.20.0.0/27\\\"}],\\\"dns_config\\\":{\\\"resolution\\\":\\\"string\\\"},\\\"reserved_cidr\\\":\\\"172.20.255.0/24\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/networks/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/networks/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-aws-us-east1',
                cloud: 'AWS',
                region: 'us-east-1',
                connection_types: ['PRIVATELINK'],
                cidr: '10.200.0.0/16',
                zones: ['use1-az1', 'use1-az2', 'use1-az3'],
                zones_info: [
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'},
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'},
                  {zone_id: 'use1-az3', cidr: '10.20.0.0/27'}
                ],
                dns_config: {resolution: 'string'},
                reserved_cidr: '172.20.255.0/24',
                environment: {id: 'env-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"connection_types\":[\"PRIVATELINK\"],\"cidr\":\"10.200.0.0/16\",\"zones\":[\"use1-az1\",\"use1-az2\",\"use1-az3\"],\"zones_info\":[{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"},{\"zone_id\":\"use1-az3\",\"cidr\":\"10.20.0.0/27\"}],\"dns_config\":{\"resolution\":\"string\"},\"reserved_cidr\":\"172.20.255.0/24\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1Network
      summary: Delete a Network
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a network.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network.
      tags:
        - Networks (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Network is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/networks/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/networks/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/networks/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/peerings:
    get:
      operationId: listNetworkingV1Peerings
      summary: List of Peerings
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all peerings.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-peering-uscentral1
            - prod-peering-use1
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - PROVISIONING
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.network
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - n-00000
            - n-00001
          description: Filter the results by exact match for spec.network. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Peerings (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Peering.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PeeringList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                network:
                                  example:
                                    id: n-00000
                                    related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings?spec.display_name=prod-peering-uscentral1,prod-peering-use1&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1Peering
      summary: Create a Peering
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a peering.
      tags:
        - Peerings (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.Peering'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - environment
                        - network
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        network:
                          example:
                            id: n-00000
      responses:
        '202':
          description: A Peering is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/peerings/{id}'
              description: Peering resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Peering'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/peerings \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-peering-use1","cloud":{"kind":"AwsPeering","account":"000000000000","vpc":"vpc-00000000000000000","routes":["10.108.16.0/21"],"customer_region":"us-east-1"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"n-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/peerings")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-peering-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPeering\\\",\\\"account\\\":\\\"000000000000\\\",\\\"vpc\\\":\\\"vpc-00000000000000000\\\",\\\"routes\\\":[\\\"10.108.16.0/21\\\"],\\\"customer_region\\\":\\\"us-east-1\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/peerings", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/peerings",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-peering-use1',
                cloud: {
                  kind: 'AwsPeering',
                  account: '000000000000',
                  vpc: 'vpc-00000000000000000',
                  routes: ['10.108.16.0/21'],
                  customer_region: 'us-east-1'
                },
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'n-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/peerings/{id}':
    get:
      operationId: getNetworkingV1Peering
      summary: Read a Peering
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a peering.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the peering.
      tags:
        - Peerings (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Peering.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Peering'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/peerings/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/peerings/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1Peering
      summary: Update a Peering
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a peering.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the peering.
      tags:
        - Peerings (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PeeringUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Peering.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Peering'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/peerings/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-peering-use1","cloud":{"kind":"AwsPeering","account":"000000000000","vpc":"vpc-00000000000000000","routes":["10.108.16.0/21"],"customer_region":"us-east-1"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/peerings/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-peering-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPeering\\\",\\\"account\\\":\\\"000000000000\\\",\\\"vpc\\\":\\\"vpc-00000000000000000\\\",\\\"routes\\\":[\\\"10.108.16.0/21\\\"],\\\"customer_region\\\":\\\"us-east-1\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/peerings/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/peerings/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-peering-use1',
                cloud: {
                  kind: 'AwsPeering',
                  account: '000000000000',
                  vpc: 'vpc-00000000000000000',
                  routes: ['10.108.16.0/21'],
                  customer_region: 'us-east-1'
                },
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-peering-use1\",\"cloud\":{\"kind\":\"AwsPeering\",\"account\":\"000000000000\",\"vpc\":\"vpc-00000000000000000\",\"routes\":[\"10.108.16.0/21\"],\"customer_region\":\"us-east-1\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1Peering
      summary: Delete a Peering
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a peering.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the peering.
      tags:
        - Peerings (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Peering is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/peerings/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/peerings/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/peerings/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/transit-gateway-attachments:
    get:
      operationId: listNetworkingV1TransitGatewayAttachments
      summary: List of Transit Gateway Attachments
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all transit gateway attachments.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-tgw-use1
            - prod-tgw-usw2
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - PROVISIONING
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.network
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - n-00000
            - n-00001
          description: Filter the results by exact match for spec.network. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Transit Gateway Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Transit Gateway Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                network:
                                  example:
                                    id: n-00000
                                    related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments?spec.display_name=prod-tgw-use1,prod-tgw-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1TransitGatewayAttachment
      summary: Create a Transit Gateway Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a transit gateway attachment.
      tags:
        - Transit Gateway Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - environment
                        - network
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        network:
                          example:
                            id: n-00000
      responses:
        '202':
          description: A Transit Gateway Attachment is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}'
              description: TransitGatewayAttachment resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/transit-gateway-attachments \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-tgw-use1","cloud":{"kind":"AwsTransitGatewayAttachment","ram_share_arn":"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx","transit_gateway_id":"tgw-xxxxxxxxxxxxxxxxx","routes":["100.64.0.0/10","10.0.0.0/8","192.168.0.0/16","172.16.0.0/12"]},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"n-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-tgw-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsTransitGatewayAttachment\\\",\\\"ram_share_arn\\\":\\\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\\\",\\\"transit_gateway_id\\\":\\\"tgw-xxxxxxxxxxxxxxxxx\\\",\\\"routes\\\":[\\\"100.64.0.0/10\\\",\\\"10.0.0.0/8\\\",\\\"192.168.0.0/16\\\",\\\"172.16.0.0/12\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/transit-gateway-attachments", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/transit-gateway-attachments",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-tgw-use1',
                cloud: {
                  kind: 'AwsTransitGatewayAttachment',
                  ram_share_arn: 'arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx',
                  transit_gateway_id: 'tgw-xxxxxxxxxxxxxxxxx',
                  routes: ['100.64.0.0/10', '10.0.0.0/8', '192.168.0.0/16', '172.16.0.0/12']
                },
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'n-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/transit-gateway-attachments/{id}':
    get:
      operationId: getNetworkingV1TransitGatewayAttachment
      summary: Read a Transit Gateway Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a transit gateway attachment.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the transit gateway attachment.
      tags:
        - Transit Gateway Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Transit Gateway Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/transit-gateway-attachments/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/transit-gateway-attachments/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1TransitGatewayAttachment
      summary: Update a Transit Gateway Attachment
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a transit gateway attachment.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the transit gateway attachment.
      tags:
        - Transit Gateway Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachmentUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Transit Gateway Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.TransitGatewayAttachment'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-tgw-use1","cloud":{"kind":"AwsTransitGatewayAttachment","ram_share_arn":"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx","transit_gateway_id":"tgw-xxxxxxxxxxxxxxxxx","routes":["100.64.0.0/10","10.0.0.0/8","192.168.0.0/16","172.16.0.0/12"]},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-tgw-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsTransitGatewayAttachment\\\",\\\"ram_share_arn\\\":\\\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\\\",\\\"transit_gateway_id\\\":\\\"tgw-xxxxxxxxxxxxxxxxx\\\",\\\"routes\\\":[\\\"100.64.0.0/10\\\",\\\"10.0.0.0/8\\\",\\\"192.168.0.0/16\\\",\\\"172.16.0.0/12\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/transit-gateway-attachments/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/transit-gateway-attachments/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-tgw-use1',
                cloud: {
                  kind: 'AwsTransitGatewayAttachment',
                  ram_share_arn: 'arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx',
                  transit_gateway_id: 'tgw-xxxxxxxxxxxxxxxxx',
                  routes: ['100.64.0.0/10', '10.0.0.0/8', '192.168.0.0/16', '172.16.0.0/12']
                },
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-tgw-use1\",\"cloud\":{\"kind\":\"AwsTransitGatewayAttachment\",\"ram_share_arn\":\"arn:aws:ram:us-west-3:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\"transit_gateway_id\":\"tgw-xxxxxxxxxxxxxxxxx\",\"routes\":[\"100.64.0.0/10\",\"10.0.0.0/8\",\"192.168.0.0/16\",\"172.16.0.0/12\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1TransitGatewayAttachment
      summary: Delete a Transit Gateway Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a transit gateway attachment.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the transit gateway attachment.
      tags:
        - Transit Gateway Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Transit Gateway Attachment is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/transit-gateway-attachments/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/transit-gateway-attachments/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/transit-gateway-attachments/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/private-link-accesses:
    get:
      operationId: listNetworkingV1PrivateLinkAccesses
      summary: List of Private Link Accesses
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all private link accesses.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-pl-use1
            - prod-pl-usw2
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - PROVISIONING
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.network
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - n-00000
            - n-00001
          description: Filter the results by exact match for spec.network. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Private Link Accesses (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Access.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                network:
                                  example:
                                    id: n-00000
                                    related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses?spec.display_name=prod-pl-use1,prod-pl-usw2&status.phase=PROVISIONING,READY&environment=env-00000&spec.network=n-00000,n-00001");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1PrivateLinkAccess
      summary: Create a Private Link Access
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a private link access.
      tags:
        - Private Link Accesses (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - environment
                        - network
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        network:
                          example:
                            id: n-00000
      responses:
        '202':
          description: A Private Link Access is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}'
              description: PrivateLinkAccess resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/private-link-accesses \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-pl-use1","cloud":{"kind":"AwsPrivateLinkAccess","account":"000000000000"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"n-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-accesses")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-pl-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAccess\\\",\\\"account\\\":\\\"000000000000\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/private-link-accesses", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-accesses",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-pl-use1',
                cloud: {kind: 'AwsPrivateLinkAccess', account: '000000000000'},
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'n-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/private-link-accesses/{id}':
    get:
      operationId: getNetworkingV1PrivateLinkAccess
      summary: Read a Private Link Access
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a private link access.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link access.
      tags:
        - Private Link Accesses (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Access.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-accesses/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-accesses/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1PrivateLinkAccess
      summary: Update a Private Link Access
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a private link access.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link access.
      tags:
        - Private Link Accesses (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAccessUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Private Link Access.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAccess'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-pl-use1","cloud":{"kind":"AwsPrivateLinkAccess","account":"000000000000"},"environment":{"id":"env-00000","environment":"string"},"network":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-pl-use1\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAccess\\\",\\\"account\\\":\\\"000000000000\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/private-link-accesses/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-accesses/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-pl-use1',
                cloud: {kind: 'AwsPrivateLinkAccess', account: '000000000000'},
                environment: {id: 'env-00000', environment: 'string'},
                network: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-pl-use1\",\"cloud\":{\"kind\":\"AwsPrivateLinkAccess\",\"account\":\"000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1PrivateLinkAccess
      summary: Delete a Private Link Access
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a private link access.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link access.
      tags:
        - Private Link Accesses (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Private Link Access is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/private-link-accesses/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-accesses/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-accesses/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/network-link-services:
    get:
      operationId: listNetworkingV1NetworkLinkServices
      summary: List of Network Link Services
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all network link services.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-net-1-nls
            - dev-net-1-nls
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.network
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - n-00000
            - n-00001
          description: Filter the results by exact match for spec.network. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Network Link Services (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Service.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                network:
                                  example:
                                    id: n-00000
                                    related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-services?spec.display_name=prod-net-1-nls,dev-net-1-nls&status.phase=READY&environment=env-00000&spec.network=n-00000,n-00001");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1NetworkLinkService
      summary: Create a Network Link Service
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a network link service.
      tags:
        - Network Link Services (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkLinkService'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                        - network
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        network:
                          example:
                            id: n-00000
      responses:
        '202':
          description: A Network Link Service is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/network-link-services/{id}'
              description: NetworkLinkService resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkService'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/network-link-services \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-net-1-nls","description":"Allow connections from analytics hub","accept":{"environments":["string"],"networks":["string"]},"environment":{"id":"env-00000"},"network":{"id":"n-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-services")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-services\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-net-1-nls\\\",\\\"description\\\":\\\"Allow connections from analytics hub\\\",\\\"accept\\\":{\\\"environments\\\":[\\\"string\\\"],\\\"networks\\\":[\\\"string\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/network-link-services", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-services",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-net-1-nls',
                description: 'Allow connections from analytics hub',
                accept: {environments: ['string'], networks: ['string']},
                environment: {id: 'env-00000'},
                network: {id: 'n-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-services");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-services");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/network-link-services/{id}':
    get:
      operationId: getNetworkingV1NetworkLinkService
      summary: Read a Network Link Service
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a network link service.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link service.
      tags:
        - Network Link Services (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Service.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkService'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-services/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-services/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1NetworkLinkService
      summary: Update a Network Link Service
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a network link service.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link service.
      tags:
        - Network Link Services (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Network Link Service.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkService'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/network-link-services/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-net-1-nls","description":"Allow connections from analytics hub","accept":{"environments":["string"],"networks":["string"]},"environment":{"id":"env-00000"},"network":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-services/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-services/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-net-1-nls\\\",\\\"description\\\":\\\"Allow connections from analytics hub\\\",\\\"accept\\\":{\\\"environments\\\":[\\\"string\\\"],\\\"networks\\\":[\\\"string\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/network-link-services/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-services/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-net-1-nls',
                description: 'Allow connections from analytics hub',
                accept: {environments: ['string'], networks: ['string']},
                environment: {id: 'env-00000'},
                network: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-services/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-services/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-net-1-nls\",\"description\":\"Allow connections from analytics hub\",\"accept\":{\"environments\":[\"string\"],\"networks\":[\"string\"]},\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1NetworkLinkService
      summary: Delete a Network Link Service
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a network link service.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link service.
      tags:
        - Network Link Services (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Network Link Service is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/network-link-services/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-services/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-services/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/network-link-endpoints:
    get:
      operationId: listNetworkingV1NetworkLinkEndpoints
      summary: List of Network Link Endpoints
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all network link endpoints.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-net-1-nle
            - dev-net-1-nle
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - READY
            - PENDING_ACCEPT
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.network
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - n-00000
            - n-00001
          description: Filter the results by exact match for spec.network. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.network_link_service
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - nls-abcde
            - nls-00000
          description: Filter the results by exact match for spec.network_link_service. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Network Link Endpoints (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Endpoint.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                network:
                                  example:
                                    id: n-00000
                                    related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
                                network_link_service:
                                  example:
                                    id: nls-abcde
                                    related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-endpoints?spec.display_name=prod-net-1-nle,dev-net-1-nle&status.phase=READY,PENDING_ACCEPT&environment=env-00000&spec.network=n-00000,n-00001&spec.network_link_service=nls-abcde,nls-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1NetworkLinkEndpoint
      summary: Create a Network Link Endpoint
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a network link endpoint.
      tags:
        - Network Link Endpoints (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpoint'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                        - network
                        - network_link_service
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        network:
                          example:
                            id: n-00000
                        network_link_service:
                          example:
                            id: nls-abcde
      responses:
        '202':
          description: A Network Link Endpoint is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}'
              description: NetworkLinkEndpoint resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpoint'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                          - network_link_service
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
                          network_link_service:
                            example:
                              id: nls-abcde
                              related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/network-link-endpoints \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-net-1-nle","description":"Connect to Network - analytics hub","environment":{"id":"env-00000"},"network":{"id":"n-00000","environment":"string"},"network_link_service":{"id":"nls-abcde","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"nls-abcde\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-endpoints")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-endpoints\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-net-1-nle\\\",\\\"description\\\":\\\"Connect to Network - analytics hub\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\"},\\\"network\\\":{\\\"id\\\":\\\"n-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"network_link_service\\\":{\\\"id\\\":\\\"nls-abcde\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"nls-abcde\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/network-link-endpoints", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-endpoints",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-net-1-nle',
                description: 'Connect to Network - analytics hub',
                environment: {id: 'env-00000'},
                network: {id: 'n-00000', environment: 'string'},
                network_link_service: {id: 'nls-abcde', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-endpoints");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"nls-abcde\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-endpoints");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"n-00000\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"nls-abcde\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/network-link-endpoints/{id}':
    get:
      operationId: getNetworkingV1NetworkLinkEndpoint
      summary: Read a Network Link Endpoint
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a network link endpoint.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link endpoint.
      tags:
        - Network Link Endpoints (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Endpoint.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpoint'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                          - network_link_service
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
                          network_link_service:
                            example:
                              id: nls-abcde
                              related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-endpoints/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-endpoints/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1NetworkLinkEndpoint
      summary: Update a Network Link Endpoint
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a network link endpoint.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link endpoint.
      tags:
        - Network Link Endpoints (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpointUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Network Link Endpoint.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkEndpoint'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - environment
                          - network
                          - network_link_service
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          network:
                            example:
                              id: n-00000
                              related: 'https://api.confluent.cloud/networking/v1/networks/n-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-00000'
                          network_link_service:
                            example:
                              id: nls-abcde
                              related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-net-1-nle","description":"Connect to Network - analytics hub","environment":{"id":"env-00000"},"network":{"id":"string","environment":"string"},"network_link_service":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-net-1-nle\\\",\\\"description\\\":\\\"Connect to Network - analytics hub\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\"},\\\"network\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"},\\\"network_link_service\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/network-link-endpoints/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-endpoints/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-net-1-nle',
                description: 'Connect to Network - analytics hub',
                environment: {id: 'env-00000'},
                network: {id: 'string', environment: 'string'},
                network_link_service: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-net-1-nle\",\"description\":\"Connect to Network - analytics hub\",\"environment\":{\"id\":\"env-00000\"},\"network\":{\"id\":\"string\",\"environment\":\"string\"},\"network_link_service\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1NetworkLinkEndpoint
      summary: Delete a Network Link Endpoint
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a network link endpoint.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link endpoint.
      tags:
        - Network Link Endpoints (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Network Link Endpoint is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/network-link-endpoints/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-endpoints/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-endpoints/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/network-link-service-associations:
    get:
      operationId: listNetworkingV1NetworkLinkServiceAssociations
      summary: List of Network Link Service Associations
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all network link service associations.
      parameters:
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - READY
            - PENDING_ACCEPT
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.network_link_service
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: nls-abcde
          description: Filter the results by exact match for spec.network_link_service.
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Network Link Service Associations (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Service Association.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAssociationList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                network_link_service:
                                  example:
                                    id: nls-abcde
                                    related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-service-associations?status.phase=READY,PENDING_ACCEPT&spec.network_link_service=nls-abcde&environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  '/networking/v1/network-link-service-associations/{id}':
    get:
      operationId: getNetworkingV1NetworkLinkServiceAssociation
      summary: Read a Network Link Service Association
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a network link service association.
      parameters:
        - name: spec.network_link_service
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: nls-abcde
          description: Scope the operation to the given spec.network_link_service.
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the network link service association.
      tags:
        - Network Link Service Associations (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Network Link Service Association.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.NetworkLinkServiceAssociation'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - display_name
                          - network_link_endpoint
                          - network_link_service
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          network_link_service:
                            example:
                              id: nls-abcde
                              related: 'https://api.confluent.cloud/networking/v1/network-link-services/nls-abcde'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/network=n-456xyz/network-link-service=nls-abcde'
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/network-link-service-associations/{id}?spec.network_link_service=nls-abcde&environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/gateways:
    get:
      operationId: listNetworkingV1Gateways
      summary: List of Gateways
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all gateways.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 1000
            x-max-page-items: 1000
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Gateways (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Gateway.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.GatewayList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/gateways?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/gateways?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/gateways?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/gateways?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/gateways?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/gateways?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/gateways?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  '/networking/v1/gateways/{id}':
    get:
      operationId: getNetworkingV1Gateway
      summary: Read a Gateway
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a gateway.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the gateway.
      tags:
        - Gateways (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Gateway.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.Gateway'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - config
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/gateways/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/gateways/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/gateways/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/gateways/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/gateways/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/gateways/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/gateways/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/ip-addresses:
    get:
      operationId: listNetworkingV1IpAddresses
      summary: List of IP Addresses
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Related guide: [Use Public Egress IP addresses on Confluent Cloud](https://docs.confluent.io/cloud/current/networking/static-egress-ip-addresses.html)

        Retrieve a sorted, filtered, paginated list of all IP Addresses.
      parameters:
        - name: cloud
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - GCP
            - AWS
          description: Filter the results by exact match for cloud. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: region
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - us-central1
            - us-east-1
          description: Filter the results by exact match for region. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: services
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - KAFKA
            - CONNECT
          description: Filter the results by exact match for services. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: address_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - INGRESS
            - EGRESS
          description: Filter the results by exact match for address_type. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - IP Addresses (networking/v1)
      security:
        - cloud-api-key: []
      responses:
        '200':
          description: IP Address.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.IpAddressList'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/ip-addresses?cloud=GCP,AWS&region=us-central1,us-east-1&services=KAFKA,CONNECT&address_type=INGRESS,EGRESS");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/private-link-attachments:
    get:
      operationId: listNetworkingV1PrivateLinkAttachments
      summary: List of Private Link Attachments
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all private link attachments.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-gcp-us-central1
            - prod-aws-useast1
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.cloud
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - GCP
            - AWS
          description: Filter the results by exact match for spec.cloud. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.region
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - us-central1
            - us-east-1
          description: Filter the results by exact match for spec.region. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: status.phase
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - PROVISIONING
            - READY
          description: Filter the results by exact match for status.phase. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Private Link Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachments?spec.display_name=prod-gcp-us-central1,prod-aws-useast1&spec.cloud=GCP,AWS&spec.region=us-central1,us-east-1&status.phase=PROVISIONING,READY&environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1PrivateLinkAttachment
      summary: Create a Private Link Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a private link attachment.
      tags:
        - Private Link Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachment'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - region
                        - environment
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '202':
          description: A Private Link Attachment is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/private-link-attachments/{id}'
              description: PrivateLinkAttachment resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachment'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/private-link-attachments \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-aws-us-east1","cloud":"AWS","region":"us-east-1","environment":{"id":"env-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachments")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachments\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-aws-us-east1\\\",\\\"cloud\\\":\\\"AWS\\\",\\\"region\\\":\\\"us-east-1\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/private-link-attachments", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachments",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-aws-us-east1',
                cloud: 'AWS',
                region: 'us-east-1',
                environment: {id: 'env-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachments");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachments");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/private-link-attachments/{id}':
    get:
      operationId: getNetworkingV1PrivateLinkAttachment
      summary: Read a Private Link Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a private link attachment.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment.
      tags:
        - Private Link Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachment'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-attachments/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachments/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1PrivateLinkAttachment
      summary: Update a Private Link Attachment
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a private link attachment.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment.
      tags:
        - Private Link Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Private Link Attachment.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachment'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - region
                          - environment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '402':
          $ref: '#/components/responses/OverQuotaError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachments/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-aws-us-east1","cloud":"AWS","region":"us-east-1","environment":{"id":"env-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachments/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-aws-us-east1\\\",\\\"cloud\\\":\\\"AWS\\\",\\\"region\\\":\\\"us-east-1\\\",\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/private-link-attachments/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachments/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-aws-us-east1',
                cloud: 'AWS',
                region: 'us-east-1',
                environment: {id: 'env-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachments/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-aws-us-east1\",\"cloud\":\"AWS\",\"region\":\"us-east-1\",\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1PrivateLinkAttachment
      summary: Delete a Private Link Attachment
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a private link attachment.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment.
      tags:
        - Private Link Attachments (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Private Link Attachment is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/private-link-attachments/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachments/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachments/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/private-link-attachment-connections:
    get:
      operationId: listNetworkingV1PrivateLinkAttachmentConnections
      summary: List of Private Link Attachment Connections
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all private link attachment connections.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.private_link_attachment
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: platt-00000
          description: Filter the results by exact match for spec.private_link_attachment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Private Link Attachment Connections (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Attachment Connection.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                private_link_attachment:
                                  example:
                                    id: platt-00000
                                    related: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachment-connections?environment=env-00000&spec.private_link_attachment=platt-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1PrivateLinkAttachmentConnection
      summary: Create a Private Link Attachment Connection
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a private link attachment connection.
      tags:
        - Private Link Attachment Connections (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnection'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - cloud
                        - environment
                        - private_link_attachment
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        private_link_attachment:
                          example:
                            id: platt-00000
      responses:
        '202':
          description: A Private Link Attachment Connection is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}'
              description: PrivateLinkAttachmentConnection resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnection'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - private_link_attachment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          private_link_attachment:
                            example:
                              id: platt-00000
                              related: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/private-link-attachment-connections \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-gcp-us-central1-a","cloud":{"kind":"AwsPrivateLinkAttachmentConnection","vpc_endpoint_id":"vpce-00000000000000000"},"environment":{"id":"env-00000","environment":"string"},"private_link_attachment":{"id":"platt-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"platt-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachment-connections")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachment-connections\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-gcp-us-central1-a\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAttachmentConnection\\\",\\\"vpc_endpoint_id\\\":\\\"vpce-00000000000000000\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"private_link_attachment\\\":{\\\"id\\\":\\\"platt-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"platt-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/private-link-attachment-connections", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachment-connections",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-gcp-us-central1-a',
                cloud: {
                  kind: 'AwsPrivateLinkAttachmentConnection',
                  vpc_endpoint_id: 'vpce-00000000000000000'
                },
                environment: {id: 'env-00000', environment: 'string'},
                private_link_attachment: {id: 'platt-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachment-connections");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"platt-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachment-connections");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"platt-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/private-link-attachment-connections/{id}':
    get:
      operationId: getNetworkingV1PrivateLinkAttachmentConnection
      summary: Read a Private Link Attachment Connection
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a private link attachment connection.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment connection.
      tags:
        - Private Link Attachment Connections (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Private Link Attachment Connection.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnection'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - private_link_attachment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          private_link_attachment:
                            example:
                              id: platt-00000
                              related: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/private-link-attachment-connections/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachment-connections/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1PrivateLinkAttachmentConnection
      summary: Update a Private Link Attachment Connection
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a private link attachment connection.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment connection.
      tags:
        - Private Link Attachment Connections (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnectionUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Private Link Attachment Connection.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.PrivateLinkAttachmentConnection'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - cloud
                          - environment
                          - private_link_attachment
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          private_link_attachment:
                            example:
                              id: platt-00000
                              related: 'https://api.confluent.cloud/networking/v1/private-link-attachments/platt-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/private-link-attachment=platt-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-gcp-us-central1-a","cloud":{"kind":"AwsPrivateLinkAttachmentConnection","vpc_endpoint_id":"vpce-00000000000000000"},"environment":{"id":"env-00000","environment":"string"},"private_link_attachment":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-gcp-us-central1-a\\\",\\\"cloud\\\":{\\\"kind\\\":\\\"AwsPrivateLinkAttachmentConnection\\\",\\\"vpc_endpoint_id\\\":\\\"vpce-00000000000000000\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"private_link_attachment\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/private-link-attachment-connections/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachment-connections/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-gcp-us-central1-a',
                cloud: {
                  kind: 'AwsPrivateLinkAttachmentConnection',
                  vpc_endpoint_id: 'vpce-00000000000000000'
                },
                environment: {id: 'env-00000', environment: 'string'},
                private_link_attachment: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-gcp-us-central1-a\",\"cloud\":{\"kind\":\"AwsPrivateLinkAttachmentConnection\",\"vpc_endpoint_id\":\"vpce-00000000000000000\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"private_link_attachment\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1PrivateLinkAttachmentConnection
      summary: Delete a Private Link Attachment Connection
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a private link attachment connection.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the private link attachment connection.
      tags:
        - Private Link Attachment Connections (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A Private Link Attachment Connection is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/private-link-attachment-connections/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/private-link-attachment-connections/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/private-link-attachment-connections/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/dns-forwarders:
    get:
      operationId: listNetworkingV1DnsForwarders
      summary: List of DNS Forwarders
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all DNS forwarders.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - DNS Forwarders (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: DNS Forwarder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsForwarderList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                gateway:
                                  example:
                                    id: gw-00000
                                    related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/dns-forwarders?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-forwarders?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-forwarders?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/dns-forwarders?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-forwarders?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-forwarders?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-forwarders?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1DnsForwarder
      summary: Create a DNS Forwarder
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a DNS forwarder.
      tags:
        - DNS Forwarders (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.DnsForwarder'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - domains
                        - config
                        - environment
                        - gateway
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        gateway:
                          example:
                            id: gw-00000
      responses:
        '202':
          description: A DNS Forwarder is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/dns-forwarders/{id}'
              description: DnsForwarder resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsForwarder'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domains
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/dns-forwarders \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-dnsf-1","domains":["example.com","domainname.com"],"config":{"kind":"ForwardViaIp","dns_server_ips":["10.200.0.0","10.200.0.1"]},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"gw-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-forwarders")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-forwarders\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-dnsf-1\\\",\\\"domains\\\":[\\\"example.com\\\",\\\"domainname.com\\\"],\\\"config\\\":{\\\"kind\\\":\\\"ForwardViaIp\\\",\\\"dns_server_ips\\\":[\\\"10.200.0.0\\\",\\\"10.200.0.1\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"gw-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/dns-forwarders", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-forwarders",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-dnsf-1',
                domains: ['example.com', 'domainname.com'],
                config: {kind: 'ForwardViaIp', dns_server_ips: ['10.200.0.0', '10.200.0.1']},
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'gw-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-forwarders");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-forwarders");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/dns-forwarders/{id}':
    get:
      operationId: getNetworkingV1DnsForwarder
      summary: Read a DNS Forwarder
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a DNS forwarder.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS forwarder.
      tags:
        - DNS Forwarders (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: DNS Forwarder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsForwarder'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domains
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/dns-forwarders/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-forwarders/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1DnsForwarder
      summary: Update a DNS Forwarder
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a DNS forwarder.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS forwarder.
      tags:
        - DNS Forwarders (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.DnsForwarderUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: DNS Forwarder.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsForwarder'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domains
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/dns-forwarders/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-dnsf-1","domains":["example.com","domainname.com"],"config":{"kind":"ForwardViaIp","dns_server_ips":["10.200.0.0","10.200.0.1"]},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-forwarders/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-dnsf-1\\\",\\\"domains\\\":[\\\"example.com\\\",\\\"domainname.com\\\"],\\\"config\\\":{\\\"kind\\\":\\\"ForwardViaIp\\\",\\\"dns_server_ips\\\":[\\\"10.200.0.0\\\",\\\"10.200.0.1\\\"]},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/dns-forwarders/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-forwarders/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-dnsf-1',
                domains: ['example.com', 'domainname.com'],
                config: {kind: 'ForwardViaIp', dns_server_ips: ['10.200.0.0', '10.200.0.1']},
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-forwarders/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsf-1\",\"domains\":[\"example.com\",\"domainname.com\"],\"config\":{\"kind\":\"ForwardViaIp\",\"dns_server_ips\":[\"10.200.0.0\",\"10.200.0.1\"]},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1DnsForwarder
      summary: Delete a DNS Forwarder
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a DNS forwarder.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS forwarder.
      tags:
        - DNS Forwarders (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A DNS Forwarder is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/dns-forwarders/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-forwarders/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-forwarders/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/access-points:
    get:
      operationId: listNetworkingV1AccessPoints
      summary: List of Access Points
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all access points.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-ap-egress-use1
            - prod-ap-egress-usw2
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.gateway
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - gw-00000
            - gw-00001
          description: Filter the results by exact match for spec.gateway. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - Access Points (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Access Point.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.AccessPointList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                gateway:
                                  example:
                                    id: gw-00000
                                    related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points?spec.display_name=prod-ap-egress-use1,prod-ap-egress-usw2&environment=env-00000&spec.gateway=gw-00000,gw-00001");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1AccessPoint
      summary: Create an Access Point
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create an access point.
      tags:
        - Access Points (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPoint'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - config
                        - environment
                        - gateway
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        gateway:
                          example:
                            id: gw-00000
      responses:
        '202':
          description: An Access Point is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/access-points/{id}'
              description: AccessPoint resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.AccessPoint'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/access-points \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-ap-egress-usw2","config":{"kind":"AwsEgressPrivateLinkEndpoint","vpc_endpoint_service_name":"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000","enable_high_availability":false},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"gw-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/access-points")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-ap-egress-usw2\\\",\\\"config\\\":{\\\"kind\\\":\\\"AwsEgressPrivateLinkEndpoint\\\",\\\"vpc_endpoint_service_name\\\":\\\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\\\",\\\"enable_high_availability\\\":false},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"gw-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/access-points", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/access-points",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-ap-egress-usw2',
                config: {
                  kind: 'AwsEgressPrivateLinkEndpoint',
                  vpc_endpoint_service_name: 'com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000',
                  enable_high_availability: false
                },
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'gw-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/access-points/{id}':
    get:
      operationId: getNetworkingV1AccessPoint
      summary: Read an Access Point
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read an access point.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the access point.
      tags:
        - Access Points (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: Access Point.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.AccessPoint'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/access-points/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/access-points/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1AccessPoint
      summary: Update an Access Point
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update an access point.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the access point.
      tags:
        - Access Points (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.AccessPointUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: Access Point.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.AccessPoint'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/access-points/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-ap-egress-usw2","config":{"kind":"AwsEgressPrivateLinkEndpoint","vpc_endpoint_service_name":"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000","enable_high_availability":false},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/access-points/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-ap-egress-usw2\\\",\\\"config\\\":{\\\"kind\\\":\\\"AwsEgressPrivateLinkEndpoint\\\",\\\"vpc_endpoint_service_name\\\":\\\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\\\",\\\"enable_high_availability\\\":false},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/access-points/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/access-points/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-ap-egress-usw2',
                config: {
                  kind: 'AwsEgressPrivateLinkEndpoint',
                  vpc_endpoint_service_name: 'com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000',
                  enable_high_availability: false
                },
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-ap-egress-usw2\",\"config\":{\"kind\":\"AwsEgressPrivateLinkEndpoint\",\"vpc_endpoint_service_name\":\"com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000\",\"enable_high_availability\":false},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1AccessPoint
      summary: Delete an Access Point
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete an access point.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the access point.
      tags:
        - Access Points (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: An Access Point is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/access-points/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/access-points/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/access-points/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
  /networking/v1/dns-records:
    get:
      operationId: listNetworkingV1DnsRecords
      summary: List of DNS Records
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Retrieve a sorted, filtered, paginated list of all DNS records.
      parameters:
        - name: spec.display_name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - prod-dnsrec-1
            - prod-dnsrec-2
          description: Filter the results by exact match for spec.display_name. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: spec.domain
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - example.com
            - example2.com
          description: Filter the results by exact match for spec.domain. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Filter the results by exact match for environment.
        - name: spec.gateway
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - gw-00000
            - gw-00001
          description: Filter the results by exact match for spec.gateway. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: resource
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MultipleSearchFilter'
          example:
            - ap-11111
            - ap-22222
          description: Filter the results by exact match for resource. Pass multiple times to see results matching any of the values.
          style: form
          explode: true
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 10
            maximum: 100
            x-max-page-items: 500
          description: A pagination size for collection requests.
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: An opaque pagination token for collection requests.
      tags:
        - DNS Records (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: DNS Record.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsRecordList'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            spec:
                              type: object
                              properties:
                                environment:
                                  example:
                                    id: env-00000
                                    related: 'https://api.confluent.cloud/v2/environments/env-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                                gateway:
                                  example:
                                    id: gw-00000
                                    related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                                    resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records?spec.display_name=prod-dnsrec-1,prod-dnsrec-2&spec.domain=example.com,example2.com&environment=env-00000&spec.gateway=gw-00000,gw-00001&resource=ap-11111,ap-22222");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    post:
      operationId: createNetworkingV1DnsRecord
      summary: Create a DNS Record
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to create a DNS record.
      tags:
        - DNS Records (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecord'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - domain
                        - config
                        - environment
                        - gateway
                - type: object
                  properties:
                    spec:
                      type: object
                      properties:
                        environment:
                          example:
                            id: env-00000
                        gateway:
                          example:
                            id: gw-00000
      responses:
        '202':
          description: A DNS Record is being created.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
            Location:
              schema:
                type: string
                format: uri
                example: 'https://api.confluent.cloud/networking/v1/dns-records/{id}'
              description: DnsRecord resource uri
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsRecord'
                  - type: object
                    required:
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domain
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://api.confluent.cloud/networking/v1/dns-records \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-dnsrec-1","domain":"example.com","config":{"kind":"PrivateLinkAccessPoint","resource_id":"ap-12345"},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"gw-00000","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-records")
              .post(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-dnsrec-1\\\",\\\"domain\\\":\\\"example.com\\\",\\\"config\\\":{\\\"kind\\\":\\\"PrivateLinkAccessPoint\\\",\\\"resource_id\\\":\\\"ap-12345\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"gw-00000\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/networking/v1/dns-records", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-records",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-dnsrec-1',
                domain: 'example.com',
                config: {kind: 'PrivateLinkAccessPoint', resource_id: 'ap-12345'},
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'gw-00000', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records");
            var request = new RestRequest(Method.POST);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"gw-00000\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
  '/networking/v1/dns-records/{id}':
    get:
      operationId: getNetworkingV1DnsRecord
      summary: Read a DNS Record
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to read a DNS record.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS record.
      tags:
        - DNS Records (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '200':
          description: DNS Record.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsRecord'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domain
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000")
              .get()
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/networking/v1/dns-records/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-records/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
    patch:
      operationId: updateNetworkingV1DnsRecord
      summary: Update a DNS Record
      description: |+
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to update a DNS record.

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS record.
      tags:
        - DNS Records (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/networking.v1.DnsRecordUpdate'
                - type: object
                  required:
                    - spec
                  properties:
                    spec:
                      type: object
                      required:
                        - environment
                      properties:
                        environment:
                          example:
                            id: env-00000
      responses:
        '200':
          description: DNS Record.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/networking.v1.DnsRecord'
                  - type: object
                    required:
                      - api_version
                      - kind
                      - id
                      - spec
                      - status
                    properties:
                      spec:
                        type: object
                        required:
                          - domain
                          - config
                          - environment
                          - gateway
                  - type: object
                    properties:
                      spec:
                        type: object
                        properties:
                          environment:
                            example:
                              id: env-00000
                              related: 'https://api.confluent.cloud/v2/environments/env-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-00000'
                          gateway:
                            example:
                              id: gw-00000
                              related: 'https://api.confluent.cloud/networking/v1/gateways/gw-00000'
                              resource_name: 'https://api.confluent.cloud/organization=9bb441c4-edef-46ac-8a41-c49e44a3fd9a/environment=env-abc123/gateway=gw-00000'
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH' \
              --header 'content-type: application/json' \
              --data '{"spec":{"display_name":"prod-dnsrec-1","domain":"example.com","config":{"kind":"PrivateLinkAccessPoint","resource_id":"ap-12345"},"environment":{"id":"env-00000","environment":"string"},"gateway":{"id":"string","environment":"string"}}}'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");
            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-records/{id}")
              .patch(body)
              .addHeader("content-type", "application/json")
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"display_name\\\":\\\"prod-dnsrec-1\\\",\\\"domain\\\":\\\"example.com\\\",\\\"config\\\":{\\\"kind\\\":\\\"PrivateLinkAccessPoint\\\",\\\"resource_id\\\":\\\"ap-12345\\\"},\\\"environment\\\":{\\\"id\\\":\\\"env-00000\\\",\\\"environment\\\":\\\"string\\\"},\\\"gateway\\\":{\\\"id\\\":\\\"string\\\",\\\"environment\\\":\\\"string\\\"}}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            payload = "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("PATCH", "/networking/v1/dns-records/{id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "PATCH",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-records/{id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              spec: {
                display_name: 'prod-dnsrec-1',
                domain: 'example.com',
                config: {kind: 'PrivateLinkAccessPoint', resource_id: 'ap-12345'},
                environment: {id: 'env-00000', environment: 'string'},
                gateway: {id: 'string', environment: 'string'}
              }
            }));
            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "content-type: application/json");
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("content-type", "application/json");
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            request.AddParameter("application/json", "{\"spec\":{\"display_name\":\"prod-dnsrec-1\",\"domain\":\"example.com\",\"config\":{\"kind\":\"PrivateLinkAccessPoint\",\"resource_id\":\"ap-12345\"},\"environment\":{\"id\":\"env-00000\",\"environment\":\"string\"},\"gateway\":{\"id\":\"string\",\"environment\":\"string\"}}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
    delete:
      operationId: deleteNetworkingV1DnsRecord
      summary: Delete a DNS Record
      description: |-
        [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Make a request to delete a DNS record.
      parameters:
        - name: environment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchFilter'
          example: env-00000
          description: Scope the operation to the given environment.
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier for the DNS record.
      tags:
        - DNS Records (networking/v1)
      security:
        - cloud-api-key: []
        - confluent-sts-access-token: []
      responses:
        '204':
          description: A DNS Record is being deleted.
          headers:
            X-Request-Id:
              schema:
                type: string
              description: The unique identifier for the API request.
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The maximum number of requests you're permitted to make per time period.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests remaining in the current rate limit window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: |-
                The relative time in seconds until the current rate-limit window resets.  
                  
                **Important:** This differs from Github and Twitter's same-named header which uses UTC epoch seconds. We use relative time to avoid client/server time synchronization issues.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/DefaultSystemError'
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000' \
              --header 'Authorization: Basic REPLACE_BASIC_AUTH'
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000")
              .delete(null)
              .addHeader("Authorization", "Basic REPLACE_BASIC_AUTH")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.confluent.cloud")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("DELETE", "/networking/v1/dns-records/{id}?environment=env-00000", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.confluent.cloud",
              "port": null,
              "path": "/networking/v1/dns-records/{id}?environment=env-00000",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "Authorization: Basic REPLACE_BASIC_AUTH");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://api.confluent.cloud/networking/v1/dns-records/{id}?environment=env-00000");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Authorization", "Basic REPLACE_BASIC_AUTH");
            IRestResponse response = client.Execute(request);
