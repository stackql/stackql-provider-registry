openapi: 3.0.1
info:
  title: nodebalancers API
  description: linode nodebalancers API
  version: 4.208.1
paths:
  /nodebalancers:
    post:
      description: >-
        Creates a NodeBalancer in the requested Region. Only available in
        [regions](https://techdocs.akamai.com/linode-api/reference/get-regions)
        with "NodeBalancers" in their `capabilities`.


        NodeBalancers require a port config with at least one backend node to
        start serving requests.


        When using the Linode CLI to create a NodeBalancer, first create a
        NodeBalancer without any configs. Then, create configs and nodes for
        that NodeBalancer with the respective [Create a
        config](https://techdocs.akamai.com/linode-api/reference/post-node-balancer-config)
        and [Create a
        node](https://techdocs.akamai.com/linode-api/reference/post-node-balancer-node)
        operations.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/post-node-balancer
      operationId: post-node-balancer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                client_conn_throttle:
                  description: >-
                    Throttle TCP connections per second for TCP, HTTP, and HTTPS
                    configurations.  Set to `0` (zero) to disable throttling.
                  example: '{{client_conn_throttle}}'
                  maximum: 20
                  minimum: 0
                  type: integer
                  x-linode-cli-display: 9
                configs:
                  description: >-
                    The port configs to create for this NodeBalancer. Each
                    config needs a unique port and at least one node.
                  items:
                    oneOf:
                      - additionalProperties: false
                        description: >-
                          __Beta__ A NodeBalancer configuration defines the
                          protocol and settings for a specific port on the
                          NodeBalancer. These fields apply to UDP
                          configurations.
                        properties:
                          algorithm:
                            default: roundrobin
                            description: >-
                              The algorithm this UDP NodeBalancer uses to route
                              traffic to backends.
                            enum:
                              - roundrobin
                              - leastconn
                              - ring_hash
                            example: leastconn
                            type: string
                            x-linode-cli-display: 4
                          check:
                            default: none
                            description: >-
                              The type of check to perform against backends to
                              ensure they are serving requests. This determines
                              if backends are up or down.


                              - If `none`, no check is performed.

                              - `connection` requires only a connection to the
                              backend to succeed.

                              - `http` and `http_body` rely on the backend
                              serving HTTP, and that the response returned
                              matches what is expected.
                            enum:
                              - none
                              - connection
                              - http
                              - http_body
                            example: http_body
                            type: string
                          check_attempts:
                            default: 3
                            description: >-
                              How many times to attempt a check before
                              considering a backend to be down.
                            example: 3
                            maximum: 30
                            minimum: 1
                            type: integer
                          check_body:
                            description: >-
                              This value must be present in the response body of
                              the check in order for it to pass. If this value
                              isn't present in the response body of a check
                              request, the backend is considered to be down.
                            example: it works
                            type: string
                          check_interval:
                            default: 5
                            description: >-
                              How often, in seconds, to check that backends are
                              up and serving requests.


                              Must be greater than `check_timeout`.
                            example: 90
                            maximum: 3600
                            minimum: 2
                            type: integer
                          check_passive:
                            description: __Read-only__ Must be `false` for UDP.
                            example: false
                            readOnly: true
                            type: boolean
                            x-linode-cli-display: 8
                          check_path:
                            description: >-
                              The URL path to check on each backend. If the
                              backend does not respond to this request, it's
                              considered to be down.
                            example: /test
                            pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                            type: string
                          check_timeout:
                            default: 30
                            description: >-
                              How long, in seconds, to wait for a check attempt
                              before considering it failed.


                              Must be less than `check_interval`.
                            example: 10
                            maximum: 30
                            minimum: 1
                            type: integer
                          cipher_suite:
                            description: __Read-only__ Not applicable for UDP configs.
                            example: none
                            readOnly: true
                            type: string
                            x-linode-cli-color:
                              default_: white
                              legacy: red
                            x-linode-cli-display: 7
                          id:
                            description: __Read-only__ This config's unique ID.
                            example: 7000
                            readOnly: true
                            type: integer
                            x-linode-cli-display: 1
                          nodebalancer_id:
                            description: >-
                              __Read-only__ The ID for the NodeBalancer this
                              config belongs to.
                            example: 12345
                            readOnly: true
                            type: integer
                          nodes:
                            description: >-
                              The NodeBalancer nodes that serve this
                              configuration.
                            items:
                              additionalProperties: false
                              description: >-
                                __Beta__ A NodeBalancer node represents a single
                                backend serving requests for a single port of a
                                NodeBalancer. Nodes are tied to individual
                                NodeBalancer configurations and route traffic
                                over their private IPv4 address, IPv6 address,
                                or VPC IPv4 address. If the same Linode is
                                serving traffic for more than one port on the
                                same NodeBalancer, one NodeBalancer node is
                                required for each config (port) it should serve
                                requests on.  For example, if you have four
                                backends, and each should respond to both UDP
                                and HTTPS requests, you will need two
                                NodeBalancer configs (port 80 and port 443) and
                                four backends each, one for each of the Linodes
                                serving requests for that port.
                              properties:
                                address:
                                  description: >-
                                    Backend nodes can be Linodes and Linodes
                                    within a VPC. The following IP types are
                                    supported:
                                      - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                      - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                      - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                  example:
                                    - 192.168.210.120:443
                                    - 10.100.5.5:80
                                    - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                  format: ip
                                  type: string
                                  x-linode-cli-display: 3
                                config_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer Config ID
                                    that this Node belongs to.
                                  example: 4567
                                  readOnly: true
                                  type: integer
                                id:
                                  description: __Read-only__ This node's unique ID.
                                  example: 54321
                                  readOnly: true
                                  type: integer
                                  x-linode-cli-display: 1
                                label:
                                  description: >-
                                    The label for this node.  This is for
                                    display purposes only.
                                  example: node54321
                                  maxLength: 32
                                  minLength: 3
                                  pattern: '[a-zA-Z0-9-_.]{3,32}'
                                  type: string
                                  x-linode-cli-display: 2
                                mode:
                                  description: >-
                                    __Read-only__ The mode this NodeBalancer
                                    should use when sending traffic to this
                                    backend. For backend nodes with a UDP
                                    config, the `mode` doesn't apply, so the
                                    value is `none`.
                                  enum:
                                    - none
                                  example: none
                                  readOnly: true
                                  type: string
                                  x-linode-cli-display: 6
                                nodebalancer_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer ID that this
                                    Node belongs to.
                                  example: 12345
                                  readOnly: true
                                  type: integer
                                status:
                                  description: >-
                                    __Read-only__ The current status of this
                                    node, based on the configured checks of its
                                    NodeBalancer config.
                                  enum:
                                    - unknown
                                    - UP
                                    - DOWN
                                  example: UP
                                  readOnly: true
                                  type: string
                                  x-linode-cli-color:
                                    DOWN: red
                                    UP: green
                                    default_: white
                                    unknown: yellow
                                  x-linode-cli-display: 4
                                subnet_id:
                                  description: >-
                                    Required for VPC backend nodes only. The
                                    VPC's subnet. To display information about
                                    your VPCs and their subnets, run the [List
                                    VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                    operation.
                                  example: 1
                                  type: integer
                                  x-linode-cli-display: 4
                                weight:
                                  description: >-
                                    Used when picking a backend to serve a
                                    request and is not pinned to a single
                                    backend yet. Nodes with a higher weight will
                                    receive more traffic.
                                  example: 50
                                  maximum: 255
                                  minimum: 1
                                  type: integer
                                  x-linode-cli-display: 5
                              title: UDP config
                              x-akamai:
                                file-path: schemas/node-balancer-node-udp.yaml
                                status: BETA
                              type: object
                            type: array
                          nodes_status:
                            additionalProperties: false
                            description: >-
                              __Read-only__ Describes the health of the backends
                              for this port. This data updates periodically as
                              checks are performed against backends.
                            properties:
                              down:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `DOWN` and unhealthy.  These
                                  are not in rotation, and not serving requests.
                                example: 0
                                readOnly: true
                                type: integer
                              up:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `UP` and healthy, and that
                                  are serving requests.
                                example: 4
                                readOnly: true
                                type: integer
                            readOnly: true
                            type: object
                            x-linode-cli-display: 11
                          port:
                            default: 80
                            description: >-
                              This is the port the NodeBalancer listens on for
                              this configuration. Port numbers must be unique
                              across TCP, HTTP, and HTTPS configurations on a
                              single NodeBalancer. However, ports assigned to
                              TCP, HTTP, or HTTPS configurations can also be
                              reused for UDP configurations. For example, Port
                              80 can simultaneously serve a TCP and a UDP
                              configuration on the same NodeBalancer, but it
                              can't be shared by both a TCP and an HTTP
                              configuration. Although certain ports are
                              traditionally associated with specific protocols,
                              this isn't strictly enforced, and you may
                              configure your NodeBalancer however you find
                              useful.
                            example: 5795
                            maximum: 65535
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 2
                          protocol:
                            default: http
                            description: >-
                              The protocol the port is configured to serve,
                              `udp` in this case. Review our guide on [Available
                              Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                              for information on protocol features.
                            enum:
                              - udp
                            example: udp
                            type: string
                            x-linode-cli-display: 3
                          proxy_protocol:
                            description: __Read-only__ Must be `none` for UDP.
                            example: none
                            readOnly: true
                            type: string
                          ssl_cert:
                            description: __Read-only__ Not applicable for UDP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          ssl_commonname:
                            description: __Read-only__ Not applicable for UPD configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 9
                          ssl_fingerprint:
                            description: __Read-only__ Not applicable for UDP configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 10
                          ssl_key:
                            description: __Read-only__ Not applicable for UDP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          stickiness:
                            default: session
                            description: >-
                              Controls how session stickiness is handled on this
                              port.


                              - If set to `none`, connections are assigned a
                              backend server based on the algorithm configured.

                              - If set to `session`, all packets with the same
                              session identifiers are routed to the same backend
                              server. Two packets are considered part of the
                              same session if they share the same source and
                              destination IP addresses or ports, and are
                              received within a short time window.

                              - If set to `source_ip`, the NodeBalancer uses the
                              client's source IP address to route all packets
                              from the same client to the same backend server.
                            enum:
                              - none
                              - session
                              - source_ip
                            example: none
                            type: string
                            x-linode-cli-display: 5
                          udp_check_port:
                            default: 80
                            description: >-
                              UDP NodeBalancers use TCP and HTTP active health
                              checks to ensure back-end nodes can receive
                              traffic. You can specify the health check port
                              that the backend node listens on, which may differ
                              from the UDP port used to serve traffic.
                            example: 5795
                            maximum: 65535
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 6
                          udp_session_timeout:
                            default: 16
                            description: >-
                              __Read-only__ The maximum duration in seconds, a
                              UDP session can be idle before it is closed.
                            example: 2
                            maximum: 300
                            minimum: 1
                            readOnly: true
                            type: integer
                            x-linode-cli-display: 12
                        required:
                          - nodes
                        title: UDP
                        type: object
                        x-akamai:
                          file-path: schemas/node-balancer-config-udp.yaml
                          status: BETA
                      - additionalProperties: false
                        description: >-
                          A NodeBalancer configuration defines the protocol and
                          settings for a specific port on the NodeBalancer.
                          These fields apply to TCP configurations.
                        properties:
                          algorithm:
                            default: roundrobin
                            description: >-
                              The algorithm this TCP NodeBalancer uses to route
                              traffic to backends.
                            enum:
                              - roundrobin
                              - leastconn
                              - source
                            example: leastconn
                            type: string
                            x-linode-cli-display: 4
                          check:
                            default: none
                            description: >-
                              The type of check to perform against backends to
                              ensure they are serving requests. The `check` is
                              used to determine if backends are up or down.


                              - If `none`, no check is performed.

                              - `connection` requires only a connection to the
                              backend to succeed.

                              - `http` and `http_body` rely on the backend
                              serving HTTP, and that the response returned
                              matches what is expected.
                            enum:
                              - none
                              - connection
                              - http
                              - http_body
                            example: http_body
                            type: string
                          check_attempts:
                            default: 3
                            description: >-
                              How many times to attempt a check before
                              considering a backend to be down.
                            example: 3
                            maximum: 30
                            minimum: 1
                            type: integer
                          check_body:
                            description: >-
                              This value must be present in the response body of
                              the check in order for it to pass. If this value
                              is not present in the response body of a check
                              request, the backend is considered to be down.
                            example: it works
                            type: string
                          check_interval:
                            default: 5
                            description: >-
                              How often, in seconds, to check that backends are
                              up and serving requests.


                              Must be greater than `check_timeout`.
                            example: 90
                            maximum: 3600
                            minimum: 2
                            type: integer
                          check_passive:
                            default: true
                            description: >-
                              If `true`, any response from this backend with a
                              `5xx` status code will be enough for it to be
                              considered unhealthy and taken out of rotation.
                            example: true
                            type: boolean
                            x-linode-cli-display: 6
                          check_path:
                            description: >-
                              The URL path to check on each backend. If the
                              backend does not respond to this request, it's
                              considered to be down.
                            example: /test
                            pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                            type: string
                          check_timeout:
                            default: 30
                            description: >-
                              How long, in seconds, to wait for a check attempt
                              before considering it failed.


                              Must be less than `check_interval`.
                            example: 10
                            maximum: 30
                            minimum: 1
                            type: integer
                          cipher_suite:
                            description: __Read-only__ Not applicable for `tcp` configs.
                            example: none
                            readOnly: true
                            type: string
                            x-linode-cli-color:
                              default_: white
                              legacy: red
                            x-linode-cli-display: 7
                          id:
                            description: __Read-only__ This config's unique ID.
                            example: 6000
                            readOnly: true
                            type: integer
                            x-linode-cli-display: 1
                          nodebalancer_id:
                            description: >-
                              __Read-only__ The ID for the NodeBalancer this
                              config belongs to.
                            example: 12345
                            readOnly: true
                            type: integer
                          nodes:
                            description: >-
                              The NodeBalancer nodes that serve this
                              configuration.
                            items:
                              additionalProperties: false
                              description: >-
                                A NodeBalancer node represents a single backend
                                serving requests for a single port of a
                                NodeBalancer. Nodes are tied to individual
                                NodeBalancer configurations and route traffic
                                over their private IPv4 address, IPv6 address,
                                or VPC IPv4 address. If the same Linode is
                                serving traffic for more than one port on the
                                same NodeBalancer, one NodeBalancer node is
                                required for each config (port) it should serve
                                requests on.  For example, if you have four
                                backends, and each should respond to both HTTP
                                and HTTPS requests, you will need two
                                NodeBalancer configs (port 80 and port 443) and
                                four backends each, one for each of the Linodes
                                serving requests for that port.
                              properties:
                                address:
                                  description: >-
                                    Backend nodes can be Linodes and Linodes
                                    within a VPC. The following IP types are
                                    supported:
                                      - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                      - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                      - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                  example:
                                    - 192.168.210.120:443
                                    - 10.100.5.5:80
                                    - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                  format: ip
                                  type: string
                                  x-linode-cli-display: 3
                                config_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer Config ID
                                    that this Node belongs to.
                                  example: 4567
                                  readOnly: true
                                  type: integer
                                id:
                                  description: __Read-only__ This node's unique ID.
                                  example: 54321
                                  readOnly: true
                                  type: integer
                                  x-linode-cli-display: 1
                                label:
                                  description: >-
                                    The label for this node.  This is for
                                    display purposes only.
                                  example: node54321
                                  maxLength: 32
                                  minLength: 3
                                  pattern: '[a-zA-Z0-9-_.]{3,32}'
                                  type: string
                                  x-linode-cli-display: 2
                                mode:
                                  description: >-
                                    The mode this NodeBalancer should use when
                                    sending traffic to this backend.


                                    - If set to `accept` this backend is
                                    accepting traffic.

                                    - If set to `reject` this backend will not
                                    receive traffic.

                                    - If set to `drain` this backend will not
                                    receive _new_ traffic, but connections
                                    already pinned to it will continue to be
                                    routed to it.

                                    - If set to `backup`, this backend will only
                                    receive traffic if all `accept` nodes are
                                    down.
                                  enum:
                                    - accept
                                    - reject
                                    - drain
                                    - backup
                                  example: accept
                                  type: string
                                  x-linode-cli-display: 6
                                nodebalancer_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer ID that this
                                    Node belongs to.
                                  example: 12345
                                  readOnly: true
                                  type: integer
                                status:
                                  description: >-
                                    __Read-only__ The current status of this
                                    node, based on the configured checks of its
                                    NodeBalancer Config.
                                  enum:
                                    - unknown
                                    - UP
                                    - DOWN
                                  example: UP
                                  readOnly: true
                                  type: string
                                  x-linode-cli-color:
                                    DOWN: red
                                    UP: green
                                    default_: white
                                    unknown: yellow
                                  x-linode-cli-display: 4
                                subnet_id:
                                  description: >-
                                    Required for VPC backend nodes only. The
                                    VPC's subnet. To display information about
                                    your VPCs and their subnets, run the [List
                                    VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                    operation.
                                  example: 1
                                  type: integer
                                  x-linode-cli-display: 4
                                weight:
                                  description: >-
                                    Used when picking a backend to serve a
                                    request and is not pinned to a single
                                    backend yet. Nodes with a higher weight will
                                    receive more traffic.
                                  example: 50
                                  maximum: 255
                                  minimum: 1
                                  type: integer
                                  x-linode-cli-display: 5
                              title: TCP, HTTP, or HTTPS config
                              x-akamai:
                                file-path: schemas/node-balancer-node-tcp-http-https.yaml
                              type: object
                            type: array
                          nodes_status:
                            additionalProperties: false
                            description: >-
                              __Read-only__ Describes the health of the backends
                              for this port. This data updates periodically as
                              checks are performed against backends.
                            properties:
                              down:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `DOWN` and unhealthy.  These
                                  are not in rotation, and not serving requests.
                                example: 0
                                readOnly: true
                                type: integer
                              up:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `UP` and healthy, and that
                                  are serving requests.
                                example: 4
                                readOnly: true
                                type: integer
                            readOnly: true
                            type: object
                            x-linode-cli-display: 10
                          port:
                            default: 80
                            description: >-
                              This is the port the NodeBalancer listens on for
                              this configuration. Port numbers must be unique
                              across TCP, HTTP, and HTTPS configurations on a
                              single NodeBalancer. However, ports assigned to
                              TCP, HTTP, or HTTPS configurations can also be
                              reused for UDP configurations. For example, Port
                              80 can simultaneously serve a TCP and a UDP
                              configuration on the same NodeBalancer, but it
                              can't be shared by both a TCP and an HTTP
                              configuration. Although certain ports are
                              traditionally associated with specific protocols,
                              this isn't strictly enforced, and you may
                              configure your NodeBalancer however you find
                              useful.
                            example: 22
                            maximum: 65535
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 2
                          protocol:
                            default: http
                            description: >-
                              The protocol the port is configured to serve,
                              `tcp` in this case. Review our guide on [Available
                              protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                              for information on protocol features.
                            enum:
                              - tcp
                            example: tcp
                            type: string
                            x-linode-cli-display: 3
                          proxy_protocol:
                            default: none
                            description: >-
                              Proxy protocol is a TCP extension that sends
                              initial TCP connection information such as source
                              or destination IPs and ports to backend devices.
                              Proxy protocol preserves initial TCP information
                              that would be lost otherwise. Backend devices must
                              be configured to work with `proxy_protocol` if
                              enabled.


                              - If omitted, or set to `none`, the NodeBalancer
                              doesn't send any auxiliary data over TCP
                              connections. This is the default.

                              - If set to `v1`, the human-readable header format
                              (Version 1) is used. Requires `tcp` protocol.

                              - If set to `v2`, the binary header format
                              (Version 2) is used. Requires `tcp` protocol.
                            enum:
                              - none
                              - v1
                              - v2
                            example: none
                            type: string
                          ssl_cert:
                            description: __Read-only__ Not applicable for TCP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          ssl_commonname:
                            description: __Read-only__ Not applicable for TCP configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 8
                          ssl_fingerprint:
                            description: __Read-only__ Not applicable for TCP configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 9
                          ssl_key:
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          stickiness:
                            default: none
                            description: >-
                              __Read-only__ Controls how session stickiness is
                              handled on this port.


                              - If set to `none`, connections will always be
                              assigned a backend based on the algorithm
                              configured.

                              - If set to `table`, sessions from the same remote
                              address will be routed to the same backend.
                            enum:
                              - none
                              - table
                            example: none
                            readOnly: true
                            type: string
                            x-linode-cli-display: 5
                        required:
                          - nodes
                        title: TCP
                        type: object
                        x-akamai:
                          file-path: schemas/node-balancer-config-tcp.yaml
                      - additionalProperties: false
                        description: >-
                          A NodeBalancer configuration defines the protocol and
                          settings for a specific port on the NodeBalancer.
                          These fields apply to HTTP configurations.
                        properties:
                          algorithm:
                            default: roundrobin
                            description: >-
                              The algorithm this HTTP NodeBalancer uses for
                              routing traffic to backends.
                            enum:
                              - roundrobin
                              - leastconn
                              - source
                            example: roundrobin
                            type: string
                            x-linode-cli-display: 4
                          check:
                            default: none
                            description: >-
                              The type of check to perform against backends to
                              ensure they are serving requests. This determines
                              if backends are up or down.


                              - If `none`, no check is performed.

                              - `connection` requires only a connection to the
                              backend to succeed.

                              - `http` and `http_body` rely on the backend
                              serving HTTP, and that the response returned
                              matches what is expected.
                            enum:
                              - none
                              - connection
                              - http
                              - http_body
                            example: http_body
                            type: string
                          check_attempts:
                            default: 3
                            description: >-
                              How many times to attempt a check before
                              considering a backend to be down.
                            example: 3
                            maximum: 30
                            minimum: 1
                            type: integer
                          check_body:
                            description: >-
                              Use when the active health `check` type is
                              `http_body`. This value must be present in the
                              response body of the check in order for it to
                              pass. If this value is not present in the response
                              body of a check request, the backend is considered
                              to be down.
                            example: it works
                            type: string
                          check_interval:
                            default: 5
                            description: >-
                              How often, in seconds, to check that backends are
                              up and serving requests.


                              Must be greater than `check_timeout`.
                            example: 90
                            maximum: 3600
                            minimum: 2
                            type: integer
                          check_passive:
                            default: true
                            description: >-
                              If `true`, any response from this backend with a
                              `5xx` status code will be enough for it to be
                              considered unhealthy and taken out of rotation.
                            example: true
                            type: boolean
                            x-linode-cli-display: 6
                          check_path:
                            description: >-
                              The URL path to check on each backend. Use when
                              the active health `check` type is `http`. If the
                              backend doesn't respond to this request, it's
                              considered to be down.
                            example: /test
                            pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                            type: string
                          check_timeout:
                            default: 3
                            description: >-
                              How long, in seconds, to wait for a check attempt
                              before considering it failed.


                              Must be less than `check_interval`.
                            example: 10
                            maximum: 30
                            minimum: 1
                            type: integer
                          cipher_suite:
                            description: __Read-only__ Not applicable for `http` configs.
                            example: none
                            readOnly: true
                            type: string
                            x-linode-cli-color:
                              default_: white
                              legacy: red
                            x-linode-cli-display: 7
                          id:
                            description: __Read-only__ This config's unique ID.
                            example: 4000
                            readOnly: true
                            type: integer
                            x-linode-cli-display: 1
                          nodebalancer_id:
                            description: >-
                              __Read-only__ Identifies the NodeBalancer this
                              config belongs to.
                            example: 12345
                            readOnly: true
                            type: integer
                          nodes:
                            description: >-
                              The NodeBalancer nodes that serve this
                              configuration.
                            items:
                              additionalProperties: false
                              description: >-
                                A NodeBalancer node represents a single backend
                                serving requests for a single port of a
                                NodeBalancer. Nodes are tied to individual
                                NodeBalancer configurations and route traffic
                                over their private IPv4 address, IPv6 address,
                                or VPC IPv4 address. If the same Linode is
                                serving traffic for more than one port on the
                                same NodeBalancer, one NodeBalancer node is
                                required for each config (port) it should serve
                                requests on.  For example, if you have four
                                backends, and each should respond to both HTTP
                                and HTTPS requests, you will need two
                                NodeBalancer configs (port 80 and port 443) and
                                four backends each, one for each of the Linodes
                                serving requests for that port.
                              properties:
                                address:
                                  description: >-
                                    Backend nodes can be Linodes and Linodes
                                    within a VPC. The following IP types are
                                    supported:
                                      - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                      - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                      - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                  example:
                                    - 192.168.210.120:443
                                    - 10.100.5.5:80
                                    - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                  format: ip
                                  type: string
                                  x-linode-cli-display: 3
                                config_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer Config ID
                                    that this Node belongs to.
                                  example: 4567
                                  readOnly: true
                                  type: integer
                                id:
                                  description: __Read-only__ This node's unique ID.
                                  example: 54321
                                  readOnly: true
                                  type: integer
                                  x-linode-cli-display: 1
                                label:
                                  description: >-
                                    The label for this node.  This is for
                                    display purposes only.
                                  example: node54321
                                  maxLength: 32
                                  minLength: 3
                                  pattern: '[a-zA-Z0-9-_.]{3,32}'
                                  type: string
                                  x-linode-cli-display: 2
                                mode:
                                  description: >-
                                    The mode this NodeBalancer should use when
                                    sending traffic to this backend.


                                    - If set to `accept` this backend is
                                    accepting traffic.

                                    - If set to `reject` this backend will not
                                    receive traffic.

                                    - If set to `drain` this backend will not
                                    receive _new_ traffic, but connections
                                    already pinned to it will continue to be
                                    routed to it.

                                    - If set to `backup`, this backend will only
                                    receive traffic if all `accept` nodes are
                                    down.
                                  enum:
                                    - accept
                                    - reject
                                    - drain
                                    - backup
                                  example: accept
                                  type: string
                                  x-linode-cli-display: 6
                                nodebalancer_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer ID that this
                                    Node belongs to.
                                  example: 12345
                                  readOnly: true
                                  type: integer
                                status:
                                  description: >-
                                    __Read-only__ The current status of this
                                    node, based on the configured checks of its
                                    NodeBalancer Config.
                                  enum:
                                    - unknown
                                    - UP
                                    - DOWN
                                  example: UP
                                  readOnly: true
                                  type: string
                                  x-linode-cli-color:
                                    DOWN: red
                                    UP: green
                                    default_: white
                                    unknown: yellow
                                  x-linode-cli-display: 4
                                subnet_id:
                                  description: >-
                                    Required for VPC backend nodes only. The
                                    VPC's subnet. To display information about
                                    your VPCs and their subnets, run the [List
                                    VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                    operation.
                                  example: 1
                                  type: integer
                                  x-linode-cli-display: 4
                                weight:
                                  description: >-
                                    Used when picking a backend to serve a
                                    request and is not pinned to a single
                                    backend yet. Nodes with a higher weight will
                                    receive more traffic.
                                  example: 50
                                  maximum: 255
                                  minimum: 1
                                  type: integer
                                  x-linode-cli-display: 5
                              title: TCP, HTTP, or HTTPS config
                              x-akamai:
                                file-path: schemas/node-balancer-node-tcp-http-https.yaml
                              type: object
                            type: array
                          nodes_status:
                            additionalProperties: false
                            description: >-
                              __Read-only__ Describes the health of the backends
                              for this port. This data updates periodically as
                              checks are performed against backends.
                            properties:
                              down:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `DOWN` and unhealthy.  These
                                  are not in rotation, and not serving requests.
                                example: 0
                                readOnly: true
                                type: integer
                              up:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `UP` and healthy, and that
                                  are serving requests.
                                example: 4
                                readOnly: true
                                type: integer
                            readOnly: true
                            type: object
                            x-linode-cli-display: 10
                          port:
                            default: 80
                            description: >-
                              This is the port the NodeBalancer listens on for
                              this configuration. Port numbers need to be unique
                              across TCP, HTTP, and HTTPS configurations on a
                              single NodeBalancer. However, ports assigned to
                              TCP, HTTP, or HTTPS configurations can also be
                              reused for UDP configurations. For example, Port
                              80 can simultaneously serve a TCP and a UDP
                              configuration on the same NodeBalancer, but it
                              can't be shared by both a TCP and an HTTP
                              configuration. Although certain ports are
                              traditionally associated with specific protocols,
                              this isn't strictly enforced. You may configure
                              your NodeBalancer however you find useful.
                            example: 80
                            maximum: 65535
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 2
                          protocol:
                            default: http
                            description: >-
                              The protocol the port is configured to serve,
                              `http` in this case. Review our guide on
                              [Available
                              protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                              for information on protocol features.
                            enum:
                              - http
                            example: http
                            type: string
                            x-linode-cli-display: 3
                          proxy_protocol:
                            default: none
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: none
                            readOnly: true
                            type: string
                          ssl_cert:
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          ssl_commonname:
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 8
                          ssl_fingerprint:
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: ''
                            readOnly: true
                            type: string
                            x-linode-cli-display: 9
                          ssl_key:
                            description: __Read-only__ Not applicable for HTTP configs.
                            example: null
                            nullable: true
                            readOnly: true
                            type: string
                          stickiness:
                            default: table
                            description: >-
                              Controls how session stickiness is handled on this
                              port.


                              - If set to `none`, connections will always be
                              assigned a backend based on the algorithm
                              configured.

                              - If set to `table`, sessions from the same remote
                              address will be routed to the same backend.

                              - If set to `http_cookie`, sessions are routed to
                              the same backend based on a cookie set by the
                              NodeBalancer.
                            enum:
                              - none
                              - table
                              - http_cookie
                            example: http_cookie
                            type: string
                            x-linode-cli-display: 5
                        required:
                          - nodes
                        title: HTTP
                        type: object
                        x-akamai:
                          file-path: schemas/node-balancer-config-http.yaml
                      - additionalProperties: false
                        description: >-
                          A NodeBalancer configuration defines the protocol and
                          settings for a specific port on the NodeBalancer.
                          These fields apply to HTTPS configurations.
                        properties:
                          algorithm:
                            default: roundrobin
                            description: >-
                              The algorithm this HTTPS NodeBalancer uses for
                              routing traffic to backends.
                            enum:
                              - roundrobin
                              - leastconn
                              - source
                            example: roundrobin
                            type: string
                            x-linode-cli-display: 4
                          check:
                            default: none
                            description: >-
                              The type of check to perform against backends to
                              ensure they are serving requests. The `check` is
                              used to determine if backends are up or down.


                              - If `none` no check is performed.

                              - `connection` requires only a connection to the
                              backend to succeed.

                              - `http` and `http_body` rely on the backend
                              serving HTTP, and that the response returned
                              matches what is expected.
                            enum:
                              - none
                              - connection
                              - http
                              - http_body
                            example: http_body
                            type: string
                          check_attempts:
                            default: 3
                            description: >-
                              How many times to attempt a check before
                              considering a backend to be down.
                            example: 3
                            maximum: 30
                            minimum: 1
                            type: integer
                          check_body:
                            description: >-
                              Use when the active health `check` type is
                              `http_body`. This value must be present in the
                              response body of the check in order for it to
                              pass. If this value is not present in the response
                              body of a check request, the backend is considered
                              to be down.
                            example: it works
                            type: string
                          check_interval:
                            default: 5
                            description: >-
                              How often, in seconds, to check that backends are
                              up and serving requests.


                              Must be greater than `check_timeout`.
                            example: 90
                            maximum: 3600
                            minimum: 2
                            type: integer
                          check_passive:
                            default: true
                            description: >-
                              If `true`, any response from this backend with a
                              `5xx` status code will be enough for it to be
                              considered unhealthy and taken out of rotation.
                            example: true
                            type: boolean
                            x-linode-cli-display: 6
                          check_path:
                            description: >-
                              The URL path to check on each backend. Use when
                              the active health `check` type is `http`. If the
                              backend doesn't respond to this request, it's
                              considered to be down.
                            example: /test
                            pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                            type: string
                          check_timeout:
                            default: 3
                            description: >-
                              How long, in seconds, to wait for a check attempt
                              before considering it failed.


                              Must be less than `check_interval`.
                            example: 10
                            maximum: 30
                            minimum: 1
                            type: integer
                          cipher_suite:
                            default: recommended
                            description: >-
                              What ciphers to use for SSL connections served by
                              this NodeBalancer. The `legacy` cipher is
                              considered insecure and should only be used if
                              necessary. For information on recommended and
                              legacy ciphers, see [TLS cipher
                              suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                            enum:
                              - recommended
                              - legacy
                            example: recommended
                            type: string
                            x-linode-cli-color:
                              default_: white
                              legacy: red
                            x-linode-cli-display: 7
                          id:
                            description: __Read-only__ This config's unique ID.
                            example: 5000
                            readOnly: true
                            type: integer
                            x-linode-cli-display: 1
                          nodebalancer_id:
                            description: >-
                              __Read-only__ The ID for the NodeBalancer this
                              config belongs to.
                            example: 12345
                            readOnly: true
                            type: integer
                          nodes:
                            description: >-
                              The NodeBalancer nodes that serve this
                              configuration.
                            items:
                              additionalProperties: false
                              description: >-
                                A NodeBalancer node represents a single backend
                                serving requests for a single port of a
                                NodeBalancer. Nodes are tied to individual
                                NodeBalancer configurations and route traffic
                                over their private IPv4 address, IPv6 address,
                                or VPC IPv4 address. If the same Linode is
                                serving traffic for more than one port on the
                                same NodeBalancer, one NodeBalancer node is
                                required for each config (port) it should serve
                                requests on.  For example, if you have four
                                backends, and each should respond to both HTTP
                                and HTTPS requests, you will need two
                                NodeBalancer configs (port 80 and port 443) and
                                four backends each, one for each of the Linodes
                                serving requests for that port.
                              properties:
                                address:
                                  description: >-
                                    Backend nodes can be Linodes and Linodes
                                    within a VPC. The following IP types are
                                    supported:
                                      - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                      - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                      - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                  example:
                                    - 192.168.210.120:443
                                    - 10.100.5.5:80
                                    - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                  format: ip
                                  type: string
                                  x-linode-cli-display: 3
                                config_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer Config ID
                                    that this Node belongs to.
                                  example: 4567
                                  readOnly: true
                                  type: integer
                                id:
                                  description: __Read-only__ This node's unique ID.
                                  example: 54321
                                  readOnly: true
                                  type: integer
                                  x-linode-cli-display: 1
                                label:
                                  description: >-
                                    The label for this node.  This is for
                                    display purposes only.
                                  example: node54321
                                  maxLength: 32
                                  minLength: 3
                                  pattern: '[a-zA-Z0-9-_.]{3,32}'
                                  type: string
                                  x-linode-cli-display: 2
                                mode:
                                  description: >-
                                    The mode this NodeBalancer should use when
                                    sending traffic to this backend.


                                    - If set to `accept` this backend is
                                    accepting traffic.

                                    - If set to `reject` this backend will not
                                    receive traffic.

                                    - If set to `drain` this backend will not
                                    receive _new_ traffic, but connections
                                    already pinned to it will continue to be
                                    routed to it.

                                    - If set to `backup`, this backend will only
                                    receive traffic if all `accept` nodes are
                                    down.
                                  enum:
                                    - accept
                                    - reject
                                    - drain
                                    - backup
                                  example: accept
                                  type: string
                                  x-linode-cli-display: 6
                                nodebalancer_id:
                                  description: >-
                                    __Read-only__ The NodeBalancer ID that this
                                    Node belongs to.
                                  example: 12345
                                  readOnly: true
                                  type: integer
                                status:
                                  description: >-
                                    __Read-only__ The current status of this
                                    node, based on the configured checks of its
                                    NodeBalancer Config.
                                  enum:
                                    - unknown
                                    - UP
                                    - DOWN
                                  example: UP
                                  readOnly: true
                                  type: string
                                  x-linode-cli-color:
                                    DOWN: red
                                    UP: green
                                    default_: white
                                    unknown: yellow
                                  x-linode-cli-display: 4
                                subnet_id:
                                  description: >-
                                    Required for VPC backend nodes only. The
                                    VPC's subnet. To display information about
                                    your VPCs and their subnets, run the [List
                                    VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                    operation.
                                  example: 1
                                  type: integer
                                  x-linode-cli-display: 4
                                weight:
                                  description: >-
                                    Used when picking a backend to serve a
                                    request and is not pinned to a single
                                    backend yet. Nodes with a higher weight will
                                    receive more traffic.
                                  example: 50
                                  maximum: 255
                                  minimum: 1
                                  type: integer
                                  x-linode-cli-display: 5
                              title: TCP, HTTP, or HTTPS config
                              x-akamai:
                                file-path: schemas/node-balancer-node-tcp-http-https.yaml
                              type: object
                            type: array
                          nodes_status:
                            additionalProperties: false
                            description: >-
                              __Read-only__ Describes the health of the backends
                              for this port. This data updates periodically as
                              checks are performed against backends.
                            properties:
                              down:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `DOWN` and unhealthy.  These
                                  are not in rotation, and not serving requests.
                                example: 0
                                readOnly: true
                                type: integer
                              up:
                                description: >-
                                  __Read-only__ The number of backends
                                  considered to be `UP` and healthy, and that
                                  are serving requests.
                                example: 4
                                readOnly: true
                                type: integer
                            readOnly: true
                            type: object
                            x-linode-cli-display: 10
                          port:
                            default: 80
                            description: >-
                              This is the port the NodeBalancer listens on for
                              this configuration. Port numbers must be unique
                              across TCP, HTTP, and HTTPS configurations on a
                              single NodeBalancer. However, ports assigned to
                              TCP, HTTP, or HTTPS configurations can also be
                              reused for UDP configurations. For example, Port
                              80 can simultaneously serve a TCP and a UDP
                              configuration on the same NodeBalancer, but it
                              can't be shared by both a TCP and an HTTP
                              configuration. Although certain ports are
                              traditionally associated with specific protocols,
                              this isn't strictly enforced, and you may
                              configure your NodeBalancer however you find
                              useful.
                            example: 443
                            maximum: 65535
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 2
                          protocol:
                            default: http
                            description: >-
                              The protocol the port is configured to serve,
                              `https` in this case. Review our guide on
                              [Available
                              protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                              for information on protocol features. The `https`
                              protocol needs to be specified with both
                              `ssl_cert` and `ssl_key`.
                            enum:
                              - https
                            example: https
                            type: string
                            x-linode-cli-display: 3
                          proxy_protocol:
                            default: none
                            description: __Read-only__ Not applicable for HTTPS configs.
                            example: none
                            readOnly: true
                            type: string
                          ssl_cert:
                            description: >-

                              The PEM-formatted public SSL certificate (or the
                              combined PEM-formatted SSL certificate and
                              Certificate Authority chain) that should be served
                              on this NodeBalancerConfig's port.


                              Line breaks must be represented as `\n` in the
                              string for requests (but not when using the Linode
                              CLI).


                              [Diffie-Hellman
                              Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                              can be included in this value to enable forward
                              secrecy.


                              The contents of this field will not be shown in
                              any responses that display the NodeBalancerConfig.
                              Instead, `<REDACTED>` will be printed where the
                              field appears.


                              The read-only `ssl_commonname` and
                              `ssl_fingerprint` fields in a NodeBalancerConfig
                              response are automatically derived from your
                              certificate. Please refer to these fields to
                              verify that the appropriate certificate was
                              assigned to your NodeBalancerConfig.
                            example: <REDACTED>
                            format: ssl-cert
                            nullable: true
                            type: string
                          ssl_commonname:
                            description: >-
                              __Read-only__ The read-only common name
                              automatically derived from the SSL certificate
                              assigned to this NodeBalancerConfig. Please refer
                              to this field to verify that the appropriate
                              certificate is assigned to your
                              NodeBalancerConfig.
                            example: www.example.com
                            readOnly: true
                            type: string
                            x-linode-cli-display: 8
                          ssl_fingerprint:
                            description: >-
                              __Read-only__ The read-only SHA1-encoded
                              fingerprint automatically derived from the SSL
                              certificate assigned to this NodeBalancer
                              configuration. Please refer to the
                              `ssl_fingerprint` field to verify that the
                              appropriate certificate is assigned to your
                              NodeBalancer configuration.
                            example: >-
                              00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                            readOnly: true
                            type: string
                            x-linode-cli-display: 9
                          ssl_key:
                            description: >-
                              The PEM-formatted private key for the SSL
                              certificate set in the `ssl_cert` field.


                              Line breaks must be represented as `\n` in the
                              string for requests (but not when using the Linode
                              CLI).


                              The contents of this field will not be shown in
                              any responses that display

                              the NodeBalancerConfig. Instead, `<REDACTED>` will
                              be printed where the field

                              appears.


                              The read-only `ssl_commonname` and
                              `ssl_fingerprint` fields in a NodeBalancerConfig

                              response are automatically derived from your
                              certificate. Please refer to these fields to

                              verify that the appropriate certificate was
                              assigned to your NodeBalancerConfig.
                            example: <REDACTED>
                            format: ssl-key
                            nullable: true
                            type: string
                          stickiness:
                            default: table
                            description: >-
                              Controls how session stickiness is handled on this
                              port.


                              - If set to `none`, connections will always be
                              assigned a backend based on the algorithm
                              configured.

                              - If set to `table`, sessions from the same remote
                              address will be routed to the same backend.

                              - For HTTP or HTTPS clients, `http_cookie` allows
                              sessions to be routed to the same backend based on
                              a cookie set by the NodeBalancer.
                            enum:
                              - none
                              - table
                              - http_cookie
                            example: http_cookie
                            type: string
                            x-linode-cli-display: 5
                        required:
                          - nodes
                        title: HTTPS
                        type: object
                        x-akamai:
                          file-path: schemas/node-balancer-config-https.yaml
                    type: object
                  type: array
                firewall_id:
                  description: >-
                    The ID of the Firewall to assign to the NodeBalancer.


                    - A NodeBalancer can have only one Firewall assigned to it.

                    - Firewalls control inbound network traffic to
                    NodeBalancers.
                  example: '{{firewall_id}}'
                  type: integer
                label:
                  description: >-
                    __Filterable__ This NodeBalancer's label. These must be
                    unique on your Account.
                  example: '{{label}}'
                  maxLength: 32
                  minLength: 3
                  pattern: '[a-zA-Z0-9-_]{3,32}'
                  type: string
                  x-akamai:
                    labels:
                      - Filterable
                  x-linode-cli-display: 2
                  x-linode-filterable: true
                region:
                  description: The ID of the Region to create this NodeBalancer in.
                  example: '{{region}}'
                  type: string
                tags:
                  description: >-
                    An array of Tags applied to this object. Tags are for
                    organizational purposes only.
                  example:
                    - test
                    - web-dev-team
                  items:
                    type: string
                  type: array
                vpcs:
                  description: >-
                    You can have only one `vpcs` in a NodeBalancer
                    configuration. If any of your backend nodes are VPC Linodes,
                    specify the VPC subnet and CIDR range. NodeBalancer routes
                    traffic to backend VPC nodes through this subnet. The
                    specified VPC subnet must exist within the same data center
                    as the NodeBalancer, and the provided IP range must be
                    contained within the subnet's CIDR block. All IP addresses
                    within the specified range must be free and available for
                    assignment. Once the NodeBalancer is created, its VPC cannot
                    be changed.
                  items:
                    additionalProperties: false
                    description: >-
                      You can have only one VPC in a NodeBalancer configuration.
                      If any of your backend nodes are VPC Linodes, specify the
                      VPC subnet and CIDR range. NodeBalancer routes traffic to
                      backend VPC nodes through this subnet. Once the
                      NodeBalancer is created, its VPC cannot be changed.
                    properties:
                      id:
                        description: >-
                          __Read-only__ Identifies the VPC configuration for
                          this NodeBalancer.
                        example: 6
                        readOnly: true
                        type: integer
                      ipv4_range:
                        description: >-
                          A CIDR range for the VPC's IPv4 addresses. The
                          NodeBalancer sources IP addresses from this range when
                          routing traffic to the backend VPC nodes.
                        example: 10.100.5.100/30
                        type: string
                        x-linode-cli-display: 12
                      ipv4_range_auto_assign:
                        default: false
                        description: >-
                          Enables the use of a larger `ipv4_range` subnet for
                          multiple NodeBalancers within the same VPC by
                          allocating smaller `/30` subnets for each
                          NodeBalancer's backends.


                          - When set to `true`, the system automatically
                          allocates the smallest possible subnet (`/30`) from
                          the provided `ipv4_range` for the NodeBalancer's
                          backend interface. If the specified range doesn't have
                          enough available IPs to allocate a `/30` subnet, the
                          creation fails.


                          - When set to `false`, the NodeBalancer is created
                          using the entire `ipv4_range` as specified, without
                          attempting to allocate a `/30` subnet.
                        example: false
                        nullable: true
                        type: boolean
                        x-linode-cli-display: 14
                      nodebalancer_id:
                        description: __Read-only__ Identifies the NodeBalancer.
                        example: 8
                        readOnly: true
                        type: integer
                      subnet_id:
                        description: >-
                          The VPC's subnet. Run the [List
                          VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                          operation provides data for your VPCs and their
                          subnets.
                        example: 1
                        type: integer
                        x-linode-cli-display: 11
                      vpc_id:
                        description: >-
                          __Read-only__ The `id` of the VPC configured for this
                          NodeBalancer.
                        example: 1
                        nullable: true
                        readOnly: true
                        type: integer
                    required:
                      - subnet_id
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-vpc.yaml
                  type: array
              required:
                - region
              type: object
              x-akamai:
                file-path: schemas/added-post-node-balancer.yaml
            x-example:
              x-ref: ../examples/post-node-balancer.json
        description: Information about the NodeBalancer to create.
        required: true
        x-linode-cli-allowed-defaults:
          - region
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: >-
                  Linode's load balancing solution. Can handle multiple ports,
                  SSL termination, and any number of backends. NodeBalancer
                  ports are configured with NodeBalancer configs, and each
                  config is given one or more NodeBalancer nodes that accepts
                  traffic.  The traffic should be routed to the NodeBalancer's
                  IP address, for the NodeBalancer to handle routing individual
                  requests to backends.
                properties:
                  client_conn_throttle:
                    description: >-
                      Throttle TCP connections per second for TCP, HTTP, and
                      HTTPS configurations.  Set to `0` (zero) to disable
                      throttling.
                    example: 10
                    maximum: 20
                    minimum: 0
                    type: integer
                    x-linode-cli-display: 9
                  created:
                    description: __Read-only__ When this NodeBalancer was created.
                    example: '2018-01-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                  hostname:
                    description: >-
                      __Read-only__ This NodeBalancer's hostname, beginning with
                      its IP address and ending with
                      _.ip.linodeusercontent.com_.
                    example: 192.0.2.1.ip.linodeusercontent.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 5
                  id:
                    description: __Read-only__ This NodeBalancer's unique ID.
                    example: 12345
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  ipv4:
                    description: >-
                      __Filterable__, __Read-only__ This NodeBalancer's public
                      IPv4 address.
                    example: 203.0.113.1
                    format: ip
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 6
                    x-linode-filterable: true
                  ipv6:
                    description: __Read-only__ This NodeBalancer's public IPv6 address.
                    example: null
                    format: ip
                    nullable: true
                    readOnly: true
                    type: string
                    x-linode-cli-display: 7
                  label:
                    description: >-
                      __Filterable__ This NodeBalancer's label. These must be
                      unique on your Account.
                    example: balancer12345
                    maxLength: 32
                    minLength: 3
                    pattern: '[a-zA-Z0-9-_]{3,32}'
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 2
                    x-linode-filterable: true
                  lke_cluster:
                    additionalProperties: false
                    description: >-
                      __Read-only__ This NodeBalancer's related LKE cluster, if
                      any. The value is `null` if this NodeBalancer isn't
                      related to an LKE cluster.
                    nullable: true
                    properties:
                      id:
                        description: The ID of the related LKE cluster.
                        example: 12345
                        type: string
                      label:
                        description: The label of the related LKE cluster.
                        example: lkecluster12345
                        type: string
                      type:
                        description: __Read-only__ The type for LKE clusters.
                        example: lkecluster
                        readOnly: true
                        type: string
                      url:
                        description: The URL where you can access the related LKE cluster.
                        example: /v4/lke/clusters/12345
                        type: string
                    readOnly: true
                    type: object
                    x-linode-cli-display: 8
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The Region where this
                      NodeBalancer is located. NodeBalancers only support
                      backends in the same Region.
                    example: us-east
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 3
                    x-linode-filterable: true
                  tags:
                    description: >-
                      __Filterable__ An array of Tags applied to this object. 
                      Tags are for organizational purposes only.
                    example:
                      - example tag
                      - another example
                    items:
                      type: string
                    type: array
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-filterable: true
                  transfer:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the amount of transfer
                      this NodeBalancer has had so far this month.
                    properties:
                      in:
                        description: >-
                          __Read-only__ The total outbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 28.91200828552246
                        nullable: true
                        readOnly: true
                        type: number
                      out:
                        description: >-
                          __Read-only__ The total inbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 3.5487728118896484
                        nullable: true
                        readOnly: true
                        type: number
                      total:
                        description: >-
                          __Read-only__ The total transfer, in MB, used by this
                          NodeBalancer this month.
                        example: 32.46078109741211
                        nullable: true
                        readOnly: true
                        type: number
                    readOnly: true
                    type: object
                  type:
                    description: __Read-only__ The type of NodeBalancer.
                    enum:
                      - common
                      - premium
                    example: premium
                    readOnly: true
                    type: string
                    x-linode-cli-display: 4
                  updated:
                    description: __Read-only__ When this NodeBalancer was last updated.
                    example: '2018-03-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                title: NodeBalancer
                type: object
                x-akamai:
                  file-path: schemas/node-balancer.yaml
              x-example:
                x-ref: ../examples/post-node-balancer-200.json
          description: NodeBalancer created successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Create a NodeBalancer
      tags:
        - NodeBalancers
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers create \
                --region us-east \
                --label balancer12345 \
                --client_conn_throttle 0
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: create
      x-linode-grant: add_nodebalancers
    get:
      description: >-
        Returns a paginated list of NodeBalancers you have access to.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/get-node-balancers
      operationId: get-node-balancers
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    items:
                      additionalProperties: false
                      description: >-
                        Linode's load balancing solution. Can handle multiple
                        ports, SSL termination, and any number of backends.
                        NodeBalancer ports are configured with NodeBalancer
                        configs, and each config is given one or more
                        NodeBalancer nodes that accepts traffic.  The traffic
                        should be routed to the NodeBalancer's IP address, for
                        the NodeBalancer to handle routing individual requests
                        to backends.
                      properties:
                        client_conn_throttle:
                          description: >-
                            Throttle TCP connections per second for TCP, HTTP,
                            and HTTPS configurations.  Set to `0` (zero) to
                            disable throttling.
                          example: 10
                          maximum: 20
                          minimum: 0
                          type: integer
                          x-linode-cli-display: 9
                        created:
                          description: __Read-only__ When this NodeBalancer was created.
                          example: '2018-01-01T00:01:01'
                          format: date-time
                          readOnly: true
                          type: string
                        hostname:
                          description: >-
                            __Read-only__ This NodeBalancer's hostname,
                            beginning with its IP address and ending with
                            _.ip.linodeusercontent.com_.
                          example: 192.0.2.1.ip.linodeusercontent.com
                          readOnly: true
                          type: string
                          x-linode-cli-display: 5
                        id:
                          description: __Read-only__ This NodeBalancer's unique ID.
                          example: 12345
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        ipv4:
                          description: >-
                            __Filterable__, __Read-only__ This NodeBalancer's
                            public IPv4 address.
                          example: 203.0.113.1
                          format: ip
                          readOnly: true
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 6
                          x-linode-filterable: true
                        ipv6:
                          description: >-
                            __Read-only__ This NodeBalancer's public IPv6
                            address.
                          example: null
                          format: ip
                          nullable: true
                          readOnly: true
                          type: string
                          x-linode-cli-display: 7
                        label:
                          description: >-
                            __Filterable__ This NodeBalancer's label. These must
                            be unique on your Account.
                          example: balancer12345
                          maxLength: 32
                          minLength: 3
                          pattern: '[a-zA-Z0-9-_]{3,32}'
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 2
                          x-linode-filterable: true
                        lke_cluster:
                          additionalProperties: false
                          description: >-
                            __Read-only__ This NodeBalancer's related LKE
                            cluster, if any. The value is `null` if this
                            NodeBalancer isn't related to an LKE cluster.
                          nullable: true
                          properties:
                            id:
                              description: The ID of the related LKE cluster.
                              example: 12345
                              type: string
                            label:
                              description: The label of the related LKE cluster.
                              example: lkecluster12345
                              type: string
                            type:
                              description: __Read-only__ The type for LKE clusters.
                              example: lkecluster
                              readOnly: true
                              type: string
                            url:
                              description: >-
                                The URL where you can access the related LKE
                                cluster.
                              example: /v4/lke/clusters/12345
                              type: string
                          readOnly: true
                          type: object
                          x-linode-cli-display: 8
                        region:
                          description: >-
                            __Filterable__, __Read-only__ The Region where this
                            NodeBalancer is located. NodeBalancers only support
                            backends in the same Region.
                          example: us-east
                          readOnly: true
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 3
                          x-linode-filterable: true
                        tags:
                          description: >-
                            __Filterable__ An array of Tags applied to this
                            object.  Tags are for organizational purposes only.
                          example:
                            - example tag
                            - another example
                          items:
                            type: string
                          type: array
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-filterable: true
                        transfer:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Information about the amount of
                            transfer this NodeBalancer has had so far this
                            month.
                          properties:
                            in:
                              description: >-
                                __Read-only__ The total outbound transfer, in
                                MB, used for this NodeBalancer this month.
                              example: 28.91200828552246
                              nullable: true
                              readOnly: true
                              type: number
                            out:
                              description: >-
                                __Read-only__ The total inbound transfer, in MB,
                                used for this NodeBalancer this month.
                              example: 3.5487728118896484
                              nullable: true
                              readOnly: true
                              type: number
                            total:
                              description: >-
                                __Read-only__ The total transfer, in MB, used by
                                this NodeBalancer this month.
                              example: 32.46078109741211
                              nullable: true
                              readOnly: true
                              type: number
                          readOnly: true
                          type: object
                        type:
                          description: __Read-only__ The type of NodeBalancer.
                          enum:
                            - common
                            - premium
                          example: premium
                          readOnly: true
                          type: string
                          x-linode-cli-display: 4
                        updated:
                          description: >-
                            __Read-only__ When this NodeBalancer was last
                            updated.
                          example: '2018-03-01T00:01:01'
                          format: date-time
                          readOnly: true
                          type: string
                      title: NodeBalancer
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer.yaml
                    type: array
                  page:
                    description: >-
                      __Read-only__ The current
                      [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  pages:
                    description: >-
                      __Read-only__ The total number of
                      [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  results:
                    description: __Read-only__ The total number of results.
                    example: 1
                    readOnly: true
                    type: integer
                type: object
                x-akamai:
                  file-path: schemas/added-get-node-balancers-200.yaml
              x-example:
                x-ref: ../examples/get-node-balancers-200.json
          description: A paginated list of NodeBalancers.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: List NodeBalancers
      tags:
        - NodeBalancers
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers list
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action:
        - list
        - ls
      x-linode-grant: read_only
    parameters: []
    x-akamai:
      file-path: paths/node-balancers.yaml
      path-info: /{apiVersion}/nodebalancers
    x-linode-cli-command: nodebalancers
  /nodebalancers/types:
    get:
      description: >-
        Returns NodeBalancer types and prices, including any region-specific
        rates.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-types
      operationId: get-node-balancer-types
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    description: The NodeBalancer types.
                    items:
                      additionalProperties: false
                      description: >-
                        Returns collection of NodeBalancer types and prices,
                        including any region-specific rates.
                      properties:
                        id:
                          description: >-
                            __Read-only__ The ID representing the NodeBalancer
                            type.
                          example: nodebalancer
                          readOnly: true
                          type: string
                          x-linode-cli-display: 1
                        label:
                          description: >-
                            __Filterable__, __Read-only__ The NodeBalancer type
                            label is for display purposes only.
                          example: NodeBalancer
                          readOnly: true
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 2
                          x-linode-filterable: true
                        price:
                          additionalProperties: false
                          description: >-
                            __Read-only__ The default cost of this NodeBalancer
                            type. Prices are in US dollars, broken down into
                            hourly and monthly charges.


                            Certain regions have different prices from the
                            default. For region-specific prices, see
                            `region_prices`.
                          properties:
                            hourly:
                              description: __Filterable__ Cost (in US dollars) per hour.
                              example: 0.0015
                              type: number
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 3
                              x-linode-filterable: true
                            monthly:
                              description: __Filterable__ Cost per month, in US dollars.
                              example: 0.1
                              type: number
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 4
                              x-linode-filterable: true
                          readOnly: true
                          type: object
                        region_prices:
                          items:
                            additionalProperties: false
                            properties:
                              hourly:
                                description: Cost per hour for this region, in US dollars.
                                example: 0.00018
                                type: number
                                x-linode-cli-display: 6
                              id:
                                description: The Region ID for these prices.
                                example: us-east
                                type: string
                                x-linode-cli-display: 5
                              monthly:
                                description: Cost per month for this region, in US dollars.
                                example: 0.12
                                type: number
                                x-linode-cli-display: 7
                            type: object
                          type: array
                        transfer:
                          description: >-
                            __Filterable__, __Read-only__ The monthly outbound
                            transfer amount, in MB.
                          example: 0
                          minimum: 0
                          readOnly: true
                          type: integer
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 8
                          x-linode-filterable: true
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-type.yaml
                    type: array
                  page:
                    description: >-
                      __Read-only__ The current
                      [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  pages:
                    description: >-
                      __Read-only__ The total number of
                      [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  results:
                    description: __Read-only__ The total number of results.
                    example: 1
                    readOnly: true
                    type: integer
                type: object
                x-akamai:
                  file-path: schemas/get-node-balancer-types-200.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-types-200.json
          description: A collection of NodeBalancer types.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      summary: List NodeBalancer types
      tags:
        - NodeBalancer types
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers types
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
      x-linode-cli-action: types
      x-linode-redoc-load-ids: true
    parameters: []
    x-akamai:
      file-path: paths/node-balancer-types.yaml
      path-info: /{apiVersion}/nodebalancers/types
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}:
    get:
      description: >-
        Returns a single NodeBalancer you can access.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/get-node-balancer
      operationId: get-node-balancer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: >-
                  Linode's load balancing solution. Can handle multiple ports,
                  SSL termination, and any number of backends. NodeBalancer
                  ports are configured with NodeBalancer configs, and each
                  config is given one or more NodeBalancer nodes that accepts
                  traffic.  The traffic should be routed to the NodeBalancer's
                  IP address, for the NodeBalancer to handle routing individual
                  requests to backends.
                properties:
                  client_conn_throttle:
                    description: >-
                      Throttle TCP connections per second for TCP, HTTP, and
                      HTTPS configurations.  Set to `0` (zero) to disable
                      throttling.
                    example: 10
                    maximum: 20
                    minimum: 0
                    type: integer
                    x-linode-cli-display: 9
                  created:
                    description: __Read-only__ When this NodeBalancer was created.
                    example: '2018-01-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                  hostname:
                    description: >-
                      __Read-only__ This NodeBalancer's hostname, beginning with
                      its IP address and ending with
                      _.ip.linodeusercontent.com_.
                    example: 192.0.2.1.ip.linodeusercontent.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 5
                  id:
                    description: __Read-only__ This NodeBalancer's unique ID.
                    example: 12345
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  ipv4:
                    description: >-
                      __Filterable__, __Read-only__ This NodeBalancer's public
                      IPv4 address.
                    example: 203.0.113.1
                    format: ip
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 6
                    x-linode-filterable: true
                  ipv6:
                    description: __Read-only__ This NodeBalancer's public IPv6 address.
                    example: null
                    format: ip
                    nullable: true
                    readOnly: true
                    type: string
                    x-linode-cli-display: 7
                  label:
                    description: >-
                      __Filterable__ This NodeBalancer's label. These must be
                      unique on your Account.
                    example: balancer12345
                    maxLength: 32
                    minLength: 3
                    pattern: '[a-zA-Z0-9-_]{3,32}'
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 2
                    x-linode-filterable: true
                  lke_cluster:
                    additionalProperties: false
                    description: >-
                      __Read-only__ This NodeBalancer's related LKE cluster, if
                      any. The value is `null` if this NodeBalancer isn't
                      related to an LKE cluster.
                    nullable: true
                    properties:
                      id:
                        description: The ID of the related LKE cluster.
                        example: 12345
                        type: string
                      label:
                        description: The label of the related LKE cluster.
                        example: lkecluster12345
                        type: string
                      type:
                        description: __Read-only__ The type for LKE clusters.
                        example: lkecluster
                        readOnly: true
                        type: string
                      url:
                        description: The URL where you can access the related LKE cluster.
                        example: /v4/lke/clusters/12345
                        type: string
                    readOnly: true
                    type: object
                    x-linode-cli-display: 8
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The Region where this
                      NodeBalancer is located. NodeBalancers only support
                      backends in the same Region.
                    example: us-east
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 3
                    x-linode-filterable: true
                  tags:
                    description: >-
                      __Filterable__ An array of Tags applied to this object. 
                      Tags are for organizational purposes only.
                    example:
                      - example tag
                      - another example
                    items:
                      type: string
                    type: array
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-filterable: true
                  transfer:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the amount of transfer
                      this NodeBalancer has had so far this month.
                    properties:
                      in:
                        description: >-
                          __Read-only__ The total outbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 28.91200828552246
                        nullable: true
                        readOnly: true
                        type: number
                      out:
                        description: >-
                          __Read-only__ The total inbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 3.5487728118896484
                        nullable: true
                        readOnly: true
                        type: number
                      total:
                        description: >-
                          __Read-only__ The total transfer, in MB, used by this
                          NodeBalancer this month.
                        example: 32.46078109741211
                        nullable: true
                        readOnly: true
                        type: number
                    readOnly: true
                    type: object
                  type:
                    description: __Read-only__ The type of NodeBalancer.
                    enum:
                      - common
                      - premium
                    example: premium
                    readOnly: true
                    type: string
                    x-linode-cli-display: 4
                  updated:
                    description: __Read-only__ When this NodeBalancer was last updated.
                    example: '2018-03-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                title: NodeBalancer
                type: object
                x-akamai:
                  file-path: schemas/node-balancer.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-200.json
          description: The requested NodeBalancer object.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: Get a NodeBalancer
      tags:
        - NodeBalancers
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers view 12345
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: view
      x-linode-grant: read_only
    put:
      description: >-
        Updates information about a NodeBalancer you can access.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/put-node-balancer
      operationId: put-node-balancer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              description: >-
                Linode's load balancing solution. Can handle multiple ports, SSL
                termination, and any number of backends. NodeBalancer ports are
                configured with NodeBalancer configs, and each config is given
                one or more NodeBalancer nodes that accepts traffic.  The
                traffic should be routed to the NodeBalancer's IP address, for
                the NodeBalancer to handle routing individual requests to
                backends.
              properties:
                client_conn_throttle:
                  description: >-
                    Throttle TCP connections per second for TCP, HTTP, and HTTPS
                    configurations.  Set to `0` (zero) to disable throttling.
                  example: '{{client_conn_throttle}}'
                  maximum: 20
                  minimum: 0
                  type: integer
                  x-linode-cli-display: 9
                created:
                  description: __Read-only__ When this NodeBalancer was created.
                  example: '{{created}}'
                  format: date-time
                  readOnly: true
                  type: string
                hostname:
                  description: >-
                    __Read-only__ This NodeBalancer's hostname, beginning with
                    its IP address and ending with _.ip.linodeusercontent.com_.
                  example: '{{hostname}}'
                  readOnly: true
                  type: string
                  x-linode-cli-display: 5
                id:
                  description: __Read-only__ This NodeBalancer's unique ID.
                  example: '{{id}}'
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                ipv4:
                  description: >-
                    __Filterable__, __Read-only__ This NodeBalancer's public
                    IPv4 address.
                  example: '{{ipv4}}'
                  format: ip
                  readOnly: true
                  type: string
                  x-akamai:
                    labels:
                      - Filterable
                  x-linode-cli-display: 6
                  x-linode-filterable: true
                ipv6:
                  description: __Read-only__ This NodeBalancer's public IPv6 address.
                  example: '{{ipv6}}'
                  format: ip
                  nullable: true
                  readOnly: true
                  type: string
                  x-linode-cli-display: 7
                label:
                  description: >-
                    __Filterable__ This NodeBalancer's label. These must be
                    unique on your Account.
                  example: '{{label}}'
                  maxLength: 32
                  minLength: 3
                  pattern: '[a-zA-Z0-9-_]{3,32}'
                  type: string
                  x-akamai:
                    labels:
                      - Filterable
                  x-linode-cli-display: 2
                  x-linode-filterable: true
                lke_cluster:
                  additionalProperties: false
                  description: >-
                    __Read-only__ This NodeBalancer's related LKE cluster, if
                    any. The value is `null` if this NodeBalancer isn't related
                    to an LKE cluster.
                  nullable: true
                  properties:
                    id:
                      description: The ID of the related LKE cluster.
                      example: 12345
                      type: string
                    label:
                      description: The label of the related LKE cluster.
                      example: lkecluster12345
                      type: string
                    type:
                      description: __Read-only__ The type for LKE clusters.
                      example: lkecluster
                      readOnly: true
                      type: string
                    url:
                      description: The URL where you can access the related LKE cluster.
                      example: /v4/lke/clusters/12345
                      type: string
                  readOnly: true
                  type: object
                  x-linode-cli-display: 8
                region:
                  description: >-
                    __Filterable__, __Read-only__ The Region where this
                    NodeBalancer is located. NodeBalancers only support backends
                    in the same Region.
                  example: '{{region}}'
                  readOnly: true
                  type: string
                  x-akamai:
                    labels:
                      - Filterable
                  x-linode-cli-display: 3
                  x-linode-filterable: true
                tags:
                  description: >-
                    __Filterable__ An array of Tags applied to this object. 
                    Tags are for organizational purposes only.
                  example:
                    - example tag
                    - another example
                  items:
                    type: string
                  type: array
                  x-akamai:
                    labels:
                      - Filterable
                  x-linode-filterable: true
                transfer:
                  additionalProperties: false
                  description: >-
                    __Read-only__ Information about the amount of transfer this
                    NodeBalancer has had so far this month.
                  properties:
                    in:
                      description: >-
                        __Read-only__ The total outbound transfer, in MB, used
                        for this NodeBalancer this month.
                      example: 28.91200828552246
                      nullable: true
                      readOnly: true
                      type: number
                    out:
                      description: >-
                        __Read-only__ The total inbound transfer, in MB, used
                        for this NodeBalancer this month.
                      example: 3.5487728118896484
                      nullable: true
                      readOnly: true
                      type: number
                    total:
                      description: >-
                        __Read-only__ The total transfer, in MB, used by this
                        NodeBalancer this month.
                      example: 32.46078109741211
                      nullable: true
                      readOnly: true
                      type: number
                  readOnly: true
                  type: object
                type:
                  description: __Read-only__ The type of NodeBalancer.
                  enum:
                    - common
                    - premium
                  example: '{{type}}'
                  readOnly: true
                  type: string
                  x-linode-cli-display: 4
                updated:
                  description: __Read-only__ When this NodeBalancer was last updated.
                  example: '{{updated}}'
                  format: date-time
                  readOnly: true
                  type: string
              title: NodeBalancer
              type: object
              x-akamai:
                file-path: schemas/node-balancer.yaml
            x-example:
              x-ref: ../examples/put-node-balancer.json
        description: The information to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: >-
                  Linode's load balancing solution. Can handle multiple ports,
                  SSL termination, and any number of backends. NodeBalancer
                  ports are configured with NodeBalancer configs, and each
                  config is given one or more NodeBalancer nodes that accepts
                  traffic.  The traffic should be routed to the NodeBalancer's
                  IP address, for the NodeBalancer to handle routing individual
                  requests to backends.
                properties:
                  client_conn_throttle:
                    description: >-
                      Throttle TCP connections per second for TCP, HTTP, and
                      HTTPS configurations.  Set to `0` (zero) to disable
                      throttling.
                    example: 10
                    maximum: 20
                    minimum: 0
                    type: integer
                    x-linode-cli-display: 9
                  created:
                    description: __Read-only__ When this NodeBalancer was created.
                    example: '2018-01-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                  hostname:
                    description: >-
                      __Read-only__ This NodeBalancer's hostname, beginning with
                      its IP address and ending with
                      _.ip.linodeusercontent.com_.
                    example: 192.0.2.1.ip.linodeusercontent.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 5
                  id:
                    description: __Read-only__ This NodeBalancer's unique ID.
                    example: 12345
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  ipv4:
                    description: >-
                      __Filterable__, __Read-only__ This NodeBalancer's public
                      IPv4 address.
                    example: 203.0.113.1
                    format: ip
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 6
                    x-linode-filterable: true
                  ipv6:
                    description: __Read-only__ This NodeBalancer's public IPv6 address.
                    example: null
                    format: ip
                    nullable: true
                    readOnly: true
                    type: string
                    x-linode-cli-display: 7
                  label:
                    description: >-
                      __Filterable__ This NodeBalancer's label. These must be
                      unique on your Account.
                    example: balancer12345
                    maxLength: 32
                    minLength: 3
                    pattern: '[a-zA-Z0-9-_]{3,32}'
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 2
                    x-linode-filterable: true
                  lke_cluster:
                    additionalProperties: false
                    description: >-
                      __Read-only__ This NodeBalancer's related LKE cluster, if
                      any. The value is `null` if this NodeBalancer isn't
                      related to an LKE cluster.
                    nullable: true
                    properties:
                      id:
                        description: The ID of the related LKE cluster.
                        example: 12345
                        type: string
                      label:
                        description: The label of the related LKE cluster.
                        example: lkecluster12345
                        type: string
                      type:
                        description: __Read-only__ The type for LKE clusters.
                        example: lkecluster
                        readOnly: true
                        type: string
                      url:
                        description: The URL where you can access the related LKE cluster.
                        example: /v4/lke/clusters/12345
                        type: string
                    readOnly: true
                    type: object
                    x-linode-cli-display: 8
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The Region where this
                      NodeBalancer is located. NodeBalancers only support
                      backends in the same Region.
                    example: us-east
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 3
                    x-linode-filterable: true
                  tags:
                    description: >-
                      __Filterable__ An array of Tags applied to this object. 
                      Tags are for organizational purposes only.
                    example:
                      - example tag
                      - another example
                    items:
                      type: string
                    type: array
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-filterable: true
                  transfer:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the amount of transfer
                      this NodeBalancer has had so far this month.
                    properties:
                      in:
                        description: >-
                          __Read-only__ The total outbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 28.91200828552246
                        nullable: true
                        readOnly: true
                        type: number
                      out:
                        description: >-
                          __Read-only__ The total inbound transfer, in MB, used
                          for this NodeBalancer this month.
                        example: 3.5487728118896484
                        nullable: true
                        readOnly: true
                        type: number
                      total:
                        description: >-
                          __Read-only__ The total transfer, in MB, used by this
                          NodeBalancer this month.
                        example: 32.46078109741211
                        nullable: true
                        readOnly: true
                        type: number
                    readOnly: true
                    type: object
                  type:
                    description: __Read-only__ The type of NodeBalancer.
                    enum:
                      - common
                      - premium
                    example: premium
                    readOnly: true
                    type: string
                    x-linode-cli-display: 4
                  updated:
                    description: __Read-only__ When this NodeBalancer was last updated.
                    example: '2018-03-01T00:01:01'
                    format: date-time
                    readOnly: true
                    type: string
                title: NodeBalancer
                type: object
                x-akamai:
                  file-path: schemas/node-balancer.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-200.json
          description: NodeBalancer updated successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Update a NodeBalancer
      tags:
        - NodeBalancers
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers update 12345 \
                --label balancer12345 \
                --client_conn_throttle 0
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: update
      x-linode-grant: read_write
    delete:
      description: >-
        Deletes a NodeBalancer.


        __This is a destructive action and cannot be undone.__


        Deleting a NodeBalancer will also delete all associated Configs and
        Nodes, although the backend servers represented by the Nodes will not be
        changed or removed. Deleting a NodeBalancer will cause you to lose
        access to the IP Addresses assigned to this NodeBalancer.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/delete-node-balancer
      operationId: delete-node-balancer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The API responds with an empty object.
                maxProperties: 0
                type: object
                x-akamai:
                  file-path: schemas/added-empty-obj.yaml
              x-example:
                x-ref: ../examples/delete-node-balancer-200.json
          description: NodeBalancer deleted successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Delete a NodeBalancer
      tags:
        - NodeBalancers
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers delete 12345
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action:
        - delete
        - rm
      x-linode-grant: read_write
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
    x-akamai:
      file-path: paths/node-balancer.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/configs:
    post:
      description: >-
        Creates a NodeBalancer configuration, which allows the NodeBalancer to
        accept traffic on a new port. You will need to add NodeBalancer nodes to
        the new configuration before it can actually serve requests.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP. __CLI: HTTPS__.

            ```
            linode-cli nodebalancers config-create 12345 \
          --port 443 \
          --protocol https \
          --algorithm roundrobin \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --check_passive true \
          --proxy_protocol "none" \
          --ssl_cert "-----BEGIN CERTIFICATE-----
                      CERTIFICATE_INFORMATION
                      -----END CERTIFICATE-----" \
          --ssl_key "-----BEGIN PRIVATE KEY-----
                     PRIVATE_KEY_INFORMATION
                     -----END PRIVATE KEY-----" \
          --cipher_suite recommended
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: UDP__.

            ```
            linode-cli nodebalancers config-create 12345 \
          --port 80 \
          --protocol udp \
          --algorithm ring_hash \
          --stickiness session \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --udp_check_port 80
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: TCP__.

            ```
            linode-cli nodebalancers config-create 12345 \
          --port 80 \
          --protocol tcp \
          --algorithm roundrobin \
          --stickiness none \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --proxy_protocol "v2"
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: HTTP__.

            ```
            linode-cli nodebalancers config-create 12345 \
          --port 440 \
          --protocol http \
          --algorithm roundrobin \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works"
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/post-node-balancer-config
      operationId: post-node-balancer-config
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - description: NodeBalancer `config` options for each protocol.
                  oneOf:
                    - additionalProperties: false
                      description: >-
                        __Beta__ A NodeBalancer configuration defines the
                        protocol and settings for a specific port on the
                        NodeBalancer. These fields apply to UDP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this UDP NodeBalancer uses to route
                            traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - ring_hash
                          example: leastconn
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. This determines if
                            backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            This value must be present in the response body of
                            the check in order for it to pass. If this value
                            isn't present in the response body of a check
                            request, the backend is considered to be down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          description: __Read-only__ Must be `false` for UDP.
                          example: false
                          readOnly: true
                          type: boolean
                          x-linode-cli-display: 8
                        check_path:
                          description: >-
                            The URL path to check on each backend. If the
                            backend does not respond to this request, it's
                            considered to be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 30
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 7000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              __Beta__ A NodeBalancer node represents a single
                              backend serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both UDP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  __Read-only__ The mode this NodeBalancer
                                  should use when sending traffic to this
                                  backend. For backend nodes with a UDP config,
                                  the `mode` doesn't apply, so the value is
                                  `none`.
                                enum:
                                  - none
                                example: none
                                readOnly: true
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: UDP config
                            x-akamai:
                              file-path: schemas/node-balancer-node-udp.yaml
                              status: BETA
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 11
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 5795
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `udp`
                            in this case. Review our guide on [Available
                            Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                            for information on protocol features.
                          enum:
                            - udp
                          example: udp
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          description: __Read-only__ Must be `none` for UDP.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for UPD configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 10
                        ssl_key:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: session
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections are assigned a
                            backend server based on the algorithm configured.

                            - If set to `session`, all packets with the same
                            session identifiers are routed to the same backend
                            server. Two packets are considered part of the same
                            session if they share the same source and
                            destination IP addresses or ports, and are received
                            within a short time window.

                            - If set to `source_ip`, the NodeBalancer uses the
                            client's source IP address to route all packets from
                            the same client to the same backend server.
                          enum:
                            - none
                            - session
                            - source_ip
                          example: none
                          type: string
                          x-linode-cli-display: 5
                        udp_check_port:
                          default: 80
                          description: >-
                            UDP NodeBalancers use TCP and HTTP active health
                            checks to ensure back-end nodes can receive traffic.
                            You can specify the health check port that the
                            backend node listens on, which may differ from the
                            UDP port used to serve traffic.
                          example: 5795
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 6
                        udp_session_timeout:
                          default: 16
                          description: >-
                            __Read-only__ The maximum duration in seconds, a UDP
                            session can be idle before it is closed.
                          example: 2
                          maximum: 300
                          minimum: 1
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 12
                      required:
                        - nodes
                      title: UDP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-udp.yaml
                        status: BETA
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to TCP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this TCP NodeBalancer uses to route
                            traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: leastconn
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. The `check` is
                            used to determine if backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            This value must be present in the response body of
                            the check in order for it to pass. If this value is
                            not present in the response body of a check request,
                            the backend is considered to be down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. If the
                            backend does not respond to this request, it's
                            considered to be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 30
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for `tcp` configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 6000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 22
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `tcp`
                            in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features.
                          enum:
                            - tcp
                          example: tcp
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: >-
                            Proxy protocol is a TCP extension that sends initial
                            TCP connection information such as source or
                            destination IPs and ports to backend devices. Proxy
                            protocol preserves initial TCP information that
                            would be lost otherwise. Backend devices must be
                            configured to work with `proxy_protocol` if enabled.


                            - If omitted, or set to `none`, the NodeBalancer
                            doesn't send any auxiliary data over TCP
                            connections. This is the default.

                            - If set to `v1`, the human-readable header format
                            (Version 1) is used. Requires `tcp` protocol.

                            - If set to `v2`, the binary header format (Version
                            2) is used. Requires `tcp` protocol.
                          enum:
                            - none
                            - v1
                            - v2
                          example: none
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: none
                          description: >-
                            __Read-only__ Controls how session stickiness is
                            handled on this port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.
                          enum:
                            - none
                            - table
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: TCP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-tcp.yaml
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to HTTP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this HTTP NodeBalancer uses for
                            routing traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: roundrobin
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. This determines if
                            backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            Use when the active health `check` type is
                            `http_body`. This value must be present in the
                            response body of the check in order for it to pass.
                            If this value is not present in the response body of
                            a check request, the backend is considered to be
                            down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. Use when the
                            active health `check` type is `http`. If the backend
                            doesn't respond to this request, it's considered to
                            be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 3
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for `http` configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 4000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ Identifies the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers need to be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced.
                            You may configure your NodeBalancer however you find
                            useful.
                          example: 80
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `http`
                            in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features.
                          enum:
                            - http
                          example: http
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: table
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.

                            - If set to `http_cookie`, sessions are routed to
                            the same backend based on a cookie set by the
                            NodeBalancer.
                          enum:
                            - none
                            - table
                            - http_cookie
                          example: http_cookie
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: HTTP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-http.yaml
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to HTTPS configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this HTTPS NodeBalancer uses for
                            routing traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: roundrobin
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. The `check` is
                            used to determine if backends are up or down.


                            - If `none` no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            Use when the active health `check` type is
                            `http_body`. This value must be present in the
                            response body of the check in order for it to pass.
                            If this value is not present in the response body of
                            a check request, the backend is considered to be
                            down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. Use when the
                            active health `check` type is `http`. If the backend
                            doesn't respond to this request, it's considered to
                            be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 3
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          default: recommended
                          description: >-
                            What ciphers to use for SSL connections served by
                            this NodeBalancer. The `legacy` cipher is considered
                            insecure and should only be used if necessary. For
                            information on recommended and legacy ciphers, see
                            [TLS cipher
                            suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                          enum:
                            - recommended
                            - legacy
                          example: recommended
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 5000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 443
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve,
                            `https` in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features. The `https`
                            protocol needs to be specified with both `ssl_cert`
                            and `ssl_key`.
                          enum:
                            - https
                          example: https
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: __Read-only__ Not applicable for HTTPS configs.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: >-

                            The PEM-formatted public SSL certificate (or the
                            combined PEM-formatted SSL certificate and
                            Certificate Authority chain) that should be served
                            on this NodeBalancerConfig's port.


                            Line breaks must be represented as `\n` in the
                            string for requests (but not when using the Linode
                            CLI).


                            [Diffie-Hellman
                            Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                            can be included in this value to enable forward
                            secrecy.


                            The contents of this field will not be shown in any
                            responses that display the NodeBalancerConfig.
                            Instead, `<REDACTED>` will be printed where the
                            field appears.


                            The read-only `ssl_commonname` and `ssl_fingerprint`
                            fields in a NodeBalancerConfig response are
                            automatically derived from your certificate. Please
                            refer to these fields to verify that the appropriate
                            certificate was assigned to your NodeBalancerConfig.
                          example: <REDACTED>
                          format: ssl-cert
                          nullable: true
                          type: string
                        ssl_commonname:
                          description: >-
                            __Read-only__ The read-only common name
                            automatically derived from the SSL certificate
                            assigned to this NodeBalancerConfig. Please refer to
                            this field to verify that the appropriate
                            certificate is assigned to your NodeBalancerConfig.
                          example: www.example.com
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: >-
                            __Read-only__ The read-only SHA1-encoded fingerprint
                            automatically derived from the SSL certificate
                            assigned to this NodeBalancer configuration. Please
                            refer to the `ssl_fingerprint` field to verify that
                            the appropriate certificate is assigned to your
                            NodeBalancer configuration.
                          example: >-
                            00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: >-
                            The PEM-formatted private key for the SSL
                            certificate set in the `ssl_cert` field.


                            Line breaks must be represented as `\n` in the
                            string for requests (but not when using the Linode
                            CLI).


                            The contents of this field will not be shown in any
                            responses that display

                            the NodeBalancerConfig. Instead, `<REDACTED>` will
                            be printed where the field

                            appears.


                            The read-only `ssl_commonname` and `ssl_fingerprint`
                            fields in a NodeBalancerConfig

                            response are automatically derived from your
                            certificate. Please refer to these fields to

                            verify that the appropriate certificate was assigned
                            to your NodeBalancerConfig.
                          example: <REDACTED>
                          format: ssl-key
                          nullable: true
                          type: string
                        stickiness:
                          default: table
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.

                            - For HTTP or HTTPS clients, `http_cookie` allows
                            sessions to be routed to the same backend based on a
                            cookie set by the NodeBalancer.
                          enum:
                            - none
                            - table
                            - http_cookie
                          example: http_cookie
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: HTTPS
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-https.yaml
                  x-akamai:
                    file-path: schemas/node-balancer-config.yaml
                - additionalProperties: false
                  properties:
                    nodes:
                      description: |-
                        The NodeBalancer nodes that serve this config.

                        Some considerations for Nodes when rebuilding a config:

                          - Current Nodes excluded from the request body will be deleted from the Config.
                          - Current Nodes (identified by their Node ID) will be updated.
                          - New Nodes (included without a Node ID) will be created.
                      items:
                        additionalProperties: false
                        description: NodeBalancer node request object including ID.
                        properties:
                          address:
                            description: >-
                              Backend nodes can be Linodes and Linodes within a
                              VPC. The following IP types are supported:
                                - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                            example:
                              - 192.168.210.120:443
                              - 10.100.5.5:80
                              - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                            format: ip
                            type: string
                            x-linode-cli-display: 3
                          id:
                            description: The unique ID of the Node to update.
                            example: 54321
                            type: integer
                          label:
                            description: >-
                              The label for this node.  This is for display
                              purposes only.
                            example: node54321
                            maxLength: 32
                            minLength: 3
                            pattern: '[a-zA-Z0-9-_.]{3,32}'
                            type: string
                            x-linode-cli-display: 2
                          mode:
                            description: >-
                              The mode this NodeBalancer should use when sending
                              traffic to this backend.


                              - If set to `accept` this backend is accepting
                              traffic.

                              - If set to `reject` this backend will not receive
                              traffic.

                              - If set to `drain` this backend will not receive
                              _new_ traffic, but connections already pinned to
                              it will continue to be routed to it.

                              - If set to `backup`, this backend will only
                              receive traffic if all `accept` nodes are down.
                            enum:
                              - accept
                              - reject
                              - drain
                              - backup
                            example: accept
                            type: string
                            x-linode-cli-display: 6
                          subnet_id:
                            description: >-
                              Required for VPC backend nodes only. The VPC's
                              subnet. To display information about your VPCs and
                              their subnets, run the [List
                              VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                              operation.
                            example: 1
                            type: integer
                            x-linode-cli-display: 4
                          weight:
                            description: >-
                              Used when picking a backend to serve a request and
                              is not pinned to a single backend yet. Nodes with
                              a higher weight will receive more traffic.
                            example: 50
                            maximum: 255
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 5
                        type: object
                      type: array
                  required:
                    - nodes
                  type: object
              x-akamai:
                file-path: schemas/added-post-node-balancer-config.yaml
            x-example:
              x-ref: ../examples/post-node-balancer-config.json
            x-linode-cli-use-schema:
              additionalProperties: false
              properties:
                algorithm:
                  default: roundrobin
                  description: >-
                    The algorithm this NodeBalancer should use to route traffic
                    to backends.

                    - If set to `roundrobin`, connections are allocated in a
                    weighted circular order across the backends.

                    - If set to `leastconn`, allocates new connections to the
                    backend with the least connections.

                    - If set to `source`, allocates the client's IP to the same
                    backend on subsequent requests. Session `stickiness` affects
                    this algorithm.
                  enum:
                    - roundrobin
                    - leastconn
                    - source
                  example: roundrobin
                  type: string
                  x-linode-cli-display: 4
                check:
                  default: none
                  description: >-
                    The type of check to perform against backends to ensure
                    they're serving requests. This determines if backends are up
                    or down.

                    - If `none`, no check is performed.

                    - If `connection`, requires a successful TCP handshake with
                    a backend node.

                    - If `http`, requires a 2xx or 3xx response from the backend
                    node.

                    - If `http_body`, requires the provided regular expression
                    matches against the request's result body.
                  enum:
                    - none
                    - connection
                    - http
                    - http_body
                  example: http_body
                  type: string
                check_attempts:
                  default: 3
                  description: >-
                    How many times to attempt a check before considering a
                    backend to be down.
                  example: 3
                  maximum: 30
                  minimum: 1
                  type: integer
                check_body:
                  description: >-
                    The check's response body needs to include this value for it
                    to pass. Otherwise the backend is identified as being down.
                  example: it works
                  type: string
                check_interval:
                  default: 31
                  description: >-
                    How often, in seconds, to check that backends are up and
                    serving requests.


                    Must be greater than `check_timeout`.
                  example: 90
                  type: integer
                check_passive:
                  default: true
                  description: >-
                    If `true`, any response from this backend with a `5xx`
                    status code will be enough for it to be considered unhealthy
                    and taken out of rotation.
                  example: true
                  type: boolean
                  x-linode-cli-display: 6
                check_path:
                  description: >-
                    The URL path to check on each backend. If the backend
                    doesn't respond to this request it's considered to be down.
                  example: /test
                  pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                  type: string
                check_timeout:
                  default: 30
                  description: >-
                    How long, in seconds, to wait for a check attempt before
                    considering it failed. Must be less than `check_interval`.
                  example: 10
                  maximum: 30
                  minimum: 1
                  type: integer
                cipher_suite:
                  default: recommended
                  description: >-
                    What ciphers to use for SSL connections served by this
                    NodeBalancer. The `legacy` cipher is considered insecure and
                    should only be used if necessary. For information on
                    recommended and legacy ciphers, see [TLS cipher
                    suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                  enum:
                    - recommended
                    - legacy
                  example: recommended
                  type: string
                  x-linode-cli-color:
                    default_: white
                    legacy: red
                  x-linode-cli-display: 7
                id:
                  description: __Read-only__ This config's unique ID.
                  example: 4567
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                nodebalancer_id:
                  description: >-
                    __Read-only__ Identifies the NodeBalancer this config
                    belongs to.
                  example: 12345
                  readOnly: true
                  type: integer
                nodes_status:
                  additionalProperties: false
                  description: >-
                    __Read-only__ Information about the health of the backends
                    for this port.  It's updated periodically as checks are
                    performed against backends.
                  properties:
                    down:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        `DOWN` and unhealthy.  These are not in rotation, and
                        not serving requests.
                      example: 0
                      readOnly: true
                      type: integer
                    up:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        `UP` and healthy, and that are serving requests.
                      example: 4
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                  x-linode-cli-display: 10
                port:
                  default: 80
                  description: >-
                    The port for this config. Ports need to be unique across
                    configs for each NodeBalancer. For example, you can't have
                    two configs for port 80.  While some protocols are typically
                    assigned specific ports, there's no enforcement, and you can
                    configure your NodeBalancer however you find useful. For
                    example, while port 443 is generally used for HTTPS, you
                    don't need SSL configured to have a NodeBalancer listening
                    on port 443.
                  example: 80
                  maximum: 65535
                  minimum: 1
                  type: integer
                  x-linode-cli-display: 2
                protocol:
                  default: http
                  description: >-
                    The protocol this port is configured to serve.


                    - The `http` and `tcp` protocols don't support `ssl_cert`
                    and `ssl_key`.


                    - For the `https` protocol, you need `ssl_cert` and
                    `ssl_key`.


                    Review our guide on [Available
                    Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                    for information on protocol features.
                  enum:
                    - http
                    - https
                    - tcp
                  example: http
                  type: string
                  x-linode-cli-display: 3
                proxy_protocol:
                  default: none
                  description: >-
                    ProxyProtocol is a TCP extension that sends initial TCP
                    connection information such as source IPs, destination IPs,
                    and ports to backend devices. This information would be lost
                    otherwise. Backend devices must be configured to work with
                    ProxyProtocol if enabled.


                    - If omitted or set to `none`, the NodeBalancer doesn't send
                    any auxiliary data over TCP connections. The default is
                    `none`.

                    - If set to `v1`, the human-readable header format (Version
                    1) is used. Requires `tcp` protocol.

                    - If set to `v2`, the binary header format (Version 2) is
                    used. Requires `tcp` protocol.
                  enum:
                    - none
                    - v1
                    - v2
                  example: none
                  type: string
                ssl_cert:
                  description: >-
                    The PEM-formatted public SSL certificate (or the combined
                    PEM-formatted SSL certificate and Certificate Authority
                    chain) that should be served on this NodeBalancer config's
                    port.


                    Line breaks must be represented as `\n` in the string for
                    API requests, but not when using the Linode CLI.


                    You can include [Diffie-Hellman
                    parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                    in this value to enable forward secrecy.


                    The provided field don't appear in any responses that
                    display the NodeBalancer config. It's replaced with
                    `<REDACTED>`.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancer config response are automatically derived
                    from your certificate. Please refer to these fields to
                    verify that the appropriate certificate was assigned to your
                    config.
                  example: <REDACTED>
                  format: ssl-cert
                  nullable: true
                  type: string
                ssl_commonname:
                  description: >-
                    __Read-only__ The read-only common name automatically
                    derived from the SSL certificate assigned to this
                    NodeBalancer config. Please refer to this field to verify
                    that the appropriate certificate is assigned to your config.
                  example: www.example.com
                  readOnly: true
                  type: string
                  x-linode-cli-display: 8
                ssl_fingerprint:
                  description: >-
                    __Read-only__ The read-only SHA1-encoded fingerprint
                    automatically derived from the SSL certificate assigned to
                    this NodeBalancer configuration. You can use the
                    `ssl_fingerprint` field to verify that the appropriate
                    certificate is assigned to your NodeBalancer configuration.
                  example: 00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                  readOnly: true
                  type: string
                  x-linode-cli-display: 9
                ssl_key:
                  description: >-
                    The PEM-formatted private key for the SSL certificate set in
                    the `ssl_cert` field.


                    Line breaks must be represented as `\n` in the string for
                    API requests, but not when using the Linode CLI.


                    The contents of this field will not be shown in any
                    responses that display

                    the NodeBalancerConfig. Instead, `<REDACTED>` will be
                    printed where the field

                    appears.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancerConfig

                    response are automatically derived from your certificate.
                    Please refer to these fields to

                    verify that the appropriate certificate was assigned to your
                    NodeBalancerConfig.
                  example: <REDACTED>
                  format: ssl-key
                  nullable: true
                  type: string
                stickiness:
                  default: none
                  description: >-
                    Controls how session stickiness is handled on this port.

                    - If set to `none`, connections are always assigned a
                    backend based on the algorithm configured.

                    - If set to `table`, sessions from the same remote address
                    are routed to the same backend.

                    - For HTTP or HTTPS clients, `http_cookie` allows sessions
                    to be routed to the same backend based on a cookie set by
                    the NodeBalancer.
                  enum:
                    - none
                    - table
                    - http_cookie
                  example: http_cookie
                  type: string
                  x-linode-cli-display: 5
              type: object
              x-akamai:
                file-path: schemas/node-balancer-config-cli.yaml
        description: >-
          NodeBalancer configuration details for the port based on the routing
          protocol.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: NodeBalancer `config` options for each protocol.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer configuration defines the protocol
                      and settings for a specific port on the NodeBalancer.
                      These fields apply to UDP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this UDP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - ring_hash
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value isn't
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        description: __Read-only__ Must be `false` for UDP.
                        example: false
                        readOnly: true
                        type: boolean
                        x-linode-cli-display: 7
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `udp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 7000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `udp` in
                          this case. Review our guide on [Available
                          Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                          for information on protocol features.
                        enum:
                          - udp
                        example: udp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        description: __Read-only__ Must be `none` for UDP.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for UPD configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: session
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are assigned a backend
                          server based on the algorithm configured.

                          - If set to `session`, all packets with the same
                          session identifiers are routed to the same backend
                          server. Two packets are considered part of the same
                          session if they share the same source and destination
                          IP addresses or ports, and are received within a short
                          time window.

                          - If set to `source_ip`, the NodeBalancer uses the
                          client's source IP address to route all packets from
                          the same client to the same backend server.
                        enum:
                          - none
                          - session
                          - source_ip
                        example: none
                        type: string
                        x-linode-cli-display: 5
                      udp_check_port:
                        default: 80
                        description: >-
                          UDP NodeBalancers use TCP and HTTP active health
                          checks to ensure back-end nodes can receive traffic.
                          You can specify the health check port that the backend
                          node listens on, which may differ from the UDP port
                          used to serve traffic.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 6
                      udp_session_timeout:
                        default: 16
                        description: >-
                          __Read-only__ The maximum duration in seconds, a UDP
                          session can be idle before it is closed.
                        example: 2
                        maximum: 300
                        minimum: 1
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 11
                    required:
                      - nodes
                    title: UDP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-udp-response.yaml
                      status: BETA
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to TCP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this TCP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value is not
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code is enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `tcp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 6000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 22
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `tcp` in
                          this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - tcp
                        example: tcp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: >-
                          Proxy protocol is a TCP extension that sends initial
                          TCP connection information such as source or
                          destination IPs and ports to backend devices. Proxy
                          protocol preserves initial TCP information that would
                          be lost otherwise. Backend devices must be configured
                          to work with `proxy_protocol` if enabled.


                          - If omitted, or set to `none`, the NodeBalancer
                          doesn't send any auxiliary data over TCP connections.
                          This is the default.

                          - If set to `v1`, the human-readable header format
                          (Version 1) is used. Requires `tcp` protocol.

                          - If set to `v2`, the binary header format (Version 2)
                          is used. Requires `tcp` protocol.
                        enum:
                          - none
                          - v1
                          - v2
                        example: none
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: none
                        description: >-
                          __Read-only__ Controls how session stickiness is
                          handled on this port.


                          Not applicable to TCP configurations.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: TCP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-tcp-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTP NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value needs to be in the response
                          body of the check in order for it to pass. Otherwise
                          the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `http` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 4000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ Identifies the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers need to be unique across
                          TCP, HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced. You may
                          configure your NodeBalancer however you find useful.
                        example: 80
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `http`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - http
                        example: http
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are always assigned a
                          backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address are routed to the same backend.

                          - If set to `http_cookie`, sessions are routed to the
                          same backend based on a cookie set by the
                          NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-http-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTPS configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTPS NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. The `check` is used
                          to determine if backends are up or down.


                          - If `none` no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value must be present in the
                          response body of the check in order for it to pass. If
                          this value is not present in the response body of a
                          check request, the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          The number of seconds between each check that backends
                          are up and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        default: recommended
                        description: >-
                          What ciphers to use for SSL connections served by this
                          NodeBalancer. The `legacy` cipher is considered
                          insecure and should only be used if necessary. For
                          information on recommended and legacy ciphers, see
                          [TLS cipher
                          suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                        enum:
                          - recommended
                          - legacy
                        example: recommended
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 5000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 443
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `https`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features. The `https`
                          protocol needs to be specified with both `ssl_cert`
                          and `ssl_key`.
                        enum:
                          - https
                        example: https
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTPS configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: >-

                          The PEM-formatted public SSL certificate (or the
                          combined PEM-formatted SSL certificate and Certificate
                          Authority chain) that should be served on this
                          NodeBalancerConfig's port.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          [Diffie-Hellman
                          Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                          can be included in this value to enable forward
                          secrecy.


                          The contents of this field will not be shown in any
                          responses that display the NodeBalancerConfig.
                          Instead, `<REDACTED>` will be printed where the field
                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig response are
                          automatically derived from your certificate. Please
                          refer to these fields to verify that the appropriate
                          certificate was assigned to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-cert
                        nullable: true
                        type: string
                      ssl_commonname:
                        description: >-
                          __Read-only__ The read-only common name automatically
                          derived from the SSL certificate assigned to this
                          NodeBalancerConfig. Please refer to this field to
                          verify that the appropriate certificate is assigned to
                          your NodeBalancerConfig.
                        example: www.example.com
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: >-
                          __Read-only__ The read-only SHA1-encoded fingerprint
                          automatically derived from the SSL certificate
                          assigned to this NodeBalancer configuration. Please
                          refer to the `ssl_fingerprint` field to verify that
                          the appropriate certificate is assigned to your
                          NodeBalancer configuration.
                        example: >-
                          00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: >-
                          The PEM-formatted private key for the SSL certificate
                          set in the `ssl_cert` field.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          The contents of this field will not be shown in any
                          responses that display

                          the NodeBalancerConfig. Instead, `<REDACTED>` will be
                          printed where the field

                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig

                          response are automatically derived from your
                          certificate. Please refer to these fields to

                          verify that the appropriate certificate was assigned
                          to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-key
                        nullable: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections will always be
                          assigned a backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address will be routed to the same backend.

                          - For HTTP or HTTPS clients, `http_cookie` allows
                          sessions to be routed to the same backend based on a
                          cookie set by the NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTPS
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-https-response.yaml
                x-akamai:
                  file-path: schemas/node-balancer-config-response.yaml
              x-example:
                x-ref: ../examples/post-node-balancer-config-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  algorithm:
                    default: roundrobin
                    description: >-
                      The algorithm this NodeBalancer should use to route
                      traffic to backends.

                      - If set to `roundrobin`, connections are allocated in a
                      weighted circular order across the backends.

                      - If set to `leastconn`, allocates new connections to the
                      backend with the least connections.

                      - If set to `source`, allocates the client's IP to the
                      same backend on subsequent requests. Session `stickiness`
                      affects this algorithm.
                    enum:
                      - roundrobin
                      - leastconn
                      - source
                    example: roundrobin
                    type: string
                    x-linode-cli-display: 4
                  check:
                    default: none
                    description: >-
                      The type of check to perform against backends to ensure
                      they're serving requests. This determines if backends are
                      up or down.

                      - If `none`, no check is performed.

                      - If `connection`, requires a successful TCP handshake
                      with a backend node.

                      - If `http`, requires a 2xx or 3xx response from the
                      backend node.

                      - If `http_body`, requires the provided regular expression
                      matches against the request's result body.
                    enum:
                      - none
                      - connection
                      - http
                      - http_body
                    example: http_body
                    type: string
                  check_attempts:
                    default: 3
                    description: >-
                      How many times to attempt a check before considering a
                      backend to be down.
                    example: 3
                    maximum: 30
                    minimum: 1
                    type: integer
                  check_body:
                    description: >-
                      The check's response body needs to include this value for
                      it to pass. Otherwise the backend is identified as being
                      down.
                    example: it works
                    type: string
                  check_interval:
                    default: 31
                    description: >-
                      How often, in seconds, to check that backends are up and
                      serving requests.


                      Must be greater than `check_timeout`.
                    example: 90
                    type: integer
                  check_passive:
                    default: true
                    description: >-
                      If `true`, any response from this backend with a `5xx`
                      status code will be enough for it to be considered
                      unhealthy and taken out of rotation.
                    example: true
                    type: boolean
                    x-linode-cli-display: 6
                  check_path:
                    description: >-
                      The URL path to check on each backend. If the backend
                      doesn't respond to this request it's considered to be
                      down.
                    example: /test
                    pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                    type: string
                  check_timeout:
                    default: 30
                    description: >-
                      How long, in seconds, to wait for a check attempt before
                      considering it failed. Must be less than `check_interval`.
                    example: 10
                    maximum: 30
                    minimum: 1
                    type: integer
                  cipher_suite:
                    default: recommended
                    description: >-
                      What ciphers to use for SSL connections served by this
                      NodeBalancer. The `legacy` cipher is considered insecure
                      and should only be used if necessary. For information on
                      recommended and legacy ciphers, see [TLS cipher
                      suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                    enum:
                      - recommended
                      - legacy
                    example: recommended
                    type: string
                    x-linode-cli-color:
                      default_: white
                      legacy: red
                    x-linode-cli-display: 7
                  id:
                    description: __Read-only__ This config's unique ID.
                    example: 4567
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  nodebalancer_id:
                    description: >-
                      __Read-only__ Identifies the NodeBalancer this config
                      belongs to.
                    example: 12345
                    readOnly: true
                    type: integer
                  nodes_status:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the health of the backends
                      for this port.  It's updated periodically as checks are
                      performed against backends.
                    properties:
                      down:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `DOWN` and unhealthy.  These are not in rotation, and
                          not serving requests.
                        example: 0
                        readOnly: true
                        type: integer
                      up:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `UP` and healthy, and that are serving requests.
                        example: 4
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                    x-linode-cli-display: 10
                  port:
                    default: 80
                    description: >-
                      The port for this config. Ports need to be unique across
                      configs for each NodeBalancer. For example, you can't have
                      two configs for port 80.  While some protocols are
                      typically assigned specific ports, there's no enforcement,
                      and you can configure your NodeBalancer however you find
                      useful. For example, while port 443 is generally used for
                      HTTPS, you don't need SSL configured to have a
                      NodeBalancer listening on port 443.
                    example: 80
                    maximum: 65535
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 2
                  protocol:
                    default: http
                    description: >-
                      The protocol this port is configured to serve.


                      - The `http` and `tcp` protocols don't support `ssl_cert`
                      and `ssl_key`.


                      - For the `https` protocol, you need `ssl_cert` and
                      `ssl_key`.


                      Review our guide on [Available
                      Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                      for information on protocol features.
                    enum:
                      - http
                      - https
                      - tcp
                    example: http
                    type: string
                    x-linode-cli-display: 3
                  proxy_protocol:
                    default: none
                    description: >-
                      ProxyProtocol is a TCP extension that sends initial TCP
                      connection information such as source IPs, destination
                      IPs, and ports to backend devices. This information would
                      be lost otherwise. Backend devices must be configured to
                      work with ProxyProtocol if enabled.


                      - If omitted or set to `none`, the NodeBalancer doesn't
                      send any auxiliary data over TCP connections. The default
                      is `none`.

                      - If set to `v1`, the human-readable header format
                      (Version 1) is used. Requires `tcp` protocol.

                      - If set to `v2`, the binary header format (Version 2) is
                      used. Requires `tcp` protocol.
                    enum:
                      - none
                      - v1
                      - v2
                    example: none
                    type: string
                  ssl_cert:
                    description: >-
                      The PEM-formatted public SSL certificate (or the combined
                      PEM-formatted SSL certificate and Certificate Authority
                      chain) that should be served on this NodeBalancer config's
                      port.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      You can include [Diffie-Hellman
                      parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                      in this value to enable forward secrecy.


                      The provided field don't appear in any responses that
                      display the NodeBalancer config. It's replaced with
                      `<REDACTED>`.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancer config response are automatically
                      derived from your certificate. Please refer to these
                      fields to verify that the appropriate certificate was
                      assigned to your config.
                    example: <REDACTED>
                    format: ssl-cert
                    nullable: true
                    type: string
                  ssl_commonname:
                    description: >-
                      __Read-only__ The read-only common name automatically
                      derived from the SSL certificate assigned to this
                      NodeBalancer config. Please refer to this field to verify
                      that the appropriate certificate is assigned to your
                      config.
                    example: www.example.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 8
                  ssl_fingerprint:
                    description: >-
                      __Read-only__ The read-only SHA1-encoded fingerprint
                      automatically derived from the SSL certificate assigned to
                      this NodeBalancer configuration. You can use the
                      `ssl_fingerprint` field to verify that the appropriate
                      certificate is assigned to your NodeBalancer
                      configuration.
                    example: >-
                      00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                    readOnly: true
                    type: string
                    x-linode-cli-display: 9
                  ssl_key:
                    description: >-
                      The PEM-formatted private key for the SSL certificate set
                      in the `ssl_cert` field.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      The contents of this field will not be shown in any
                      responses that display

                      the NodeBalancerConfig. Instead, `<REDACTED>` will be
                      printed where the field

                      appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig

                      response are automatically derived from your certificate.
                      Please refer to these fields to

                      verify that the appropriate certificate was assigned to
                      your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-key
                    nullable: true
                    type: string
                  stickiness:
                    default: none
                    description: >-
                      Controls how session stickiness is handled on this port.

                      - If set to `none`, connections are always assigned a
                      backend based on the algorithm configured.

                      - If set to `table`, sessions from the same remote address
                      are routed to the same backend.

                      - For HTTP or HTTPS clients, `http_cookie` allows sessions
                      to be routed to the same backend based on a cookie set by
                      the NodeBalancer.
                    enum:
                      - none
                      - table
                      - http_cookie
                    example: http_cookie
                    type: string
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-config-cli.yaml
          description: Config created successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Create a config
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers config-create 12345 \
                --port 443 \
                --protocol https \
                --algorithm roundrobin \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --check_passive true \
                --proxy_protocol "none" \
                --ssl_cert "-----BEGIN CERTIFICATE-----
                            CERTIFICATE_INFORMATION
                            -----END CERTIFICATE-----" \
                --ssl_key "-----BEGIN PRIVATE KEY-----
                           PRIVATE_KEY_INFORMATION
                           -----END PRIVATE KEY-----" \
                --cipher_suite recommended
            title: 'CLI: HTTPS'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-create 12345 \
                --port 80 \
                --protocol udp \
                --algorithm ring_hash \
                --stickiness session \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --udp_check_port 80
            title: 'CLI: UDP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-create 12345 \
                --port 80 \
                --protocol tcp \
                --algorithm roundrobin \
                --stickiness none \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --proxy_protocol "v2"
            title: 'CLI: TCP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-create 12345 \
                --port 440 \
                --protocol http \
                --algorithm roundrobin \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works"
            title: 'CLI: HTTP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: config-create
      x-linode-grant: read_write
    get:
      description: >-
        Returns a paginated list of NodeBalancer Configs associated with this
        NodeBalancer. NodeBalancer Configs represent individual ports that this
        NodeBalancer will accept traffic on, one Config per port.


        For example, if you wanted to accept standard HTTP traffic, you would
        need a Config listening on port 80.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-configs
      operationId: get-node-balancer-configs
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      responses:
        '200':
          content:
            application/json:
              schema:
                description: NodeBalancer `config` options for each protocol.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer configuration defines the protocol
                      and settings for a specific port on the NodeBalancer.
                      These fields apply to UDP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this UDP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - ring_hash
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value isn't
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        description: __Read-only__ Must be `false` for UDP.
                        example: false
                        readOnly: true
                        type: boolean
                        x-linode-cli-display: 7
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `udp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 7000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `udp` in
                          this case. Review our guide on [Available
                          Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                          for information on protocol features.
                        enum:
                          - udp
                        example: udp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        description: __Read-only__ Must be `none` for UDP.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for UPD configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: session
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are assigned a backend
                          server based on the algorithm configured.

                          - If set to `session`, all packets with the same
                          session identifiers are routed to the same backend
                          server. Two packets are considered part of the same
                          session if they share the same source and destination
                          IP addresses or ports, and are received within a short
                          time window.

                          - If set to `source_ip`, the NodeBalancer uses the
                          client's source IP address to route all packets from
                          the same client to the same backend server.
                        enum:
                          - none
                          - session
                          - source_ip
                        example: none
                        type: string
                        x-linode-cli-display: 5
                      udp_check_port:
                        default: 80
                        description: >-
                          UDP NodeBalancers use TCP and HTTP active health
                          checks to ensure back-end nodes can receive traffic.
                          You can specify the health check port that the backend
                          node listens on, which may differ from the UDP port
                          used to serve traffic.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 6
                      udp_session_timeout:
                        default: 16
                        description: >-
                          __Read-only__ The maximum duration in seconds, a UDP
                          session can be idle before it is closed.
                        example: 2
                        maximum: 300
                        minimum: 1
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 11
                    required:
                      - nodes
                    title: UDP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-udp-response.yaml
                      status: BETA
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to TCP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this TCP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value is not
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code is enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `tcp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 6000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 22
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `tcp` in
                          this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - tcp
                        example: tcp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: >-
                          Proxy protocol is a TCP extension that sends initial
                          TCP connection information such as source or
                          destination IPs and ports to backend devices. Proxy
                          protocol preserves initial TCP information that would
                          be lost otherwise. Backend devices must be configured
                          to work with `proxy_protocol` if enabled.


                          - If omitted, or set to `none`, the NodeBalancer
                          doesn't send any auxiliary data over TCP connections.
                          This is the default.

                          - If set to `v1`, the human-readable header format
                          (Version 1) is used. Requires `tcp` protocol.

                          - If set to `v2`, the binary header format (Version 2)
                          is used. Requires `tcp` protocol.
                        enum:
                          - none
                          - v1
                          - v2
                        example: none
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: none
                        description: >-
                          __Read-only__ Controls how session stickiness is
                          handled on this port.


                          Not applicable to TCP configurations.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: TCP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-tcp-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTP NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value needs to be in the response
                          body of the check in order for it to pass. Otherwise
                          the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `http` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 4000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ Identifies the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers need to be unique across
                          TCP, HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced. You may
                          configure your NodeBalancer however you find useful.
                        example: 80
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `http`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - http
                        example: http
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are always assigned a
                          backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address are routed to the same backend.

                          - If set to `http_cookie`, sessions are routed to the
                          same backend based on a cookie set by the
                          NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-http-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTPS configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTPS NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. The `check` is used
                          to determine if backends are up or down.


                          - If `none` no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value must be present in the
                          response body of the check in order for it to pass. If
                          this value is not present in the response body of a
                          check request, the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          The number of seconds between each check that backends
                          are up and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        default: recommended
                        description: >-
                          What ciphers to use for SSL connections served by this
                          NodeBalancer. The `legacy` cipher is considered
                          insecure and should only be used if necessary. For
                          information on recommended and legacy ciphers, see
                          [TLS cipher
                          suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                        enum:
                          - recommended
                          - legacy
                        example: recommended
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 5000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 443
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `https`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features. The `https`
                          protocol needs to be specified with both `ssl_cert`
                          and `ssl_key`.
                        enum:
                          - https
                        example: https
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTPS configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: >-

                          The PEM-formatted public SSL certificate (or the
                          combined PEM-formatted SSL certificate and Certificate
                          Authority chain) that should be served on this
                          NodeBalancerConfig's port.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          [Diffie-Hellman
                          Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                          can be included in this value to enable forward
                          secrecy.


                          The contents of this field will not be shown in any
                          responses that display the NodeBalancerConfig.
                          Instead, `<REDACTED>` will be printed where the field
                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig response are
                          automatically derived from your certificate. Please
                          refer to these fields to verify that the appropriate
                          certificate was assigned to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-cert
                        nullable: true
                        type: string
                      ssl_commonname:
                        description: >-
                          __Read-only__ The read-only common name automatically
                          derived from the SSL certificate assigned to this
                          NodeBalancerConfig. Please refer to this field to
                          verify that the appropriate certificate is assigned to
                          your NodeBalancerConfig.
                        example: www.example.com
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: >-
                          __Read-only__ The read-only SHA1-encoded fingerprint
                          automatically derived from the SSL certificate
                          assigned to this NodeBalancer configuration. Please
                          refer to the `ssl_fingerprint` field to verify that
                          the appropriate certificate is assigned to your
                          NodeBalancer configuration.
                        example: >-
                          00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: >-
                          The PEM-formatted private key for the SSL certificate
                          set in the `ssl_cert` field.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          The contents of this field will not be shown in any
                          responses that display

                          the NodeBalancerConfig. Instead, `<REDACTED>` will be
                          printed where the field

                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig

                          response are automatically derived from your
                          certificate. Please refer to these fields to

                          verify that the appropriate certificate was assigned
                          to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-key
                        nullable: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections will always be
                          assigned a backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address will be routed to the same backend.

                          - For HTTP or HTTPS clients, `http_cookie` allows
                          sessions to be routed to the same backend based on a
                          cookie set by the NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTPS
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-https-response.yaml
                x-akamai:
                  file-path: schemas/node-balancer-config-response.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-configs-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  algorithm:
                    default: roundrobin
                    description: >-
                      The algorithm this NodeBalancer should use to route
                      traffic to backends.

                      - If set to `roundrobin`, connections are allocated in a
                      weighted circular order across the backends.

                      - If set to `leastconn`, allocates new connections to the
                      backend with the least connections.

                      - If set to `source`, allocates the client's IP to the
                      same backend on subsequent requests. Session `stickiness`
                      affects this algorithm.
                    enum:
                      - roundrobin
                      - leastconn
                      - source
                    example: roundrobin
                    type: string
                    x-linode-cli-display: 4
                  check:
                    default: none
                    description: >-
                      The type of check to perform against backends to ensure
                      they're serving requests. This determines if backends are
                      up or down.

                      - If `none`, no check is performed.

                      - If `connection`, requires a successful TCP handshake
                      with a backend node.

                      - If `http`, requires a 2xx or 3xx response from the
                      backend node.

                      - If `http_body`, requires the provided regular expression
                      matches against the request's result body.
                    enum:
                      - none
                      - connection
                      - http
                      - http_body
                    example: http_body
                    type: string
                  check_attempts:
                    default: 3
                    description: >-
                      How many times to attempt a check before considering a
                      backend to be down.
                    example: 3
                    maximum: 30
                    minimum: 1
                    type: integer
                  check_body:
                    description: >-
                      The check's response body needs to include this value for
                      it to pass. Otherwise the backend is identified as being
                      down.
                    example: it works
                    type: string
                  check_interval:
                    default: 31
                    description: >-
                      How often, in seconds, to check that backends are up and
                      serving requests.


                      Must be greater than `check_timeout`.
                    example: 90
                    type: integer
                  check_passive:
                    default: true
                    description: >-
                      If `true`, any response from this backend with a `5xx`
                      status code will be enough for it to be considered
                      unhealthy and taken out of rotation.
                    example: true
                    type: boolean
                    x-linode-cli-display: 6
                  check_path:
                    description: >-
                      The URL path to check on each backend. If the backend
                      doesn't respond to this request it's considered to be
                      down.
                    example: /test
                    pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                    type: string
                  check_timeout:
                    default: 30
                    description: >-
                      How long, in seconds, to wait for a check attempt before
                      considering it failed. Must be less than `check_interval`.
                    example: 10
                    maximum: 30
                    minimum: 1
                    type: integer
                  cipher_suite:
                    default: recommended
                    description: >-
                      What ciphers to use for SSL connections served by this
                      NodeBalancer. The `legacy` cipher is considered insecure
                      and should only be used if necessary. For information on
                      recommended and legacy ciphers, see [TLS cipher
                      suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                    enum:
                      - recommended
                      - legacy
                    example: recommended
                    type: string
                    x-linode-cli-color:
                      default_: white
                      legacy: red
                    x-linode-cli-display: 7
                  id:
                    description: __Read-only__ This config's unique ID.
                    example: 4567
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  nodebalancer_id:
                    description: >-
                      __Read-only__ Identifies the NodeBalancer this config
                      belongs to.
                    example: 12345
                    readOnly: true
                    type: integer
                  nodes_status:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the health of the backends
                      for this port.  It's updated periodically as checks are
                      performed against backends.
                    properties:
                      down:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `DOWN` and unhealthy.  These are not in rotation, and
                          not serving requests.
                        example: 0
                        readOnly: true
                        type: integer
                      up:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `UP` and healthy, and that are serving requests.
                        example: 4
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                    x-linode-cli-display: 10
                  port:
                    default: 80
                    description: >-
                      The port for this config. Ports need to be unique across
                      configs for each NodeBalancer. For example, you can't have
                      two configs for port 80.  While some protocols are
                      typically assigned specific ports, there's no enforcement,
                      and you can configure your NodeBalancer however you find
                      useful. For example, while port 443 is generally used for
                      HTTPS, you don't need SSL configured to have a
                      NodeBalancer listening on port 443.
                    example: 80
                    maximum: 65535
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 2
                  protocol:
                    default: http
                    description: >-
                      The protocol this port is configured to serve.


                      - The `http` and `tcp` protocols don't support `ssl_cert`
                      and `ssl_key`.


                      - For the `https` protocol, you need `ssl_cert` and
                      `ssl_key`.


                      Review our guide on [Available
                      Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                      for information on protocol features.
                    enum:
                      - http
                      - https
                      - tcp
                    example: http
                    type: string
                    x-linode-cli-display: 3
                  proxy_protocol:
                    default: none
                    description: >-
                      ProxyProtocol is a TCP extension that sends initial TCP
                      connection information such as source IPs, destination
                      IPs, and ports to backend devices. This information would
                      be lost otherwise. Backend devices must be configured to
                      work with ProxyProtocol if enabled.


                      - If omitted or set to `none`, the NodeBalancer doesn't
                      send any auxiliary data over TCP connections. The default
                      is `none`.

                      - If set to `v1`, the human-readable header format
                      (Version 1) is used. Requires `tcp` protocol.

                      - If set to `v2`, the binary header format (Version 2) is
                      used. Requires `tcp` protocol.
                    enum:
                      - none
                      - v1
                      - v2
                    example: none
                    type: string
                  ssl_cert:
                    description: >-
                      The PEM-formatted public SSL certificate (or the combined
                      PEM-formatted SSL certificate and Certificate Authority
                      chain) that should be served on this NodeBalancer config's
                      port.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      You can include [Diffie-Hellman
                      parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                      in this value to enable forward secrecy.


                      The provided field don't appear in any responses that
                      display the NodeBalancer config. It's replaced with
                      `<REDACTED>`.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancer config response are automatically
                      derived from your certificate. Please refer to these
                      fields to verify that the appropriate certificate was
                      assigned to your config.
                    example: <REDACTED>
                    format: ssl-cert
                    nullable: true
                    type: string
                  ssl_commonname:
                    description: >-
                      __Read-only__ The read-only common name automatically
                      derived from the SSL certificate assigned to this
                      NodeBalancer config. Please refer to this field to verify
                      that the appropriate certificate is assigned to your
                      config.
                    example: www.example.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 8
                  ssl_fingerprint:
                    description: >-
                      __Read-only__ The read-only SHA1-encoded fingerprint
                      automatically derived from the SSL certificate assigned to
                      this NodeBalancer configuration. You can use the
                      `ssl_fingerprint` field to verify that the appropriate
                      certificate is assigned to your NodeBalancer
                      configuration.
                    example: >-
                      00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                    readOnly: true
                    type: string
                    x-linode-cli-display: 9
                  ssl_key:
                    description: >-
                      The PEM-formatted private key for the SSL certificate set
                      in the `ssl_cert` field.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      The contents of this field will not be shown in any
                      responses that display

                      the NodeBalancerConfig. Instead, `<REDACTED>` will be
                      printed where the field

                      appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig

                      response are automatically derived from your certificate.
                      Please refer to these fields to

                      verify that the appropriate certificate was assigned to
                      your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-key
                    nullable: true
                    type: string
                  stickiness:
                    default: none
                    description: >-
                      Controls how session stickiness is handled on this port.

                      - If set to `none`, connections are always assigned a
                      backend based on the algorithm configured.

                      - If set to `table`, sessions from the same remote address
                      are routed to the same backend.

                      - For HTTP or HTTPS clients, `http_cookie` allows sessions
                      to be routed to the same backend based on a cookie set by
                      the NodeBalancer.
                    enum:
                      - none
                      - table
                      - http_cookie
                    example: http_cookie
                    type: string
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-config-cli.yaml
          description: A paginated list of NodeBalancer Configs.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: List configs
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers configs-list 12345
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: configs-list
      x-linode-grant: read_only
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
    x-akamai:
      file-path: paths/node-balancer-configs.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/configs
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/configs/{configId}:
    get:
      description: >-
        Returns configuration information for a single port of this
        NodeBalancer.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-config
      operationId: get-node-balancer-config
      responses:
        '200':
          content:
            application/json:
              schema:
                description: NodeBalancer `config` options for each protocol.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer configuration defines the protocol
                      and settings for a specific port on the NodeBalancer.
                      These fields apply to UDP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this UDP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - ring_hash
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value isn't
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        description: __Read-only__ Must be `false` for UDP.
                        example: false
                        readOnly: true
                        type: boolean
                        x-linode-cli-display: 7
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `udp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 7000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `udp` in
                          this case. Review our guide on [Available
                          Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                          for information on protocol features.
                        enum:
                          - udp
                        example: udp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        description: __Read-only__ Must be `none` for UDP.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for UPD configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: session
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are assigned a backend
                          server based on the algorithm configured.

                          - If set to `session`, all packets with the same
                          session identifiers are routed to the same backend
                          server. Two packets are considered part of the same
                          session if they share the same source and destination
                          IP addresses or ports, and are received within a short
                          time window.

                          - If set to `source_ip`, the NodeBalancer uses the
                          client's source IP address to route all packets from
                          the same client to the same backend server.
                        enum:
                          - none
                          - session
                          - source_ip
                        example: none
                        type: string
                        x-linode-cli-display: 5
                      udp_check_port:
                        default: 80
                        description: >-
                          UDP NodeBalancers use TCP and HTTP active health
                          checks to ensure back-end nodes can receive traffic.
                          You can specify the health check port that the backend
                          node listens on, which may differ from the UDP port
                          used to serve traffic.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 6
                      udp_session_timeout:
                        default: 16
                        description: >-
                          __Read-only__ The maximum duration in seconds, a UDP
                          session can be idle before it is closed.
                        example: 2
                        maximum: 300
                        minimum: 1
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 11
                    required:
                      - nodes
                    title: UDP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-udp-response.yaml
                      status: BETA
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to TCP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this TCP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value is not
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code is enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `tcp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 6000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 22
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `tcp` in
                          this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - tcp
                        example: tcp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: >-
                          Proxy protocol is a TCP extension that sends initial
                          TCP connection information such as source or
                          destination IPs and ports to backend devices. Proxy
                          protocol preserves initial TCP information that would
                          be lost otherwise. Backend devices must be configured
                          to work with `proxy_protocol` if enabled.


                          - If omitted, or set to `none`, the NodeBalancer
                          doesn't send any auxiliary data over TCP connections.
                          This is the default.

                          - If set to `v1`, the human-readable header format
                          (Version 1) is used. Requires `tcp` protocol.

                          - If set to `v2`, the binary header format (Version 2)
                          is used. Requires `tcp` protocol.
                        enum:
                          - none
                          - v1
                          - v2
                        example: none
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: none
                        description: >-
                          __Read-only__ Controls how session stickiness is
                          handled on this port.


                          Not applicable to TCP configurations.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: TCP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-tcp-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTP NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value needs to be in the response
                          body of the check in order for it to pass. Otherwise
                          the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `http` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 4000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ Identifies the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers need to be unique across
                          TCP, HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced. You may
                          configure your NodeBalancer however you find useful.
                        example: 80
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `http`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - http
                        example: http
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are always assigned a
                          backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address are routed to the same backend.

                          - If set to `http_cookie`, sessions are routed to the
                          same backend based on a cookie set by the
                          NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-http-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTPS configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTPS NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. The `check` is used
                          to determine if backends are up or down.


                          - If `none` no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value must be present in the
                          response body of the check in order for it to pass. If
                          this value is not present in the response body of a
                          check request, the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          The number of seconds between each check that backends
                          are up and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        default: recommended
                        description: >-
                          What ciphers to use for SSL connections served by this
                          NodeBalancer. The `legacy` cipher is considered
                          insecure and should only be used if necessary. For
                          information on recommended and legacy ciphers, see
                          [TLS cipher
                          suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                        enum:
                          - recommended
                          - legacy
                        example: recommended
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 5000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 443
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `https`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features. The `https`
                          protocol needs to be specified with both `ssl_cert`
                          and `ssl_key`.
                        enum:
                          - https
                        example: https
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTPS configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: >-

                          The PEM-formatted public SSL certificate (or the
                          combined PEM-formatted SSL certificate and Certificate
                          Authority chain) that should be served on this
                          NodeBalancerConfig's port.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          [Diffie-Hellman
                          Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                          can be included in this value to enable forward
                          secrecy.


                          The contents of this field will not be shown in any
                          responses that display the NodeBalancerConfig.
                          Instead, `<REDACTED>` will be printed where the field
                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig response are
                          automatically derived from your certificate. Please
                          refer to these fields to verify that the appropriate
                          certificate was assigned to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-cert
                        nullable: true
                        type: string
                      ssl_commonname:
                        description: >-
                          __Read-only__ The read-only common name automatically
                          derived from the SSL certificate assigned to this
                          NodeBalancerConfig. Please refer to this field to
                          verify that the appropriate certificate is assigned to
                          your NodeBalancerConfig.
                        example: www.example.com
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: >-
                          __Read-only__ The read-only SHA1-encoded fingerprint
                          automatically derived from the SSL certificate
                          assigned to this NodeBalancer configuration. Please
                          refer to the `ssl_fingerprint` field to verify that
                          the appropriate certificate is assigned to your
                          NodeBalancer configuration.
                        example: >-
                          00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: >-
                          The PEM-formatted private key for the SSL certificate
                          set in the `ssl_cert` field.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          The contents of this field will not be shown in any
                          responses that display

                          the NodeBalancerConfig. Instead, `<REDACTED>` will be
                          printed where the field

                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig

                          response are automatically derived from your
                          certificate. Please refer to these fields to

                          verify that the appropriate certificate was assigned
                          to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-key
                        nullable: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections will always be
                          assigned a backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address will be routed to the same backend.

                          - For HTTP or HTTPS clients, `http_cookie` allows
                          sessions to be routed to the same backend based on a
                          cookie set by the NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTPS
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-https-response.yaml
                x-akamai:
                  file-path: schemas/node-balancer-config-response.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-config-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  algorithm:
                    default: roundrobin
                    description: >-
                      The algorithm this NodeBalancer should use to route
                      traffic to backends.

                      - If set to `roundrobin`, connections are allocated in a
                      weighted circular order across the backends.

                      - If set to `leastconn`, allocates new connections to the
                      backend with the least connections.

                      - If set to `source`, allocates the client's IP to the
                      same backend on subsequent requests. Session `stickiness`
                      affects this algorithm.
                    enum:
                      - roundrobin
                      - leastconn
                      - source
                    example: roundrobin
                    type: string
                    x-linode-cli-display: 4
                  check:
                    default: none
                    description: >-
                      The type of check to perform against backends to ensure
                      they're serving requests. This determines if backends are
                      up or down.

                      - If `none`, no check is performed.

                      - If `connection`, requires a successful TCP handshake
                      with a backend node.

                      - If `http`, requires a 2xx or 3xx response from the
                      backend node.

                      - If `http_body`, requires the provided regular expression
                      matches against the request's result body.
                    enum:
                      - none
                      - connection
                      - http
                      - http_body
                    example: http_body
                    type: string
                  check_attempts:
                    default: 3
                    description: >-
                      How many times to attempt a check before considering a
                      backend to be down.
                    example: 3
                    maximum: 30
                    minimum: 1
                    type: integer
                  check_body:
                    description: >-
                      The check's response body needs to include this value for
                      it to pass. Otherwise the backend is identified as being
                      down.
                    example: it works
                    type: string
                  check_interval:
                    default: 31
                    description: >-
                      How often, in seconds, to check that backends are up and
                      serving requests.


                      Must be greater than `check_timeout`.
                    example: 90
                    type: integer
                  check_passive:
                    default: true
                    description: >-
                      If `true`, any response from this backend with a `5xx`
                      status code will be enough for it to be considered
                      unhealthy and taken out of rotation.
                    example: true
                    type: boolean
                    x-linode-cli-display: 6
                  check_path:
                    description: >-
                      The URL path to check on each backend. If the backend
                      doesn't respond to this request it's considered to be
                      down.
                    example: /test
                    pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                    type: string
                  check_timeout:
                    default: 30
                    description: >-
                      How long, in seconds, to wait for a check attempt before
                      considering it failed. Must be less than `check_interval`.
                    example: 10
                    maximum: 30
                    minimum: 1
                    type: integer
                  cipher_suite:
                    default: recommended
                    description: >-
                      What ciphers to use for SSL connections served by this
                      NodeBalancer. The `legacy` cipher is considered insecure
                      and should only be used if necessary. For information on
                      recommended and legacy ciphers, see [TLS cipher
                      suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                    enum:
                      - recommended
                      - legacy
                    example: recommended
                    type: string
                    x-linode-cli-color:
                      default_: white
                      legacy: red
                    x-linode-cli-display: 7
                  id:
                    description: __Read-only__ This config's unique ID.
                    example: 4567
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  nodebalancer_id:
                    description: >-
                      __Read-only__ Identifies the NodeBalancer this config
                      belongs to.
                    example: 12345
                    readOnly: true
                    type: integer
                  nodes_status:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the health of the backends
                      for this port.  It's updated periodically as checks are
                      performed against backends.
                    properties:
                      down:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `DOWN` and unhealthy.  These are not in rotation, and
                          not serving requests.
                        example: 0
                        readOnly: true
                        type: integer
                      up:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `UP` and healthy, and that are serving requests.
                        example: 4
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                    x-linode-cli-display: 10
                  port:
                    default: 80
                    description: >-
                      The port for this config. Ports need to be unique across
                      configs for each NodeBalancer. For example, you can't have
                      two configs for port 80.  While some protocols are
                      typically assigned specific ports, there's no enforcement,
                      and you can configure your NodeBalancer however you find
                      useful. For example, while port 443 is generally used for
                      HTTPS, you don't need SSL configured to have a
                      NodeBalancer listening on port 443.
                    example: 80
                    maximum: 65535
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 2
                  protocol:
                    default: http
                    description: >-
                      The protocol this port is configured to serve.


                      - The `http` and `tcp` protocols don't support `ssl_cert`
                      and `ssl_key`.


                      - For the `https` protocol, you need `ssl_cert` and
                      `ssl_key`.


                      Review our guide on [Available
                      Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                      for information on protocol features.
                    enum:
                      - http
                      - https
                      - tcp
                    example: http
                    type: string
                    x-linode-cli-display: 3
                  proxy_protocol:
                    default: none
                    description: >-
                      ProxyProtocol is a TCP extension that sends initial TCP
                      connection information such as source IPs, destination
                      IPs, and ports to backend devices. This information would
                      be lost otherwise. Backend devices must be configured to
                      work with ProxyProtocol if enabled.


                      - If omitted or set to `none`, the NodeBalancer doesn't
                      send any auxiliary data over TCP connections. The default
                      is `none`.

                      - If set to `v1`, the human-readable header format
                      (Version 1) is used. Requires `tcp` protocol.

                      - If set to `v2`, the binary header format (Version 2) is
                      used. Requires `tcp` protocol.
                    enum:
                      - none
                      - v1
                      - v2
                    example: none
                    type: string
                  ssl_cert:
                    description: >-
                      The PEM-formatted public SSL certificate (or the combined
                      PEM-formatted SSL certificate and Certificate Authority
                      chain) that should be served on this NodeBalancer config's
                      port.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      You can include [Diffie-Hellman
                      parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                      in this value to enable forward secrecy.


                      The provided field don't appear in any responses that
                      display the NodeBalancer config. It's replaced with
                      `<REDACTED>`.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancer config response are automatically
                      derived from your certificate. Please refer to these
                      fields to verify that the appropriate certificate was
                      assigned to your config.
                    example: <REDACTED>
                    format: ssl-cert
                    nullable: true
                    type: string
                  ssl_commonname:
                    description: >-
                      __Read-only__ The read-only common name automatically
                      derived from the SSL certificate assigned to this
                      NodeBalancer config. Please refer to this field to verify
                      that the appropriate certificate is assigned to your
                      config.
                    example: www.example.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 8
                  ssl_fingerprint:
                    description: >-
                      __Read-only__ The read-only SHA1-encoded fingerprint
                      automatically derived from the SSL certificate assigned to
                      this NodeBalancer configuration. You can use the
                      `ssl_fingerprint` field to verify that the appropriate
                      certificate is assigned to your NodeBalancer
                      configuration.
                    example: >-
                      00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                    readOnly: true
                    type: string
                    x-linode-cli-display: 9
                  ssl_key:
                    description: >-
                      The PEM-formatted private key for the SSL certificate set
                      in the `ssl_cert` field.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      The contents of this field will not be shown in any
                      responses that display

                      the NodeBalancerConfig. Instead, `<REDACTED>` will be
                      printed where the field

                      appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig

                      response are automatically derived from your certificate.
                      Please refer to these fields to

                      verify that the appropriate certificate was assigned to
                      your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-key
                    nullable: true
                    type: string
                  stickiness:
                    default: none
                    description: >-
                      Controls how session stickiness is handled on this port.

                      - If set to `none`, connections are always assigned a
                      backend based on the algorithm configured.

                      - If set to `table`, sessions from the same remote address
                      are routed to the same backend.

                      - For HTTP or HTTPS clients, `http_cookie` allows sessions
                      to be routed to the same backend based on a cookie set by
                      the NodeBalancer.
                    enum:
                      - none
                      - table
                      - http_cookie
                    example: http_cookie
                    type: string
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-config-cli.yaml
          description: The requested NodeBalancer config.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: Get a config
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers config-view \
                12345 4567
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: config-view
      x-linode-grant: read_only
    put:
      description: >-
        Updates the configuration for a single port on a NodeBalancer.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP. __CLI: HTTPS__.

            ```
            linode-cli nodebalancers config-update \
          12345 4567 \
          --port 443 \
          --protocol https \
          --algorithm roundrobin \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --check_passive true \
          --proxy_protocol "none" \
          --ssl_cert "-----BEGIN CERTIFICATE-----
                      CERTIFICATE_INFORMATION
                      -----END CERTIFICATE-----" \
          --ssl_key "-----BEGIN PRIVATE KEY-----
                     PRIVATE_KEY_INFORMATION
                     -----END PRIVATE KEY-----" \
          --cipher_suite recommended
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: UDP__.

            ```
            linode-cli nodebalancers config-update \
          12345 4567 \
          --port 80 \
          --protocol udp \
          --algorithm ring_hash \
          --stickiness session \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --udp_check_port 80
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: TCP__.

            ```
            linode-cli nodebalancers config-update \
          12345 4567 \
          --port 80 \
          --protocol tcp \
          --algorithm roundrobin \
          --stickiness none \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --proxy_protocol "v2"
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: HTTP__.

            ```
            linode-cli nodebalancers config-update \
          12345 4567 \
          --port 440 \
          --protocol http \
          --algorithm roundrobin \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works"
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/put-node-balancer-config
      operationId: put-node-balancer-config
      requestBody:
        content:
          application/json:
            schema:
              description: NodeBalancer `config` options for each protocol.
              oneOf:
                - additionalProperties: false
                  description: >-
                    __Beta__ A NodeBalancer configuration defines the protocol
                    and settings for a specific port on the NodeBalancer. These
                    fields apply to UDP configurations.
                  properties:
                    algorithm:
                      default: roundrobin
                      description: >-
                        The algorithm this UDP NodeBalancer uses to route
                        traffic to backends.
                      enum:
                        - roundrobin
                        - leastconn
                        - ring_hash
                      example: leastconn
                      type: string
                      x-linode-cli-display: 4
                    check:
                      default: none
                      description: >-
                        The type of check to perform against backends to ensure
                        they're serving requests. This determines if backends
                        are up or down.


                        - If `none`, no check is performed.

                        - `connection` requires only a connection to the backend
                        to succeed.

                        - `http` and `http_body` rely on the backend serving
                        HTTP, and that the response returned matches what is
                        expected.
                      enum:
                        - none
                        - connection
                        - http
                        - http_body
                      example: http_body
                      type: string
                    check_attempts:
                      default: 3
                      description: >-
                        How many times to attempt a check before considering a
                        backend to be down.
                      example: 3
                      maximum: 30
                      minimum: 1
                      type: integer
                    check_body:
                      description: >-
                        This value must be present in the check's response body
                        for it to pass. Otherwise the backend is considered to
                        be down.
                      example: it works
                      type: string
                    check_interval:
                      default: 5
                      description: >-
                        Number of seconds between checks to verify that backends
                        are up and serving requests.


                        Must be greater than `check_timeout`.
                      example: 90
                      maximum: 3600
                      minimum: 2
                      type: integer
                    check_passive:
                      description: __Read-only__ Must be `false` for UDP.
                      example: false
                      readOnly: true
                      type: boolean
                      x-linode-cli-display: 8
                    check_path:
                      description: >-
                        The URL path to check on each backend. If the backend
                        does not respond to this request, it's considered to be
                        down.
                      example: /test
                      pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                      type: string
                    check_timeout:
                      default: 30
                      description: >-
                        Number of seconds to wait for a check attempt before
                        considering it failed.


                        Must be less than `check_interval`.
                      example: 10
                      maximum: 30
                      minimum: 1
                      type: integer
                    cipher_suite:
                      description: __Read-only__ Not applicable for UDP configs.
                      example: none
                      readOnly: true
                      type: string
                      x-linode-cli-color:
                        default_: white
                        legacy: red
                      x-linode-cli-display: 7
                    id:
                      description: __Read-only__ This config's unique ID.
                      example: 7000
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    nodebalancer_id:
                      description: >-
                        __Read-only__ The ID for the NodeBalancer this config
                        belongs to.
                      example: 12345
                      readOnly: true
                      type: integer
                    nodes_status:
                      additionalProperties: false
                      description: >-
                        __Read-only__ Describes the health of the backends for
                        this port. This data updates periodically as checks are
                        performed against backends.
                      properties:
                        down:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `DOWN` and unhealthy.  These aren't in rotation,
                            and aren't serving requests.
                          example: 0
                          readOnly: true
                          type: integer
                        up:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `UP` and healthy, currently serving requests.
                          example: 4
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                      x-linode-cli-display: 11
                    port:
                      default: 80
                      description: >-
                        This is the port the NodeBalancer listens on for this
                        configuration. Port numbers must be unique across TCP,
                        HTTP, and HTTPS configurations on a single NodeBalancer.
                        However, ports assigned to TCP, HTTP, or HTTPS
                        configurations can also be reused for UDP
                        configurations. For example, Port 80 can simultaneously
                        serve a TCP and a UDP configuration on the same
                        NodeBalancer, but it can't be shared by both a TCP and
                        an HTTP configuration. Although certain ports are
                        traditionally assigned specific protocols, this isn't
                        strictly enforced, and you may configure your
                        NodeBalancer however you find useful.
                      example: 5795
                      maximum: 65535
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 2
                    protocol:
                      default: http
                      description: >-
                        The protocol the port is configured to serve, `udp` in
                        this case.


                        Review our guide on [Available
                        Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                        for information on protocol features.
                      enum:
                        - udp
                      example: udp
                      type: string
                      x-linode-cli-display: 3
                    proxy_protocol:
                      description: __Read-only__ Must be `none` for UDP.
                      example: none
                      readOnly: true
                      type: string
                    ssl_cert:
                      description: __Read-only__ Not applicable for UDP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    ssl_commonname:
                      description: __Read-only__ Not applicable for UPD configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 9
                    ssl_fingerprint:
                      description: __Read-only__ Not applicable for UDP configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 10
                    ssl_key:
                      description: __Read-only__ Not applicable for UDP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    stickiness:
                      default: session
                      description: >-
                        Controls how session stickiness is handled on this port:


                        - If set to `none`, connections are assigned a back-end
                        server based on the algorithm configured.

                        - If set to `session`, all packets with the same session
                        identifiers are routed to the same backend server. Two
                        packets are considered part of the same session if they
                        share the same source and destination IP addresses or
                        ports, and are received within a short time window.

                        - If set to `source_ip`, the NodeBalancer uses the
                        client's source IP address to route all packets from the
                        same client to the same backend server.
                      enum:
                        - none
                        - session
                        - source_ip
                      example: none
                      type: string
                      x-linode-cli-display: 5
                    udp_check_port:
                      default: 80
                      description: >-
                        UDP NodeBalancers use TCP and HTTP active health checks
                        to ensure back-end nodes can receive traffic. You can
                        specify the health check port that the backend node
                        listens on, which may differ from the UDP port used to
                        serve traffic.
                      example: 5795
                      maximum: 65535
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 6
                    udp_session_timeout:
                      default: 16
                      description: >-
                        __Read-only__ The maximum number of seconds a UDP
                        session can be idle before it's closed.
                      example: 2
                      maximum: 300
                      minimum: 1
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 12
                  title: UDP
                  type: object
                  x-akamai:
                    file-path: schemas/config-udp.yaml
                    status: BETA
                - additionalProperties: false
                  description: >-
                    A NodeBalancer configuration defines the protocol and
                    settings for a specific port on the NodeBalancer. These
                    fields apply to TCP configurations.
                  properties:
                    algorithm:
                      default: roundrobin
                      description: >-
                        The algorithm this TCP NodeBalancer uses to route
                        traffic to backends.
                      enum:
                        - roundrobin
                        - leastconn
                        - source
                      example: leastconn
                      type: string
                      x-linode-cli-display: 4
                    check:
                      default: none
                      description: >-
                        The type of check to perform against backends to ensure
                        they are serving requests. The `check` is used to
                        determine if backends are up or down.


                        - Setting this to `none` skips the check.

                        - `connection` requires only a connection to the backend
                        to succeed.

                        - `http` and `http_body` rely on the backend serving
                        HTTP, and that the response returned matches what is
                        expected.
                      enum:
                        - none
                        - connection
                        - http
                        - http_body
                      example: http_body
                      type: string
                    check_attempts:
                      default: 3
                      description: >-
                        How many times to attempt a check before considering a
                        backend to be down.
                      example: 3
                      maximum: 30
                      minimum: 1
                      type: integer
                    check_body:
                      description: >-
                        This value must be present in the response body of the
                        check in order for it to pass. If this value is not
                        present in the response body of a check request, the
                        backend is considered to be down.
                      example: it works
                      type: string
                    check_interval:
                      default: 5
                      description: >-
                        Number of seconds between checks to verify that backends
                        are up and serving requests.


                        Must be greater than `check_timeout`.
                      example: 90
                      maximum: 3600
                      minimum: 2
                      type: integer
                    check_passive:
                      default: true
                      description: >-
                        If `true`, any response from this backend with a `5xx`
                        status code will be enough for it to be considered
                        unhealthy and taken out of rotation.
                      example: true
                      type: boolean
                      x-linode-cli-display: 6
                    check_path:
                      description: >-
                        The URL path to check on each backend. If the backend
                        does not respond to this request it is considered to be
                        down.
                      example: /test
                      pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                      type: string
                    check_timeout:
                      default: 30
                      description: >-
                        Number of seconds to wait for a check attempt before
                        considering it failed.


                        Must be less than `check_interval`.
                      example: 10
                      maximum: 30
                      minimum: 1
                      type: integer
                    cipher_suite:
                      description: __Read-only__ Not applicable for TCP configs.
                      example: none
                      readOnly: true
                      type: string
                      x-linode-cli-color:
                        default_: white
                        legacy: red
                      x-linode-cli-display: 7
                    id:
                      description: __Read-only__ This config's unique ID.
                      example: 6000
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    nodebalancer_id:
                      description: >-
                        __Read-only__ The ID for the NodeBalancer this config
                        belongs to.
                      example: 12345
                      readOnly: true
                      type: integer
                    nodes_status:
                      additionalProperties: false
                      description: >-
                        __Read-only__ Describes the health of the backends for
                        this port. This data updates periodically as checks are
                        performed against backends.
                      properties:
                        down:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `DOWN` and unhealthy.  These aren't in rotation,
                            and aren't serving requests.
                          example: 0
                          readOnly: true
                          type: integer
                        up:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `UP` and healthy, currently serving requests.
                          example: 4
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                      x-linode-cli-display: 10
                    port:
                      default: 80
                      description: >-
                        This is the port the NodeBalancer listens on for this
                        configuration. Port numbers must be unique across TCP,
                        HTTP, and HTTPS configurations on a single NodeBalancer.
                        However, ports assigned to TCP, HTTP, or HTTPS
                        configurations can also be reused for UDP
                        configurations. For example, Port 80 can simultaneously
                        serve a TCP and a UDP configuration on the same
                        NodeBalancer, but it can't be shared by both a TCP and
                        an HTTP configuration. Although certain ports are
                        traditionally assigned specific protocols, this isn't
                        strictly enforced, and you may configure your
                        NodeBalancer however you find useful.
                      example: 22
                      maximum: 65535
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 2
                    protocol:
                      default: http
                      description: >-
                        The protocol the port is configured to serve, `tcp` in
                        this case.


                        Review our guide on [Available
                        protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                        for information on protocol features.
                      enum:
                        - tcp
                      example: tcp
                      type: string
                      x-linode-cli-display: 3
                    proxy_protocol:
                      default: none
                      description: >-
                        Proxy protocol is a TCP extension that sends initial TCP
                        connection information such as source or destination IPs
                        and ports to backend devices. Proxy protocol preserves
                        initial TCP information that would be lost otherwise.
                        Backend devices must be configured to work with
                        `proxy_protocol` if enabled.


                        - If omitted, or set to `none`, the NodeBalancer doesn't
                        send any auxiliary data over TCP connections. This is
                        the default.

                        - If set to `v1`, the human-readable header format
                        (Version 1) is used. Requires `tcp` protocol.

                        - If set to `v2`, the binary header format (Version 2)
                        is used. Requires `tcp` protocol.
                      enum:
                        - none
                        - v1
                        - v2
                      example: none
                      type: string
                    ssl_cert:
                      description: __Read-only__ Not applicable for TCP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    ssl_commonname:
                      description: __Read-only__ Not applicable for TCP configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 8
                    ssl_fingerprint:
                      description: __Read-only__ Not applicable for TCP configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 9
                    ssl_key:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    stickiness:
                      default: none
                      description: >-
                        __Read-only__ Controls how session stickiness is handled
                        on this port:


                        - If set to `none`, connections will always be assigned
                        a backend based on the algorithm configured.

                        - If set to `table`, sessions from the same remote
                        address will be routed to the same backend.
                      enum:
                        - none
                        - table
                      example: none
                      readOnly: true
                      type: string
                      x-linode-cli-display: 5
                  title: TCP
                  type: object
                  x-akamai:
                    file-path: schemas/config-tcp.yaml
                - additionalProperties: false
                  description: >-
                    A NodeBalancer configuration defines the protocol and
                    settings for a specific port on the NodeBalancer. These
                    fields apply to HTTP configurations.
                  properties:
                    algorithm:
                      default: roundrobin
                      description: >-
                        The algorithm this HTTP NodeBalancer uses for routing
                        traffic to backends.
                      enum:
                        - roundrobin
                        - leastconn
                        - source
                      example: roundrobin
                      type: string
                      x-linode-cli-display: 4
                    check:
                      default: none
                      description: >-
                        The type of check to perform against backends to ensure
                        they're serving requests. This determines if backends
                        are up or down.


                        - If `none`, no check is performed.

                        - `connection` requires only a connection to the backend
                        to succeed.

                        - `http` and `http_body` rely on the backend serving
                        HTTP, and that the response returned matches what is
                        expected.
                      enum:
                        - none
                        - connection
                        - http
                        - http_body
                      example: http_body
                      type: string
                    check_attempts:
                      default: 3
                      description: >-
                        How many times to attempt a check before considering a
                        backend to be down.
                      example: 3
                      maximum: 30
                      minimum: 1
                      type: integer
                    check_body:
                      description: >-
                        Use when the active health `check` type is `http_body`.
                        This value must be present in the response body of the
                        check in order for it to pass. If this value is not
                        present in the response body of a check request, the
                        backend is considered to be down.
                      example: it works
                      type: string
                    check_interval:
                      default: 5
                      description: >-
                        Number of seconds between checks to verify that backends
                        are up and serving requests.


                        Must be greater than `check_timeout`.
                      example: 90
                      maximum: 3600
                      minimum: 2
                      type: integer
                    check_passive:
                      default: true
                      description: >-
                        If `true`, any response from this backend with a `5xx`
                        status code will be enough for it to be considered
                        unhealthy and taken out of rotation.
                      example: true
                      type: boolean
                      x-linode-cli-display: 6
                    check_path:
                      description: >-
                        The URL path to check on each backend. Use when the
                        active health `check` type is `http`. If the backend
                        doesn't respond to this request, it's considered to be
                        down.
                      example: /test
                      pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                      type: string
                    check_timeout:
                      default: 3
                      description: >-
                        Number of seconds to wait for a check attempt before
                        considering it failed.


                        Must be less than `check_interval`.
                      example: 10
                      maximum: 30
                      minimum: 1
                      type: integer
                    cipher_suite:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: recommended
                      readOnly: true
                      type: string
                      x-linode-cli-color:
                        default_: white
                        legacy: red
                      x-linode-cli-display: 7
                    id:
                      description: __Read-only__ This config's unique ID.
                      example: 4000
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    nodebalancer_id:
                      description: >-
                        __Read-only__ Identifies the NodeBalancer this config
                        belongs to.
                      example: 12345
                      readOnly: true
                      type: integer
                    nodes_status:
                      additionalProperties: false
                      description: >-
                        __Read-only__ Describes the health of the backends for
                        this port. This data updates periodically as checks are
                        performed against backends.
                      properties:
                        down:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `DOWN` and unhealthy.  These aren't in rotation,
                            and aren't serving requests.
                          example: 0
                          readOnly: true
                          type: integer
                        up:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `UP` and healthy, currently serving requests.
                          example: 4
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                      x-linode-cli-display: 10
                    port:
                      default: 80
                      description: >-
                        This is the port the NodeBalancer listens on for this
                        configuration. Port numbers need to be unique across
                        TCP, HTTP, and HTTPS configurations on a single
                        NodeBalancer. However, ports assigned to TCP, HTTP, or
                        HTTPS configurations can also be reused for UDP
                        configurations. For example, Port 80 can simultaneously
                        serve a TCP and a UDP configuration on the same
                        NodeBalancer, but it can't be shared by both a TCP and
                        an HTTP configuration. Although certain ports are
                        traditionally assigned specific protocols, this isn't
                        strictly enforced. You may configure your NodeBalancer
                        however you find useful.
                      example: 80
                      maximum: 65535
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 2
                    protocol:
                      default: http
                      description: >-
                        The protocol the port is configured to serve, `http` in
                        this case.


                        Review our guide on [Available
                        protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                        for information on protocol features.
                      enum:
                        - http
                      example: http
                      type: string
                      x-linode-cli-display: 3
                    proxy_protocol:
                      default: none
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: none
                      readOnly: true
                      type: string
                    ssl_cert:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    ssl_commonname:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 8
                    ssl_fingerprint:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: ''
                      readOnly: true
                      type: string
                      x-linode-cli-display: 9
                    ssl_key:
                      description: __Read-only__ Not applicable for HTTP configs.
                      example: null
                      nullable: true
                      readOnly: true
                      type: string
                    stickiness:
                      default: table
                      description: >-
                        Controls how session stickiness is handled on this port:


                        - If set to `none`, connections will always be assigned
                        a backend based on the algorithm configured.

                        - If set to `table`, sessions from the same remote
                        address will be routed to the same backend.

                        - If set to `http_cookie`, sessions are routed to the
                        same backend based on a cookie set by the NodeBalancer.
                      enum:
                        - none
                        - table
                        - http_cookie
                      example: http_cookie
                      type: string
                      x-linode-cli-display: 5
                  title: HTTP
                  type: object
                  x-akamai:
                    file-path: schemas/config-http.yaml
                - additionalProperties: false
                  description: >-
                    A NodeBalancer configuration defines the protocol and
                    settings for a specific port on the NodeBalancer. These
                    fields apply to HTTPS configurations.
                  properties:
                    algorithm:
                      default: roundrobin
                      description: >-
                        The algorithm this HTTPS NodeBalancer uses for routing
                        traffic to backends.
                      enum:
                        - roundrobin
                        - leastconn
                        - source
                      example: roundrobin
                      type: string
                      x-linode-cli-display: 4
                    check:
                      default: none
                      description: >-
                        The type of check to perform against backends to ensure
                        they are serving requests. The `check` is used to
                        determine if backends are up or down.


                        - Setting this to `none` skips the check.

                        - `connection` requires only a connection to the backend
                        to succeed.

                        - `http` and `http_body` rely on the backend serving
                        HTTP, and that the response returned matches what is
                        expected.
                      enum:
                        - none
                        - connection
                        - http
                        - http_body
                      example: http_body
                      type: string
                    check_attempts:
                      default: 3
                      description: >-
                        How many times to attempt a check before considering a
                        backend to be down.
                      example: 3
                      maximum: 30
                      minimum: 1
                      type: integer
                    check_body:
                      description: >-
                        Use when the active health `check` type is `http_body`.
                        This value must be present in the response body of the
                        check in order for it to pass. If this value is not
                        present in the response body of a check request, the
                        backend is considered to be down.
                      example: it works
                      type: string
                    check_interval:
                      default: 5
                      description: >-
                        Number of seconds between checks to verify that backends
                        are up and serving requests.


                        Must be greater than `check_timeout`.
                      example: 90
                      maximum: 3600
                      minimum: 2
                      type: integer
                    check_passive:
                      default: true
                      description: >-
                        If `true`, any response from this backend with a `5xx`
                        status code will be enough for it to be considered
                        unhealthy and taken out of rotation.
                      example: true
                      type: boolean
                      x-linode-cli-display: 6
                    check_path:
                      description: >-
                        The URL path to check on each backend. Use when the
                        active health `check` type is `http`. If the backend
                        doesn't respond to this request, it's considered to be
                        down.
                      example: /test
                      pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                      type: string
                    check_timeout:
                      default: 3
                      description: >-
                        Number of seconds to wait for a check attempt before
                        considering it failed.


                        Must be less than `check_interval`.
                      example: 10
                      maximum: 30
                      minimum: 1
                      type: integer
                    cipher_suite:
                      default: recommended
                      description: >-
                        What ciphers to use for SSL connections served by this
                        NodeBalancer.


                        - `legacy` is considered insecure and should only be
                        used if necessary.
                      enum:
                        - recommended
                        - legacy
                      example: recommended
                      type: string
                      x-linode-cli-color:
                        default_: white
                        legacy: red
                      x-linode-cli-display: 7
                    id:
                      description: __Read-only__ This config's unique ID.
                      example: 5000
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    nodebalancer_id:
                      description: >-
                        __Read-only__ The ID for the NodeBalancer this config
                        belongs to.
                      example: 12345
                      readOnly: true
                      type: integer
                    nodes_status:
                      additionalProperties: false
                      description: >-
                        __Read-only__ Describes the health of the backends for
                        this port. This data updates periodically as checks are
                        performed against backends.
                      properties:
                        down:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `DOWN` and unhealthy.  These aren't in rotation,
                            and aren't serving requests.
                          example: 0
                          readOnly: true
                          type: integer
                        up:
                          description: >-
                            __Read-only__ The number of backends considered to
                            be `UP` and healthy, currently serving requests.
                          example: 4
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                      x-linode-cli-display: 10
                    port:
                      default: 80
                      description: >-
                        This is the port the NodeBalancer listens on for this
                        configuration. Port numbers must be unique across TCP,
                        HTTP, and HTTPS configurations on a single NodeBalancer.
                        However, ports assigned to TCP, HTTP, or HTTPS
                        configurations can also be reused for UDP
                        configurations. For example, Port 80 can simultaneously
                        serve a TCP and a UDP configuration on the same
                        NodeBalancer, but it can't be shared by both a TCP and
                        an HTTP configuration. Although certain ports are
                        traditionally assigned specific protocols, this isn't
                        strictly enforced, and you may configure your
                        NodeBalancer however you find useful.
                      example: 443
                      maximum: 65535
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 2
                    protocol:
                      default: http
                      description: >-
                        The protocol the port is configured to serve, `https` in
                        this case.


                        - The `https` protocol is mutually required with
                        `ssl_cert` and `ssl_key`.


                        Review our guide on [Available
                        protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                        for information on protocol features.
                      enum:
                        - https
                      example: https
                      type: string
                      x-linode-cli-display: 3
                    proxy_protocol:
                      default: none
                      description: __Read-only__ Not applicable for HTTPS configs.
                      example: none
                      readOnly: true
                      type: string
                    ssl_cert:
                      description: >-
                        The PEM-formatted public SSL certificate (or the
                        combined PEM-formatted SSL certificate and Certificate
                        Authority chain) that should be served on this
                        NodeBalancerConfig's port.


                        Line breaks must be represented as `\n` in the string
                        for requests (but not when using the Linode CLI).


                        [Diffie-Hellman
                        Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                        can be included in this value to enable forward secrecy.


                        The contents of this field will not be shown in any
                        responses that display the NodeBalancerConfig. Instead,
                        `<REDACTED>` will be printed where the field appears.


                        The read-only `ssl_commonname` and `ssl_fingerprint`
                        fields in a NodeBalancerConfig response are
                        automatically derived from your certificate. Please
                        refer to these fields to verify that the appropriate
                        certificate was assigned to your NodeBalancerConfig.
                      example: <REDACTED>
                      format: ssl-cert
                      nullable: true
                      type: string
                    ssl_commonname:
                      description: >-
                        __Read-only__ The read-only common name automatically
                        derived from the SSL certificate assigned to this
                        NodeBalancerConfig. Please refer to this field to verify
                        that the appropriate certificate is assigned to your
                        NodeBalancerConfig.
                      example: www.example.com
                      readOnly: true
                      type: string
                      x-linode-cli-display: 8
                    ssl_fingerprint:
                      description: >-
                        __Read-only__ The read-only SHA1-encoded fingerprint
                        automatically derived from the SSL certificate assigned
                        to this NodeBalancer configuration. Please refer to the
                        `ssl_fingerprint` field to verify that the appropriate
                        certificate is assigned to your NodeBalancer
                        configuration.
                      example: >-
                        00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                      readOnly: true
                      type: string
                      x-linode-cli-display: 9
                    ssl_key:
                      description: >-
                        The PEM-formatted private key for the SSL certificate
                        set in the `ssl_cert` field.


                        Line breaks must be represented as `\n` in the string
                        for requests (but not when using the Linode CLI).


                        The contents of this field will not be shown in any
                        responses that display the NodeBalancerConfig. Instead,
                        `<REDACTED>` will be printed where the field appears.


                        The read-only `ssl_commonname` and `ssl_fingerprint`
                        fields in a NodeBalancerConfig response are
                        automatically derived from your certificate. Please
                        refer to these fields to verify that the appropriate
                        certificate was assigned to your NodeBalancerConfig.
                      example: <REDACTED>
                      format: ssl-key
                      nullable: true
                      type: string
                    stickiness:
                      default: table
                      description: >-
                        Controls how session stickiness is handled on this port:


                        - If set to `none`, connections will always be assigned
                        a backend based on the algorithm configured.

                        - If set to `table`, sessions from the same remote
                        address will be routed to the same backend.

                        - For HTTP or HTTPS clients, `http_cookie` allows
                        sessions to be routed to the same backend based on a
                        cookie set by the NodeBalancer.
                      enum:
                        - none
                        - table
                        - http_cookie
                      example: http_cookie
                      type: string
                      x-linode-cli-display: 5
                  title: HTTPS
                  type: object
                  x-akamai:
                    file-path: schemas/config-https.yaml
              type: object
              x-akamai:
                file-path: schemas/config-protocol.yaml
            x-example:
              x-ref: ../examples/put-node-balancer-config.json
            x-linode-cli-use-schema:
              additionalProperties: false
              properties:
                algorithm:
                  default: roundrobin
                  description: >-
                    The algorithm this NodeBalancer should use to route traffic
                    to backends.

                    - If set to `roundrobin`, connections are allocated in a
                    weighted circular order across the backends.

                    - If set to `leastconn`, allocates new connections to the
                    backend with the least connections.

                    - If set to `source`, allocates the client's IP to the same
                    backend on subsequent requests. Session `stickiness` affects
                    this algorithm.
                  enum:
                    - roundrobin
                    - leastconn
                    - source
                  example: roundrobin
                  type: string
                  x-linode-cli-display: 4
                check:
                  default: none
                  description: >-
                    The type of check to perform against backends to ensure
                    they're serving requests. This determines if backends are up
                    or down.

                    - If `none`, no check is performed.

                    - If `connection`, requires a successful TCP handshake with
                    a backend node.

                    - If `http`, requires a 2xx or 3xx response from the backend
                    node.

                    - If `http_body`, requires the provided regular expression
                    matches against the request's result body.
                  enum:
                    - none
                    - connection
                    - http
                    - http_body
                  example: http_body
                  type: string
                check_attempts:
                  default: 3
                  description: >-
                    How many times to attempt a check before considering a
                    backend to be down.
                  example: 3
                  maximum: 30
                  minimum: 1
                  type: integer
                check_body:
                  description: >-
                    The check's response body needs to include this value for it
                    to pass. Otherwise the backend is identified as being down.
                  example: it works
                  type: string
                check_interval:
                  default: 31
                  description: >-
                    How often, in seconds, to check that backends are up and
                    serving requests.


                    Must be greater than `check_timeout`.
                  example: 90
                  type: integer
                check_passive:
                  default: true
                  description: >-
                    If `true`, any response from this backend with a `5xx`
                    status code will be enough for it to be considered unhealthy
                    and taken out of rotation.
                  example: true
                  type: boolean
                  x-linode-cli-display: 6
                check_path:
                  description: >-
                    The URL path to check on each backend. If the backend
                    doesn't respond to this request it's considered to be down.
                  example: /test
                  pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                  type: string
                check_timeout:
                  default: 30
                  description: >-
                    How long, in seconds, to wait for a check attempt before
                    considering it failed. Must be less than `check_interval`.
                  example: 10
                  maximum: 30
                  minimum: 1
                  type: integer
                cipher_suite:
                  default: recommended
                  description: >-
                    What ciphers to use for SSL connections served by this
                    NodeBalancer. The `legacy` cipher is considered insecure and
                    should only be used if necessary. For information on
                    recommended and legacy ciphers, see [TLS cipher
                    suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                  enum:
                    - recommended
                    - legacy
                  example: recommended
                  type: string
                  x-linode-cli-color:
                    default_: white
                    legacy: red
                  x-linode-cli-display: 7
                id:
                  description: __Read-only__ This config's unique ID.
                  example: 4567
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                nodebalancer_id:
                  description: >-
                    __Read-only__ Identifies the NodeBalancer this config
                    belongs to.
                  example: 12345
                  readOnly: true
                  type: integer
                nodes_status:
                  additionalProperties: false
                  description: >-
                    __Read-only__ Information about the health of the backends
                    for this port.  It's updated periodically as checks are
                    performed against backends.
                  properties:
                    down:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        `DOWN` and unhealthy.  These are not in rotation, and
                        not serving requests.
                      example: 0
                      readOnly: true
                      type: integer
                    up:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        `UP` and healthy, and that are serving requests.
                      example: 4
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                  x-linode-cli-display: 10
                port:
                  default: 80
                  description: >-
                    The port for this config. Ports need to be unique across
                    configs for each NodeBalancer. For example, you can't have
                    two configs for port 80.  While some protocols are typically
                    assigned specific ports, there's no enforcement, and you can
                    configure your NodeBalancer however you find useful. For
                    example, while port 443 is generally used for HTTPS, you
                    don't need SSL configured to have a NodeBalancer listening
                    on port 443.
                  example: 80
                  maximum: 65535
                  minimum: 1
                  type: integer
                  x-linode-cli-display: 2
                protocol:
                  default: http
                  description: >-
                    The protocol this port is configured to serve.


                    - The `http` and `tcp` protocols don't support `ssl_cert`
                    and `ssl_key`.


                    - For the `https` protocol, you need `ssl_cert` and
                    `ssl_key`.


                    Review our guide on [Available
                    Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                    for information on protocol features.
                  enum:
                    - http
                    - https
                    - tcp
                  example: http
                  type: string
                  x-linode-cli-display: 3
                proxy_protocol:
                  default: none
                  description: >-
                    ProxyProtocol is a TCP extension that sends initial TCP
                    connection information such as source IPs, destination IPs,
                    and ports to backend devices. This information would be lost
                    otherwise. Backend devices must be configured to work with
                    ProxyProtocol if enabled.


                    - If omitted or set to `none`, the NodeBalancer doesn't send
                    any auxiliary data over TCP connections. The default is
                    `none`.

                    - If set to `v1`, the human-readable header format (Version
                    1) is used. Requires `tcp` protocol.

                    - If set to `v2`, the binary header format (Version 2) is
                    used. Requires `tcp` protocol.
                  enum:
                    - none
                    - v1
                    - v2
                  example: none
                  type: string
                ssl_cert:
                  description: >-
                    The PEM-formatted public SSL certificate (or the combined
                    PEM-formatted SSL certificate and Certificate Authority
                    chain) that should be served on this NodeBalancer config's
                    port.


                    Line breaks must be represented as `\n` in the string for
                    API requests, but not when using the Linode CLI.


                    You can include [Diffie-Hellman
                    parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                    in this value to enable forward secrecy.


                    The provided field don't appear in any responses that
                    display the NodeBalancer config. It's replaced with
                    `<REDACTED>`.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancer config response are automatically derived
                    from your certificate. Please refer to these fields to
                    verify that the appropriate certificate was assigned to your
                    config.
                  example: <REDACTED>
                  format: ssl-cert
                  nullable: true
                  type: string
                ssl_commonname:
                  description: >-
                    __Read-only__ The read-only common name automatically
                    derived from the SSL certificate assigned to this
                    NodeBalancer config. Please refer to this field to verify
                    that the appropriate certificate is assigned to your config.
                  example: www.example.com
                  readOnly: true
                  type: string
                  x-linode-cli-display: 8
                ssl_fingerprint:
                  description: >-
                    __Read-only__ The read-only SHA1-encoded fingerprint
                    automatically derived from the SSL certificate assigned to
                    this NodeBalancer configuration. You can use the
                    `ssl_fingerprint` field to verify that the appropriate
                    certificate is assigned to your NodeBalancer configuration.
                  example: 00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                  readOnly: true
                  type: string
                  x-linode-cli-display: 9
                ssl_key:
                  description: >-
                    The PEM-formatted private key for the SSL certificate set in
                    the `ssl_cert` field.


                    Line breaks must be represented as `\n` in the string for
                    API requests, but not when using the Linode CLI.


                    The contents of this field will not be shown in any
                    responses that display

                    the NodeBalancerConfig. Instead, `<REDACTED>` will be
                    printed where the field

                    appears.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancerConfig

                    response are automatically derived from your certificate.
                    Please refer to these fields to

                    verify that the appropriate certificate was assigned to your
                    NodeBalancerConfig.
                  example: <REDACTED>
                  format: ssl-key
                  nullable: true
                  type: string
                stickiness:
                  default: none
                  description: >-
                    Controls how session stickiness is handled on this port.

                    - If set to `none`, connections are always assigned a
                    backend based on the algorithm configured.

                    - If set to `table`, sessions from the same remote address
                    are routed to the same backend.

                    - For HTTP or HTTPS clients, `http_cookie` allows sessions
                    to be routed to the same backend based on a cookie set by
                    the NodeBalancer.
                  enum:
                    - none
                    - table
                    - http_cookie
                  example: http_cookie
                  type: string
                  x-linode-cli-display: 5
              type: object
              x-akamai:
                file-path: schemas/node-balancer-config-cli.yaml
        description: The fields to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: NodeBalancer `config` options for each protocol.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer configuration defines the protocol
                      and settings for a specific port on the NodeBalancer.
                      These fields apply to UDP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this UDP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - ring_hash
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value isn't
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        description: __Read-only__ Must be `false` for UDP.
                        example: false
                        readOnly: true
                        type: boolean
                        x-linode-cli-display: 7
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `udp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 7000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `udp` in
                          this case. Review our guide on [Available
                          Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                          for information on protocol features.
                        enum:
                          - udp
                        example: udp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        description: __Read-only__ Must be `none` for UDP.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for UPD configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: session
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are assigned a backend
                          server based on the algorithm configured.

                          - If set to `session`, all packets with the same
                          session identifiers are routed to the same backend
                          server. Two packets are considered part of the same
                          session if they share the same source and destination
                          IP addresses or ports, and are received within a short
                          time window.

                          - If set to `source_ip`, the NodeBalancer uses the
                          client's source IP address to route all packets from
                          the same client to the same backend server.
                        enum:
                          - none
                          - session
                          - source_ip
                        example: none
                        type: string
                        x-linode-cli-display: 5
                      udp_check_port:
                        default: 80
                        description: >-
                          UDP NodeBalancers use TCP and HTTP active health
                          checks to ensure back-end nodes can receive traffic.
                          You can specify the health check port that the backend
                          node listens on, which may differ from the UDP port
                          used to serve traffic.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 6
                      udp_session_timeout:
                        default: 16
                        description: >-
                          __Read-only__ The maximum duration in seconds, a UDP
                          session can be idle before it is closed.
                        example: 2
                        maximum: 300
                        minimum: 1
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 11
                    required:
                      - nodes
                    title: UDP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-udp-response.yaml
                      status: BETA
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to TCP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this TCP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value is not
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code is enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `tcp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 6000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 22
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `tcp` in
                          this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - tcp
                        example: tcp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: >-
                          Proxy protocol is a TCP extension that sends initial
                          TCP connection information such as source or
                          destination IPs and ports to backend devices. Proxy
                          protocol preserves initial TCP information that would
                          be lost otherwise. Backend devices must be configured
                          to work with `proxy_protocol` if enabled.


                          - If omitted, or set to `none`, the NodeBalancer
                          doesn't send any auxiliary data over TCP connections.
                          This is the default.

                          - If set to `v1`, the human-readable header format
                          (Version 1) is used. Requires `tcp` protocol.

                          - If set to `v2`, the binary header format (Version 2)
                          is used. Requires `tcp` protocol.
                        enum:
                          - none
                          - v1
                          - v2
                        example: none
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: none
                        description: >-
                          __Read-only__ Controls how session stickiness is
                          handled on this port.


                          Not applicable to TCP configurations.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: TCP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-tcp-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTP NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value needs to be in the response
                          body of the check in order for it to pass. Otherwise
                          the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `http` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 4000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ Identifies the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers need to be unique across
                          TCP, HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced. You may
                          configure your NodeBalancer however you find useful.
                        example: 80
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `http`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - http
                        example: http
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are always assigned a
                          backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address are routed to the same backend.

                          - If set to `http_cookie`, sessions are routed to the
                          same backend based on a cookie set by the
                          NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-http-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTPS configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTPS NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. The `check` is used
                          to determine if backends are up or down.


                          - If `none` no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value must be present in the
                          response body of the check in order for it to pass. If
                          this value is not present in the response body of a
                          check request, the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          The number of seconds between each check that backends
                          are up and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        default: recommended
                        description: >-
                          What ciphers to use for SSL connections served by this
                          NodeBalancer. The `legacy` cipher is considered
                          insecure and should only be used if necessary. For
                          information on recommended and legacy ciphers, see
                          [TLS cipher
                          suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                        enum:
                          - recommended
                          - legacy
                        example: recommended
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 5000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 443
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `https`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features. The `https`
                          protocol needs to be specified with both `ssl_cert`
                          and `ssl_key`.
                        enum:
                          - https
                        example: https
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTPS configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: >-

                          The PEM-formatted public SSL certificate (or the
                          combined PEM-formatted SSL certificate and Certificate
                          Authority chain) that should be served on this
                          NodeBalancerConfig's port.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          [Diffie-Hellman
                          Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                          can be included in this value to enable forward
                          secrecy.


                          The contents of this field will not be shown in any
                          responses that display the NodeBalancerConfig.
                          Instead, `<REDACTED>` will be printed where the field
                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig response are
                          automatically derived from your certificate. Please
                          refer to these fields to verify that the appropriate
                          certificate was assigned to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-cert
                        nullable: true
                        type: string
                      ssl_commonname:
                        description: >-
                          __Read-only__ The read-only common name automatically
                          derived from the SSL certificate assigned to this
                          NodeBalancerConfig. Please refer to this field to
                          verify that the appropriate certificate is assigned to
                          your NodeBalancerConfig.
                        example: www.example.com
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: >-
                          __Read-only__ The read-only SHA1-encoded fingerprint
                          automatically derived from the SSL certificate
                          assigned to this NodeBalancer configuration. Please
                          refer to the `ssl_fingerprint` field to verify that
                          the appropriate certificate is assigned to your
                          NodeBalancer configuration.
                        example: >-
                          00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: >-
                          The PEM-formatted private key for the SSL certificate
                          set in the `ssl_cert` field.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          The contents of this field will not be shown in any
                          responses that display

                          the NodeBalancerConfig. Instead, `<REDACTED>` will be
                          printed where the field

                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig

                          response are automatically derived from your
                          certificate. Please refer to these fields to

                          verify that the appropriate certificate was assigned
                          to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-key
                        nullable: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections will always be
                          assigned a backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address will be routed to the same backend.

                          - For HTTP or HTTPS clients, `http_cookie` allows
                          sessions to be routed to the same backend based on a
                          cookie set by the NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTPS
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-https-response.yaml
                x-akamai:
                  file-path: schemas/node-balancer-config-response.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-config-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  algorithm:
                    default: roundrobin
                    description: >-
                      The algorithm this NodeBalancer should use to route
                      traffic to backends.

                      - If set to `roundrobin`, connections are allocated in a
                      weighted circular order across the backends.

                      - If set to `leastconn`, allocates new connections to the
                      backend with the least connections.

                      - If set to `source`, allocates the client's IP to the
                      same backend on subsequent requests. Session `stickiness`
                      affects this algorithm.
                    enum:
                      - roundrobin
                      - leastconn
                      - source
                    example: roundrobin
                    type: string
                    x-linode-cli-display: 4
                  check:
                    default: none
                    description: >-
                      The type of check to perform against backends to ensure
                      they're serving requests. This determines if backends are
                      up or down.

                      - If `none`, no check is performed.

                      - If `connection`, requires a successful TCP handshake
                      with a backend node.

                      - If `http`, requires a 2xx or 3xx response from the
                      backend node.

                      - If `http_body`, requires the provided regular expression
                      matches against the request's result body.
                    enum:
                      - none
                      - connection
                      - http
                      - http_body
                    example: http_body
                    type: string
                  check_attempts:
                    default: 3
                    description: >-
                      How many times to attempt a check before considering a
                      backend to be down.
                    example: 3
                    maximum: 30
                    minimum: 1
                    type: integer
                  check_body:
                    description: >-
                      The check's response body needs to include this value for
                      it to pass. Otherwise the backend is identified as being
                      down.
                    example: it works
                    type: string
                  check_interval:
                    default: 31
                    description: >-
                      How often, in seconds, to check that backends are up and
                      serving requests.


                      Must be greater than `check_timeout`.
                    example: 90
                    type: integer
                  check_passive:
                    default: true
                    description: >-
                      If `true`, any response from this backend with a `5xx`
                      status code will be enough for it to be considered
                      unhealthy and taken out of rotation.
                    example: true
                    type: boolean
                    x-linode-cli-display: 6
                  check_path:
                    description: >-
                      The URL path to check on each backend. If the backend
                      doesn't respond to this request it's considered to be
                      down.
                    example: /test
                    pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                    type: string
                  check_timeout:
                    default: 30
                    description: >-
                      How long, in seconds, to wait for a check attempt before
                      considering it failed. Must be less than `check_interval`.
                    example: 10
                    maximum: 30
                    minimum: 1
                    type: integer
                  cipher_suite:
                    default: recommended
                    description: >-
                      What ciphers to use for SSL connections served by this
                      NodeBalancer. The `legacy` cipher is considered insecure
                      and should only be used if necessary. For information on
                      recommended and legacy ciphers, see [TLS cipher
                      suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                    enum:
                      - recommended
                      - legacy
                    example: recommended
                    type: string
                    x-linode-cli-color:
                      default_: white
                      legacy: red
                    x-linode-cli-display: 7
                  id:
                    description: __Read-only__ This config's unique ID.
                    example: 4567
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  nodebalancer_id:
                    description: >-
                      __Read-only__ Identifies the NodeBalancer this config
                      belongs to.
                    example: 12345
                    readOnly: true
                    type: integer
                  nodes_status:
                    additionalProperties: false
                    description: >-
                      __Read-only__ Information about the health of the backends
                      for this port.  It's updated periodically as checks are
                      performed against backends.
                    properties:
                      down:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `DOWN` and unhealthy.  These are not in rotation, and
                          not serving requests.
                        example: 0
                        readOnly: true
                        type: integer
                      up:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          `UP` and healthy, and that are serving requests.
                        example: 4
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                    x-linode-cli-display: 10
                  port:
                    default: 80
                    description: >-
                      The port for this config. Ports need to be unique across
                      configs for each NodeBalancer. For example, you can't have
                      two configs for port 80.  While some protocols are
                      typically assigned specific ports, there's no enforcement,
                      and you can configure your NodeBalancer however you find
                      useful. For example, while port 443 is generally used for
                      HTTPS, you don't need SSL configured to have a
                      NodeBalancer listening on port 443.
                    example: 80
                    maximum: 65535
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 2
                  protocol:
                    default: http
                    description: >-
                      The protocol this port is configured to serve.


                      - The `http` and `tcp` protocols don't support `ssl_cert`
                      and `ssl_key`.


                      - For the `https` protocol, you need `ssl_cert` and
                      `ssl_key`.


                      Review our guide on [Available
                      Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                      for information on protocol features.
                    enum:
                      - http
                      - https
                      - tcp
                    example: http
                    type: string
                    x-linode-cli-display: 3
                  proxy_protocol:
                    default: none
                    description: >-
                      ProxyProtocol is a TCP extension that sends initial TCP
                      connection information such as source IPs, destination
                      IPs, and ports to backend devices. This information would
                      be lost otherwise. Backend devices must be configured to
                      work with ProxyProtocol if enabled.


                      - If omitted or set to `none`, the NodeBalancer doesn't
                      send any auxiliary data over TCP connections. The default
                      is `none`.

                      - If set to `v1`, the human-readable header format
                      (Version 1) is used. Requires `tcp` protocol.

                      - If set to `v2`, the binary header format (Version 2) is
                      used. Requires `tcp` protocol.
                    enum:
                      - none
                      - v1
                      - v2
                    example: none
                    type: string
                  ssl_cert:
                    description: >-
                      The PEM-formatted public SSL certificate (or the combined
                      PEM-formatted SSL certificate and Certificate Authority
                      chain) that should be served on this NodeBalancer config's
                      port.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      You can include [Diffie-Hellman
                      parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                      in this value to enable forward secrecy.


                      The provided field don't appear in any responses that
                      display the NodeBalancer config. It's replaced with
                      `<REDACTED>`.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancer config response are automatically
                      derived from your certificate. Please refer to these
                      fields to verify that the appropriate certificate was
                      assigned to your config.
                    example: <REDACTED>
                    format: ssl-cert
                    nullable: true
                    type: string
                  ssl_commonname:
                    description: >-
                      __Read-only__ The read-only common name automatically
                      derived from the SSL certificate assigned to this
                      NodeBalancer config. Please refer to this field to verify
                      that the appropriate certificate is assigned to your
                      config.
                    example: www.example.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 8
                  ssl_fingerprint:
                    description: >-
                      __Read-only__ The read-only SHA1-encoded fingerprint
                      automatically derived from the SSL certificate assigned to
                      this NodeBalancer configuration. You can use the
                      `ssl_fingerprint` field to verify that the appropriate
                      certificate is assigned to your NodeBalancer
                      configuration.
                    example: >-
                      00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                    readOnly: true
                    type: string
                    x-linode-cli-display: 9
                  ssl_key:
                    description: >-
                      The PEM-formatted private key for the SSL certificate set
                      in the `ssl_cert` field.


                      Line breaks must be represented as `\n` in the string for
                      API requests, but not when using the Linode CLI.


                      The contents of this field will not be shown in any
                      responses that display

                      the NodeBalancerConfig. Instead, `<REDACTED>` will be
                      printed where the field

                      appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig

                      response are automatically derived from your certificate.
                      Please refer to these fields to

                      verify that the appropriate certificate was assigned to
                      your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-key
                    nullable: true
                    type: string
                  stickiness:
                    default: none
                    description: >-
                      Controls how session stickiness is handled on this port.

                      - If set to `none`, connections are always assigned a
                      backend based on the algorithm configured.

                      - If set to `table`, sessions from the same remote address
                      are routed to the same backend.

                      - For HTTP or HTTPS clients, `http_cookie` allows sessions
                      to be routed to the same backend based on a cookie set by
                      the NodeBalancer.
                    enum:
                      - none
                      - table
                      - http_cookie
                    example: http_cookie
                    type: string
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-config-cli.yaml
          description: Config updated successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Update a config
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers config-update \
                12345 4567 \
                --port 443 \
                --protocol https \
                --algorithm roundrobin \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --check_passive true \
                --proxy_protocol "none" \
                --ssl_cert "-----BEGIN CERTIFICATE-----
                            CERTIFICATE_INFORMATION
                            -----END CERTIFICATE-----" \
                --ssl_key "-----BEGIN PRIVATE KEY-----
                           PRIVATE_KEY_INFORMATION
                           -----END PRIVATE KEY-----" \
                --cipher_suite recommended
            title: 'CLI: HTTPS'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-update \
                12345 4567 \
                --port 80 \
                --protocol udp \
                --algorithm ring_hash \
                --stickiness session \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --udp_check_port 80
            title: 'CLI: UDP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-update \
                12345 4567 \
                --port 80 \
                --protocol tcp \
                --algorithm roundrobin \
                --stickiness none \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --proxy_protocol "v2"
            title: 'CLI: TCP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-update \
                12345 4567 \
                --port 440 \
                --protocol http \
                --algorithm roundrobin \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works"
            title: 'CLI: HTTP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: config-update
      x-linode-grant: read_write
    delete:
      description: >-
        Deletes the Config for a port of this NodeBalancer.


        __This cannot be undone.__


        Once completed, this NodeBalancer will no longer respond to requests on
        the given port. This also deletes all associated NodeBalancerNodes, but
        the Linodes they were routing traffic to will be unchanged and will not
        be removed.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/delete-node-balancer-config
      operationId: delete-node-balancer-config
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The API responds with an empty object.
                maxProperties: 0
                type: object
                x-akamai:
                  file-path: schemas/added-empty-obj.yaml
              x-example:
                x-ref: ../examples/delete-node-balancer-config-200.json
          description: NodeBalancer Config deleted successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Delete a config
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers config-delete \
                12345 4567
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: config-delete
      x-linode-grant: read_write
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
      - description: The ID of the Config to access.
        example: '{{configId}}'
        in: path
        name: configId
        required: true
        schema:
          example: 521
          type: integer
        x-akamai:
          file-path: parameters/config-id.yaml
    x-akamai:
      file-path: paths/node-balancer-config.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/configs/{configId}
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/configs/{configId}/nodes:
    post:
      description: >-
        Creates a backend node that can receive traffic for the NodeBalancer
        configuration. Requests are routed to backend nodes on the specified
        port based on their `status`. The configurable fields for the backend
        node depend on the chosen protocol and whether the node is located
        within a Linode VPC.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP. __CLI: TCP,
        HTTP, HTTPS__.

            ```
            linode-cli nodebalancers node-create \
          12345 4567 \
          --address 10.0.0.45:80 \
          --label node54321 \
          --weight 50 \
          --mode accept \
          --subnet_id 1
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: UDP__.

            ```
            linode-cli nodebalancers node-create \
          12345 4567 \
          --address 192.168.210.120:80 \
          --label node54321 \
          --weight 50
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/post-node-balancer-node
      operationId: post-node-balancer-node
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - description: >-
                    A NodeBalancer node represents a single backend serving
                    requests for a single port of a NodeBalancer. Nodes are tied
                    to individual NodeBalancer configurations and route traffic
                    over their private IPv4 address, IPv6 address, or VPC IPv4
                    address. If the same Linode is serving traffic for more than
                    one port on the same NodeBalancer, one NodeBalancer node is
                    required for each config (port) it should serve requests
                    on.  For example, if you have four backends, and each should
                    respond to both HTTP and HTTPS requests, you will need two
                    NodeBalancer configs (port 80 and port 443) and four
                    backends each, one for each of the Linodes serving requests
                    for that port.
                  oneOf:
                    - additionalProperties: false
                      description: >-
                        __Beta__ A NodeBalancer node represents a single backend
                        serving requests for a single port of a NodeBalancer.
                        Nodes are tied to individual NodeBalancer configurations
                        and route traffic over their private IPv4 address, IPv6
                        address, or VPC IPv4 address. If the same Linode is
                        serving traffic for more than one port on the same
                        NodeBalancer, one NodeBalancer node is required for each
                        config (port) it should serve requests on.  For example,
                        if you have four backends, and each should respond to
                        both UDP and HTTPS requests, you will need two
                        NodeBalancer configs (port 80 and port 443) and four
                        backends each, one for each of the Linodes serving
                        requests for that port.
                      properties:
                        address:
                          description: >-
                            Backend nodes can be Linodes and Linodes within a
                            VPC. The following IP types are supported:
                              - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                              - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                              - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                          example:
                            - 192.168.210.120:443
                            - 10.100.5.5:80
                            - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                          format: ip
                          type: string
                          x-linode-cli-display: 3
                        config_id:
                          description: >-
                            __Read-only__ The NodeBalancer Config ID that this
                            Node belongs to.
                          example: 4567
                          readOnly: true
                          type: integer
                        id:
                          description: __Read-only__ This node's unique ID.
                          example: 54321
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        label:
                          description: >-
                            The label for this node.  This is for display
                            purposes only.
                          example: node54321
                          maxLength: 32
                          minLength: 3
                          pattern: '[a-zA-Z0-9-_.]{3,32}'
                          type: string
                          x-linode-cli-display: 2
                        mode:
                          description: >-
                            __Read-only__ The mode this NodeBalancer should use
                            when sending traffic to this backend. For backend
                            nodes with a UDP config, the `mode` doesn't apply,
                            so the value is `none`.
                          enum:
                            - none
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-display: 6
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The NodeBalancer ID that this Node
                            belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        status:
                          description: >-
                            __Read-only__ The current status of this node, based
                            on the configured checks of its NodeBalancer config.
                          enum:
                            - unknown
                            - UP
                            - DOWN
                          example: UP
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            DOWN: red
                            UP: green
                            default_: white
                            unknown: yellow
                          x-linode-cli-display: 4
                        subnet_id:
                          description: >-
                            Required for VPC backend nodes only. The VPC's
                            subnet. To display information about your VPCs and
                            their subnets, run the [List
                            VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                            operation.
                          example: 1
                          type: integer
                          x-linode-cli-display: 4
                        weight:
                          description: >-
                            Used when picking a backend to serve a request and
                            is not pinned to a single backend yet. Nodes with a
                            higher weight will receive more traffic.
                          example: 50
                          maximum: 255
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 5
                      title: UDP config
                      x-akamai:
                        file-path: schemas/node-balancer-node-udp.yaml
                        status: BETA
                      type: object
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer node represents a single backend serving
                        requests for a single port of a NodeBalancer. Nodes are
                        tied to individual NodeBalancer configurations and route
                        traffic over their private IPv4 address, IPv6 address,
                        or VPC IPv4 address. If the same Linode is serving
                        traffic for more than one port on the same NodeBalancer,
                        one NodeBalancer node is required for each config (port)
                        it should serve requests on.  For example, if you have
                        four backends, and each should respond to both HTTP and
                        HTTPS requests, you will need two NodeBalancer configs
                        (port 80 and port 443) and four backends each, one for
                        each of the Linodes serving requests for that port.
                      properties:
                        address:
                          description: >-
                            Backend nodes can be Linodes and Linodes within a
                            VPC. The following IP types are supported:
                              - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                              - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                              - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                          example:
                            - 192.168.210.120:443
                            - 10.100.5.5:80
                            - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                          format: ip
                          type: string
                          x-linode-cli-display: 3
                        config_id:
                          description: >-
                            __Read-only__ The NodeBalancer Config ID that this
                            Node belongs to.
                          example: 4567
                          readOnly: true
                          type: integer
                        id:
                          description: __Read-only__ This node's unique ID.
                          example: 54321
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        label:
                          description: >-
                            The label for this node.  This is for display
                            purposes only.
                          example: node54321
                          maxLength: 32
                          minLength: 3
                          pattern: '[a-zA-Z0-9-_.]{3,32}'
                          type: string
                          x-linode-cli-display: 2
                        mode:
                          description: >-
                            The mode this NodeBalancer should use when sending
                            traffic to this backend.


                            - If set to `accept` this backend is accepting
                            traffic.

                            - If set to `reject` this backend will not receive
                            traffic.

                            - If set to `drain` this backend will not receive
                            _new_ traffic, but connections already pinned to it
                            will continue to be routed to it.

                            - If set to `backup`, this backend will only receive
                            traffic if all `accept` nodes are down.
                          enum:
                            - accept
                            - reject
                            - drain
                            - backup
                          example: accept
                          type: string
                          x-linode-cli-display: 6
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The NodeBalancer ID that this Node
                            belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        status:
                          description: >-
                            __Read-only__ The current status of this node, based
                            on the configured checks of its NodeBalancer Config.
                          enum:
                            - unknown
                            - UP
                            - DOWN
                          example: UP
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            DOWN: red
                            UP: green
                            default_: white
                            unknown: yellow
                          x-linode-cli-display: 4
                        subnet_id:
                          description: >-
                            Required for VPC backend nodes only. The VPC's
                            subnet. To display information about your VPCs and
                            their subnets, run the [List
                            VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                            operation.
                          example: 1
                          type: integer
                          x-linode-cli-display: 4
                        weight:
                          description: >-
                            Used when picking a backend to serve a request and
                            is not pinned to a single backend yet. Nodes with a
                            higher weight will receive more traffic.
                          example: 50
                          maximum: 255
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 5
                      title: TCP, HTTP, or HTTPS config
                      x-akamai:
                        file-path: schemas/node-balancer-node-tcp-http-https.yaml
                      type: object
                  x-akamai:
                    file-path: schemas/node-balancer-node.yaml
              required:
                - label
                - address
              x-akamai:
                file-path: schemas/added-post-node-balancer-node.yaml
            x-example:
              x-ref: ../examples/post-node-balancer-node.json
            x-linode-cli-use-schema:
              additionalProperties: false
              properties:
                address:
                  description: >-
                    The address and port where this backend can be reached:
                    either the Linode’s private IPv4, public IPv6, or the VPC's
                    IPv4 address.
                  example: 192.168.210.120:80
                  format: ip
                  type: string
                  x-linode-cli-display: 3
                config_id:
                  description: >-
                    __Read-only__ The NodeBalancer config ID that this node
                    belongs to.
                  example: 4567
                  readOnly: true
                  type: integer
                id:
                  description: __Read-only__ This node's unique ID.
                  example: 54321
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                label:
                  description: The label for this node.  This is for display purposes only.
                  example: node54321
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-zA-Z0-9-_.]{3,32}$
                  type: string
                  x-linode-cli-display: 2
                mode:
                  description: >-
                    The mode this NodeBalancer should use when sending traffic
                    to this backend.


                    - If set to `accept`, this backend is accepting traffic.

                    - If set to `reject`, this backend will not receive traffic.

                    - If set to `drain`, this backend will not receive _new_
                    traffic, but connections already pinned to it will continue
                    to be routed to it.

                    - If set to `backup`, this backend will only receive traffic
                    if all `accept` nodes are down.
                  enum:
                    - accept
                    - reject
                    - drain
                    - backup
                  example: accept
                  type: string
                  x-linode-cli-display: 6
                nodebalancer_id:
                  description: __Read-only__ The NodeBalancer ID that this node belongs to.
                  example: 12345
                  readOnly: true
                  type: integer
                status:
                  description: >-
                    __Read-only__ The current status of this node, based on the
                    configured checks of its NodeBalancer Config.
                  enum:
                    - unknown
                    - UP
                    - DOWN
                  example: UP
                  readOnly: true
                  type: string
                  x-linode-cli-color:
                    DOWN: red
                    UP: green
                    default_: white
                    unknown: yellow
                  x-linode-cli-display: 4
                weight:
                  description: >-
                    Used when picking a backend to serve a request and is not
                    yet pinned to a single backend. Nodes with a higher weight
                    receive more traffic.
                  example: 50
                  maximum: 255
                  minimum: 1
                  type: integer
                  x-linode-cli-display: 5
              type: object
              x-akamai:
                file-path: schemas/node-balancer-node-cli.yaml
        description: >-
          Information about the node the NodeBalancer configuration will direct
          traffic to. The fields available for the backend node depend on the
          configuration's protocol, and if the backend node is in a VPC.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: >-
                  A NodeBalancer node represents a single backend serving
                  requests for a single port on a NodeBalancer. Nodes are tied
                  to NodeBalancer configurations, and serve traffic over their
                  private IPv4 address, IPv6 address, or VPC IPv4 address. If
                  the same Linode is serving traffic for more than one port on
                  the same NodeBalancer, one NodeBalancer node is required for
                  each config (port) it should serve requests on.  For example,
                  if you have four backends, and each should respond to both
                  HTTP and HTTPS requests, you will need two NodeBalancer
                  configs (port 80 and port 443) and four backends each, one for
                  each of the Linodes serving requests for that port.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer node represents a single backend serving
                      requests for a single port of a NodeBalancer. Nodes are
                      tied to NodeBalancer configurations, and serve traffic
                      over their private IPv4 address, IPv6 address, or VPC IPv4
                      address. If the same Linode is serving traffic for more
                      than one port on the same NodeBalancer, one NodeBalancer
                      node is required for each config (port) it should serve
                      requests on.  For example, if you have four backends, and
                      each should respond to both HTTP and HTTPS requests, you
                      will need two NodeBalancer configs (port 80 and port 443)
                      and four backends each, one for each of the Linodes
                      serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 8
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          The mode this NodeBalancer should use when sending
                          traffic to this backend.


                          - If set to `accept` this backend is accepting
                          traffic.

                          - If set to `reject` this backend will not receive
                          traffic.

                          - If set to `drain` this backend will not receive
                          _new_ traffic, but connections already pinned to it
                          will continue to be routed to it.

                          - If set to `backup`, this backend will only receive
                          traffic if all `accept` nodes are down.
                        enum:
                          - accept
                          - reject
                          - drain
                          - backup
                        example: accept
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer Config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, you can use the
                          `vpc_config_id` to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only in `{apiVersion}` `v4beta`.
                        example: 8
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: TCP, HTTP, or HTTPS config
                    x-akamai:
                      file-path: schemas/node-balancer-node-tcp-http-https-response.yaml
                    type: object
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer node represents a single backend
                      serving requests for a single port of a NodeBalancer.
                      Nodes are tied to individual NodeBalancer configurations
                      and route traffic over their private IPv4 address, IPv6
                      address, or VPC IPv4 address.  If the same Linode is
                      serving traffic for more than one port on the same
                      NodeBalancer, one NodeBalancer node is required for each
                      config (port) it should serve requests on.  For example,
                      if you have four backends, and each should respond to both
                      UDP and HTTPS requests, you will need two NodeBalancer
                      configs (port 80 and port 443) and four backends each, one
                      for each of the Linodes serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 9
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: non-vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          __Read-only__ The mode this NodeBalancer should use
                          when sending traffic to this backend. For backend
                          nodes with a UDP config, the `mode` doesn't apply, so
                          the value is `none`.
                        enum:
                          - none
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, the `vpc_config_id`
                          can be used to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only when the `apiVersion` is `v4beta`.
                        example: null
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: UDP config
                    x-akamai:
                      file-path: schemas/node-balancer-node-udp-response.yaml
                      status: BETA
                    type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-response.yaml
              x-example:
                x-ref: ../examples/post-node-balancer-node-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  address:
                    description: >-
                      The address and port where this backend can be reached:
                      either the Linode’s private IPv4, public IPv6, or the
                      VPC's IPv4 address.
                    example: 192.168.210.120:80
                    format: ip
                    type: string
                    x-linode-cli-display: 3
                  config_id:
                    description: >-
                      __Read-only__ The NodeBalancer config ID that this node
                      belongs to.
                    example: 4567
                    readOnly: true
                    type: integer
                  id:
                    description: __Read-only__ This node's unique ID.
                    example: 54321
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  label:
                    description: >-
                      The label for this node.  This is for display purposes
                      only.
                    example: node54321
                    maxLength: 32
                    minLength: 3
                    pattern: ^[a-zA-Z0-9-_.]{3,32}$
                    type: string
                    x-linode-cli-display: 2
                  mode:
                    description: >-
                      The mode this NodeBalancer should use when sending traffic
                      to this backend.


                      - If set to `accept`, this backend is accepting traffic.

                      - If set to `reject`, this backend will not receive
                      traffic.

                      - If set to `drain`, this backend will not receive _new_
                      traffic, but connections already pinned to it will
                      continue to be routed to it.

                      - If set to `backup`, this backend will only receive
                      traffic if all `accept` nodes are down.
                    enum:
                      - accept
                      - reject
                      - drain
                      - backup
                    example: accept
                    type: string
                    x-linode-cli-display: 6
                  nodebalancer_id:
                    description: >-
                      __Read-only__ The NodeBalancer ID that this node belongs
                      to.
                    example: 12345
                    readOnly: true
                    type: integer
                  status:
                    description: >-
                      __Read-only__ The current status of this node, based on
                      the configured checks of its NodeBalancer Config.
                    enum:
                      - unknown
                      - UP
                      - DOWN
                    example: UP
                    readOnly: true
                    type: string
                    x-linode-cli-color:
                      DOWN: red
                      UP: green
                      default_: white
                      unknown: yellow
                    x-linode-cli-display: 4
                  weight:
                    description: >-
                      Used when picking a backend to serve a request and is not
                      yet pinned to a single backend. Nodes with a higher weight
                      receive more traffic.
                    example: 50
                    maximum: 255
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-cli.yaml
          description: Node created successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Create a node
      tags:
        - Nodes
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers node-create \
                12345 4567 \
                --address 10.0.0.45:80 \
                --label node54321 \
                --weight 50 \
                --mode accept \
                --subnet_id 1
            title: 'CLI: TCP, HTTP, HTTPS'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers node-create \
                12345 4567 \
                --address 192.168.210.120:80 \
                --label node54321 \
                --weight 50
            title: 'CLI: UDP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: node-create
      x-linode-grant: read_write
    get:
      description: >-
        Returns a paginated list of NodeBalancer nodes associated with this
        Config. These are the backends that will be sent traffic for this port.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-config-nodes
      operationId: get-node-balancer-config-nodes
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  - address: 10.0.0.10:80
                    config_id: 34
                    id: 56
                    label: vpc-node
                    mode: accept
                    nodebalancer_id: 12
                    status: Unknown
                    vpc_config_id: 8
                    weight: 50
                  - address: 192.168.128.2:80
                    config_id: 34
                    id: 57
                    label: non-vpc-node
                    mode: accept
                    nodebalancer_id: 12
                    status: Unknown
                    vpc_config_id: null
                    weight: 50
                page: 1
                pages: 1
                results: 2
              schema:
                additionalProperties: false
                properties:
                  data:
                    items:
                      description: >-
                        A NodeBalancer node represents a single backend serving
                        requests for a single port on a NodeBalancer. Nodes are
                        tied to NodeBalancer configurations, and serve traffic
                        over their private IPv4 address, IPv6 address, or VPC
                        IPv4 address. If the same Linode is serving traffic for
                        more than one port on the same NodeBalancer, one
                        NodeBalancer node is required for each config (port) it
                        should serve requests on.  For example, if you have four
                        backends, and each should respond to both HTTP and HTTPS
                        requests, you will need two NodeBalancer configs (port
                        80 and port 443) and four backends each, one for each of
                        the Linodes serving requests for that port.
                      oneOf:
                        - additionalProperties: false
                          description: >-
                            A NodeBalancer node represents a single backend
                            serving requests for a single port of a
                            NodeBalancer. Nodes are tied to NodeBalancer
                            configurations, and serve traffic over their private
                            IPv4 address, IPv6 address, or VPC IPv4 address. If
                            the same Linode is serving traffic for more than one
                            port on the same NodeBalancer, one NodeBalancer node
                            is required for each config (port) it should serve
                            requests on.  For example, if you have four
                            backends, and each should respond to both HTTP and
                            HTTPS requests, you will need two NodeBalancer
                            configs (port 80 and port 443) and four backends
                            each, one for each of the Linodes serving requests
                            for that port.
                          properties:
                            address:
                              description: >-
                                The address and port where this backend can be
                                reached: either the Linode’s private IPv4,
                                public IPv6, or the VPC's IPv4 address.
                              example: 10.0.0.45:80
                              format: ip
                              type: string
                            config_id:
                              description: >-
                                __Read-only__ The NodeBalancer Config ID that
                                this Node belongs to.
                              example: 6
                              readOnly: true
                              type: integer
                            id:
                              description: __Read-only__ This node's unique ID.
                              example: 8
                              readOnly: true
                              type: integer
                              x-linode-cli-display: 1
                            label:
                              description: >-
                                The label for this node.  This is for display
                                purposes only.
                              example: vpc-node
                              maxLength: 32
                              minLength: 3
                              pattern: '[a-zA-Z0-9-_.]{3,32}'
                              type: string
                              x-linode-cli-display: 2
                            mode:
                              description: >-
                                The mode this NodeBalancer should use when
                                sending traffic to this backend.


                                - If set to `accept` this backend is accepting
                                traffic.

                                - If set to `reject` this backend will not
                                receive traffic.

                                - If set to `drain` this backend will not
                                receive _new_ traffic, but connections already
                                pinned to it will continue to be routed to it.

                                - If set to `backup`, this backend will only
                                receive traffic if all `accept` nodes are down.
                              enum:
                                - accept
                                - reject
                                - drain
                                - backup
                              example: accept
                              type: string
                              x-linode-cli-display: 6
                            nodebalancer_id:
                              description: >-
                                __Read-only__ The NodeBalancer ID that this Node
                                belongs to.
                              example: 10
                              readOnly: true
                              type: integer
                            status:
                              description: >-
                                __Read-only__ The current status of this node,
                                based on the configured checks of its
                                NodeBalancer Config.
                              enum:
                                - Unknown
                                - UP
                                - DOWN
                              example: UP
                              readOnly: true
                              type: string
                              x-linode-cli-color:
                                DOWN: red
                                UP: green
                                default_: white
                                unknown: yellow
                              x-linode-cli-display: 4
                            vpc_config_id:
                              description: >-
                                __Read-only__ For VPC backends, you can use the
                                `vpc_config_id` to [get VPC IDs and VPC subnet
                                IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                                Returns a `null` value if the backend is not a
                                VPC node. Included only in `{apiVersion}`
                                `v4beta`.
                              example: 8
                              nullable: true
                              readOnly: true
                              type: integer
                            weight:
                              description: >-
                                Used when picking a backend to serve a request
                                and is not pinned to a single backend yet. Nodes
                                with a higher weight will receive more traffic.
                              example: 50
                              maximum: 255
                              minimum: 1
                              type: integer
                              x-linode-cli-display: 5
                          title: TCP, HTTP, or HTTPS config
                          x-akamai:
                            file-path: >-
                              schemas/node-balancer-node-tcp-http-https-response.yaml
                          type: object
                        - additionalProperties: false
                          description: >-
                            __Beta__ A NodeBalancer node represents a single
                            backend serving requests for a single port of a
                            NodeBalancer. Nodes are tied to individual
                            NodeBalancer configurations and route traffic over
                            their private IPv4 address, IPv6 address, or VPC
                            IPv4 address.  If the same Linode is serving traffic
                            for more than one port on the same NodeBalancer, one
                            NodeBalancer node is required for each config (port)
                            it should serve requests on.  For example, if you
                            have four backends, and each should respond to both
                            UDP and HTTPS requests, you will need two
                            NodeBalancer configs (port 80 and port 443) and four
                            backends each, one for each of the Linodes serving
                            requests for that port.
                          properties:
                            address:
                              description: >-
                                The address and port where this backend can be
                                reached: either the Linode’s private IPv4,
                                public IPv6, or the VPC's IPv4 address.
                              example: 10.0.0.45:80
                              format: ip
                              type: string
                            config_id:
                              description: >-
                                __Read-only__ The NodeBalancer Config ID that
                                this Node belongs to.
                              example: 6
                              readOnly: true
                              type: integer
                            id:
                              description: __Read-only__ This node's unique ID.
                              example: 9
                              readOnly: true
                              type: integer
                              x-linode-cli-display: 1
                            label:
                              description: >-
                                The label for this node.  This is for display
                                purposes only.
                              example: non-vpc-node
                              maxLength: 32
                              minLength: 3
                              pattern: '[a-zA-Z0-9-_.]{3,32}'
                              type: string
                              x-linode-cli-display: 2
                            mode:
                              description: >-
                                __Read-only__ The mode this NodeBalancer should
                                use when sending traffic to this backend. For
                                backend nodes with a UDP config, the `mode`
                                doesn't apply, so the value is `none`.
                              enum:
                                - none
                              example: none
                              readOnly: true
                              type: string
                              x-linode-cli-display: 6
                            nodebalancer_id:
                              description: >-
                                __Read-only__ The NodeBalancer ID that this Node
                                belongs to.
                              example: 10
                              readOnly: true
                              type: integer
                            status:
                              description: >-
                                __Read-only__ The current status of this node,
                                based on the configured checks of its
                                NodeBalancer config.
                              enum:
                                - Unknown
                                - UP
                                - DOWN
                              example: UP
                              readOnly: true
                              type: string
                              x-linode-cli-color:
                                DOWN: red
                                UP: green
                                default_: white
                                unknown: yellow
                              x-linode-cli-display: 4
                            vpc_config_id:
                              description: >-
                                __Read-only__ For VPC backends, the
                                `vpc_config_id` can be used to [get VPC IDs and
                                VPC subnet
                                IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                                Returns a `null` value if the backend is not a
                                VPC node. Included only when the `apiVersion` is
                                `v4beta`.
                              example: null
                              nullable: true
                              readOnly: true
                              type: integer
                            weight:
                              description: >-
                                Used when picking a backend to serve a request
                                and is not pinned to a single backend yet. Nodes
                                with a higher weight will receive more traffic.
                              example: 50
                              maximum: 255
                              minimum: 1
                              type: integer
                              x-linode-cli-display: 5
                          title: UDP config
                          x-akamai:
                            file-path: schemas/node-balancer-node-udp-response.yaml
                            status: BETA
                          type: object
                      x-akamai:
                        file-path: schemas/node-balancer-node-response.yaml
                    type: array
                  page:
                    description: >-
                      __Read-only__ The current
                      [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  pages:
                    description: >-
                      __Read-only__ The total number of
                      [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  results:
                    description: __Read-only__ The total number of results.
                    example: 2
                    readOnly: true
                    type: integer
                type: object
                x-akamai:
                  file-path: schemas/added-get-node-balancer-config-nodes-200.yaml
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  address:
                    description: >-
                      The address and port where this backend can be reached:
                      either the Linode’s private IPv4, public IPv6, or the
                      VPC's IPv4 address.
                    example: 192.168.210.120:80
                    format: ip
                    type: string
                    x-linode-cli-display: 3
                  config_id:
                    description: >-
                      __Read-only__ The NodeBalancer config ID that this node
                      belongs to.
                    example: 4567
                    readOnly: true
                    type: integer
                  id:
                    description: __Read-only__ This node's unique ID.
                    example: 54321
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  label:
                    description: >-
                      The label for this node.  This is for display purposes
                      only.
                    example: node54321
                    maxLength: 32
                    minLength: 3
                    pattern: ^[a-zA-Z0-9-_.]{3,32}$
                    type: string
                    x-linode-cli-display: 2
                  mode:
                    description: >-
                      The mode this NodeBalancer should use when sending traffic
                      to this backend.


                      - If set to `accept`, this backend is accepting traffic.

                      - If set to `reject`, this backend will not receive
                      traffic.

                      - If set to `drain`, this backend will not receive _new_
                      traffic, but connections already pinned to it will
                      continue to be routed to it.

                      - If set to `backup`, this backend will only receive
                      traffic if all `accept` nodes are down.
                    enum:
                      - accept
                      - reject
                      - drain
                      - backup
                    example: accept
                    type: string
                    x-linode-cli-display: 6
                  nodebalancer_id:
                    description: >-
                      __Read-only__ The NodeBalancer ID that this node belongs
                      to.
                    example: 12345
                    readOnly: true
                    type: integer
                  status:
                    description: >-
                      __Read-only__ The current status of this node, based on
                      the configured checks of its NodeBalancer Config.
                    enum:
                      - unknown
                      - UP
                      - DOWN
                    example: UP
                    readOnly: true
                    type: string
                    x-linode-cli-color:
                      DOWN: red
                      UP: green
                      default_: white
                      unknown: yellow
                    x-linode-cli-display: 4
                  weight:
                    description: >-
                      Used when picking a backend to serve a request and is not
                      yet pinned to a single backend. Nodes with a higher weight
                      receive more traffic.
                    example: 50
                    maximum: 255
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-cli.yaml
          description: A paginated list of NodeBalancer nodes.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: List nodes
      tags:
        - Nodes
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers nodes-list 12345 4567
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: nodes-list
      x-linode-grant: read_only
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
      - description: The ID of the NodeBalancer config to access.
        example: '{{configId}}'
        in: path
        name: configId
        required: true
        schema:
          example: 521
          type: integer
        x-akamai:
          file-path: parameters/config-id-node-balancer.yaml
    x-akamai:
      file-path: paths/nodes.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/configs/{configId}/nodes/{nodeId}:
    get:
      description: >-
        Returns information about a single Node, a backend for this
        NodeBalancer's configured port.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-node
      operationId: get-node-balancer-node
      responses:
        '200':
          content:
            application/json:
              schema:
                description: >-
                  A NodeBalancer node represents a single backend serving
                  requests for a single port on a NodeBalancer. Nodes are tied
                  to NodeBalancer configurations, and serve traffic over their
                  private IPv4 address, IPv6 address, or VPC IPv4 address. If
                  the same Linode is serving traffic for more than one port on
                  the same NodeBalancer, one NodeBalancer node is required for
                  each config (port) it should serve requests on.  For example,
                  if you have four backends, and each should respond to both
                  HTTP and HTTPS requests, you will need two NodeBalancer
                  configs (port 80 and port 443) and four backends each, one for
                  each of the Linodes serving requests for that port.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer node represents a single backend serving
                      requests for a single port of a NodeBalancer. Nodes are
                      tied to NodeBalancer configurations, and serve traffic
                      over their private IPv4 address, IPv6 address, or VPC IPv4
                      address. If the same Linode is serving traffic for more
                      than one port on the same NodeBalancer, one NodeBalancer
                      node is required for each config (port) it should serve
                      requests on.  For example, if you have four backends, and
                      each should respond to both HTTP and HTTPS requests, you
                      will need two NodeBalancer configs (port 80 and port 443)
                      and four backends each, one for each of the Linodes
                      serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 8
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          The mode this NodeBalancer should use when sending
                          traffic to this backend.


                          - If set to `accept` this backend is accepting
                          traffic.

                          - If set to `reject` this backend will not receive
                          traffic.

                          - If set to `drain` this backend will not receive
                          _new_ traffic, but connections already pinned to it
                          will continue to be routed to it.

                          - If set to `backup`, this backend will only receive
                          traffic if all `accept` nodes are down.
                        enum:
                          - accept
                          - reject
                          - drain
                          - backup
                        example: accept
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer Config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, you can use the
                          `vpc_config_id` to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only in `{apiVersion}` `v4beta`.
                        example: 8
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: TCP, HTTP, or HTTPS config
                    x-akamai:
                      file-path: schemas/node-balancer-node-tcp-http-https-response.yaml
                    type: object
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer node represents a single backend
                      serving requests for a single port of a NodeBalancer.
                      Nodes are tied to individual NodeBalancer configurations
                      and route traffic over their private IPv4 address, IPv6
                      address, or VPC IPv4 address.  If the same Linode is
                      serving traffic for more than one port on the same
                      NodeBalancer, one NodeBalancer node is required for each
                      config (port) it should serve requests on.  For example,
                      if you have four backends, and each should respond to both
                      UDP and HTTPS requests, you will need two NodeBalancer
                      configs (port 80 and port 443) and four backends each, one
                      for each of the Linodes serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 9
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: non-vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          __Read-only__ The mode this NodeBalancer should use
                          when sending traffic to this backend. For backend
                          nodes with a UDP config, the `mode` doesn't apply, so
                          the value is `none`.
                        enum:
                          - none
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, the `vpc_config_id`
                          can be used to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only when the `apiVersion` is `v4beta`.
                        example: null
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: UDP config
                    x-akamai:
                      file-path: schemas/node-balancer-node-udp-response.yaml
                      status: BETA
                    type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-response.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-node-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  address:
                    description: >-
                      The address and port where this backend can be reached:
                      either the Linode’s private IPv4, public IPv6, or the
                      VPC's IPv4 address.
                    example: 192.168.210.120:80
                    format: ip
                    type: string
                    x-linode-cli-display: 3
                  config_id:
                    description: >-
                      __Read-only__ The NodeBalancer config ID that this node
                      belongs to.
                    example: 4567
                    readOnly: true
                    type: integer
                  id:
                    description: __Read-only__ This node's unique ID.
                    example: 54321
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  label:
                    description: >-
                      The label for this node.  This is for display purposes
                      only.
                    example: node54321
                    maxLength: 32
                    minLength: 3
                    pattern: ^[a-zA-Z0-9-_.]{3,32}$
                    type: string
                    x-linode-cli-display: 2
                  mode:
                    description: >-
                      The mode this NodeBalancer should use when sending traffic
                      to this backend.


                      - If set to `accept`, this backend is accepting traffic.

                      - If set to `reject`, this backend will not receive
                      traffic.

                      - If set to `drain`, this backend will not receive _new_
                      traffic, but connections already pinned to it will
                      continue to be routed to it.

                      - If set to `backup`, this backend will only receive
                      traffic if all `accept` nodes are down.
                    enum:
                      - accept
                      - reject
                      - drain
                      - backup
                    example: accept
                    type: string
                    x-linode-cli-display: 6
                  nodebalancer_id:
                    description: >-
                      __Read-only__ The NodeBalancer ID that this node belongs
                      to.
                    example: 12345
                    readOnly: true
                    type: integer
                  status:
                    description: >-
                      __Read-only__ The current status of this node, based on
                      the configured checks of its NodeBalancer Config.
                    enum:
                      - unknown
                      - UP
                      - DOWN
                    example: UP
                    readOnly: true
                    type: string
                    x-linode-cli-color:
                      DOWN: red
                      UP: green
                      default_: white
                      unknown: yellow
                    x-linode-cli-display: 4
                  weight:
                    description: >-
                      Used when picking a backend to serve a request and is not
                      yet pinned to a single backend. Nodes with a higher weight
                      receive more traffic.
                    example: 50
                    maximum: 255
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-cli.yaml
          description: A paginated list of NodeBalancer nodes.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Get a NodeBalancer's node
      tags:
        - Nodes
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers node-view 12345 4567 54321
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: node-view
      x-linode-grant: read_only
    put:
      description: >-
        Updates information about a node, a backend for this NodeBalancer's
        configured port.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP. __CLI: TCP,
        HTTP, HTTPS__.

            ```
            linode-cli nodebalancers node-update \
          12345 4567 54321 \
          --address 192.168.210.120:80 \
          --label node54321 \
          --weight 50 \
          --mode accept
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: UDP__.

            ```
            linode-cli nodebalancers node-create \
          12345 4567 \
          --address 192.168.210.120:80 \
          --label node54321 \
          --weight 50
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/put-node-balancer-node
      operationId: put-node-balancer-node
      requestBody:
        content:
          application/json:
            schema:
              description: >-
                A NodeBalancer node represents a single backend serving requests
                for a single port of a NodeBalancer. Nodes are tied to
                individual NodeBalancer configurations and route traffic over
                their private IPv4 address, IPv6 address, or VPC IPv4 address.
                If the same Linode is serving traffic for more than one port on
                the same NodeBalancer, one NodeBalancer node is required for
                each config (port) it should serve requests on.  For example, if
                you have four backends, and each should respond to both HTTP and
                HTTPS requests, you will need two NodeBalancer configs (port 80
                and port 443) and four backends each, one for each of the
                Linodes serving requests for that port.
              oneOf:
                - additionalProperties: false
                  description: >-
                    __Beta__ A NodeBalancer node represents a single backend
                    serving requests for a single port of a NodeBalancer. Nodes
                    are tied to individual NodeBalancer configurations and route
                    traffic over their private IPv4 address, IPv6 address, or
                    VPC IPv4 address. If the same Linode is serving traffic for
                    more than one port on the same NodeBalancer, one
                    NodeBalancer node is required for each config (port) it
                    should serve requests on.  For example, if you have four
                    backends, and each should respond to both UDP and HTTPS
                    requests, you will need two NodeBalancer configs (port 80
                    and port 443) and four backends each, one for each of the
                    Linodes serving requests for that port.
                  properties:
                    address:
                      description: >-
                        Backend nodes can be Linodes and Linodes within a VPC.
                        The following IP types are supported:
                          - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                          - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                          - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                      example:
                        - 192.168.210.120:443
                        - 10.100.5.5:80
                        - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                      format: ip
                      type: string
                      x-linode-cli-display: 3
                    config_id:
                      description: >-
                        __Read-only__ The NodeBalancer Config ID that this Node
                        belongs to.
                      example: 4567
                      readOnly: true
                      type: integer
                    id:
                      description: __Read-only__ This node's unique ID.
                      example: 54321
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    label:
                      description: >-
                        The label for this node.  This is for display purposes
                        only.
                      example: node54321
                      maxLength: 32
                      minLength: 3
                      pattern: '[a-zA-Z0-9-_.]{3,32}'
                      type: string
                      x-linode-cli-display: 2
                    mode:
                      description: >-
                        __Read-only__ The mode this NodeBalancer should use when
                        sending traffic to this backend. For backend nodes with
                        a UDP config, the `mode` doesn't apply, so the value is
                        `none`.
                      enum:
                        - none
                      example: none
                      readOnly: true
                      type: string
                      x-linode-cli-display: 6
                    nodebalancer_id:
                      description: >-
                        __Read-only__ The NodeBalancer ID that this Node belongs
                        to.
                      example: 12345
                      readOnly: true
                      type: integer
                    status:
                      description: >-
                        __Read-only__ The current status of this node, based on
                        the configured checks of its NodeBalancer config.
                      enum:
                        - unknown
                        - UP
                        - DOWN
                      example: UP
                      readOnly: true
                      type: string
                      x-linode-cli-color:
                        DOWN: red
                        UP: green
                        default_: white
                        unknown: yellow
                      x-linode-cli-display: 4
                    subnet_id:
                      description: >-
                        Required for VPC backend nodes only. The VPC's subnet.
                        To display information about your VPCs and their
                        subnets, run the [List
                        VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                        operation.
                      example: 1
                      type: integer
                      x-linode-cli-display: 4
                    weight:
                      description: >-
                        Used when picking a backend to serve a request and is
                        not pinned to a single backend yet. Nodes with a higher
                        weight will receive more traffic.
                      example: 50
                      maximum: 255
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 5
                  title: UDP config
                  x-akamai:
                    file-path: schemas/node-balancer-node-udp.yaml
                    status: BETA
                  type: object
                - additionalProperties: false
                  description: >-
                    A NodeBalancer node represents a single backend serving
                    requests for a single port of a NodeBalancer. Nodes are tied
                    to individual NodeBalancer configurations and route traffic
                    over their private IPv4 address, IPv6 address, or VPC IPv4
                    address. If the same Linode is serving traffic for more than
                    one port on the same NodeBalancer, one NodeBalancer node is
                    required for each config (port) it should serve requests
                    on.  For example, if you have four backends, and each should
                    respond to both HTTP and HTTPS requests, you will need two
                    NodeBalancer configs (port 80 and port 443) and four
                    backends each, one for each of the Linodes serving requests
                    for that port.
                  properties:
                    address:
                      description: >-
                        Backend nodes can be Linodes and Linodes within a VPC.
                        The following IP types are supported:
                          - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                          - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                          - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                      example:
                        - 192.168.210.120:443
                        - 10.100.5.5:80
                        - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                      format: ip
                      type: string
                      x-linode-cli-display: 3
                    config_id:
                      description: >-
                        __Read-only__ The NodeBalancer Config ID that this Node
                        belongs to.
                      example: 4567
                      readOnly: true
                      type: integer
                    id:
                      description: __Read-only__ This node's unique ID.
                      example: 54321
                      readOnly: true
                      type: integer
                      x-linode-cli-display: 1
                    label:
                      description: >-
                        The label for this node.  This is for display purposes
                        only.
                      example: node54321
                      maxLength: 32
                      minLength: 3
                      pattern: '[a-zA-Z0-9-_.]{3,32}'
                      type: string
                      x-linode-cli-display: 2
                    mode:
                      description: >-
                        The mode this NodeBalancer should use when sending
                        traffic to this backend.


                        - If set to `accept` this backend is accepting traffic.

                        - If set to `reject` this backend will not receive
                        traffic.

                        - If set to `drain` this backend will not receive _new_
                        traffic, but connections already pinned to it will
                        continue to be routed to it.

                        - If set to `backup`, this backend will only receive
                        traffic if all `accept` nodes are down.
                      enum:
                        - accept
                        - reject
                        - drain
                        - backup
                      example: accept
                      type: string
                      x-linode-cli-display: 6
                    nodebalancer_id:
                      description: >-
                        __Read-only__ The NodeBalancer ID that this Node belongs
                        to.
                      example: 12345
                      readOnly: true
                      type: integer
                    status:
                      description: >-
                        __Read-only__ The current status of this node, based on
                        the configured checks of its NodeBalancer Config.
                      enum:
                        - unknown
                        - UP
                        - DOWN
                      example: UP
                      readOnly: true
                      type: string
                      x-linode-cli-color:
                        DOWN: red
                        UP: green
                        default_: white
                        unknown: yellow
                      x-linode-cli-display: 4
                    subnet_id:
                      description: >-
                        Required for VPC backend nodes only. The VPC's subnet.
                        To display information about your VPCs and their
                        subnets, run the [List
                        VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                        operation.
                      example: 1
                      type: integer
                      x-linode-cli-display: 4
                    weight:
                      description: >-
                        Used when picking a backend to serve a request and is
                        not pinned to a single backend yet. Nodes with a higher
                        weight will receive more traffic.
                      example: 50
                      maximum: 255
                      minimum: 1
                      type: integer
                      x-linode-cli-display: 5
                  title: TCP, HTTP, or HTTPS config
                  x-akamai:
                    file-path: schemas/node-balancer-node-tcp-http-https.yaml
                  type: object
              x-akamai:
                file-path: schemas/node-balancer-node.yaml
            x-example:
              x-ref: ../examples/put-node-balancer-node.json
            x-linode-cli-use-schema:
              additionalProperties: false
              properties:
                address:
                  description: >-
                    The address and port where this backend can be reached:
                    either the Linode’s private IPv4, public IPv6, or the VPC's
                    IPv4 address.
                  example: 192.168.210.120:80
                  format: ip
                  type: string
                  x-linode-cli-display: 3
                config_id:
                  description: >-
                    __Read-only__ The NodeBalancer config ID that this node
                    belongs to.
                  example: 4567
                  readOnly: true
                  type: integer
                id:
                  description: __Read-only__ This node's unique ID.
                  example: 54321
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                label:
                  description: The label for this node.  This is for display purposes only.
                  example: node54321
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-zA-Z0-9-_.]{3,32}$
                  type: string
                  x-linode-cli-display: 2
                mode:
                  description: >-
                    The mode this NodeBalancer should use when sending traffic
                    to this backend.


                    - If set to `accept`, this backend is accepting traffic.

                    - If set to `reject`, this backend will not receive traffic.

                    - If set to `drain`, this backend will not receive _new_
                    traffic, but connections already pinned to it will continue
                    to be routed to it.

                    - If set to `backup`, this backend will only receive traffic
                    if all `accept` nodes are down.
                  enum:
                    - accept
                    - reject
                    - drain
                    - backup
                  example: accept
                  type: string
                  x-linode-cli-display: 6
                nodebalancer_id:
                  description: __Read-only__ The NodeBalancer ID that this node belongs to.
                  example: 12345
                  readOnly: true
                  type: integer
                status:
                  description: >-
                    __Read-only__ The current status of this node, based on the
                    configured checks of its NodeBalancer Config.
                  enum:
                    - unknown
                    - UP
                    - DOWN
                  example: UP
                  readOnly: true
                  type: string
                  x-linode-cli-color:
                    DOWN: red
                    UP: green
                    default_: white
                    unknown: yellow
                  x-linode-cli-display: 4
                weight:
                  description: >-
                    Used when picking a backend to serve a request and is not
                    yet pinned to a single backend. Nodes with a higher weight
                    receive more traffic.
                  example: 50
                  maximum: 255
                  minimum: 1
                  type: integer
                  x-linode-cli-display: 5
              type: object
              x-akamai:
                file-path: schemas/node-balancer-node-cli.yaml
        description: >-
          The fields to update. The fields available for the backend node depend
          on the configuration's protocol, and if the backend node is in a VPC.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: >-
                  A NodeBalancer node represents a single backend serving
                  requests for a single port on a NodeBalancer. Nodes are tied
                  to NodeBalancer configurations, and serve traffic over their
                  private IPv4 address, IPv6 address, or VPC IPv4 address. If
                  the same Linode is serving traffic for more than one port on
                  the same NodeBalancer, one NodeBalancer node is required for
                  each config (port) it should serve requests on.  For example,
                  if you have four backends, and each should respond to both
                  HTTP and HTTPS requests, you will need two NodeBalancer
                  configs (port 80 and port 443) and four backends each, one for
                  each of the Linodes serving requests for that port.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer node represents a single backend serving
                      requests for a single port of a NodeBalancer. Nodes are
                      tied to NodeBalancer configurations, and serve traffic
                      over their private IPv4 address, IPv6 address, or VPC IPv4
                      address. If the same Linode is serving traffic for more
                      than one port on the same NodeBalancer, one NodeBalancer
                      node is required for each config (port) it should serve
                      requests on.  For example, if you have four backends, and
                      each should respond to both HTTP and HTTPS requests, you
                      will need two NodeBalancer configs (port 80 and port 443)
                      and four backends each, one for each of the Linodes
                      serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 8
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          The mode this NodeBalancer should use when sending
                          traffic to this backend.


                          - If set to `accept` this backend is accepting
                          traffic.

                          - If set to `reject` this backend will not receive
                          traffic.

                          - If set to `drain` this backend will not receive
                          _new_ traffic, but connections already pinned to it
                          will continue to be routed to it.

                          - If set to `backup`, this backend will only receive
                          traffic if all `accept` nodes are down.
                        enum:
                          - accept
                          - reject
                          - drain
                          - backup
                        example: accept
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer Config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, you can use the
                          `vpc_config_id` to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only in `{apiVersion}` `v4beta`.
                        example: 8
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: TCP, HTTP, or HTTPS config
                    x-akamai:
                      file-path: schemas/node-balancer-node-tcp-http-https-response.yaml
                    type: object
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer node represents a single backend
                      serving requests for a single port of a NodeBalancer.
                      Nodes are tied to individual NodeBalancer configurations
                      and route traffic over their private IPv4 address, IPv6
                      address, or VPC IPv4 address.  If the same Linode is
                      serving traffic for more than one port on the same
                      NodeBalancer, one NodeBalancer node is required for each
                      config (port) it should serve requests on.  For example,
                      if you have four backends, and each should respond to both
                      UDP and HTTPS requests, you will need two NodeBalancer
                      configs (port 80 and port 443) and four backends each, one
                      for each of the Linodes serving requests for that port.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 10.0.0.45:80
                        format: ip
                        type: string
                      config_id:
                        description: >-
                          __Read-only__ The NodeBalancer Config ID that this
                          Node belongs to.
                        example: 6
                        readOnly: true
                        type: integer
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 9
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: non-vpc-node
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          __Read-only__ The mode this NodeBalancer should use
                          when sending traffic to this backend. For backend
                          nodes with a UDP config, the `mode` doesn't apply, so
                          the value is `none`.
                        enum:
                          - none
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 6
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The NodeBalancer ID that this Node
                          belongs to.
                        example: 10
                        readOnly: true
                        type: integer
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer config.
                        enum:
                          - Unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      vpc_config_id:
                        description: >-
                          __Read-only__ For VPC backends, the `vpc_config_id`
                          can be used to [get VPC IDs and VPC subnet
                          IDs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config).
                          Returns a `null` value if the backend is not a VPC
                          node. Included only when the `apiVersion` is `v4beta`.
                        example: null
                        nullable: true
                        readOnly: true
                        type: integer
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    title: UDP config
                    x-akamai:
                      file-path: schemas/node-balancer-node-udp-response.yaml
                      status: BETA
                    type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-response.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-node-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  address:
                    description: >-
                      The address and port where this backend can be reached:
                      either the Linode’s private IPv4, public IPv6, or the
                      VPC's IPv4 address.
                    example: 192.168.210.120:80
                    format: ip
                    type: string
                    x-linode-cli-display: 3
                  config_id:
                    description: >-
                      __Read-only__ The NodeBalancer config ID that this node
                      belongs to.
                    example: 4567
                    readOnly: true
                    type: integer
                  id:
                    description: __Read-only__ This node's unique ID.
                    example: 54321
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  label:
                    description: >-
                      The label for this node.  This is for display purposes
                      only.
                    example: node54321
                    maxLength: 32
                    minLength: 3
                    pattern: ^[a-zA-Z0-9-_.]{3,32}$
                    type: string
                    x-linode-cli-display: 2
                  mode:
                    description: >-
                      The mode this NodeBalancer should use when sending traffic
                      to this backend.


                      - If set to `accept`, this backend is accepting traffic.

                      - If set to `reject`, this backend will not receive
                      traffic.

                      - If set to `drain`, this backend will not receive _new_
                      traffic, but connections already pinned to it will
                      continue to be routed to it.

                      - If set to `backup`, this backend will only receive
                      traffic if all `accept` nodes are down.
                    enum:
                      - accept
                      - reject
                      - drain
                      - backup
                    example: accept
                    type: string
                    x-linode-cli-display: 6
                  nodebalancer_id:
                    description: >-
                      __Read-only__ The NodeBalancer ID that this node belongs
                      to.
                    example: 12345
                    readOnly: true
                    type: integer
                  status:
                    description: >-
                      __Read-only__ The current status of this node, based on
                      the configured checks of its NodeBalancer Config.
                    enum:
                      - unknown
                      - UP
                      - DOWN
                    example: UP
                    readOnly: true
                    type: string
                    x-linode-cli-color:
                      DOWN: red
                      UP: green
                      default_: white
                      unknown: yellow
                    x-linode-cli-display: 4
                  weight:
                    description: >-
                      Used when picking a backend to serve a request and is not
                      yet pinned to a single backend. Nodes with a higher weight
                      receive more traffic.
                    example: 50
                    maximum: 255
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-node-cli.yaml
          description: Node updated successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Update a node
      tags:
        - Nodes
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers node-update \
                12345 4567 54321 \
                --address 192.168.210.120:80 \
                --label node54321 \
                --weight 50 \
                --mode accept
            title: 'CLI: TCP, HTTP, HTTPS'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers node-create \
                12345 4567 \
                --address 192.168.210.120:80 \
                --label node54321 \
                --weight 50
            title: 'CLI: UDP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: node-update
      x-linode-grant: read_write
    delete:
      description: >-
        Deletes a Node from this Config. This backend will no longer receive
        traffic for the configured port of this NodeBalancer.


        This does not change or remove the Linode whose address was used in the
        creation of this Node.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/delete-node-balancer-config-node
      operationId: delete-node-balancer-config-node
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The API responds with an empty object.
                maxProperties: 0
                type: object
                x-akamai:
                  file-path: schemas/added-empty-obj.yaml
              x-example:
                x-ref: ../examples/delete-node-balancer-config-node-200.json
          description: Node deleted successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Delete a NodeBalancer's node
      tags:
        - Nodes
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers node-delete \
                12345 4567 54321
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: node-delete
      x-linode-grant: read_write
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
      - description: The ID of the Config to access.
        example: '{{configId}}'
        in: path
        name: configId
        required: true
        schema:
          example: 521
          type: integer
        x-akamai:
          file-path: parameters/config-id.yaml
      - description: The ID of the Node to access.
        example: '{{nodeId}}'
        in: path
        name: nodeId
        required: true
        schema:
          type: string
        x-akamai:
          file-path: parameters/node-id.yaml
    x-akamai:
      file-path: paths/config-node.yaml
      path-info: >-
        /{apiVersion}/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes/{nodeId}
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/configs/{configId}/rebuild:
    post:
      description: >-
        Rebuilds a NodeBalancer config and its nodes that you have permission to
        modify.


        Use this operation to update a NodeBalancer's config and nodes with a
        single request.


        > 🚧

        >

        > You can configure UDP on the same NodeBalancer that also uses TCP,
        HTTP, or HTTPS, but only when managing it through the API. If UDP is
        configured and you make changes to the TCP, HTTP or HTTPS settings in
        Cloud Manager, the existing UDP configuration will be overwritten. This
        is because Cloud Manager doesn't currently support UDP. __CLI: HTTPS__.

            ```
            linode-cli nodebalancers config-rebuild \
          12345 4567 \
          --port 443 \
          --protocol https \
          --algorithm roundrobin \
          --stickiness http_cookie \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --check_passive true \
          --proxy_protocol "none" \
          --ssl_cert "-----BEGIN CERTIFICATE-----
                      CERTIFICATE_INFORMATION
                      -----END CERTIFICATE-----" \
          --ssl_key "-----BEGIN PRIVATE KEY-----
                     PRIVATE_KEY_INFORMATION
                     -----END PRIVATE KEY-----" \
          --cipher_suite recommended \
          --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
          --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
          --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: UDP__.

            ```
            linode-cli nodebalancers config-rebuild \
           12345 4567 \
           --port 80 \
           --protocol udp \
           --algorithm ring_hash \
           --udp_check_port 80 \
           --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
           --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50}]' \
           --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        - __CLI: TCP__.

            ```
            linode-cli nodebalancers config-rebuild \
          12345 4567 \
          --port 80 \
          --protocol tcp \
          --algorithm roundrobin \
          --stickiness none \
          --proxy_protocol "v2"
          --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
          --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
          --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            ```

        [Learn
        more...](https://www.linode.com/docs/products/tools/cli/get-started/)


        - __CLI: HTTP__.

            ```
            linode-cli nodebalancers config-rebuild \
          12345 4567 \
          --port 440 \
          --protocol http \
          --algorithm roundrobin \
          --stickiness none \
          --check http_body \
          --check_interval 90 \
          --check_timeout 10 \
          --check_attempts 3 \
          --check_path "/test" \
          --check_body "it works" \
          --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
          --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
          --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            ```

        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/post-rebuild-node-balancer-config
      operationId: post-rebuild-node-balancer-config
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - description: NodeBalancer `config` options for each protocol.
                  oneOf:
                    - additionalProperties: false
                      description: >-
                        __Beta__ A NodeBalancer configuration defines the
                        protocol and settings for a specific port on the
                        NodeBalancer. These fields apply to UDP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this UDP NodeBalancer uses to route
                            traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - ring_hash
                          example: leastconn
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. This determines if
                            backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            This value must be present in the response body of
                            the check in order for it to pass. If this value
                            isn't present in the response body of a check
                            request, the backend is considered to be down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          description: __Read-only__ Must be `false` for UDP.
                          example: false
                          readOnly: true
                          type: boolean
                          x-linode-cli-display: 8
                        check_path:
                          description: >-
                            The URL path to check on each backend. If the
                            backend does not respond to this request, it's
                            considered to be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 30
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 7000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              __Beta__ A NodeBalancer node represents a single
                              backend serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both UDP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  __Read-only__ The mode this NodeBalancer
                                  should use when sending traffic to this
                                  backend. For backend nodes with a UDP config,
                                  the `mode` doesn't apply, so the value is
                                  `none`.
                                enum:
                                  - none
                                example: none
                                readOnly: true
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: UDP config
                            x-akamai:
                              file-path: schemas/node-balancer-node-udp.yaml
                              status: BETA
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 11
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 5795
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `udp`
                            in this case. Review our guide on [Available
                            Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                            for information on protocol features.
                          enum:
                            - udp
                          example: udp
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          description: __Read-only__ Must be `none` for UDP.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for UPD configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 10
                        ssl_key:
                          description: __Read-only__ Not applicable for UDP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: session
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections are assigned a
                            backend server based on the algorithm configured.

                            - If set to `session`, all packets with the same
                            session identifiers are routed to the same backend
                            server. Two packets are considered part of the same
                            session if they share the same source and
                            destination IP addresses or ports, and are received
                            within a short time window.

                            - If set to `source_ip`, the NodeBalancer uses the
                            client's source IP address to route all packets from
                            the same client to the same backend server.
                          enum:
                            - none
                            - session
                            - source_ip
                          example: none
                          type: string
                          x-linode-cli-display: 5
                        udp_check_port:
                          default: 80
                          description: >-
                            UDP NodeBalancers use TCP and HTTP active health
                            checks to ensure back-end nodes can receive traffic.
                            You can specify the health check port that the
                            backend node listens on, which may differ from the
                            UDP port used to serve traffic.
                          example: 5795
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 6
                        udp_session_timeout:
                          default: 16
                          description: >-
                            __Read-only__ The maximum duration in seconds, a UDP
                            session can be idle before it is closed.
                          example: 2
                          maximum: 300
                          minimum: 1
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 12
                      required:
                        - nodes
                      title: UDP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-udp.yaml
                        status: BETA
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to TCP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this TCP NodeBalancer uses to route
                            traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: leastconn
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. The `check` is
                            used to determine if backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            This value must be present in the response body of
                            the check in order for it to pass. If this value is
                            not present in the response body of a check request,
                            the backend is considered to be down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. If the
                            backend does not respond to this request, it's
                            considered to be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 30
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for `tcp` configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 6000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 22
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `tcp`
                            in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features.
                          enum:
                            - tcp
                          example: tcp
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: >-
                            Proxy protocol is a TCP extension that sends initial
                            TCP connection information such as source or
                            destination IPs and ports to backend devices. Proxy
                            protocol preserves initial TCP information that
                            would be lost otherwise. Backend devices must be
                            configured to work with `proxy_protocol` if enabled.


                            - If omitted, or set to `none`, the NodeBalancer
                            doesn't send any auxiliary data over TCP
                            connections. This is the default.

                            - If set to `v1`, the human-readable header format
                            (Version 1) is used. Requires `tcp` protocol.

                            - If set to `v2`, the binary header format (Version
                            2) is used. Requires `tcp` protocol.
                          enum:
                            - none
                            - v1
                            - v2
                          example: none
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for TCP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: none
                          description: >-
                            __Read-only__ Controls how session stickiness is
                            handled on this port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.
                          enum:
                            - none
                            - table
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: TCP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-tcp.yaml
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to HTTP configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this HTTP NodeBalancer uses for
                            routing traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: roundrobin
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. This determines if
                            backends are up or down.


                            - If `none`, no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            Use when the active health `check` type is
                            `http_body`. This value must be present in the
                            response body of the check in order for it to pass.
                            If this value is not present in the response body of
                            a check request, the backend is considered to be
                            down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. Use when the
                            active health `check` type is `http`. If the backend
                            doesn't respond to this request, it's considered to
                            be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 3
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          description: __Read-only__ Not applicable for `http` configs.
                          example: none
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 4000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ Identifies the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers need to be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced.
                            You may configure your NodeBalancer however you find
                            useful.
                          example: 80
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve, `http`
                            in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features.
                          enum:
                            - http
                          example: http
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        ssl_commonname:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: ''
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: __Read-only__ Not applicable for HTTP configs.
                          example: null
                          nullable: true
                          readOnly: true
                          type: string
                        stickiness:
                          default: table
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.

                            - If set to `http_cookie`, sessions are routed to
                            the same backend based on a cookie set by the
                            NodeBalancer.
                          enum:
                            - none
                            - table
                            - http_cookie
                          example: http_cookie
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: HTTP
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-http.yaml
                    - additionalProperties: false
                      description: >-
                        A NodeBalancer configuration defines the protocol and
                        settings for a specific port on the NodeBalancer. These
                        fields apply to HTTPS configurations.
                      properties:
                        algorithm:
                          default: roundrobin
                          description: >-
                            The algorithm this HTTPS NodeBalancer uses for
                            routing traffic to backends.
                          enum:
                            - roundrobin
                            - leastconn
                            - source
                          example: roundrobin
                          type: string
                          x-linode-cli-display: 4
                        check:
                          default: none
                          description: >-
                            The type of check to perform against backends to
                            ensure they are serving requests. The `check` is
                            used to determine if backends are up or down.


                            - If `none` no check is performed.

                            - `connection` requires only a connection to the
                            backend to succeed.

                            - `http` and `http_body` rely on the backend serving
                            HTTP, and that the response returned matches what is
                            expected.
                          enum:
                            - none
                            - connection
                            - http
                            - http_body
                          example: http_body
                          type: string
                        check_attempts:
                          default: 3
                          description: >-
                            How many times to attempt a check before considering
                            a backend to be down.
                          example: 3
                          maximum: 30
                          minimum: 1
                          type: integer
                        check_body:
                          description: >-
                            Use when the active health `check` type is
                            `http_body`. This value must be present in the
                            response body of the check in order for it to pass.
                            If this value is not present in the response body of
                            a check request, the backend is considered to be
                            down.
                          example: it works
                          type: string
                        check_interval:
                          default: 5
                          description: >-
                            How often, in seconds, to check that backends are up
                            and serving requests.


                            Must be greater than `check_timeout`.
                          example: 90
                          maximum: 3600
                          minimum: 2
                          type: integer
                        check_passive:
                          default: true
                          description: >-
                            If `true`, any response from this backend with a
                            `5xx` status code will be enough for it to be
                            considered unhealthy and taken out of rotation.
                          example: true
                          type: boolean
                          x-linode-cli-display: 6
                        check_path:
                          description: >-
                            The URL path to check on each backend. Use when the
                            active health `check` type is `http`. If the backend
                            doesn't respond to this request, it's considered to
                            be down.
                          example: /test
                          pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                          type: string
                        check_timeout:
                          default: 3
                          description: >-
                            How long, in seconds, to wait for a check attempt
                            before considering it failed.


                            Must be less than `check_interval`.
                          example: 10
                          maximum: 30
                          minimum: 1
                          type: integer
                        cipher_suite:
                          default: recommended
                          description: >-
                            What ciphers to use for SSL connections served by
                            this NodeBalancer. The `legacy` cipher is considered
                            insecure and should only be used if necessary. For
                            information on recommended and legacy ciphers, see
                            [TLS cipher
                            suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                          enum:
                            - recommended
                            - legacy
                          example: recommended
                          type: string
                          x-linode-cli-color:
                            default_: white
                            legacy: red
                          x-linode-cli-display: 7
                        id:
                          description: __Read-only__ This config's unique ID.
                          example: 5000
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        nodebalancer_id:
                          description: >-
                            __Read-only__ The ID for the NodeBalancer this
                            config belongs to.
                          example: 12345
                          readOnly: true
                          type: integer
                        nodes:
                          description: >-
                            The NodeBalancer nodes that serve this
                            configuration.
                          items:
                            additionalProperties: false
                            description: >-
                              A NodeBalancer node represents a single backend
                              serving requests for a single port of a
                              NodeBalancer. Nodes are tied to individual
                              NodeBalancer configurations and route traffic over
                              their private IPv4 address, IPv6 address, or VPC
                              IPv4 address. If the same Linode is serving
                              traffic for more than one port on the same
                              NodeBalancer, one NodeBalancer node is required
                              for each config (port) it should serve requests
                              on.  For example, if you have four backends, and
                              each should respond to both HTTP and HTTPS
                              requests, you will need two NodeBalancer configs
                              (port 80 and port 443) and four backends each, one
                              for each of the Linodes serving requests for that
                              port.
                            properties:
                              address:
                                description: >-
                                  Backend nodes can be Linodes and Linodes
                                  within a VPC. The following IP types are
                                  supported:
                                    - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                    - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                    - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                                example:
                                  - 192.168.210.120:443
                                  - 10.100.5.5:80
                                  - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                                format: ip
                                type: string
                                x-linode-cli-display: 3
                              config_id:
                                description: >-
                                  __Read-only__ The NodeBalancer Config ID that
                                  this Node belongs to.
                                example: 4567
                                readOnly: true
                                type: integer
                              id:
                                description: __Read-only__ This node's unique ID.
                                example: 54321
                                readOnly: true
                                type: integer
                                x-linode-cli-display: 1
                              label:
                                description: >-
                                  The label for this node.  This is for display
                                  purposes only.
                                example: node54321
                                maxLength: 32
                                minLength: 3
                                pattern: '[a-zA-Z0-9-_.]{3,32}'
                                type: string
                                x-linode-cli-display: 2
                              mode:
                                description: >-
                                  The mode this NodeBalancer should use when
                                  sending traffic to this backend.


                                  - If set to `accept` this backend is accepting
                                  traffic.

                                  - If set to `reject` this backend will not
                                  receive traffic.

                                  - If set to `drain` this backend will not
                                  receive _new_ traffic, but connections already
                                  pinned to it will continue to be routed to it.

                                  - If set to `backup`, this backend will only
                                  receive traffic if all `accept` nodes are
                                  down.
                                enum:
                                  - accept
                                  - reject
                                  - drain
                                  - backup
                                example: accept
                                type: string
                                x-linode-cli-display: 6
                              nodebalancer_id:
                                description: >-
                                  __Read-only__ The NodeBalancer ID that this
                                  Node belongs to.
                                example: 12345
                                readOnly: true
                                type: integer
                              status:
                                description: >-
                                  __Read-only__ The current status of this node,
                                  based on the configured checks of its
                                  NodeBalancer Config.
                                enum:
                                  - unknown
                                  - UP
                                  - DOWN
                                example: UP
                                readOnly: true
                                type: string
                                x-linode-cli-color:
                                  DOWN: red
                                  UP: green
                                  default_: white
                                  unknown: yellow
                                x-linode-cli-display: 4
                              subnet_id:
                                description: >-
                                  Required for VPC backend nodes only. The VPC's
                                  subnet. To display information about your VPCs
                                  and their subnets, run the [List
                                  VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                                  operation.
                                example: 1
                                type: integer
                                x-linode-cli-display: 4
                              weight:
                                description: >-
                                  Used when picking a backend to serve a request
                                  and is not pinned to a single backend yet.
                                  Nodes with a higher weight will receive more
                                  traffic.
                                example: 50
                                maximum: 255
                                minimum: 1
                                type: integer
                                x-linode-cli-display: 5
                            title: TCP, HTTP, or HTTPS config
                            x-akamai:
                              file-path: schemas/node-balancer-node-tcp-http-https.yaml
                            type: object
                          type: array
                        nodes_status:
                          additionalProperties: false
                          description: >-
                            __Read-only__ Describes the health of the backends
                            for this port. This data updates periodically as
                            checks are performed against backends.
                          properties:
                            down:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `DOWN` and unhealthy.  These are not in
                                rotation, and not serving requests.
                              example: 0
                              readOnly: true
                              type: integer
                            up:
                              description: >-
                                __Read-only__ The number of backends considered
                                to be `UP` and healthy, and that are serving
                                requests.
                              example: 4
                              readOnly: true
                              type: integer
                          readOnly: true
                          type: object
                          x-linode-cli-display: 10
                        port:
                          default: 80
                          description: >-
                            This is the port the NodeBalancer listens on for
                            this configuration. Port numbers must be unique
                            across TCP, HTTP, and HTTPS configurations on a
                            single NodeBalancer. However, ports assigned to TCP,
                            HTTP, or HTTPS configurations can also be reused for
                            UDP configurations. For example, Port 80 can
                            simultaneously serve a TCP and a UDP configuration
                            on the same NodeBalancer, but it can't be shared by
                            both a TCP and an HTTP configuration. Although
                            certain ports are traditionally associated with
                            specific protocols, this isn't strictly enforced,
                            and you may configure your NodeBalancer however you
                            find useful.
                          example: 443
                          maximum: 65535
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 2
                        protocol:
                          default: http
                          description: >-
                            The protocol the port is configured to serve,
                            `https` in this case. Review our guide on [Available
                            protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                            for information on protocol features. The `https`
                            protocol needs to be specified with both `ssl_cert`
                            and `ssl_key`.
                          enum:
                            - https
                          example: https
                          type: string
                          x-linode-cli-display: 3
                        proxy_protocol:
                          default: none
                          description: __Read-only__ Not applicable for HTTPS configs.
                          example: none
                          readOnly: true
                          type: string
                        ssl_cert:
                          description: >-

                            The PEM-formatted public SSL certificate (or the
                            combined PEM-formatted SSL certificate and
                            Certificate Authority chain) that should be served
                            on this NodeBalancerConfig's port.


                            Line breaks must be represented as `\n` in the
                            string for requests (but not when using the Linode
                            CLI).


                            [Diffie-Hellman
                            Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                            can be included in this value to enable forward
                            secrecy.


                            The contents of this field will not be shown in any
                            responses that display the NodeBalancerConfig.
                            Instead, `<REDACTED>` will be printed where the
                            field appears.


                            The read-only `ssl_commonname` and `ssl_fingerprint`
                            fields in a NodeBalancerConfig response are
                            automatically derived from your certificate. Please
                            refer to these fields to verify that the appropriate
                            certificate was assigned to your NodeBalancerConfig.
                          example: <REDACTED>
                          format: ssl-cert
                          nullable: true
                          type: string
                        ssl_commonname:
                          description: >-
                            __Read-only__ The read-only common name
                            automatically derived from the SSL certificate
                            assigned to this NodeBalancerConfig. Please refer to
                            this field to verify that the appropriate
                            certificate is assigned to your NodeBalancerConfig.
                          example: www.example.com
                          readOnly: true
                          type: string
                          x-linode-cli-display: 8
                        ssl_fingerprint:
                          description: >-
                            __Read-only__ The read-only SHA1-encoded fingerprint
                            automatically derived from the SSL certificate
                            assigned to this NodeBalancer configuration. Please
                            refer to the `ssl_fingerprint` field to verify that
                            the appropriate certificate is assigned to your
                            NodeBalancer configuration.
                          example: >-
                            00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                          readOnly: true
                          type: string
                          x-linode-cli-display: 9
                        ssl_key:
                          description: >-
                            The PEM-formatted private key for the SSL
                            certificate set in the `ssl_cert` field.


                            Line breaks must be represented as `\n` in the
                            string for requests (but not when using the Linode
                            CLI).


                            The contents of this field will not be shown in any
                            responses that display

                            the NodeBalancerConfig. Instead, `<REDACTED>` will
                            be printed where the field

                            appears.


                            The read-only `ssl_commonname` and `ssl_fingerprint`
                            fields in a NodeBalancerConfig

                            response are automatically derived from your
                            certificate. Please refer to these fields to

                            verify that the appropriate certificate was assigned
                            to your NodeBalancerConfig.
                          example: <REDACTED>
                          format: ssl-key
                          nullable: true
                          type: string
                        stickiness:
                          default: table
                          description: >-
                            Controls how session stickiness is handled on this
                            port.


                            - If set to `none`, connections will always be
                            assigned a backend based on the algorithm
                            configured.

                            - If set to `table`, sessions from the same remote
                            address will be routed to the same backend.

                            - For HTTP or HTTPS clients, `http_cookie` allows
                            sessions to be routed to the same backend based on a
                            cookie set by the NodeBalancer.
                          enum:
                            - none
                            - table
                            - http_cookie
                          example: http_cookie
                          type: string
                          x-linode-cli-display: 5
                      required:
                        - nodes
                      title: HTTPS
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-config-https.yaml
                  x-akamai:
                    file-path: schemas/node-balancer-config.yaml
                - additionalProperties: false
                  properties:
                    nodes:
                      description: |-
                        The NodeBalancer nodes that serve this config.

                        Some considerations for Nodes when rebuilding a config:

                          - Current Nodes excluded from the request body will be deleted from the Config.
                          - Current Nodes (identified by their Node ID) will be updated.
                          - New Nodes (included without a Node ID) will be created.
                      items:
                        additionalProperties: false
                        description: NodeBalancer node request object including ID.
                        properties:
                          address:
                            description: >-
                              Backend nodes can be Linodes and Linodes within a
                              VPC. The following IP types are supported:
                                - For non-VPC backend nodes, the private IPv4 address and port where this backend can be reached.
                                - For non-VPC backend nodes, the public IPv6 address and port where this backend can be reached.
                                - For backend nodes within a VPC, the IPv4 address and port where this backend can be reached.
                            example:
                              - 192.168.210.120:443
                              - 10.100.5.5:80
                              - '[2300:5800::f03c:93ff:fe6e:1264]:8080'
                            format: ip
                            type: string
                            x-linode-cli-display: 3
                          id:
                            description: The unique ID of the Node to update.
                            example: 54321
                            type: integer
                          label:
                            description: >-
                              The label for this node.  This is for display
                              purposes only.
                            example: node54321
                            maxLength: 32
                            minLength: 3
                            pattern: '[a-zA-Z0-9-_.]{3,32}'
                            type: string
                            x-linode-cli-display: 2
                          mode:
                            description: >-
                              The mode this NodeBalancer should use when sending
                              traffic to this backend.


                              - If set to `accept` this backend is accepting
                              traffic.

                              - If set to `reject` this backend will not receive
                              traffic.

                              - If set to `drain` this backend will not receive
                              _new_ traffic, but connections already pinned to
                              it will continue to be routed to it.

                              - If set to `backup`, this backend will only
                              receive traffic if all `accept` nodes are down.
                            enum:
                              - accept
                              - reject
                              - drain
                              - backup
                            example: accept
                            type: string
                            x-linode-cli-display: 6
                          subnet_id:
                            description: >-
                              Required for VPC backend nodes only. The VPC's
                              subnet. To display information about your VPCs and
                              their subnets, run the [List
                              VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                              operation.
                            example: 1
                            type: integer
                            x-linode-cli-display: 4
                          weight:
                            description: >-
                              Used when picking a backend to serve a request and
                              is not pinned to a single backend yet. Nodes with
                              a higher weight will receive more traffic.
                            example: 50
                            maximum: 255
                            minimum: 1
                            type: integer
                            x-linode-cli-display: 5
                        type: object
                      type: array
                  required:
                    - nodes
                  type: object
              x-akamai:
                file-path: schemas/added-post-rebuild-node-balancer-config.yaml
            x-example:
              x-ref: ../examples/post-rebuild-node-balancer-config.json
            x-linode-cli-use-schema:
              additionalProperties: false
              properties:
                algorithm:
                  default: roundrobin
                  description: >-
                    The algorithm this NodeBalancer should use to route traffic
                    to backends.

                    - If set to `roundrobin`, connections are allocated in a
                    weighted circular order across the backends.

                    - If set to `leastconn`, allocates new connections to the
                    backend with the least connections.

                    - If set to `source`, allocates the client's IP to the same
                    backend on subsequent requests. Session `stickiness` affects
                    this algorithm.
                  enum:
                    - roundrobin
                    - leastconn
                    - source
                  example: roundrobin
                  type: string
                  x-linode-cli-display: 4
                check:
                  default: none
                  description: >-
                    The type of check to perform against backends to ensure
                    they're serving requests. This determines if backends are up
                    or down.

                    - If `none`, no check is performed.

                    - If `connection`, requires a successful TCP handshake with
                    a backend node.

                    - If `http`, requires a 2xx or 3xx response from the backend
                    node.

                    - If `http_body`, requires the provided regular expression
                    matches against the request's result body.
                  enum:
                    - none
                    - connection
                    - http
                    - http_body
                  example: http_body
                  type: string
                check_attempts:
                  default: 3
                  description: >-
                    How many times to attempt a check before considering a
                    backend to be down.
                  example: 3
                  maximum: 30
                  minimum: 1
                  type: integer
                check_body:
                  description: >-
                    This value must be present in the response body of the check
                    in order for it to pass. If this value isn't present in the
                    response body of a check request, the backend is considered
                    to be down.
                  example: it works
                  type: string
                check_interval:
                  default: 31
                  description: >-
                    How often, in seconds, to check that backends are up and
                    serving requests.


                    Must be greater than `check_timeout`.
                  example: 90
                  type: integer
                check_passive:
                  default: true
                  description: >-
                    If `true`, any response from this backend with a `5xx`
                    status code will be enough for it to be considered unhealthy
                    and taken out of rotation.
                  example: true
                  type: boolean
                  x-linode-cli-display: 6
                check_path:
                  description: >-
                    The URL path to check on each backend. If the backend
                    doesn't respond to this request it's considered to be down.
                  example: /test
                  pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                  type: string
                check_timeout:
                  default: 30
                  description: >-
                    How long, in seconds, to wait for a check attempt before
                    considering it failed. Must be less than `check_interval`.
                  example: 10
                  maximum: 30
                  minimum: 1
                  type: integer
                cipher_suite:
                  default: recommended
                  description: >-
                    What ciphers to use for SSL connections served by this
                    NodeBalancer. The `legacy` cipher is considered insecure and
                    should only be used if necessary. For information on
                    recommended and legacy ciphers, see [TLS cipher
                    suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                  enum:
                    - recommended
                    - legacy
                  example: recommended
                  type: string
                  x-linode-cli-color:
                    default_: white
                    legacy: red
                  x-linode-cli-display: 7
                id:
                  description: __Read-only__ This config's unique ID.
                  example: 4567
                  readOnly: true
                  type: integer
                  x-linode-cli-display: 1
                nodebalancer_id:
                  description: >-
                    __Read-only__ The ID for the NodeBalancer this config
                    belongs to.
                  example: 12345
                  readOnly: true
                  type: integer
                nodes:
                  description: The NodeBalancer nodes that serve this configuration.
                  items:
                    additionalProperties: false
                    description: NodeBalancer Node request object including ID.
                    properties:
                      address:
                        description: >-
                          The address and port where this backend can be
                          reached: either the Linode’s private IPv4, public
                          IPv6, or the VPC's IPv4 address.
                        example: 192.168.210.120:80
                        format: ip
                        type: string
                        x-linode-cli-display: 3
                      id:
                        description: __Read-only__ This node's unique ID.
                        example: 54321
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      label:
                        description: >-
                          The label for this node.  This is for display purposes
                          only.
                        example: node54321
                        maxLength: 32
                        minLength: 3
                        pattern: '[a-zA-Z0-9-_.]{3,32}'
                        type: string
                        x-linode-cli-display: 2
                      mode:
                        description: >-
                          The mode this NodeBalancer should use when sending
                          traffic to this backend.


                          - If set to `accept` this backend is accepting
                          traffic.

                          - If set to `reject` this backend will not receive
                          traffic.

                          - If set to `drain` this backend will not receive
                          _new_ traffic, but connections already pinned to it
                          will continue to be routed to it.

                          - If set to `backup`, this backend will only receive
                          traffic if all `accept` nodes are down.
                        enum:
                          - accept
                          - reject
                          - drain
                          - backup
                        example: accept
                        type: string
                        x-linode-cli-display: 6
                      status:
                        description: >-
                          __Read-only__ The current status of this node, based
                          on the configured checks of its NodeBalancer Config.
                        enum:
                          - unknown
                          - UP
                          - DOWN
                        example: UP
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          DOWN: red
                          UP: green
                          default_: white
                          unknown: yellow
                        x-linode-cli-display: 4
                      weight:
                        description: >-
                          Used when picking a backend to serve a request and is
                          not pinned to a single backend yet. Nodes with a
                          higher weight will receive more traffic.
                        example: 50
                        maximum: 255
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 5
                    type: object
                  type: array
                nodes_status:
                  additionalProperties: false
                  description: >-
                    __Read-only__ A structure containing information about the
                    health of the backends for this port.  This information is
                    updated periodically as checks are performed against
                    backends.
                  properties:
                    down:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        "DOWN" and unhealthy.  These are not in rotation, and
                        not serving requests.
                      example: 0
                      readOnly: true
                      type: integer
                    up:
                      description: >-
                        __Read-only__ The number of backends considered to be
                        "UP" and healthy, and that are serving requests.
                      example: 4
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                  x-linode-cli-display: 10
                port:
                  default: 80
                  description: >-
                    The port for this config. Ports need to be unique across
                    configs for each NodeBalancer. For example, you can't have
                    two configs for port 80.  While some protocols are typically
                    assigned specific ports, there's no enforcement, and you can
                    configure your NodeBalancer however you find useful. For
                    example, while port 443 is generally used for HTTPS, you
                    don't need SSL configured to have a NodeBalancer listening
                    on port 443.
                  example: 80
                  maximum: 65535
                  minimum: 1
                  type: integer
                  x-linode-cli-display: 2
                protocol:
                  default: http
                  description: >-
                    The protocol this port is configured to serve.


                    - The `http` and `tcp` protocols don't support `ssl_cert`
                    and `ssl_key`.


                    - For the `https` protocol, you need `ssl_cert` and
                    `ssl_key`.


                    Review our guide on [Available
                    protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                    for information on protocol features.
                  enum:
                    - http
                    - https
                    - tcp
                  example: http
                  type: string
                  x-linode-cli-display: 3
                proxy_protocol:
                  default: none
                  description: >-
                    ProxyProtocol is a TCP extension that sends initial TCP
                    connection information such as source/destination IPs and
                    ports to backend devices. This information would be lost
                    otherwise. Backend devices must be configured to work with
                    ProxyProtocol if enabled.


                    - If omitted, or set to `none`, the NodeBalancer doesn't
                    send any auxiliary data over TCP connections. This is the
                    default.

                    - If set to `v1`, the human-readable header format (Version
                    1) is used. Requires `tcp` protocol.

                    - If set to `v2`, the binary header format (Version 2) is
                    used. Requires `tcp` protocol.
                  enum:
                    - none
                    - v1
                    - v2
                  example: none
                  type: string
                ssl_cert:
                  description: >-

                    The PEM-formatted public SSL certificate (or the combined
                    PEM-formatted SSL certificate and Certificate Authority
                    chain) that should be served on this NodeBalancerConfig's
                    port.


                    Line breaks must be represented as `\n` in the string for
                    requests (but not when using the Linode CLI).


                    [Diffie-Hellman
                    Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                    can be included in this value to enable forward secrecy.


                    The contents of this field will not be shown in any
                    responses that display the NodeBalancerConfig. Instead,
                    `<REDACTED>` will be printed where the field appears.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancerConfig response are automatically derived
                    from your certificate. Please refer to these fields to
                    verify that the appropriate certificate was assigned to your
                    NodeBalancerConfig.
                  example: <REDACTED>
                  format: ssl-cert
                  nullable: true
                  type: string
                ssl_commonname:
                  description: >-
                    __Read-only__ The read-only common name automatically
                    derived from the SSL certificate assigned to this
                    NodeBalancerConfig. Please refer to this field to verify
                    that the appropriate certificate is assigned to your
                    NodeBalancerConfig.
                  example: www.example.com
                  readOnly: true
                  type: string
                  x-linode-cli-display: 8
                ssl_fingerprint:
                  description: >-
                    __Read-only__ The read-only SHA1-encoded fingerprint
                    automatically derived from the SSL certificate assigned to
                    this NodeBalancer configuration. Please refer to the
                    `ssl_fingerprint` field to verify that the appropriate
                    certificate is assigned to your NodeBalancer configuration.
                  example: 00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                  readOnly: true
                  type: string
                  x-linode-cli-display: 9
                ssl_key:
                  description: >-
                    The PEM-formatted private key for the SSL certificate set in
                    the `ssl_cert` field.


                    Line breaks must be represented as `\n` in the string for
                    requests (but not when using the Linode CLI).


                    The contents of this field will not be shown in any
                    responses that display

                    the NodeBalancerConfig. Instead, `<REDACTED>` will be
                    printed where the field

                    appears.


                    The read-only `ssl_commonname` and `ssl_fingerprint` fields
                    in a NodeBalancerConfig

                    response are automatically derived from your certificate.
                    Please refer to these fields to

                    verify that the appropriate certificate was assigned to your
                    NodeBalancerConfig.
                  example: <REDACTED>
                  format: ssl-key
                  nullable: true
                  type: string
                stickiness:
                  default: none
                  description: >-
                    Controls how session stickiness is handled on this port.

                    - If set to `none`, connections will always be assigned a
                    backend based on the algorithm configured.

                    - If set to `table`, sessions from the same remote address
                    will be routed to the same backend.

                    - For HTTP or HTTPS clients, `http_cookie` allows sessions
                    to be routed to the same backend based on a cookie set by
                    the NodeBalancer.
                  enum:
                    - none
                    - table
                    - http_cookie
                  example: http_cookie
                  type: string
                  x-linode-cli-display: 5
              type: object
              x-akamai:
                file-path: schemas/node-balancer-config-rebuild-cli.yaml
              x-linode-cli-subtables:
                - nodes
        description: Information about the NodeBalancer configuration to rebuild.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: NodeBalancer `config` options for each protocol.
                oneOf:
                  - additionalProperties: false
                    description: >-
                      __Beta__ A NodeBalancer configuration defines the protocol
                      and settings for a specific port on the NodeBalancer.
                      These fields apply to UDP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this UDP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - ring_hash
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value isn't
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        description: __Read-only__ Must be `false` for UDP.
                        example: false
                        readOnly: true
                        type: boolean
                        x-linode-cli-display: 7
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `udp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 7000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `udp` in
                          this case. Review our guide on [Available
                          Protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                          for information on protocol features.
                        enum:
                          - udp
                        example: udp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        description: __Read-only__ Must be `none` for UDP.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for UPD configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for UDP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: session
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are assigned a backend
                          server based on the algorithm configured.

                          - If set to `session`, all packets with the same
                          session identifiers are routed to the same backend
                          server. Two packets are considered part of the same
                          session if they share the same source and destination
                          IP addresses or ports, and are received within a short
                          time window.

                          - If set to `source_ip`, the NodeBalancer uses the
                          client's source IP address to route all packets from
                          the same client to the same backend server.
                        enum:
                          - none
                          - session
                          - source_ip
                        example: none
                        type: string
                        x-linode-cli-display: 5
                      udp_check_port:
                        default: 80
                        description: >-
                          UDP NodeBalancers use TCP and HTTP active health
                          checks to ensure back-end nodes can receive traffic.
                          You can specify the health check port that the backend
                          node listens on, which may differ from the UDP port
                          used to serve traffic.
                        example: 5795
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 6
                      udp_session_timeout:
                        default: 16
                        description: >-
                          __Read-only__ The maximum duration in seconds, a UDP
                          session can be idle before it is closed.
                        example: 2
                        maximum: 300
                        minimum: 1
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 11
                    required:
                      - nodes
                    title: UDP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-udp-response.yaml
                      status: BETA
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to TCP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this TCP NodeBalancer uses to route
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: leastconn
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          This value must be present in the response body of the
                          check in order for it to pass. If this value is not
                          present in the response body of a check request, the
                          backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code is enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. If the backend
                          does not respond to this request, it's considered to
                          be down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 30
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `tcp` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 6000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 22
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `tcp` in
                          this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - tcp
                        example: tcp
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: >-
                          Proxy protocol is a TCP extension that sends initial
                          TCP connection information such as source or
                          destination IPs and ports to backend devices. Proxy
                          protocol preserves initial TCP information that would
                          be lost otherwise. Backend devices must be configured
                          to work with `proxy_protocol` if enabled.


                          - If omitted, or set to `none`, the NodeBalancer
                          doesn't send any auxiliary data over TCP connections.
                          This is the default.

                          - If set to `v1`, the human-readable header format
                          (Version 1) is used. Requires `tcp` protocol.

                          - If set to `v2`, the binary header format (Version 2)
                          is used. Requires `tcp` protocol.
                        enum:
                          - none
                          - v1
                          - v2
                        example: none
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for TCP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: none
                        description: >-
                          __Read-only__ Controls how session stickiness is
                          handled on this port.


                          Not applicable to TCP configurations.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: TCP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-tcp-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTP configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTP NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. This determines if
                          backends are up or down.


                          - If `none`, no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value needs to be in the response
                          body of the check in order for it to pass. Otherwise
                          the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          How often, in seconds, to check that backends are up
                          and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        description: __Read-only__ Not applicable for `http` configs.
                        example: none
                        readOnly: true
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 4000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ Identifies the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers need to be unique across
                          TCP, HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced. You may
                          configure your NodeBalancer however you find useful.
                        example: 80
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `http`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features.
                        enum:
                          - http
                        example: http
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      ssl_commonname:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: ''
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: __Read-only__ Not applicable for HTTP configs.
                        example: null
                        nullable: true
                        readOnly: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections are always assigned a
                          backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address are routed to the same backend.

                          - If set to `http_cookie`, sessions are routed to the
                          same backend based on a cookie set by the
                          NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTP
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-http-response.yaml
                  - additionalProperties: false
                    description: >-
                      A NodeBalancer configuration defines the protocol and
                      settings for a specific port on the NodeBalancer. These
                      fields apply to HTTPS configurations.
                    properties:
                      algorithm:
                        default: roundrobin
                        description: >-
                          The algorithm this HTTPS NodeBalancer uses for routing
                          traffic to backends.
                        enum:
                          - roundrobin
                          - leastconn
                          - source
                        example: roundrobin
                        type: string
                        x-linode-cli-display: 4
                      check:
                        default: none
                        description: >-
                          The type of check to perform against backends to
                          ensure they are serving requests. The `check` is used
                          to determine if backends are up or down.


                          - If `none` no check is performed.

                          - `connection` requires only a connection to the
                          backend to succeed.

                          - `http` and `http_body` rely on the backend serving
                          HTTP, and that the response returned matches what is
                          expected.
                        enum:
                          - none
                          - connection
                          - http
                          - http_body
                        example: http_body
                        type: string
                      check_attempts:
                        default: 3
                        description: >-
                          How many times to attempt a check before considering a
                          backend to be down.
                        example: 3
                        maximum: 30
                        minimum: 1
                        type: integer
                      check_body:
                        description: >-
                          Use when the active health `check` type is
                          `http_body`. This value must be present in the
                          response body of the check in order for it to pass. If
                          this value is not present in the response body of a
                          check request, the backend is considered to be down.
                        example: it works
                        type: string
                      check_interval:
                        default: 5
                        description: >-
                          The number of seconds between each check that backends
                          are up and serving requests.


                          Must be greater than `check_timeout`.
                        example: 90
                        maximum: 3600
                        minimum: 2
                        type: integer
                      check_passive:
                        default: true
                        description: >-
                          If `true`, any response from this backend with a `5xx`
                          status code will be enough for it to be considered
                          unhealthy and taken out of rotation.
                        example: true
                        type: boolean
                        x-linode-cli-display: 6
                      check_path:
                        description: >-
                          The URL path to check on each backend. Use when the
                          active health `check` type is `http`. If the backend
                          doesn't respond to this request, it's considered to be
                          down.
                        example: /test
                        pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                        type: string
                      check_timeout:
                        default: 3
                        description: >-
                          How long, in seconds, to wait for a check attempt
                          before considering it failed.


                          Must be less than `check_interval`.
                        example: 10
                        maximum: 30
                        minimum: 1
                        type: integer
                      cipher_suite:
                        default: recommended
                        description: >-
                          What ciphers to use for SSL connections served by this
                          NodeBalancer. The `legacy` cipher is considered
                          insecure and should only be used if necessary. For
                          information on recommended and legacy ciphers, see
                          [TLS cipher
                          suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                        enum:
                          - recommended
                          - legacy
                        example: recommended
                        type: string
                        x-linode-cli-color:
                          default_: white
                          legacy: red
                        x-linode-cli-display: 7
                      id:
                        description: __Read-only__ This config's unique ID.
                        example: 5000
                        readOnly: true
                        type: integer
                        x-linode-cli-display: 1
                      nodebalancer_id:
                        description: >-
                          __Read-only__ The ID for the NodeBalancer this config
                          belongs to.
                        example: 12345
                        readOnly: true
                        type: integer
                      nodes_status:
                        additionalProperties: false
                        description: >-
                          __Read-only__ Describes the health of the backends for
                          this port. This data updates periodically as checks
                          are performed against backends.
                        properties:
                          down:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `DOWN` and unhealthy.  These are not in
                              rotation, and not serving requests.
                            example: 0
                            readOnly: true
                            type: integer
                          up:
                            description: >-
                              __Read-only__ The number of backends considered to
                              be `UP` and healthy, and that are serving
                              requests.
                            example: 4
                            readOnly: true
                            type: integer
                        readOnly: true
                        type: object
                        x-linode-cli-display: 10
                      port:
                        default: 80
                        description: >-
                          This is the port the NodeBalancer listens on for this
                          configuration. Port numbers must be unique across TCP,
                          HTTP, and HTTPS configurations on a single
                          NodeBalancer. However, ports assigned to TCP, HTTP, or
                          HTTPS configurations can also be reused for UDP
                          configurations. For example, Port 80 can
                          simultaneously serve a TCP and a UDP configuration on
                          the same NodeBalancer, but it can't be shared by both
                          a TCP and an HTTP configuration. Although certain
                          ports are traditionally associated with specific
                          protocols, this isn't strictly enforced, and you may
                          configure your NodeBalancer however you find useful.
                        example: 443
                        maximum: 65535
                        minimum: 1
                        type: integer
                        x-linode-cli-display: 2
                      protocol:
                        default: http
                        description: >-
                          The protocol the port is configured to serve, `https`
                          in this case. Review our guide on [Available
                          protocols](https://techdocs.akamai.com/cloud-computing/docs/available-protocols)
                          for information on protocol features. The `https`
                          protocol needs to be specified with both `ssl_cert`
                          and `ssl_key`.
                        enum:
                          - https
                        example: https
                        type: string
                        x-linode-cli-display: 3
                      proxy_protocol:
                        default: none
                        description: __Read-only__ Not applicable for HTTPS configs.
                        example: none
                        readOnly: true
                        type: string
                      ssl_cert:
                        description: >-

                          The PEM-formatted public SSL certificate (or the
                          combined PEM-formatted SSL certificate and Certificate
                          Authority chain) that should be served on this
                          NodeBalancerConfig's port.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          [Diffie-Hellman
                          Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                          can be included in this value to enable forward
                          secrecy.


                          The contents of this field will not be shown in any
                          responses that display the NodeBalancerConfig.
                          Instead, `<REDACTED>` will be printed where the field
                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig response are
                          automatically derived from your certificate. Please
                          refer to these fields to verify that the appropriate
                          certificate was assigned to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-cert
                        nullable: true
                        type: string
                      ssl_commonname:
                        description: >-
                          __Read-only__ The read-only common name automatically
                          derived from the SSL certificate assigned to this
                          NodeBalancerConfig. Please refer to this field to
                          verify that the appropriate certificate is assigned to
                          your NodeBalancerConfig.
                        example: www.example.com
                        readOnly: true
                        type: string
                        x-linode-cli-display: 8
                      ssl_fingerprint:
                        description: >-
                          __Read-only__ The read-only SHA1-encoded fingerprint
                          automatically derived from the SSL certificate
                          assigned to this NodeBalancer configuration. Please
                          refer to the `ssl_fingerprint` field to verify that
                          the appropriate certificate is assigned to your
                          NodeBalancer configuration.
                        example: >-
                          00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                        readOnly: true
                        type: string
                        x-linode-cli-display: 9
                      ssl_key:
                        description: >-
                          The PEM-formatted private key for the SSL certificate
                          set in the `ssl_cert` field.


                          Line breaks must be represented as `\n` in the string
                          for requests (but not when using the Linode CLI).


                          The contents of this field will not be shown in any
                          responses that display

                          the NodeBalancerConfig. Instead, `<REDACTED>` will be
                          printed where the field

                          appears.


                          The read-only `ssl_commonname` and `ssl_fingerprint`
                          fields in a NodeBalancerConfig

                          response are automatically derived from your
                          certificate. Please refer to these fields to

                          verify that the appropriate certificate was assigned
                          to your NodeBalancerConfig.
                        example: <REDACTED>
                        format: ssl-key
                        nullable: true
                        type: string
                      stickiness:
                        default: table
                        description: >-
                          Controls how session stickiness is handled on this
                          port.


                          - If set to `none`, connections will always be
                          assigned a backend based on the algorithm configured.

                          - If set to `table`, sessions from the same remote
                          address will be routed to the same backend.

                          - For HTTP or HTTPS clients, `http_cookie` allows
                          sessions to be routed to the same backend based on a
                          cookie set by the NodeBalancer.
                        enum:
                          - none
                          - table
                          - http_cookie
                        example: http_cookie
                        type: string
                        x-linode-cli-display: 5
                    required:
                      - nodes
                    title: HTTPS
                    type: object
                    x-akamai:
                      file-path: schemas/node-balancer-config-https-response.yaml
                x-akamai:
                  file-path: schemas/node-balancer-config-response.yaml
              x-example:
                x-ref: ../examples/post-rebuild-node-balancer-config-200.json
              x-linode-cli-use-schema:
                additionalProperties: false
                properties:
                  algorithm:
                    default: roundrobin
                    description: >-
                      The algorithm this NodeBalancer should use to route
                      traffic to backends.

                      - If set to `roundrobin`, connections are allocated in a
                      weighted circular order across the backends.

                      - If set to `leastconn`, allocates new connections to the
                      backend with the least connections.

                      - If set to `source`, allocates the client's IP to the
                      same backend on subsequent requests. Session `stickiness`
                      affects this algorithm.
                    enum:
                      - roundrobin
                      - leastconn
                      - source
                    example: roundrobin
                    type: string
                    x-linode-cli-display: 4
                  check:
                    default: none
                    description: >-
                      The type of check to perform against backends to ensure
                      they're serving requests. This determines if backends are
                      up or down.

                      - If `none`, no check is performed.

                      - If `connection`, requires a successful TCP handshake
                      with a backend node.

                      - If `http`, requires a 2xx or 3xx response from the
                      backend node.

                      - If `http_body`, requires the provided regular expression
                      matches against the request's result body.
                    enum:
                      - none
                      - connection
                      - http
                      - http_body
                    example: http_body
                    type: string
                  check_attempts:
                    default: 3
                    description: >-
                      How many times to attempt a check before considering a
                      backend to be down.
                    example: 3
                    maximum: 30
                    minimum: 1
                    type: integer
                  check_body:
                    description: >-
                      This value must be present in the response body of the
                      check in order for it to pass. If this value isn't present
                      in the response body of a check request, the backend is
                      considered to be down.
                    example: it works
                    type: string
                  check_interval:
                    default: 31
                    description: >-
                      How often, in seconds, to check that backends are up and
                      serving requests.


                      Must be greater than `check_timeout`.
                    example: 90
                    type: integer
                  check_passive:
                    default: true
                    description: >-
                      If `true`, any response from this backend with a `5xx`
                      status code will be enough for it to be considered
                      unhealthy and taken out of rotation.
                    example: true
                    type: boolean
                    x-linode-cli-display: 6
                  check_path:
                    description: >-
                      The URL path to check on each backend. If the backend
                      doesn't respond to this request it's considered to be
                      down.
                    example: /test
                    pattern: ^[a-zA-Z0-9\/\-%?&=.]*$
                    type: string
                  check_timeout:
                    default: 30
                    description: >-
                      How long, in seconds, to wait for a check attempt before
                      considering it failed. Must be less than `check_interval`.
                    example: 10
                    maximum: 30
                    minimum: 1
                    type: integer
                  cipher_suite:
                    default: recommended
                    description: >-
                      What ciphers to use for SSL connections served by this
                      NodeBalancer. The `legacy` cipher is considered insecure
                      and should only be used if necessary. For information on
                      recommended and legacy ciphers, see [TLS cipher
                      suites](https://techdocs.akamai.com/cloud-computing/docs/tls-ssl-termination-on-nodebalancers#tls-cipher-suites).
                    enum:
                      - recommended
                      - legacy
                    example: recommended
                    type: string
                    x-linode-cli-color:
                      default_: white
                      legacy: red
                    x-linode-cli-display: 7
                  id:
                    description: __Read-only__ This config's unique ID.
                    example: 4567
                    readOnly: true
                    type: integer
                    x-linode-cli-display: 1
                  nodebalancer_id:
                    description: >-
                      __Read-only__ The ID for the NodeBalancer this config
                      belongs to.
                    example: 12345
                    readOnly: true
                    type: integer
                  nodes:
                    description: The NodeBalancer nodes that serve this configuration.
                    items:
                      additionalProperties: false
                      description: NodeBalancer Node request object including ID.
                      properties:
                        address:
                          description: >-
                            The address and port where this backend can be
                            reached: either the Linode’s private IPv4, public
                            IPv6, or the VPC's IPv4 address.
                          example: 192.168.210.120:80
                          format: ip
                          type: string
                          x-linode-cli-display: 3
                        id:
                          description: __Read-only__ This node's unique ID.
                          example: 54321
                          readOnly: true
                          type: integer
                          x-linode-cli-display: 1
                        label:
                          description: >-
                            The label for this node.  This is for display
                            purposes only.
                          example: node54321
                          maxLength: 32
                          minLength: 3
                          pattern: '[a-zA-Z0-9-_.]{3,32}'
                          type: string
                          x-linode-cli-display: 2
                        mode:
                          description: >-
                            The mode this NodeBalancer should use when sending
                            traffic to this backend.


                            - If set to `accept` this backend is accepting
                            traffic.

                            - If set to `reject` this backend will not receive
                            traffic.

                            - If set to `drain` this backend will not receive
                            _new_ traffic, but connections already pinned to it
                            will continue to be routed to it.

                            - If set to `backup`, this backend will only receive
                            traffic if all `accept` nodes are down.
                          enum:
                            - accept
                            - reject
                            - drain
                            - backup
                          example: accept
                          type: string
                          x-linode-cli-display: 6
                        status:
                          description: >-
                            __Read-only__ The current status of this node, based
                            on the configured checks of its NodeBalancer Config.
                          enum:
                            - unknown
                            - UP
                            - DOWN
                          example: UP
                          readOnly: true
                          type: string
                          x-linode-cli-color:
                            DOWN: red
                            UP: green
                            default_: white
                            unknown: yellow
                          x-linode-cli-display: 4
                        weight:
                          description: >-
                            Used when picking a backend to serve a request and
                            is not pinned to a single backend yet. Nodes with a
                            higher weight will receive more traffic.
                          example: 50
                          maximum: 255
                          minimum: 1
                          type: integer
                          x-linode-cli-display: 5
                      type: object
                    type: array
                  nodes_status:
                    additionalProperties: false
                    description: >-
                      __Read-only__ A structure containing information about the
                      health of the backends for this port.  This information is
                      updated periodically as checks are performed against
                      backends.
                    properties:
                      down:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          "DOWN" and unhealthy.  These are not in rotation, and
                          not serving requests.
                        example: 0
                        readOnly: true
                        type: integer
                      up:
                        description: >-
                          __Read-only__ The number of backends considered to be
                          "UP" and healthy, and that are serving requests.
                        example: 4
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                    x-linode-cli-display: 10
                  port:
                    default: 80
                    description: >-
                      The port for this config. Ports need to be unique across
                      configs for each NodeBalancer. For example, you can't have
                      two configs for port 80.  While some protocols are
                      typically assigned specific ports, there's no enforcement,
                      and you can configure your NodeBalancer however you find
                      useful. For example, while port 443 is generally used for
                      HTTPS, you don't need SSL configured to have a
                      NodeBalancer listening on port 443.
                    example: 80
                    maximum: 65535
                    minimum: 1
                    type: integer
                    x-linode-cli-display: 2
                  protocol:
                    default: http
                    description: >-
                      The protocol this port is configured to serve.


                      - The `http` and `tcp` protocols don't support `ssl_cert`
                      and `ssl_key`.


                      - For the `https` protocol, you need `ssl_cert` and
                      `ssl_key`.


                      Review our guide on [Available
                      protocols](https://www.linode.com/docs/products/networking/nodebalancers/guides/protocols/)
                      for information on protocol features.
                    enum:
                      - http
                      - https
                      - tcp
                    example: http
                    type: string
                    x-linode-cli-display: 3
                  proxy_protocol:
                    default: none
                    description: >-
                      ProxyProtocol is a TCP extension that sends initial TCP
                      connection information such as source/destination IPs and
                      ports to backend devices. This information would be lost
                      otherwise. Backend devices must be configured to work with
                      ProxyProtocol if enabled.


                      - If omitted, or set to `none`, the NodeBalancer doesn't
                      send any auxiliary data over TCP connections. This is the
                      default.

                      - If set to `v1`, the human-readable header format
                      (Version 1) is used. Requires `tcp` protocol.

                      - If set to `v2`, the binary header format (Version 2) is
                      used. Requires `tcp` protocol.
                    enum:
                      - none
                      - v1
                      - v2
                    example: none
                    type: string
                  ssl_cert:
                    description: >-

                      The PEM-formatted public SSL certificate (or the combined
                      PEM-formatted SSL certificate and Certificate Authority
                      chain) that should be served on this NodeBalancerConfig's
                      port.


                      Line breaks must be represented as `\n` in the string for
                      requests (but not when using the Linode CLI).


                      [Diffie-Hellman
                      Parameters](https://www.linode.com/docs/products/networking/nodebalancers/guides/ssl-termination/#diffie-hellman-parameters)
                      can be included in this value to enable forward secrecy.


                      The contents of this field will not be shown in any
                      responses that display the NodeBalancerConfig. Instead,
                      `<REDACTED>` will be printed where the field appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig response are automatically
                      derived from your certificate. Please refer to these
                      fields to verify that the appropriate certificate was
                      assigned to your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-cert
                    nullable: true
                    type: string
                  ssl_commonname:
                    description: >-
                      __Read-only__ The read-only common name automatically
                      derived from the SSL certificate assigned to this
                      NodeBalancerConfig. Please refer to this field to verify
                      that the appropriate certificate is assigned to your
                      NodeBalancerConfig.
                    example: www.example.com
                    readOnly: true
                    type: string
                    x-linode-cli-display: 8
                  ssl_fingerprint:
                    description: >-
                      __Read-only__ The read-only SHA1-encoded fingerprint
                      automatically derived from the SSL certificate assigned to
                      this NodeBalancer configuration. Please refer to the
                      `ssl_fingerprint` field to verify that the appropriate
                      certificate is assigned to your NodeBalancer
                      configuration.
                    example: >-
                      00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F:10:11:12:13
                    readOnly: true
                    type: string
                    x-linode-cli-display: 9
                  ssl_key:
                    description: >-
                      The PEM-formatted private key for the SSL certificate set
                      in the `ssl_cert` field.


                      Line breaks must be represented as `\n` in the string for
                      requests (but not when using the Linode CLI).


                      The contents of this field will not be shown in any
                      responses that display

                      the NodeBalancerConfig. Instead, `<REDACTED>` will be
                      printed where the field

                      appears.


                      The read-only `ssl_commonname` and `ssl_fingerprint`
                      fields in a NodeBalancerConfig

                      response are automatically derived from your certificate.
                      Please refer to these fields to

                      verify that the appropriate certificate was assigned to
                      your NodeBalancerConfig.
                    example: <REDACTED>
                    format: ssl-key
                    nullable: true
                    type: string
                  stickiness:
                    default: none
                    description: >-
                      Controls how session stickiness is handled on this port.

                      - If set to `none`, connections will always be assigned a
                      backend based on the algorithm configured.

                      - If set to `table`, sessions from the same remote address
                      will be routed to the same backend.

                      - For HTTP or HTTPS clients, `http_cookie` allows sessions
                      to be routed to the same backend based on a cookie set by
                      the NodeBalancer.
                    enum:
                      - none
                      - table
                      - http_cookie
                    example: http_cookie
                    type: string
                    x-linode-cli-display: 5
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-config-rebuild-cli.yaml
                x-linode-cli-subtables:
                  - nodes
          description: NodeBalancer created successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Rebuild a config
      tags:
        - Configurations
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers config-rebuild \
                12345 4567 \
                --port 443 \
                --protocol https \
                --algorithm roundrobin \
                --stickiness http_cookie \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --check_passive true \
                --proxy_protocol "none" \
                --ssl_cert "-----BEGIN CERTIFICATE-----
                            CERTIFICATE_INFORMATION
                            -----END CERTIFICATE-----" \
                --ssl_key "-----BEGIN PRIVATE KEY-----
                           PRIVATE_KEY_INFORMATION
                           -----END PRIVATE KEY-----" \
                --cipher_suite recommended \
                --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
                --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
                --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            title: 'CLI: HTTPS'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-rebuild \
                 12345 4567 \
                 --port 80 \
                 --protocol udp \
                 --algorithm ring_hash \
                 --udp_check_port 80 \
                 --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
                 --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50}]' \
                 --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            title: 'CLI: UDP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: |-
              linode-cli nodebalancers config-rebuild \
                12345 4567 \
                --port 80 \
                --protocol tcp \
                --algorithm roundrobin \
                --stickiness none \
                --proxy_protocol "v2"
                --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
                --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
                --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            title: 'CLI: TCP'
            url: https://www.linode.com/docs/products/tools/cli/get-started/
          - syntax: |-
              linode-cli nodebalancers config-rebuild \
                12345 4567 \
                --port 440 \
                --protocol http \
                --algorithm roundrobin \
                --stickiness none \
                --check http_body \
                --check_interval 90 \
                --check_timeout 10 \
                --check_attempts 3 \
                --check_path "/test" \
                --check_body "it works" \
                --nodes.label "node1" --nodes.address "192.168.210.120:80" --nodes.mode "accept" --nodes.weight 50 \
                --nodes '[{"address":"192.168.210.122:80","label":"node2","weight":50,"mode":"accept"}]' \
                --nodes '[{"address":"10.0.0.45:80","label":"vpc-node","weight":10,"mode":"accept","subnet_id:1"}]'
            title: 'CLI: HTTP'
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: config-rebuild
      x-linode-grant: add_nodebalancers
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
      - description: The ID of the Config to access.
        example: '{{configId}}'
        in: path
        name: configId
        required: true
        schema:
          example: 521
          type: integer
        x-akamai:
          file-path: parameters/config-id.yaml
    x-akamai:
      file-path: paths/config-rebuild.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/configs/{configId}/rebuild
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/firewalls:
    get:
      description: >-
        View information for Firewalls assigned to this NodeBalancer.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-firewalls
      operationId: get-node-balancer-firewalls
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  - created: '2018-01-01T00:01:01'
                    id: 123
                    label: firewall123
                    rules:
                      inbound:
                        - action: ACCEPT
                          addresses:
                            ipv4:
                              - 192.0.2.0/24
                              - 192.0.2.167/24
                            ipv6:
                              - 2001:DB8::/128
                          description: An example firewall rule description.
                          label: firewallrule123
                          ports: 22-24, 80, 443
                          protocol: TCP
                      inbound_policy: DROP
                      outbound:
                        - action: ACCEPT
                          addresses:
                            ipv4:
                              - 192.0.2.0/24
                              - 192.0.2.1/24
                            ipv6:
                              - 2001:DB8::/128
                          description: An example firewall rule description.
                          label: firewallrule123
                          ports: 22-24, 80, 443
                          protocol: TCP
                      outbound_policy: DROP
                    status: enabled
                    tags:
                      - example tag
                      - another example
                    updated: '2018-01-02T00:01:01'
                page: 1
                pages: 1
                results: 1
              schema:
                allOf:
                  - additionalProperties: false
                    description: >-
                      An envelope for paginated response. When accessing a
                      collection through a GET endpoint, the results are wrapped
                      in this envelope which includes metadata about those
                      results. Results are presented within a `data` array. See
                      [Pagination](https://techdocs.akamai.com/linode-api/reference/pagination)
                      for more information.
                    properties:
                      page:
                        description: >-
                          __Read-only__ The current
                          [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                        example: 1
                        readOnly: true
                        type: integer
                      pages:
                        description: >-
                          __Read-only__ The total number of
                          [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                        example: 1
                        readOnly: true
                        type: integer
                      results:
                        description: __Read-only__ The total number of results.
                        example: 1
                        readOnly: true
                        type: integer
                    type: object
                    x-akamai:
                      file-path: schemas/pagination-envelope.yaml
                  - properties:
                      data:
                        items:
                          additionalProperties: false
                          description: >-
                            A resource that controls incoming and outgoing
                            network traffic to a compute service. Only one
                            enabled Firewall can be attached to a particular
                            service at any given time. [Create a firewall
                            device](https://techdocs.akamai.com/linode-api/reference/post-firewall-device)
                            to assign a Firewall to a service. Currently,
                            Firewalls can assigned to Linode compute instances
                            and NodeBalancers.
                          properties:
                            created:
                              description: >-
                                __Filterable__, __Read-only__ When this Firewall
                                was created.
                              example: '2018-01-01T00:01:01'
                              format: date-time
                              readOnly: true
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 4
                              x-linode-filterable: true
                            id:
                              description: >-
                                __Filterable__, __Read-only__ The Firewall's
                                unique ID.
                              example: 123
                              readOnly: true
                              type: integer
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 1
                              x-linode-filterable: true
                            label:
                              description: >-
                                __Filterable__ The Firewall's label, for display
                                purposes only.


                                Firewall labels have the following constraints:

                                  - Must begin and end with an alphanumeric character.
                                  - May only consist of alphanumeric characters, hyphens (`-`), underscores (`_`) or periods (`.`).
                                  - Cannot have two hyphens (`--`), underscores (`__`) or periods (`..`) in a row.
                                  - Must be between 3 and 32 characters.
                                  - Must be unique.
                              example: firewall123
                              maxLength: 32
                              minLength: 3
                              pattern: ^[a-zA-Z]((?!--|__|\.\.)[a-zA-Z0-9-_.])+$
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 2
                              x-linode-filterable: true
                            rules:
                              additionalProperties: false
                              description: >-
                                The inbound and outbound access rules to apply
                                to the Firewall.


                                A Firewall may have up to 25 rules across its
                                inbound and outbound rulesets.


                                Multiple rules are applied in order. If two
                                rules conflict, the first rule takes precedence.
                                For example, if the first rule accepts inbound
                                traffic from an address, and the second rule
                                drops inbound traffic the same address, the
                                first rule applies and inbound traffic from that
                                address is accepted.
                              properties:
                                fingerprint:
                                  description: >-
                                    __Read-only__ The fingerprint is a 32-bit
                                    hash. It represents the firewall rules as an
                                    8 character hex string. You can use
                                    `fingerprint` to compare rule versions.
                                  example: 997dd135
                                  readOnly: true
                                  type: string
                                inbound:
                                  description: >-
                                    The inbound rules for the firewall, as a
                                    JSON array.
                                  items:
                                    additionalProperties: false
                                    description: >-
                                      One of a Firewall's inbound or outbound
                                      access rules. The `ports` property can be
                                      used to allow traffic on a comma-separated
                                      list of different ports.
                                    properties:
                                      action:
                                        description: >-
                                          Controls whether traffic is accepted or
                                          dropped by this rule. Overrides the
                                          Firewall's `inbound_policy` if this is
                                          an inbound rule, or the
                                          `outbound_policy` if this is an outbound
                                          rule.
                                        enum:
                                          - ACCEPT
                                          - DROP
                                        example: ACCEPT
                                        type: string
                                      addresses:
                                        additionalProperties: false
                                        description: >-
                                          The IPv4 or IPv6 addresses affected by
                                          this rule. A rule can have up to 255
                                          total addresses or networks listed
                                          across its `ipv4` and `ipv6` arrays. A
                                          network and a single IP are treated as
                                          equivalent when accounting for this
                                          limit.


                                          Must contain `ipv4`, `ipv6`, or both.
                                        properties:
                                          ipv4:
                                            description: >-
                                              A list of IPv4 addresses or networks.
                                              Addresses must be in IP/mask format.
                                              Must not be an empty list.


                                              If `0.0.0.0/0` is included in this list,
                                              all IPv4 addresses are affected by this
                                              rule.
                                            example:
                                              - 192.0.2.0/24
                                              - 198.51.100.2/32
                                            items:
                                              type: string
                                            type: array
                                          ipv6:
                                            description: >-
                                              A list of IPv6 addresses or networks.
                                              Addresses must be in IP/mask format and
                                              must not include zone_id notation as
                                              described in [RFC
                                              4007](https://www.rfc-editor.org/rfc/rfc4007).
                                              Must not be an empty list.


                                              If `::/0` is included in this list, all
                                              IPv6 addresses are affected by this
                                              rule.
                                            example:
                                              - 2001:DB8::/128
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      description:
                                        description: >-
                                          Used to describe this rule. For display
                                          purposes only.
                                        example: An example firewall rule description.
                                        maxLength: 100
                                        minLength: 1
                                        type: string
                                      label:
                                        description: >-
                                          Used to identify this rule. For display
                                          purposes only.
                                        example: firewallrule123
                                        maxLength: 32
                                        minLength: 3
                                        type: string
                                      ports:
                                        description: >-
                                          A string representing the port or ports
                                          affected by this rule:


                                          - The string may be a single port, a
                                          range of ports, or a comma-separated
                                          list of single ports and port ranges. A
                                          space is permitted following each comma.

                                          - A range of ports is inclusive of the
                                          start and end values for the range. The
                                          end value of the range must be greater
                                          than the start value.

                                          - Ports must be within 1 and 65535, and
                                          may not contain any leading zeroes. For
                                          example, port `080` is not allowed.

                                          - The ports string can have up to 15
                                          _pieces_, where a single port is treated
                                          as one piece, and a port range is
                                          treated as two pieces. For example, the
                                          string "22-24, 80, 443" has four pieces.

                                          - If no ports are configured, all ports
                                          are affected.

                                          - Only allowed for the TCP and UDP
                                          protocols. Ports are not allowed for the
                                          ICMP and IPENCAP protocols.
                                        example: 22-24, 80, 443
                                        nullable: true
                                        type: string
                                      protocol:
                                        description: >-
                                          The type of network traffic affected by
                                          this rule.
                                        enum:
                                          - TCP
                                          - UDP
                                          - ICMP
                                          - IPENCAP
                                        example: TCP
                                        type: string
                                    type: object
                                    x-akamai:
                                      file-path: schemas/firewall-rule-config.yaml
                                  type: array
                                  x-linode-cli-format: json
                                inbound_policy:
                                  description: >-
                                    The default behavior for inbound traffic.
                                    This setting can be overridden by
                                    [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules)
                                    the `inbound.action` property of the
                                    Firewall Rule.
                                  enum:
                                    - ACCEPT
                                    - DROP
                                  example: DROP
                                  type: string
                                outbound:
                                  description: >-
                                    The outbound rules for the firewall, as a
                                    JSON array.
                                  items:
                                    additionalProperties: false
                                    description: >-
                                      One of a Firewall's inbound or outbound
                                      access rules. The `ports` property can be
                                      used to allow traffic on a comma-separated
                                      list of different ports.
                                    properties:
                                      action:
                                        description: >-
                                          Controls whether traffic is accepted or
                                          dropped by this rule. Overrides the
                                          Firewall's `inbound_policy` if this is
                                          an inbound rule, or the
                                          `outbound_policy` if this is an outbound
                                          rule.
                                        enum:
                                          - ACCEPT
                                          - DROP
                                        example: ACCEPT
                                        type: string
                                      addresses:
                                        additionalProperties: false
                                        description: >-
                                          The IPv4 or IPv6 addresses affected by
                                          this rule. A rule can have up to 255
                                          total addresses or networks listed
                                          across its `ipv4` and `ipv6` arrays. A
                                          network and a single IP are treated as
                                          equivalent when accounting for this
                                          limit.


                                          Must contain `ipv4`, `ipv6`, or both.
                                        properties:
                                          ipv4:
                                            description: >-
                                              A list of IPv4 addresses or networks.
                                              Addresses must be in IP/mask format.
                                              Must not be an empty list.


                                              If `0.0.0.0/0` is included in this list,
                                              all IPv4 addresses are affected by this
                                              rule.
                                            example:
                                              - 192.0.2.0/24
                                              - 198.51.100.2/32
                                            items:
                                              type: string
                                            type: array
                                          ipv6:
                                            description: >-
                                              A list of IPv6 addresses or networks.
                                              Addresses must be in IP/mask format and
                                              must not include zone_id notation as
                                              described in [RFC
                                              4007](https://www.rfc-editor.org/rfc/rfc4007).
                                              Must not be an empty list.


                                              If `::/0` is included in this list, all
                                              IPv6 addresses are affected by this
                                              rule.
                                            example:
                                              - 2001:DB8::/128
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      description:
                                        description: >-
                                          Used to describe this rule. For display
                                          purposes only.
                                        example: An example firewall rule description.
                                        maxLength: 100
                                        minLength: 1
                                        type: string
                                      label:
                                        description: >-
                                          Used to identify this rule. For display
                                          purposes only.
                                        example: firewallrule123
                                        maxLength: 32
                                        minLength: 3
                                        type: string
                                      ports:
                                        description: >-
                                          A string representing the port or ports
                                          affected by this rule:


                                          - The string may be a single port, a
                                          range of ports, or a comma-separated
                                          list of single ports and port ranges. A
                                          space is permitted following each comma.

                                          - A range of ports is inclusive of the
                                          start and end values for the range. The
                                          end value of the range must be greater
                                          than the start value.

                                          - Ports must be within 1 and 65535, and
                                          may not contain any leading zeroes. For
                                          example, port `080` is not allowed.

                                          - The ports string can have up to 15
                                          _pieces_, where a single port is treated
                                          as one piece, and a port range is
                                          treated as two pieces. For example, the
                                          string "22-24, 80, 443" has four pieces.

                                          - If no ports are configured, all ports
                                          are affected.

                                          - Only allowed for the TCP and UDP
                                          protocols. Ports are not allowed for the
                                          ICMP and IPENCAP protocols.
                                        example: 22-24, 80, 443
                                        nullable: true
                                        type: string
                                      protocol:
                                        description: >-
                                          The type of network traffic affected by
                                          this rule.
                                        enum:
                                          - TCP
                                          - UDP
                                          - ICMP
                                          - IPENCAP
                                        example: TCP
                                        type: string
                                    type: object
                                    x-akamai:
                                      file-path: schemas/firewall-rule-config.yaml
                                  type: array
                                  x-linode-cli-format: json
                                outbound_policy:
                                  description: >-
                                    The default behavior for outbound traffic.
                                    This setting can be overridden by
                                    [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules)
                                    the `outbound.action` property of the
                                    Firewall Rule.
                                  enum:
                                    - ACCEPT
                                    - DROP
                                  example: DROP
                                  type: string
                                version:
                                  description: >-
                                    __Read-only__ The firewall's rule version.
                                    The first version is `1`. The version number
                                    is incremented when the firewall's rules
                                    change.
                                  example: 1
                                  readOnly: true
                                  type: integer
                              type: object
                            status:
                              description: |-
                                __Read-only__ The status of this Firewall.

                                  - When a Firewall is first created its status is `enabled`.
                                  - Run the [Update a firewall](https://techdocs.akamai.com/linode-api/reference/put-firewall) operation to set a Firewall's status to `enabled` or `disabled`.
                                  - Run the [Delete a firewall](https://techdocs.akamai.com/linode-api/reference/delete-firewall) operation to delete a Firewall.
                              enum:
                                - enabled
                                - disabled
                                - deleted
                              example: enabled
                              readOnly: true
                              type: string
                              x-linode-cli-display: 3
                            tags:
                              description: >-
                                __Filterable__ An array of tags applied to this
                                object. Tags are for organizational purposes
                                only.
                              example:
                                - example tag
                                - another example
                              items:
                                type: string
                              type: array
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-filterable: true
                            updated:
                              description: >-
                                __Filterable__, __Read-only__ When this Firewall
                                was last updated.
                              example: '2018-01-02T00:01:01'
                              format: date-time
                              readOnly: true
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 5
                              x-linode-filterable: true
                          type: object
                          x-akamai:
                            file-path: schemas/firewall.yaml
                        type: array
                    type: object
                x-akamai:
                  file-path: schemas/added-get-node-balancer-firewalls-200.yaml
          description: Returns a paginated list of Firewalls assigned to this NodeBalancer.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: List NodeBalancer firewalls
      tags:
        - Firewalls
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers firewalls $nodeBalancerId
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: firewalls
      x-linode-grant: read_only
    put:
      description: >-
        Replace the current list of assigned firewalls with a new list, or
        provide an empty list to remove all firewalls from this NodeBalancer.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/put-node-balancer-firewalls
      operationId: put-node-balancer-firewalls
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              description: >-
                Replace or remove firewalls IDs assigned to a Linode or
                NodeBalancer.
              properties:
                firewall_ids:
                  description: >-
                    A complete list of firewall IDs to assign to this Linode or
                    NodeBalancer. This operation replaces any existing
                    assignments. To remove all firewalls, pass an empty list,
                    `[]`.
                  example: 1234
                  items:
                    type: integer
                  minItems: 0
                  type: array
              required:
                - firewall_ids
              type: object
              x-akamai:
                file-path: schemas/firewall-ids-request.yaml
            x-example:
              x-ref: ../examples/put-node-balancer.json
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  - created: '2018-01-01T00:01:01'
                    id: 123
                    label: firewall123
                    rules:
                      inbound:
                        - action: ACCEPT
                          addresses:
                            ipv4:
                              - 192.0.2.0/24
                              - 192.0.2.167/24
                            ipv6:
                              - 2001:DB8::/128
                          description: An example firewall rule description.
                          label: firewallrule123
                          ports: 22-24, 80, 443
                          protocol: TCP
                      inbound_policy: DROP
                      outbound:
                        - action: ACCEPT
                          addresses:
                            ipv4:
                              - 192.0.2.0/24
                              - 192.0.2.1/24
                            ipv6:
                              - 2001:DB8::/128
                          description: An example firewall rule description.
                          label: firewallrule123
                          ports: 22-24, 80, 443
                          protocol: TCP
                      outbound_policy: DROP
                    status: enabled
                    tags:
                      - example tag
                      - another example
                    updated: '2018-01-02T00:01:01'
                page: 1
                pages: 1
                results: 1
              schema:
                allOf:
                  - additionalProperties: false
                    description: >-
                      An envelope for paginated response. When accessing a
                      collection through a GET endpoint, the results are wrapped
                      in this envelope which includes metadata about those
                      results. Results are presented within a `data` array. See
                      [Pagination](https://techdocs.akamai.com/linode-api/reference/pagination)
                      for more information.
                    properties:
                      page:
                        description: >-
                          __Read-only__ The current
                          [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                        example: 1
                        readOnly: true
                        type: integer
                      pages:
                        description: >-
                          __Read-only__ The total number of
                          [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                        example: 1
                        readOnly: true
                        type: integer
                      results:
                        description: __Read-only__ The total number of results.
                        example: 1
                        readOnly: true
                        type: integer
                    type: object
                    x-akamai:
                      file-path: schemas/pagination-envelope.yaml
                  - properties:
                      data:
                        items:
                          additionalProperties: false
                          description: >-
                            A resource that controls incoming and outgoing
                            network traffic to a compute service. Only one
                            enabled Firewall can be attached to a particular
                            service at any given time. [Create a firewall
                            device](https://techdocs.akamai.com/linode-api/reference/post-firewall-device)
                            to assign a Firewall to a service. Currently,
                            Firewalls can assigned to Linode compute instances
                            and NodeBalancers.
                          properties:
                            created:
                              description: >-
                                __Filterable__, __Read-only__ When this Firewall
                                was created.
                              example: '2018-01-01T00:01:01'
                              format: date-time
                              readOnly: true
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 4
                              x-linode-filterable: true
                            id:
                              description: >-
                                __Filterable__, __Read-only__ The Firewall's
                                unique ID.
                              example: 123
                              readOnly: true
                              type: integer
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 1
                              x-linode-filterable: true
                            label:
                              description: >-
                                __Filterable__ The Firewall's label, for display
                                purposes only.


                                Firewall labels have the following constraints:

                                  - Must begin and end with an alphanumeric character.
                                  - May only consist of alphanumeric characters, hyphens (`-`), underscores (`_`) or periods (`.`).
                                  - Cannot have two hyphens (`--`), underscores (`__`) or periods (`..`) in a row.
                                  - Must be between 3 and 32 characters.
                                  - Must be unique.
                              example: firewall123
                              maxLength: 32
                              minLength: 3
                              pattern: ^[a-zA-Z]((?!--|__|\.\.)[a-zA-Z0-9-_.])+$
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 2
                              x-linode-filterable: true
                            rules:
                              additionalProperties: false
                              description: >-
                                The inbound and outbound access rules to apply
                                to the Firewall.


                                A Firewall may have up to 25 rules across its
                                inbound and outbound rulesets.


                                Multiple rules are applied in order. If two
                                rules conflict, the first rule takes precedence.
                                For example, if the first rule accepts inbound
                                traffic from an address, and the second rule
                                drops inbound traffic the same address, the
                                first rule applies and inbound traffic from that
                                address is accepted.
                              properties:
                                fingerprint:
                                  description: >-
                                    __Read-only__ The fingerprint is a 32-bit
                                    hash. It represents the firewall rules as an
                                    8 character hex string. You can use
                                    `fingerprint` to compare rule versions.
                                  example: 997dd135
                                  readOnly: true
                                  type: string
                                inbound:
                                  description: >-
                                    The inbound rules for the firewall, as a
                                    JSON array.
                                  items:
                                    additionalProperties: false
                                    description: >-
                                      One of a Firewall's inbound or outbound
                                      access rules. The `ports` property can be
                                      used to allow traffic on a comma-separated
                                      list of different ports.
                                    properties:
                                      action:
                                        description: >-
                                          Controls whether traffic is accepted or
                                          dropped by this rule. Overrides the
                                          Firewall's `inbound_policy` if this is
                                          an inbound rule, or the
                                          `outbound_policy` if this is an outbound
                                          rule.
                                        enum:
                                          - ACCEPT
                                          - DROP
                                        example: ACCEPT
                                        type: string
                                      addresses:
                                        additionalProperties: false
                                        description: >-
                                          The IPv4 or IPv6 addresses affected by
                                          this rule. A rule can have up to 255
                                          total addresses or networks listed
                                          across its `ipv4` and `ipv6` arrays. A
                                          network and a single IP are treated as
                                          equivalent when accounting for this
                                          limit.


                                          Must contain `ipv4`, `ipv6`, or both.
                                        properties:
                                          ipv4:
                                            description: >-
                                              A list of IPv4 addresses or networks.
                                              Addresses must be in IP/mask format.
                                              Must not be an empty list.


                                              If `0.0.0.0/0` is included in this list,
                                              all IPv4 addresses are affected by this
                                              rule.
                                            example:
                                              - 192.0.2.0/24
                                              - 198.51.100.2/32
                                            items:
                                              type: string
                                            type: array
                                          ipv6:
                                            description: >-
                                              A list of IPv6 addresses or networks.
                                              Addresses must be in IP/mask format and
                                              must not include zone_id notation as
                                              described in [RFC
                                              4007](https://www.rfc-editor.org/rfc/rfc4007).
                                              Must not be an empty list.


                                              If `::/0` is included in this list, all
                                              IPv6 addresses are affected by this
                                              rule.
                                            example:
                                              - 2001:DB8::/128
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      description:
                                        description: >-
                                          Used to describe this rule. For display
                                          purposes only.
                                        example: An example firewall rule description.
                                        maxLength: 100
                                        minLength: 1
                                        type: string
                                      label:
                                        description: >-
                                          Used to identify this rule. For display
                                          purposes only.
                                        example: firewallrule123
                                        maxLength: 32
                                        minLength: 3
                                        type: string
                                      ports:
                                        description: >-
                                          A string representing the port or ports
                                          affected by this rule:


                                          - The string may be a single port, a
                                          range of ports, or a comma-separated
                                          list of single ports and port ranges. A
                                          space is permitted following each comma.

                                          - A range of ports is inclusive of the
                                          start and end values for the range. The
                                          end value of the range must be greater
                                          than the start value.

                                          - Ports must be within 1 and 65535, and
                                          may not contain any leading zeroes. For
                                          example, port `080` is not allowed.

                                          - The ports string can have up to 15
                                          _pieces_, where a single port is treated
                                          as one piece, and a port range is
                                          treated as two pieces. For example, the
                                          string "22-24, 80, 443" has four pieces.

                                          - If no ports are configured, all ports
                                          are affected.

                                          - Only allowed for the TCP and UDP
                                          protocols. Ports are not allowed for the
                                          ICMP and IPENCAP protocols.
                                        example: 22-24, 80, 443
                                        nullable: true
                                        type: string
                                      protocol:
                                        description: >-
                                          The type of network traffic affected by
                                          this rule.
                                        enum:
                                          - TCP
                                          - UDP
                                          - ICMP
                                          - IPENCAP
                                        example: TCP
                                        type: string
                                    type: object
                                    x-akamai:
                                      file-path: schemas/firewall-rule-config.yaml
                                  type: array
                                  x-linode-cli-format: json
                                inbound_policy:
                                  description: >-
                                    The default behavior for inbound traffic.
                                    This setting can be overridden by
                                    [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules)
                                    the `inbound.action` property of the
                                    Firewall Rule.
                                  enum:
                                    - ACCEPT
                                    - DROP
                                  example: DROP
                                  type: string
                                outbound:
                                  description: >-
                                    The outbound rules for the firewall, as a
                                    JSON array.
                                  items:
                                    additionalProperties: false
                                    description: >-
                                      One of a Firewall's inbound or outbound
                                      access rules. The `ports` property can be
                                      used to allow traffic on a comma-separated
                                      list of different ports.
                                    properties:
                                      action:
                                        description: >-
                                          Controls whether traffic is accepted or
                                          dropped by this rule. Overrides the
                                          Firewall's `inbound_policy` if this is
                                          an inbound rule, or the
                                          `outbound_policy` if this is an outbound
                                          rule.
                                        enum:
                                          - ACCEPT
                                          - DROP
                                        example: ACCEPT
                                        type: string
                                      addresses:
                                        additionalProperties: false
                                        description: >-
                                          The IPv4 or IPv6 addresses affected by
                                          this rule. A rule can have up to 255
                                          total addresses or networks listed
                                          across its `ipv4` and `ipv6` arrays. A
                                          network and a single IP are treated as
                                          equivalent when accounting for this
                                          limit.


                                          Must contain `ipv4`, `ipv6`, or both.
                                        properties:
                                          ipv4:
                                            description: >-
                                              A list of IPv4 addresses or networks.
                                              Addresses must be in IP/mask format.
                                              Must not be an empty list.


                                              If `0.0.0.0/0` is included in this list,
                                              all IPv4 addresses are affected by this
                                              rule.
                                            example:
                                              - 192.0.2.0/24
                                              - 198.51.100.2/32
                                            items:
                                              type: string
                                            type: array
                                          ipv6:
                                            description: >-
                                              A list of IPv6 addresses or networks.
                                              Addresses must be in IP/mask format and
                                              must not include zone_id notation as
                                              described in [RFC
                                              4007](https://www.rfc-editor.org/rfc/rfc4007).
                                              Must not be an empty list.


                                              If `::/0` is included in this list, all
                                              IPv6 addresses are affected by this
                                              rule.
                                            example:
                                              - 2001:DB8::/128
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      description:
                                        description: >-
                                          Used to describe this rule. For display
                                          purposes only.
                                        example: An example firewall rule description.
                                        maxLength: 100
                                        minLength: 1
                                        type: string
                                      label:
                                        description: >-
                                          Used to identify this rule. For display
                                          purposes only.
                                        example: firewallrule123
                                        maxLength: 32
                                        minLength: 3
                                        type: string
                                      ports:
                                        description: >-
                                          A string representing the port or ports
                                          affected by this rule:


                                          - The string may be a single port, a
                                          range of ports, or a comma-separated
                                          list of single ports and port ranges. A
                                          space is permitted following each comma.

                                          - A range of ports is inclusive of the
                                          start and end values for the range. The
                                          end value of the range must be greater
                                          than the start value.

                                          - Ports must be within 1 and 65535, and
                                          may not contain any leading zeroes. For
                                          example, port `080` is not allowed.

                                          - The ports string can have up to 15
                                          _pieces_, where a single port is treated
                                          as one piece, and a port range is
                                          treated as two pieces. For example, the
                                          string "22-24, 80, 443" has four pieces.

                                          - If no ports are configured, all ports
                                          are affected.

                                          - Only allowed for the TCP and UDP
                                          protocols. Ports are not allowed for the
                                          ICMP and IPENCAP protocols.
                                        example: 22-24, 80, 443
                                        nullable: true
                                        type: string
                                      protocol:
                                        description: >-
                                          The type of network traffic affected by
                                          this rule.
                                        enum:
                                          - TCP
                                          - UDP
                                          - ICMP
                                          - IPENCAP
                                        example: TCP
                                        type: string
                                    type: object
                                    x-akamai:
                                      file-path: schemas/firewall-rule-config.yaml
                                  type: array
                                  x-linode-cli-format: json
                                outbound_policy:
                                  description: >-
                                    The default behavior for outbound traffic.
                                    This setting can be overridden by
                                    [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules)
                                    the `outbound.action` property of the
                                    Firewall Rule.
                                  enum:
                                    - ACCEPT
                                    - DROP
                                  example: DROP
                                  type: string
                                version:
                                  description: >-
                                    __Read-only__ The firewall's rule version.
                                    The first version is `1`. The version number
                                    is incremented when the firewall's rules
                                    change.
                                  example: 1
                                  readOnly: true
                                  type: integer
                              type: object
                            status:
                              description: |-
                                __Read-only__ The status of this Firewall.

                                  - When a Firewall is first created its status is `enabled`.
                                  - Run the [Update a firewall](https://techdocs.akamai.com/linode-api/reference/put-firewall) operation to set a Firewall's status to `enabled` or `disabled`.
                                  - Run the [Delete a firewall](https://techdocs.akamai.com/linode-api/reference/delete-firewall) operation to delete a Firewall.
                              enum:
                                - enabled
                                - disabled
                                - deleted
                              example: enabled
                              readOnly: true
                              type: string
                              x-linode-cli-display: 3
                            tags:
                              description: >-
                                __Filterable__ An array of tags applied to this
                                object. Tags are for organizational purposes
                                only.
                              example:
                                - example tag
                                - another example
                              items:
                                type: string
                              type: array
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-filterable: true
                            updated:
                              description: >-
                                __Filterable__, __Read-only__ When this Firewall
                                was last updated.
                              example: '2018-01-02T00:01:01'
                              format: date-time
                              readOnly: true
                              type: string
                              x-akamai:
                                labels:
                                  - Filterable
                              x-linode-cli-display: 5
                              x-linode-filterable: true
                          type: object
                          x-akamai:
                            file-path: schemas/firewall.yaml
                        type: array
                    type: object
                x-akamai:
                  file-path: schemas/added-get-node-balancer-firewalls-200.yaml
          description: Returns a paginated list of Firewalls assigned to this NodeBalancer.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_write
      summary: Update a NodeBalancer's firewalls
      tags:
        - Firewalls
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers firewalls-update 12345 \
                --firewall_ids '[1234, 4567]'
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: firewalls
      x-linode-grant: read_write
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
    x-akamai:
      file-path: paths/node-balancer-firewalls.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/firewalls
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/stats:
    get:
      description: >-
        Returns detailed statistics about the requested NodeBalancer. __OAuth
        scopes__.

            ```
            nodebalancers:read_only
            ```

        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-stats
      operationId: get-node-balancer-stats
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: Stats for this NodeBalancer.
                properties:
                  data:
                    additionalProperties: false
                    description: The data returned about this NodeBalancers.
                    properties:
                      connections:
                        description: >-
                          An array of key/value pairs representing unix
                          timestamp and reading for connections to this
                          NodeBalancer.
                        items:
                          example:
                            - 1526391300000
                            - 0
                          type: number
                        type: array
                      traffic:
                        additionalProperties: false
                        description: Traffic statistics for this NodeBalancer.
                        properties:
                          in:
                            description: >-
                              An array of key/value pairs representing unix
                              timestamp and reading for inbound traffic.
                            items:
                              example:
                                - 1526391300000
                                - 631.21
                              type: number
                            type: array
                          out:
                            description: >-
                              An array of key/value pairs representing unix
                              timestamp and reading for outbound traffic.
                            items:
                              example:
                                - 1526391300000
                                - 103.44
                              type: number
                            type: array
                        type: object
                    type: object
                  title:
                    description: The title for the statistics generated in this response.
                    example: linode.com - balancer12345 (12345) - day (5 min avg)
                    type: string
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-stats.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-stats-200.json
          description: The requested stats.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: Get NodeBalancer statistics
      tags:
        - Statistics
      x-akamai:
        tabs:
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: stats
      x-linode-cli-skip: true
      x-linode-grant: read_only
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
    x-akamai:
      file-path: paths/stats.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/stats
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/vpcs:
    get:
      description: >-
        Returns a paginated list of VPC configurations for the NodeBalancer.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpcs
      operationId: get-node-balancer-vpcs
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  - id: 6
                    ipv4_range: 10.0.0.12/30
                    ipv6_range: null
                    nodebalancer_id: 8
                    subnet_id: 1
                    vpc_id: 1
                  - id: 7
                    ipv4_range: 10.0.1.8/30
                    ipv6_range: null
                    nodebalancer_id: 8
                    subnet_id: 7
                    vpc_id: 1
                page: 1
                pages: 1
                results: 2
              schema:
                additionalProperties: false
                properties:
                  data:
                    example:
                      - id: 6
                        ipv4_range: 10.0.0.12/30
                        ipv6_range: null
                        nodebalancer_id: 8
                        subnet_id: 1
                        vpc_id: 1
                    items:
                      additionalProperties: false
                      description: >-
                        You can have only one VPC in a NodeBalancer
                        configuration. If any of your backend nodes are VPC
                        Linodes, specify the VPC subnet and CIDR range.
                        NodeBalancer routes traffic to backend VPC nodes through
                        this subnet. Once the NodeBalancer is created, its VPC
                        cannot be changed.
                      properties:
                        id:
                          description: >-
                            __Read-only__ Identifies the VPC configuration for
                            this NodeBalancer.
                          example: 6
                          readOnly: true
                          type: integer
                        ipv4_range:
                          description: >-
                            A CIDR range for the VPC's IPv4 addresses. The
                            NodeBalancer sources IP addresses from this range
                            when routing traffic to the backend VPC nodes.
                          example: 10.100.5.100/30
                          type: string
                          x-linode-cli-display: 12
                        ipv4_range_auto_assign:
                          default: false
                          description: >-
                            Enables the use of a larger `ipv4_range` subnet for
                            multiple NodeBalancers within the same VPC by
                            allocating smaller `/30` subnets for each
                            NodeBalancer's backends.


                            - When set to `true`, the system automatically
                            allocates the smallest possible subnet (`/30`) from
                            the provided `ipv4_range` for the NodeBalancer's
                            backend interface. If the specified range doesn't
                            have enough available IPs to allocate a `/30`
                            subnet, the creation fails.


                            - When set to `false`, the NodeBalancer is created
                            using the entire `ipv4_range` as specified, without
                            attempting to allocate a `/30` subnet.
                          example: false
                          nullable: true
                          type: boolean
                          x-linode-cli-display: 14
                        nodebalancer_id:
                          description: __Read-only__ Identifies the NodeBalancer.
                          example: 8
                          readOnly: true
                          type: integer
                        subnet_id:
                          description: >-
                            The VPC's subnet. Run the [List
                            VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                            operation provides data for your VPCs and their
                            subnets.
                          example: 1
                          type: integer
                          x-linode-cli-display: 11
                        vpc_id:
                          description: >-
                            __Read-only__ The `id` of the VPC configured for
                            this NodeBalancer.
                          example: 1
                          nullable: true
                          readOnly: true
                          type: integer
                      required:
                        - subnet_id
                      type: object
                      x-akamai:
                        file-path: schemas/node-balancer-vpc.yaml
                    type: array
                  page:
                    description: >-
                      __Read-only__ The current
                      [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  pages:
                    description: >-
                      __Read-only__ The total number of
                      [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  results:
                    description: __Read-only__ The total number of results.
                    example: 1
                    readOnly: true
                    type: integer
                type: object
                x-akamai:
                  file-path: schemas/added-get-node-balancer-vpcs-200.yaml
          description: A paginated list of NodeBalancer VPC configurations.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: List VPC configurations
      tags:
        - VPCs
      x-akamai:
        tabs:
          - syntax: linode-cli nodebalancers vpcs-list 12345
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: vpcs-list
      x-linode-grant: read_only
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
    x-akamai:
      file-path: paths/node-balancer-vpcs.yaml
      path-info: /{apiVersion}/nodebalancers/{nodeBalancerId}/vpcs
    x-linode-cli-command: nodebalancers
  /nodebalancers/{nodeBalancerId}/vpcs/{nodeBalancerVpcConfigId}:
    get:
      description: >-
        Returns a single VPC configuration for the NodeBalancer ID.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/get-node-balancer-vpc-config
      operationId: get-node-balancer-vpc-config
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: >-
                  You can have only one VPC in a NodeBalancer configuration. If
                  any of your backend nodes are VPC Linodes, specify the VPC
                  subnet and CIDR range. NodeBalancer routes traffic to backend
                  VPC nodes through this subnet. Once the NodeBalancer is
                  created, its VPC cannot be changed.
                properties:
                  id:
                    description: >-
                      __Read-only__ Identifies the VPC configuration for this
                      NodeBalancer.
                    example: 6
                    readOnly: true
                    type: integer
                  ipv4_range:
                    description: >-
                      A CIDR range for the VPC's IPv4 addresses. The
                      NodeBalancer sources IP addresses from this range when
                      routing traffic to the backend VPC nodes.
                    example: 10.100.5.100/30
                    type: string
                    x-linode-cli-display: 12
                  ipv4_range_auto_assign:
                    default: false
                    description: >-
                      Enables the use of a larger `ipv4_range` subnet for
                      multiple NodeBalancers within the same VPC by allocating
                      smaller `/30` subnets for each NodeBalancer's backends.


                      - When set to `true`, the system automatically allocates
                      the smallest possible subnet (`/30`) from the provided
                      `ipv4_range` for the NodeBalancer's backend interface. If
                      the specified range doesn't have enough available IPs to
                      allocate a `/30` subnet, the creation fails.


                      - When set to `false`, the NodeBalancer is created using
                      the entire `ipv4_range` as specified, without attempting
                      to allocate a `/30` subnet.
                    example: false
                    nullable: true
                    type: boolean
                    x-linode-cli-display: 14
                  nodebalancer_id:
                    description: __Read-only__ Identifies the NodeBalancer.
                    example: 8
                    readOnly: true
                    type: integer
                  subnet_id:
                    description: >-
                      The VPC's subnet. Run the [List
                      VPCs](https://techdocs.akamai.com/linode-api/reference/get-vpcs)
                      operation provides data for your VPCs and their subnets.
                    example: 1
                    type: integer
                    x-linode-cli-display: 11
                  vpc_id:
                    description: >-
                      __Read-only__ The `id` of the VPC configured for this
                      NodeBalancer.
                    example: 1
                    nullable: true
                    readOnly: true
                    type: integer
                required:
                  - subnet_id
                type: object
                x-akamai:
                  file-path: schemas/node-balancer-vpc.yaml
              x-example:
                x-ref: ../examples/get-node-balancer-config-200.json
          description: The requested NodeBalancer VPC configuration.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - nodebalancers:read_only
      summary: Get a VPC configuration
      tags:
        - VPCs
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli nodebalancers vpcs-view \
                12345 7
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: nodebalancers:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: vpc-view
      x-linode-grant: read_only
    parameters:
      - description: The ID of the NodeBalancer.
        example: '{{nodeBalancerId}}'
        in: path
        name: nodeBalancerId
        required: true
        schema:
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-id.yaml
      - description: The VPC configuration `id` for the NodeBalancer.
        example: '{{nodeBalancerVpcConfigId}}'
        in: path
        name: nodeBalancerVpcConfigId
        required: true
        schema:
          example: 7
          type: integer
        x-akamai:
          file-path: parameters/node-balancer-vpc-config-id.yaml
    x-akamai:
      file-path: paths/node-balancer-vpc.yaml
      path-info: >-
        /{apiVersion}/nodebalancers/{nodeBalancerId}/vpcs/{nodeBalancerVPCConfigId}
    x-linode-cli-command: nodebalancers
components:
  x-stackQL-resources:
    node_balancers:
      id: linode.nodebalancers.node_balancers
      name: node_balancers
      title: Node Balancers
      methods:
        post_node_balancer:
          operation:
            $ref: '#/paths/~1nodebalancers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancers:
          operation:
            $ref: '#/paths/~1nodebalancers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put_node_balancer:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_node_balancer:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/node_balancers/methods/get_node_balancer
          - $ref: >-
              #/components/x-stackQL-resources/node_balancers/methods/get_node_balancers
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/node_balancers/methods/post_node_balancer
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/node_balancers/methods/delete_node_balancer
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/node_balancers/methods/put_node_balancer
    types:
      id: linode.nodebalancers.types
      name: types
      title: Types
      methods:
        get_node_balancer_types:
          operation:
            $ref: '#/paths/~1nodebalancers~1types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/types/methods/get_node_balancer_types
        insert: []
        update: []
        delete: []
        replace: []
    configurations:
      id: linode.nodebalancers.configurations
      name: configurations
      title: Configurations
      methods:
        post_node_balancer_config:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1configs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer_configs:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1configs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer_config:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put_node_balancer_config:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_node_balancer_config:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        post_rebuild_node_balancer_config:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1rebuild/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/configurations/methods/get_node_balancer_config
          - $ref: >-
              #/components/x-stackQL-resources/configurations/methods/get_node_balancer_configs
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/configurations/methods/post_node_balancer_config
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/configurations/methods/delete_node_balancer_config
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/configurations/methods/put_node_balancer_config
    nodes:
      id: linode.nodebalancers.nodes
      name: nodes
      title: Nodes
      methods:
        post_node_balancer_node:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1nodes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer_config_nodes:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1nodes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer_node:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1nodes~1{nodeId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put_node_balancer_node:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1nodes~1{nodeId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_node_balancer_config_node:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1configs~1{configId}~1nodes~1{nodeId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/get_node_balancer_node
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/get_node_balancer_config_nodes
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/post_node_balancer_node
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/delete_node_balancer_config_node
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/nodes/methods/put_node_balancer_node
    firewalls:
      id: linode.nodebalancers.firewalls
      name: firewalls
      title: Firewalls
      methods:
        get_node_balancer_firewalls:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1firewalls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        put_node_balancer_firewalls:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1firewalls/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/firewalls/methods/get_node_balancer_firewalls
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/firewalls/methods/put_node_balancer_firewalls
    statistics:
      id: linode.nodebalancers.statistics
      name: statistics
      title: Statistics
      methods:
        get_node_balancer_stats:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/statistics/methods/get_node_balancer_stats
        insert: []
        update: []
        delete: []
        replace: []
    vpc_configs:
      id: linode.nodebalancers.vpc_configs
      name: vpc_configs
      title: Vpc Configs
      methods:
        get_node_balancer_vpcs:
          operation:
            $ref: '#/paths/~1nodebalancers~1{nodeBalancerId}~1vpcs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_node_balancer_vpc_config:
          operation:
            $ref: >-
              #/paths/~1nodebalancers~1{nodeBalancerId}~1vpcs~1{nodeBalancerVpcConfigId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vpc_configs/methods/get_node_balancer_vpc_config
          - $ref: >-
              #/components/x-stackQL-resources/vpc_configs/methods/get_node_balancer_vpcs
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://api.linode.com/v4
