openapi: 3.0.1
info:
  title: placement API
  description: linode placement API
  version: 4.208.1
paths:
  /placement/groups:
    post:
      description: >-
        Creates a placement group on your account. Placement groups disperse
        your Linodes across physical machines (hosts) in one of our compute
        regions. Depending on your workload requirements, you may need your
        Linodes to follow specific strategies:


        - __Grouped together__. You may want them placed close together to
        reduce latency between Linodes that are used for an application or
        workload.


        - __Spread apart__. You may want to disperse them across several hosts
        to support high availability, for example when required for failover.


        We offer an [example API
        workflow](https://techdocs.akamai.com/cloud-computing/docs/work-with-placement-groups#use-the-api)
        you can follow to create a placement group.


        > ðŸ“˜

        >

        > To run this operation, your user needs the `add_linodes`
        [grant](https://techdocs.akamai.com/linode-api/reference/get-user-grants).
        Talk to your local account administrator about grant management for your
        user.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/post-placement-group
      operationId: post-placement-group
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - additionalProperties: false
                  description: >-
                    Common properties for creating and rebuilding placement
                    groups.
                  properties:
                    label:
                      description: >-
                        A unique name for the placement group. A placement group
                        `label` has the following constraints:


                        - It needs to begin and end with an alphanumeric
                        character.

                        - It can only consist of alphanumeric characters,
                        hyphens (`-`), underscores (`_`), or periods (`.`).
                      example: PG_Miami_failover
                      minLength: 1
                      type: string
                    placement_group_policy:
                      description: >-
                        How requests to add future compute instances to your
                        placement group are handled:


                        - `strict`. Don't add a compute instance if it breaks
                        the grouped-together or spread-apart model set by your
                        `placement_group_type`. For example, with
                        `anti-affinity:local` as your `placement_group_type`,
                        assume it already has three qualifying compute instances
                        on separate hosts, to support the spread-apart model. If
                        a fourth compute instance is assigned that's on the same
                        host as one of the existing three, an error is thrown
                        and the system won't add it. Ensures the placement group
                        stays compliant with your selected model.

                        - `flexible`. Add a new compute instance, even if it
                        breaks the grouped-together or spread-apart model set by
                        your `placement_group_type`. Breaking the model makes
                        the placement group non-compliant. You need to wait for
                        Akamai to move the offending compute instances to make
                        the group compliant again, once the necessary capacity
                        is available in the region. Offers flexibility to add
                        future compute instances if compliance isn't an
                        immediate concern.


                        > ðŸ“˜

                        >

                        > Once you create a placement group, you can't change
                        its `placement_group_policy` setting.
                      enum:
                        - strict
                        - flexible
                      example: strict
                      type: string
                    placement_group_type:
                      description: >-
                        How compute instances are distributed in your placement
                        group. A `placement_group_type` using anti-affinity
                        (`anti-affinity:local`) places compute instances in
                        separate hosts, but still in the same region. This best
                        supports the spread-apart model for high availability. A
                        `placement_group_type` using affinity places compute
                        instances physically close together, possibly on the
                        same host. This supports the grouped-together model for
                        low-latency.


                        > ðŸ“˜

                        >

                        > Currently, only `anti_affinity:local` is available for
                        `placement_group_type`.
                      enum:
                        - anti_affinity:local
                      example:
                        - anti_affinity:local
                      type: string
                      x-linode-cli-display: 1
                    region:
                      description: >-
                        The data center that houses the compute instances you
                        want to add to your placement group. Run the [List
                        Linodes](https://techdocs.akamai.com/linode-api/reference/get-linode-instances)
                        operation to view your compute instances and store the
                        `region` identifier.
                      example: us-iad
                      type: string
                  type: object
                  x-akamai:
                    file-path: schemas/placement-group-request.yaml
              required:
                - placement_group_type
                - placement_group_policy
                - label
                - region
              type: object
              x-akamai:
                file-path: schemas/added-post-placement-group.yaml
            x-example:
              x-ref: ../examples/post-placement-group.json
        required: true
        x-linode-cli-allowed-defaults:
          - placement_group_type
          - placement_group_policy
          - label
          - region
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  id:
                    description: >-
                      The placement group's ID. You need to provide it for all
                      operations that affect it.
                    example: 528
                    nullable: false
                    type: integer
                    x-linode-cli-display: 1
                  is_compliant:
                    description: >-
                      Whether all of the compute instances in your placement
                      group are compliant. If `true`, all compute instances meet
                      either the grouped-together or spread-apart model, which
                      you determine through your selected
                      `placement_group_type`. If `false`, a compute instance is
                      out of this compliance. For example, assume you've set
                      `anti-affinity:local` as your `placement_group_type` and
                      your group already has three qualifying compute instances
                      on separate hosts, to support the spread-apart model. If a
                      fourth compute instance is assigned that's on the same
                      host as one of the existing three, the placement group is
                      non-compliant. Enforce compliance in your group by setting
                      a `placement_group_policy`.


                      > ðŸ“˜

                      >

                      > Fixing compliance is not self-service. You need to wait
                      for our assistance to physically move compute instances to
                      make the group compliant again.
                    example: true
                    nullable: false
                    type: boolean
                  label:
                    description: >-
                      __Filterable__ The unique name set for the placement
                      group. A label has these constraints:


                      - It needs to begin and end with an alphanumeric
                      character.

                      - It can only consist of alphanumeric characters, hyphens
                      (`-`), underscores (`_`) or periods (`.`).
                    example: PG_Miami_failover
                    minLength: 1
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  members:
                    description: >-
                      An array of compute instances included in the placement
                      group.
                    items:
                      additionalProperties: false
                      properties:
                        is_compliant:
                          description: >-
                            The compliance status of each individual compute
                            instance in the placement group.
                          example: true
                          type: boolean
                        linode_id:
                          description: >-
                            __Read-only__ The unique identifier for a compute
                            instance included in the placement group.
                          example: 123
                          readOnly: true
                          type: integer
                      type: object
                    type: array
                  placement_group_policy:
                    description: >-
                      How requests to add future compute instances to your
                      placement group are handled, and whether it remains
                      compliant:


                      - `strict`. Don't assign a new compute instance if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. Use this to ensure the
                      placement group stays compliant (`is_compliant: true`).

                      - `flexible`. Assign a new compute instance, even if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. This makes the group
                      non-compliant (`is_compliant: false`). You need to wait
                      for Akamai to move the offending compute instance to make
                      it compliant again, once the necessary capacity is
                      available in the region. Offers flexibility to add future
                      compute instances if compliance isn't an immediate
                      concern.


                      <<LB>>


                      > ðŸ“˜

                      >

                      > In rare cases, non-compliance can occur with a `strict`
                      placement group if Akamai needs to failover or migrate
                      your compute instances for maintenance. Fixing
                      non-compliance for a `strict` placement group is
                      prioritized over a `flexible` group.
                    enum:
                      - strict
                      - flexible
                    example: strict
                    type: string
                  placement_group_type:
                    description: >-
                      __Filterable__, __Read-only__ How compute instances are
                      distributed in your placement group. A
                      `placement_group_type` using anti-affinity
                      (`anti-affinity:local`) places compute instances in
                      separate hosts, but still in the same region. This best
                      supports the spread-apart model for high availability. A
                      `placement_group_type` using affinity places compute
                      instances physically close together, possibly on the same
                      host. This supports the grouped-together model for
                      low-latency.


                      > ðŸ“˜

                      >

                      > Currently, only `anti_affinity:local` is available for
                      `placement_group_type`.
                    enum:
                      - anti_affinity:local
                    example: anti-affinity:local
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The
                      [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                      where the placement group was deployed.
                    example: us-mia
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                type: object
                x-akamai:
                  file-path: schemas/placement-group.yaml
              x-example:
                x-ref: ../examples/post-placement-group-200.json
          description: A new placement group is being created.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_write
      summary: Create placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli placement group-create \
                --label PG_Miami_failover \
                --region us-mia \
                --placement_group_type "anti-affinity:local" \
                --placement_group_policy strict
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode charge: true
      x-linode grant: add_placement
      x-linode-cli-action: group-create
    get:
      description: >-
        Returns a paginated list of placement groups you have permission to
        view.


        > ðŸ“˜

        >

        > Your user needs at least `read-only`
        [permission](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        to all Linodes included in a placement group to view it. Placement
        groups that contain Linodes that you don't have this permission for are
        left out of the response. If all placement groups contain Linodes that
        lack this permission, the API returns a 403 error. Talk to your local
        account administrator about managing permissions.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/get-placement-groups
      operationId: get-placement-groups
      parameters:
        - description: The page of a collection to return.
          example: '{{page}}'
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 6
            minimum: 1
            type: integer
          x-akamai:
            file-path: parameters/page-offset.yaml
        - description: The number of items to return per page.
          example: '{{page_size}}'
          in: query
          name: page_size
          schema:
            default: 100
            example: 50
            maximum: 500
            minimum: 25
            type: integer
          x-akamai:
            file-path: parameters/page-size.yaml
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    items:
                      additionalProperties: false
                      properties:
                        id:
                          description: >-
                            The placement group's ID. You need to provide it for
                            all operations that affect it.
                          example: 528
                          nullable: false
                          type: integer
                          x-linode-cli-display: 1
                        is_compliant:
                          description: >-
                            Whether all of the compute instances in your
                            placement group are compliant. If `true`, all
                            compute instances meet either the grouped-together
                            or spread-apart model, which you determine through
                            your selected `placement_group_type`. If `false`, a
                            compute instance is out of this compliance. For
                            example, assume you've set `anti-affinity:local` as
                            your `placement_group_type` and your group already
                            has three qualifying compute instances on separate
                            hosts, to support the spread-apart model. If a
                            fourth compute instance is assigned that's on the
                            same host as one of the existing three, the
                            placement group is non-compliant. Enforce compliance
                            in your group by setting a `placement_group_policy`.


                            > ðŸ“˜

                            >

                            > Fixing compliance is not self-service. You need to
                            wait for our assistance to physically move compute
                            instances to make the group compliant again.
                          example: true
                          nullable: false
                          type: boolean
                        label:
                          description: >-
                            __Filterable__ The unique name set for the placement
                            group. A label has these constraints:


                            - It needs to begin and end with an alphanumeric
                            character.

                            - It can only consist of alphanumeric characters,
                            hyphens (`-`), underscores (`_`) or periods (`.`).
                          example: PG_Miami_failover
                          minLength: 1
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 1
                          x-linode-filterable: true
                        members:
                          description: >-
                            An array of compute instances included in the
                            placement group.
                          items:
                            additionalProperties: false
                            properties:
                              is_compliant:
                                description: >-
                                  The compliance status of each individual
                                  compute instance in the placement group.
                                example: true
                                type: boolean
                              linode_id:
                                description: >-
                                  __Read-only__ The unique identifier for a
                                  compute instance included in the placement
                                  group.
                                example: 123
                                readOnly: true
                                type: integer
                            type: object
                          type: array
                        migrations:
                          additionalProperties: false
                          description: >-
                            Any compute instances that are being migrated to or
                            from the placement group. Returned as `null` if no
                            migrations are taking place.
                          nullable: true
                          properties:
                            inbound:
                              description: >-
                                The individual compute instances the system is
                                migrating into the placement group.
                              items:
                                additionalProperties: false
                                properties:
                                  linode_id:
                                    description: >-
                                      __Read-only__ The unique identifier for a
                                      compute instance being migrated into the
                                      placement group.
                                    example: 123
                                    readOnly: true
                                    type: integer
                                type: object
                              type: array
                            outbound:
                              description: >-
                                The individual compute instances the system is
                                migrating out of the placement group.
                              items:
                                additionalProperties: false
                                properties:
                                  linode_id:
                                    description: >-
                                      __Read-only__ The unique identifier for a
                                      compute instance being migrated out of the
                                      placement group.
                                    example: 456
                                    readOnly: true
                                    type: integer
                                type: object
                              type: array
                          type: object
                        placement_group_policy:
                          description: >-
                            How requests to add future compute instances to your
                            placement group are handled, and whether it remains
                            compliant:


                            - `strict`. Don't assign a new compute instance if
                            it breaks the grouped-together or spread-apart model
                            set by the `placement_group_type`. Use this to
                            ensure the placement group stays compliant
                            (`is_compliant: true`).

                            - `flexible`. Assign a new compute instance, even if
                            it breaks the grouped-together or spread-apart model
                            set by the `placement_group_type`. This makes the
                            group non-compliant (`is_compliant: false`). You
                            need to wait for Akamai to move the offending
                            compute instance to make it compliant again, once
                            the necessary capacity is available in the region.
                            Offers flexibility to add future compute instances
                            if compliance isn't an immediate concern.


                            <<LB>>


                            > ðŸ“˜

                            >

                            > In rare cases, non-compliance can occur with a
                            `strict` placement group if Akamai needs to failover
                            or migrate your compute instances for maintenance.
                            Fixing non-compliance for a `strict` placement group
                            is prioritized over a `flexible` group.
                          enum:
                            - strict
                            - flexible
                          example: strict
                          type: string
                        placement_group_type:
                          description: >-
                            __Filterable__, __Read-only__ How compute instances
                            are distributed in your placement group. A
                            `placement_group_type` using anti-affinity
                            (`anti-affinity:local`) places compute instances in
                            separate hosts, but still in the same region. This
                            best supports the spread-apart model for high
                            availability. A `placement_group_type` using
                            affinity places compute instances physically close
                            together, possibly on the same host. This supports
                            the grouped-together model for low-latency.


                            > ðŸ“˜

                            >

                            > Currently, only `anti_affinity:local` is available
                            for `placement_group_type`.
                          enum:
                            - anti_affinity:local
                          example: anti-affinity:local
                          readOnly: true
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 1
                          x-linode-filterable: true
                        region:
                          description: >-
                            __Filterable__, __Read-only__ The
                            [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                            where the placement group was deployed.
                          example: us-mia
                          readOnly: true
                          type: string
                          x-akamai:
                            labels:
                              - Filterable
                          x-linode-cli-display: 1
                          x-linode-filterable: true
                      type: object
                      x-akamai:
                        file-path: schemas/placement-group-migrate.yaml
                    type: array
                  page:
                    description: >-
                      __Read-only__ The current
                      [page](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  pages:
                    description: >-
                      __Read-only__ The total number of
                      [pages](https://techdocs.akamai.com/linode-api/reference/pagination).
                    example: 1
                    readOnly: true
                    type: integer
                  results:
                    description: __Read-only__ The total number of results.
                    example: 1
                    readOnly: true
                    type: integer
                type: object
                x-akamai:
                  file-path: schemas/added-get-placement-groups-200.yaml
              x-example:
                x-ref: ../examples/get-placement-groups-200.json
          description: Returns an array of all placement groups on your Account.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - placement:read_only
      summary: List placement groups
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: linode-cli placement groups-list
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: placement:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action:
        - groups-list
        - groups-ls
    parameters: []
    x-akamai:
      file-path: paths/groups.yaml
      path-info: /{apiVersion}/placement/groups
    x-linode-cli-command: placement
  /placement/groups/{groupId}:
    get:
      description: >-
        View a specific placement group by ID.


        > ðŸ“˜

        >

        > Your user needs at least `read-only`
        [permission](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        to all Linodes included in a placement group to view it. If you don't
        have this access and call this operation, the API returns a 403 error.
        Talk to your local account administrator about managing permissions.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/get-placement-group
      operationId: get-placement-group
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  id:
                    description: >-
                      The placement group's ID. You need to provide it for all
                      operations that affect it.
                    example: 528
                    nullable: false
                    type: integer
                    x-linode-cli-display: 1
                  is_compliant:
                    description: >-
                      Whether all of the compute instances in your placement
                      group are compliant. If `true`, all compute instances meet
                      either the grouped-together or spread-apart model, which
                      you determine through your selected
                      `placement_group_type`. If `false`, a compute instance is
                      out of this compliance. For example, assume you've set
                      `anti-affinity:local` as your `placement_group_type` and
                      your group already has three qualifying compute instances
                      on separate hosts, to support the spread-apart model. If a
                      fourth compute instance is assigned that's on the same
                      host as one of the existing three, the placement group is
                      non-compliant. Enforce compliance in your group by setting
                      a `placement_group_policy`.


                      > ðŸ“˜

                      >

                      > Fixing compliance is not self-service. You need to wait
                      for our assistance to physically move compute instances to
                      make the group compliant again.
                    example: true
                    nullable: false
                    type: boolean
                  label:
                    description: >-
                      __Filterable__ The unique name set for the placement
                      group. A label has these constraints:


                      - It needs to begin and end with an alphanumeric
                      character.

                      - It can only consist of alphanumeric characters, hyphens
                      (`-`), underscores (`_`) or periods (`.`).
                    example: PG_Miami_failover
                    minLength: 1
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  members:
                    description: >-
                      An array of compute instances included in the placement
                      group.
                    items:
                      additionalProperties: false
                      properties:
                        is_compliant:
                          description: >-
                            The compliance status of each individual compute
                            instance in the placement group.
                          example: true
                          type: boolean
                        linode_id:
                          description: >-
                            __Read-only__ The unique identifier for a compute
                            instance included in the placement group.
                          example: 123
                          readOnly: true
                          type: integer
                      type: object
                    type: array
                  migrations:
                    additionalProperties: false
                    description: >-
                      Any compute instances that are being migrated to or from
                      the placement group. Returned as `null` if no migrations
                      are taking place.
                    nullable: true
                    properties:
                      inbound:
                        description: >-
                          The individual compute instances the system is
                          migrating into the placement group.
                        items:
                          additionalProperties: false
                          properties:
                            linode_id:
                              description: >-
                                __Read-only__ The unique identifier for a
                                compute instance being migrated into the
                                placement group.
                              example: 123
                              readOnly: true
                              type: integer
                          type: object
                        type: array
                      outbound:
                        description: >-
                          The individual compute instances the system is
                          migrating out of the placement group.
                        items:
                          additionalProperties: false
                          properties:
                            linode_id:
                              description: >-
                                __Read-only__ The unique identifier for a
                                compute instance being migrated out of the
                                placement group.
                              example: 456
                              readOnly: true
                              type: integer
                          type: object
                        type: array
                    type: object
                  placement_group_policy:
                    description: >-
                      How requests to add future compute instances to your
                      placement group are handled, and whether it remains
                      compliant:


                      - `strict`. Don't assign a new compute instance if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. Use this to ensure the
                      placement group stays compliant (`is_compliant: true`).

                      - `flexible`. Assign a new compute instance, even if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. This makes the group
                      non-compliant (`is_compliant: false`). You need to wait
                      for Akamai to move the offending compute instance to make
                      it compliant again, once the necessary capacity is
                      available in the region. Offers flexibility to add future
                      compute instances if compliance isn't an immediate
                      concern.


                      <<LB>>


                      > ðŸ“˜

                      >

                      > In rare cases, non-compliance can occur with a `strict`
                      placement group if Akamai needs to failover or migrate
                      your compute instances for maintenance. Fixing
                      non-compliance for a `strict` placement group is
                      prioritized over a `flexible` group.
                    enum:
                      - strict
                      - flexible
                    example: strict
                    type: string
                  placement_group_type:
                    description: >-
                      __Filterable__, __Read-only__ How compute instances are
                      distributed in your placement group. A
                      `placement_group_type` using anti-affinity
                      (`anti-affinity:local`) places compute instances in
                      separate hosts, but still in the same region. This best
                      supports the spread-apart model for high availability. A
                      `placement_group_type` using affinity places compute
                      instances physically close together, possibly on the same
                      host. This supports the grouped-together model for
                      low-latency.


                      > ðŸ“˜

                      >

                      > Currently, only `anti_affinity:local` is available for
                      `placement_group_type`.
                    enum:
                      - anti_affinity:local
                    example: anti-affinity:local
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The
                      [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                      where the placement group was deployed.
                    example: us-mia
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                type: object
                x-akamai:
                  file-path: schemas/placement-group-migrate.yaml
              x-example:
                x-ref: ../examples/get-placement-group-200.json
          description: Returns a single placement group object.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_only
      summary: Get a placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: linode-cli placement group-view 528
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_only
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: group-view
      x-linode-grant: read-only
    put:
      description: >-
        Change the `label` for a specific placement group. This is the only
        value you can update. However, you can
        [add](https://techdocs.akamai.com/linode-api/reference/post-group-add-linode)
        more Linodes or
        [remove](https://techdocs.akamai.com/linode-api/reference/post-group-unassign)
        existing ones.


        > ðŸ“˜

        >

        > To update a placement group, your [user
        grants](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        need to include `read_write` permission to all of the Linodes in the
        group. Talk to your local account administrator about grant management
        for your user.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/put-placement-group
      operationId: put-placement-group
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                label:
                  description: >-
                    A unique name for the placement group. A placement group
                    `label` has the following constraints:


                    - It needs to begin and end with an alphanumeric character.

                    - It can only consist of alphanumeric characters, hyphens
                    (`-`), underscores (`_`), or periods (`.`).
                  example: '{{label}}'
                  minLength: 1
                  type: string
              type: object
              x-akamai:
                file-path: schemas/added-put-placement-group.yaml
            x-example:
              x-ref: ../examples/put-placement-group.json
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  id:
                    description: >-
                      The placement group's ID. You need to provide it for all
                      operations that affect it.
                    example: 528
                    nullable: false
                    type: integer
                    x-linode-cli-display: 1
                  is_compliant:
                    description: >-
                      Whether all of the compute instances in your placement
                      group are compliant. If `true`, all compute instances meet
                      either the grouped-together or spread-apart model, which
                      you determine through your selected
                      `placement_group_type`. If `false`, a compute instance is
                      out of this compliance. For example, assume you've set
                      `anti-affinity:local` as your `placement_group_type` and
                      your group already has three qualifying compute instances
                      on separate hosts, to support the spread-apart model. If a
                      fourth compute instance is assigned that's on the same
                      host as one of the existing three, the placement group is
                      non-compliant. Enforce compliance in your group by setting
                      a `placement_group_policy`.


                      > ðŸ“˜

                      >

                      > Fixing compliance is not self-service. You need to wait
                      for our assistance to physically move compute instances to
                      make the group compliant again.
                    example: true
                    nullable: false
                    type: boolean
                  label:
                    description: >-
                      __Filterable__ The unique name set for the placement
                      group. A label has these constraints:


                      - It needs to begin and end with an alphanumeric
                      character.

                      - It can only consist of alphanumeric characters, hyphens
                      (`-`), underscores (`_`) or periods (`.`).
                    example: PG_Miami_failover
                    minLength: 1
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  members:
                    description: >-
                      An array of compute instances included in the placement
                      group.
                    items:
                      additionalProperties: false
                      properties:
                        is_compliant:
                          description: >-
                            The compliance status of each individual compute
                            instance in the placement group.
                          example: true
                          type: boolean
                        linode_id:
                          description: >-
                            __Read-only__ The unique identifier for a compute
                            instance included in the placement group.
                          example: 123
                          readOnly: true
                          type: integer
                      type: object
                    type: array
                  placement_group_policy:
                    description: >-
                      How requests to add future compute instances to your
                      placement group are handled, and whether it remains
                      compliant:


                      - `strict`. Don't assign a new compute instance if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. Use this to ensure the
                      placement group stays compliant (`is_compliant: true`).

                      - `flexible`. Assign a new compute instance, even if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. This makes the group
                      non-compliant (`is_compliant: false`). You need to wait
                      for Akamai to move the offending compute instance to make
                      it compliant again, once the necessary capacity is
                      available in the region. Offers flexibility to add future
                      compute instances if compliance isn't an immediate
                      concern.


                      <<LB>>


                      > ðŸ“˜

                      >

                      > In rare cases, non-compliance can occur with a `strict`
                      placement group if Akamai needs to failover or migrate
                      your compute instances for maintenance. Fixing
                      non-compliance for a `strict` placement group is
                      prioritized over a `flexible` group.
                    enum:
                      - strict
                      - flexible
                    example: strict
                    type: string
                  placement_group_type:
                    description: >-
                      __Filterable__, __Read-only__ How compute instances are
                      distributed in your placement group. A
                      `placement_group_type` using anti-affinity
                      (`anti-affinity:local`) places compute instances in
                      separate hosts, but still in the same region. This best
                      supports the spread-apart model for high availability. A
                      `placement_group_type` using affinity places compute
                      instances physically close together, possibly on the same
                      host. This supports the grouped-together model for
                      low-latency.


                      > ðŸ“˜

                      >

                      > Currently, only `anti_affinity:local` is available for
                      `placement_group_type`.
                    enum:
                      - anti_affinity:local
                    example: anti-affinity:local
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The
                      [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                      where the placement group was deployed.
                    example: us-mia
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                type: object
                x-akamai:
                  file-path: schemas/placement-group.yaml
              x-example:
                x-ref: ../examples/get-placement-group-200.json
          description: The updated placement group.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_write
      summary: Update a placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli placement group-update 528 \
                --label PG_Miami_failover_update
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: group-update
      x-linode-grant: read-write
    delete:
      description: >-
        Deletes a placement group you have permission to `read_write`.


        - Deleting a placement group can't be undone.


        - All Linodes need to be
        [removed](https://techdocs.akamai.com/linode-api/reference/post-group-unassign)
        before you can delete a placement group.


        - If your placement group is non-compliant, you can't delete it. You
        need to wait for our help to bring it
        [compliant](https://www.linode.com/docs/products/compute/compute-instances/guides/placement-groups/#non-compliance-precedence).


        <<LB>>


        > ðŸ“˜

        >

        > To run this operation, your user needs the `add_linodes`
        [grant](https://techdocs.akamai.com/linode-api/reference/get-user-grants).
        Talk to your local account administrator about grant management for your
        user.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: >-
          https://techdocs.akamai.com/linode-api/reference/delete-placement-group
      operationId: delete-placement-group
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The API responds with an empty object.
                maxProperties: 0
                type: object
                x-akamai:
                  file-path: schemas/added-empty-obj.yaml
              x-example:
                x-ref: ../examples/delete-placement-group-200.json
          description: Delete successful.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_write
      summary: Delete a placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: linode-cli placement group-delete 528
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action:
        - group-delete
        - group-rm
      x-linode-grant: read_write
    parameters:
      - description: >-
          ID of the placement group to look up. Run the [List placement
          groups](https://techdocs.akamai.com/linode-api/reference/get-placement-groups)
          operation and store the `id` for the applicable placement group.
        example: '{{groupId}}'
        in: path
        name: groupId
        required: true
        schema:
          example: 32145
          type: integer
        x-akamai:
          file-path: parameters/group-id-path-043ea725.yaml
    x-akamai:
      file-path: paths/group.yaml
      path-info: /{apiVersion}/placement/groups/{groupId}
    x-linode-cli-command: placement
  /placement/groups/{groupId}/assign:
    post:
      description: >-
        Add a Linode to your placement group. Check out our [example API
        workflow](https://techdocs.akamai.com/cloud-computing/docs/work-with-placement-groups#use-the-api)
        to create a placement group and add Linodes.


        > ðŸ“˜

        >

        > To run this operation, your user needs the `add_linodes`
        [grant](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        and `read-write`
        [permission](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        to the Linodes you want to add to the group. Talk to your local account
        administrator about grant and permissions management.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/post-group-add-linode
      operationId: post-group-add-linode
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              description: The compute instances included in a placement group.
              properties:
                linodes:
                  description: >-
                    The `linodeId` values for individual compute instances
                    included in the placement group.
                  example: 528
                  items:
                    type: integer
                  type: array
              type: object
              x-akamai:
                file-path: schemas/placement-group-compute-instances.yaml
            x-example:
              x-ref: ../examples/post-group-add-linode.json
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  id:
                    description: >-
                      The placement group's ID. You need to provide it for all
                      operations that affect it.
                    example: 528
                    nullable: false
                    type: integer
                    x-linode-cli-display: 1
                  is_compliant:
                    description: >-
                      Whether all of the compute instances in your placement
                      group are compliant. If `true`, all compute instances meet
                      either the grouped-together or spread-apart model, which
                      you determine through your selected
                      `placement_group_type`. If `false`, a compute instance is
                      out of this compliance. For example, assume you've set
                      `anti-affinity:local` as your `placement_group_type` and
                      your group already has three qualifying compute instances
                      on separate hosts, to support the spread-apart model. If a
                      fourth compute instance is assigned that's on the same
                      host as one of the existing three, the placement group is
                      non-compliant. Enforce compliance in your group by setting
                      a `placement_group_policy`.


                      > ðŸ“˜

                      >

                      > Fixing compliance is not self-service. You need to wait
                      for our assistance to physically move compute instances to
                      make the group compliant again.
                    example: true
                    nullable: false
                    type: boolean
                  label:
                    description: >-
                      __Filterable__ The unique name set for the placement
                      group. A label has these constraints:


                      - It needs to begin and end with an alphanumeric
                      character.

                      - It can only consist of alphanumeric characters, hyphens
                      (`-`), underscores (`_`) or periods (`.`).
                    example: PG_Miami_failover
                    minLength: 1
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  members:
                    description: >-
                      An array of compute instances included in the placement
                      group.
                    items:
                      additionalProperties: false
                      properties:
                        is_compliant:
                          description: >-
                            The compliance status of each individual compute
                            instance in the placement group.
                          example: true
                          type: boolean
                        linode_id:
                          description: >-
                            __Read-only__ The unique identifier for a compute
                            instance included in the placement group.
                          example: 123
                          readOnly: true
                          type: integer
                      type: object
                    type: array
                  placement_group_policy:
                    description: >-
                      How requests to add future compute instances to your
                      placement group are handled, and whether it remains
                      compliant:


                      - `strict`. Don't assign a new compute instance if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. Use this to ensure the
                      placement group stays compliant (`is_compliant: true`).

                      - `flexible`. Assign a new compute instance, even if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. This makes the group
                      non-compliant (`is_compliant: false`). You need to wait
                      for Akamai to move the offending compute instance to make
                      it compliant again, once the necessary capacity is
                      available in the region. Offers flexibility to add future
                      compute instances if compliance isn't an immediate
                      concern.


                      <<LB>>


                      > ðŸ“˜

                      >

                      > In rare cases, non-compliance can occur with a `strict`
                      placement group if Akamai needs to failover or migrate
                      your compute instances for maintenance. Fixing
                      non-compliance for a `strict` placement group is
                      prioritized over a `flexible` group.
                    enum:
                      - strict
                      - flexible
                    example: strict
                    type: string
                  placement_group_type:
                    description: >-
                      __Filterable__, __Read-only__ How compute instances are
                      distributed in your placement group. A
                      `placement_group_type` using anti-affinity
                      (`anti-affinity:local`) places compute instances in
                      separate hosts, but still in the same region. This best
                      supports the spread-apart model for high availability. A
                      `placement_group_type` using affinity places compute
                      instances physically close together, possibly on the same
                      host. This supports the grouped-together model for
                      low-latency.


                      > ðŸ“˜

                      >

                      > Currently, only `anti_affinity:local` is available for
                      `placement_group_type`.
                    enum:
                      - anti_affinity:local
                    example: anti-affinity:local
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The
                      [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                      where the placement group was deployed.
                    example: us-mia
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                type: object
                x-akamai:
                  file-path: schemas/placement-group.yaml
              x-example:
                x-ref: ../examples/post-group-add-linode-200.json
          description: The Linode was added successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_write
      summary: Assign a placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli placement assign-linode 528 \
                --linodes 123 456 \
                --non-compliant true
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: assign-linode
      x-linode-grant: read-write
    parameters:
      - description: >-
          ID of the placement group to look up. Run the [List placement
          groups](https://techdocs.akamai.com/linode-api/reference/get-placement-groups)
          operation and store the `id` for the applicable placement group.
        example: '{{groupId}}'
        in: path
        name: groupId
        required: true
        schema:
          example: 32145
          type: integer
        x-akamai:
          file-path: parameters/group-id-path.yaml
    x-akamai:
      file-path: paths/group-assign.yaml
      path-info: /{apiVersion}/placement/groups/{groupId}/assign
    x-linode-cli-command: placement
  /placement/groups/{groupId}/unassign:
    post:
      description: >-
        Remove a Linode from your placement group.


        > ðŸ“˜

        >

        > To run this operation, your user needs the `add_linodes`
        [grant](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        and `read-write`
        [permission](https://techdocs.akamai.com/linode-api/reference/get-user-grants)
        to the Linodes you want to remove from the group. Talk to your local
        account administrator about grant and permissions management.


        [Learn
        more...](https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli)


        [Learn
        more...](https://techdocs.akamai.com/linode-api/reference/get-started#oauth)
      externalDocs:
        description: See documentation for this operation in Akamai's Linode API
        url: https://techdocs.akamai.com/linode-api/reference/post-group-unassign
      operationId: post-group-unassign
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              description: The compute instances included in a placement group.
              properties:
                linodes:
                  description: >-
                    The `linodeId` values for individual compute instances
                    included in the placement group.
                  example: 528
                  items:
                    type: integer
                  type: array
              type: object
              x-akamai:
                file-path: schemas/placement-group-compute-instances.yaml
            x-example:
              x-ref: ../examples/post-group-unassign.json
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  id:
                    description: >-
                      The placement group's ID. You need to provide it for all
                      operations that affect it.
                    example: 528
                    nullable: false
                    type: integer
                    x-linode-cli-display: 1
                  is_compliant:
                    description: >-
                      Whether all of the compute instances in your placement
                      group are compliant. If `true`, all compute instances meet
                      either the grouped-together or spread-apart model, which
                      you determine through your selected
                      `placement_group_type`. If `false`, a compute instance is
                      out of this compliance. For example, assume you've set
                      `anti-affinity:local` as your `placement_group_type` and
                      your group already has three qualifying compute instances
                      on separate hosts, to support the spread-apart model. If a
                      fourth compute instance is assigned that's on the same
                      host as one of the existing three, the placement group is
                      non-compliant. Enforce compliance in your group by setting
                      a `placement_group_policy`.


                      > ðŸ“˜

                      >

                      > Fixing compliance is not self-service. You need to wait
                      for our assistance to physically move compute instances to
                      make the group compliant again.
                    example: true
                    nullable: false
                    type: boolean
                  label:
                    description: >-
                      __Filterable__ The unique name set for the placement
                      group. A label has these constraints:


                      - It needs to begin and end with an alphanumeric
                      character.

                      - It can only consist of alphanumeric characters, hyphens
                      (`-`), underscores (`_`) or periods (`.`).
                    example: PG_Miami_failover
                    minLength: 1
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  members:
                    description: >-
                      An array of compute instances included in the placement
                      group.
                    items:
                      additionalProperties: false
                      properties:
                        is_compliant:
                          description: >-
                            The compliance status of each individual compute
                            instance in the placement group.
                          example: true
                          type: boolean
                        linode_id:
                          description: >-
                            __Read-only__ The unique identifier for a compute
                            instance included in the placement group.
                          example: 123
                          readOnly: true
                          type: integer
                      type: object
                    type: array
                  placement_group_policy:
                    description: >-
                      How requests to add future compute instances to your
                      placement group are handled, and whether it remains
                      compliant:


                      - `strict`. Don't assign a new compute instance if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. Use this to ensure the
                      placement group stays compliant (`is_compliant: true`).

                      - `flexible`. Assign a new compute instance, even if it
                      breaks the grouped-together or spread-apart model set by
                      the `placement_group_type`. This makes the group
                      non-compliant (`is_compliant: false`). You need to wait
                      for Akamai to move the offending compute instance to make
                      it compliant again, once the necessary capacity is
                      available in the region. Offers flexibility to add future
                      compute instances if compliance isn't an immediate
                      concern.


                      <<LB>>


                      > ðŸ“˜

                      >

                      > In rare cases, non-compliance can occur with a `strict`
                      placement group if Akamai needs to failover or migrate
                      your compute instances for maintenance. Fixing
                      non-compliance for a `strict` placement group is
                      prioritized over a `flexible` group.
                    enum:
                      - strict
                      - flexible
                    example: strict
                    type: string
                  placement_group_type:
                    description: >-
                      __Filterable__, __Read-only__ How compute instances are
                      distributed in your placement group. A
                      `placement_group_type` using anti-affinity
                      (`anti-affinity:local`) places compute instances in
                      separate hosts, but still in the same region. This best
                      supports the spread-apart model for high availability. A
                      `placement_group_type` using affinity places compute
                      instances physically close together, possibly on the same
                      host. This supports the grouped-together model for
                      low-latency.


                      > ðŸ“˜

                      >

                      > Currently, only `anti_affinity:local` is available for
                      `placement_group_type`.
                    enum:
                      - anti_affinity:local
                    example: anti-affinity:local
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                  region:
                    description: >-
                      __Filterable__, __Read-only__ The
                      [region](https://techdocs.akamai.com/linode-api/reference/get-regions)
                      where the placement group was deployed.
                    example: us-mia
                    readOnly: true
                    type: string
                    x-akamai:
                      labels:
                        - Filterable
                    x-linode-cli-display: 1
                    x-linode-filterable: true
                type: object
                x-akamai:
                  file-path: schemas/placement-group.yaml
              x-example:
                x-ref: ../examples/post-group-unassign-200.json
          description: The Linode was removed successfully.
        default:
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  errors:
                    items:
                      additionalProperties: false
                      description: >-
                        An object for describing a single error that occurred
                        during the processing of a request.
                      properties:
                        field:
                          description: >-
                            The field in the request that caused this error.
                            This may be a path, separated by periods in the case
                            of nested fields. In some cases this may come back
                            as `null` if the error is not specific to any single
                            element of the request.
                          example: fieldname
                          type: string
                        reason:
                          description: >-
                            What happened to cause this error. In most cases,
                            this can be fixed immediately by changing the data
                            you sent in the request, but in some cases you will
                            be instructed to [Open a support
                            ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket)
                            or perform some other action before you can complete
                            the request successfully.
                          example: fieldname must be a valid value
                          type: string
                      type: object
                      x-akamai:
                        file-path: schemas/error-object.yaml
                    type: array
                type: object
          description: >-
            See
            [Errors](https://techdocs.akamai.com/linode-api/reference/errors)
            for the range of possible error response codes.
      security:
        - personalAccessToken: []
        - oauth:
            - linodes:read_write
      summary: Unassign a placement group
      tags:
        - Placement groups
      x-akamai:
        tabs:
          - syntax: |-
              linode-cli placement unassign-linode 528 \
                --linode 123 456
            title: CLI
            url: >-
              https://techdocs.akamai.com/cloud-computing/docs/getting-started-with-the-linode-cli
          - syntax: linodes:read_write
            title: OAuth scopes
            url: https://techdocs.akamai.com/linode-api/reference/get-started#oauth
      x-linode-cli-action: unassign-linode
      x-linode-grant: read-write
    parameters:
      - description: >-
          ID of the placement group to look up. Run the [List placement
          groups](https://techdocs.akamai.com/linode-api/reference/get-placement-groups)
          operation and store the `id` for the applicable placement group.
        example: '{{groupId}}'
        in: path
        name: groupId
        required: true
        schema:
          example: 32145
          type: integer
        x-akamai:
          file-path: parameters/group-id-path-0d373f63.yaml
    x-akamai:
      file-path: paths/group-unassign.yaml
      path-info: /{apiVersion}/placement/groups/{groupId}/unassign
    x-linode-cli-command: placement
components:
  x-stackQL-resources:
    placement_groups:
      id: linode.placement.placement_groups
      name: placement_groups
      title: Placement Groups
      methods:
        post_placement_group:
          operation:
            $ref: '#/paths/~1placement~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_placement_groups:
          operation:
            $ref: '#/paths/~1placement~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_placement_group:
          operation:
            $ref: '#/paths/~1placement~1groups~1{groupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put_placement_group:
          operation:
            $ref: '#/paths/~1placement~1groups~1{groupId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_placement_group:
          operation:
            $ref: '#/paths/~1placement~1groups~1{groupId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        post_group_add_linode:
          operation:
            $ref: '#/paths/~1placement~1groups~1{groupId}~1assign/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        post_group_unassign:
          operation:
            $ref: '#/paths/~1placement~1groups~1{groupId}~1unassign/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/placement_groups/methods/get_placement_group
          - $ref: >-
              #/components/x-stackQL-resources/placement_groups/methods/get_placement_groups
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/placement_groups/methods/post_placement_group
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/placement_groups/methods/delete_placement_group
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/placement_groups/methods/put_placement_group
servers:
  - url: https://api.linode.com/v4
