openapi: 3.0.1
servers:
  - url: 'https://api.linode.com/v4'
  - url: 'https://api.linode.com/v4beta'
info:
  version: 4.147.0
  title: Linode API - account
  description: account
  contact:
    name: Linode
    url: 'https://linode.com'
    email: support@linode.com
tags:
  - name: Account
    description: 'Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account.'
  - name: Databases
    description: 'Managed Databases is Linode''s fully-managed, high-performance database service. Use the Managed Databases endpoints to create and manage database clusters.'
  - name: Domains
    description: Use the Domains endpoints to create and manage domains and domain records on your account.
  - name: Images
    description: 'Use the Images endpoints to capture, store, and manage custom Linode images.'
  - name: Linode Instances
    description: 'Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more.'
  - name: Linode Types
    description: 'Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment.'
  - name: Linode Kubernetes Engine (LKE)
    description: Linode Kubernetes Engine (LKE) is Linode's managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools.
  - name: Longview
    description: Longview is Linode's system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients.
  - name: Managed
    description: 'Managed is Linode''s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more.'
  - name: Networking
    description: 'Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing.'
  - name: NodeBalancers
    description: 'NodeBalancers is Linode''s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics.'
  - name: Object Storage
    description: 'Object Storage is Linode''s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service.'
  - name: Profile
    description: 'Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences.'
  - name: Regions
    description: 'Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more.'
  - name: StackScripts
    description: Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account.
  - name: Support
    description: 'Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies.'
  - name: Tags
    description: 'Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags.'
  - name: Volumes
    description: 'Volumes is Linode''s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes.'
components:
  schemas:
    Account:
      type: object
      description: Account object
      properties:
        active_promotions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Promotion'
        active_since:
          type: string
          format: date-time
          description: The datetime of when the account was activated.
          example: '2018-01-01T00:01:01'
          readOnly: true
        address_1:
          type: string
          description: First line of this Account's billing address.
          maxLength: 64
          example: 123 Main Street
        address_2:
          type: string
          description: Second line of this Account's billing address.
          maxLength: 64
          example: Suite A
        balance:
          type: number
          readOnly: true
          description: 'This Account''s balance, in US dollars.'
          example: 200
          x-linode-cli-display: 4
        balance_uninvoiced:
          type: number
          readOnly: true
          description: |
            This Account's current estimated invoice in US dollars. This is not your final invoice balance. Transfer charges are not included in the estimate.
          example: 145
          x-linode-cli-display: 4
        billing_source:
          type: string
          readOnly: true
          enum:
            - akamai
            - linode
          description: |
            The source of service charges for this Account, as determined by its relationship with Akamai.
            Accounts that are associated with Akamai-specific customers return a value of `akamai`.
            All other Accounts return a value of `linode`.
          example: akamai
        capabilities:
          type: array
          items:
            type: string
          description: |
            A list of capabilities your account supports.
          example:
            - Linodes
            - NodeBalancers
            - Block Storage
            - Object Storage
          readOnly: true
        city:
          type: string
          description: The city for this Account's billing address.
          maxLength: 24
          example: Philadelphia
        credit_card:
          type: object
          readOnly: true
          description: Credit Card information associated with this Account.
          properties:
            last_four:
              type: string
              description: |
                The last four digits of the credit card associated with this Account.
              example: 1111
            expiry:
              type: string
              description: The expiration month and year of the credit card.
              example: 11/2022
        company:
          type: string
          description: The company name associated with this Account.
          maxLength: 128
          example: Linode LLC
        country:
          type: string
          description: |
            The two-letter ISO 3166 country code of this Account's billing address.
          example: US
        email:
          type: string
          description: The email address of the person associated with this Account.
          maxLength: 128
          example: john.smith@linode.com
          x-linode-cli-display: 3
        first_name:
          type: string
          description: The first name of the person associated with this Account.
          maxLength: 50
          example: John
          x-linode-cli-display: 1
        last_name:
          type: string
          description: The last name of the person associated with this Account.
          maxLength: 50
          example: Smith
          x-linode-cli-display: 2
        phone:
          type: string
          description: The phone number associated with this Account.
          maxLength: 32
          example: 215-555-1212
        state:
          type: string
          description: |
            If billing address is in the United States (US) or Canada (CA), only the two-letter ISO 3166 State or Province code are accepted. If entering a US military address, state abbreviations (AA, AE, AP) should be entered. If the address is outside the US or CA, this is the Province associated with the Account's billing address.
          maxLength: 24
          example: PA
        tax_id:
          type: string
          description: |
            The tax identification number associated with this Account, for tax calculations in some countries. If you do not live in a country that collects tax, this should be an empty string (`""`).
          maxLength: 25
          example: ATU99999999
        euuid:
          type: string
          description: |
            An external unique identifier for this account.
          format: uuid
          readOnly: true
          example: E1AF5EEC-526F-487D-B317EBEB34C87D71
        zip:
          type: string
          description: |
            The zip code of this Account's billing address. The following restrictions apply:

            - May only consist of letters, numbers, spaces, and hyphens.
            - Must not contain more than 9 letter or number characters.
          example: 19102-1234
    Promotion:
      type: object
      readOnly: true
      description: |
        Promotions generally
        offer a set amount of credit that can be used toward your Linode
        services, and the promotion expires after a specified date. As well,
        a monthly cap on the promotional offer is set.

        Simply put, a promotion offers a certain amount of credit every
        month, until either the expiration date is passed, or until the total
        promotional credit is used, whichever comes first.
      properties:
        credit_monthly_cap:
          x-linode-cli-display: 5
          type: string
          description: |
            The amount available to spend per month.
          example: '10.00'
        credit_remaining:
          x-linode-cli-display: 3
          type: string
          description: |
            The total amount of credit left for this promotion.
          example: '50.00'
        description:
          type: string
          description: |
            A detailed description of this promotion.
          example: Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.
        expire_dt:
          x-linode-cli-display: 2
          type: string
          description: |
            When this promotion's credits expire.
          example: '2018-01-31T23:59:59'
        image_url:
          type: string
          description: |
            The location of an image for this promotion.
          example: 'https://linode.com/10_a_month_promotion.svg'
        summary:
          x-linode-cli-display: 10
          type: string
          description: |
            Short details of this promotion.
          example: $10 off your Linode a month!
        this_month_credit_remaining:
          x-linode-cli-display: 4
          type: string
          description: |
            The amount of credit left for this month for this promotion.
          example: '10.00'
        service_type:
          x-linode-cli-display: 1
          type: string
          enum:
            - all
            - backup
            - blockstorage
            - db_mysql
            - ip_v4
            - linode
            - linode_disk
            - linode_memory
            - longview
            - managed
            - nodebalancer
            - objectstorage
            - transfer_tx
          description: |
            The service to which this promotion applies.
          example: all
    ErrorObject:
      type: object
      description: |
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: |
            What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/docs/api/support/#support-ticket-open) or perform some other action before you can complete the request successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: |
            The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as "null" if the error is not specific to any single element of the request.
          example: fieldname
    CreditCard:
      type: object
      description: |
        An object representing the credit card information you have on file with
        Linode to make Payments against your Account.
      required:
        - card_number
        - expiry_month
        - expiry_year
        - cvv
      properties:
        card_number:
          type: string
          description: Your credit card number. No spaces or dashes allowed.
          minLength: 14
          maxLength: 24
          format: digits
          example: 4111111111111111
        expiry_month:
          type: integer
          minimum: 1
          maximum: 12
          description: |
            A value from 1-12 representing the expiration month of your credit card.

              * 1 = January
              * 2 = February
              * 3 = March
              * Etc.
          example: 12
        expiry_year:
          type: integer
          minLength: 4
          maxLength: 4
          description: |
            A four-digit integer representing the expiration year of
            your credit card.

            The combination of `expiry_month` and `expiry_year`
            must result in a month/year combination of the current month or in
            the future. An expiration date set in the past is invalid.
          example: 2020
        cvv:
          type: string
          minLength: 3
          maxLength: 4
          format: digits
          description: |
            CVV (Card Verification Value) of the credit card, typically found on the back of the card.
          example: '123'
    PaginationEnvelope:
      type: object
      description: |
        An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results. Results are presented within a `data` array. See [Pagination](/docs/api/#pagination) for more information.
      properties:
        pages:
          type: integer
          readOnly: true
          description: 'The total number of [pages](/docs/api/#pagination).'
          example: 1
        page:
          type: integer
          readOnly: true
          description: 'The current [page](/docs/api/#pagination).'
          example: 1
        results:
          type: integer
          readOnly: true
          description: The total number of results.
          example: 1
    EntityTransfer:
      type: object
      description: |
        An object representing an Entity Transfer.
      properties:
        token:
          x-linode-cli-display: 1
          type: string
          format: uuid
          description: |
            The token used to identify and accept or cancel this transfer.
          example: 123E4567-E89B-12D3-A456-426614174000
        status:
          x-linode-cli-display: 2
          x-linode-filterable: true
          x-linode-cli-color:
            accepted: yellow
            cancelled: red
            completed: green
            failed: red
            pending: yellow
            stale: red
            default_: white
          type: string
          enum:
            - accepted
            - cancelled
            - completed
            - failed
            - pending
            - stale
          description: |
            The status of the transfer request.

            `accepted`: The transfer has been accepted by another user and is currently in progress. Transfers can take up to 3 hours to complete.

            `cancelled`: The transfer has been cancelled by the sender.

            `completed`: The transfer has completed successfully.

            `failed`: The transfer has failed after initiation.

            `pending`: The transfer is ready to be accepted.

            `stale`: The transfer has exceeded its expiration date. It can no longer be accepted or cancelled.
          example: pending
        created:
          type: string
          format: date-time
          description: |
            When this transfer was created.
          example: '2021-02-11T16:37:03'
        updated:
          type: string
          format: date-time
          description: |
            When this transfer was last updated.
          example: '2021-02-11T16:37:03'
        is_sender:
          x-linode-cli-display: 4
          x-linode-filterable: true
          type: boolean
          description: |
            If the requesting account created this transfer.
          example: true
        expiry:
          x-linode-cli-display: 3
          type: string
          format: date-time
          description: |
            When this transfer expires. Transfers will automatically expire 24 hours after creation.
          example: '2021-02-12T16:37:03'
        entities:
          type: object
          description: |
            A collection of the entities to include in this transfer request, separated by type.
          properties:
            linodes:
              x-linode-cli-display: 5
              type: array
              items:
                type: integer
              description: |
                An array containing the IDs of each of the Linodes included in this transfer.
              example:
                - 111
                - 222
    Event:
      type: object
      description: |
        A collection of Event objects. An Event is an action taken against an entity related to your Account. For example, booting a Linode would create an Event.
        The Events returned depends on your grants.
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique ID of this Event.
          example: 123
          x-linode-cli-display: 1
          x-linode-filterable: true
        action:
          type: string
          enum:
            - account_update
            - account_settings_update
            - backups_enable
            - backups_cancel
            - backups_restore
            - community_question_reply
            - community_like
            - credit_card_updated
            - disk_create
            - disk_delete
            - disk_update
            - disk_duplicate
            - disk_imagize
            - disk_resize
            - dns_record_create
            - dns_record_delete
            - dns_record_update
            - dns_zone_create
            - dns_zone_delete
            - dns_zone_import
            - dns_zone_update
            - entity_transfer_accept
            - entity_transfer_cancel
            - entity_transfer_create
            - entity_transfer_fail
            - entity_transfer_stale
            - firewall_create
            - firewall_delete
            - firewall_disable
            - firewall_enable
            - firewall_update
            - firewall_device_add
            - firewall_device_remove
            - host_reboot
            - image_delete
            - image_update
            - image_upload
            - ipaddress_update
            - lassie_reboot
            - lish_boot
            - linode_addip
            - linode_boot
            - linode_clone
            - linode_create
            - linode_delete
            - linode_update
            - linode_deleteip
            - linode_migrate
            - linode_migrate_datacenter
            - linode_migrate_datacenter_create
            - linode_mutate
            - linode_mutate_create
            - linode_reboot
            - linode_rebuild
            - linode_resize
            - linode_resize_create
            - linode_shutdown
            - linode_snapshot
            - linode_config_create
            - linode_config_delete
            - linode_config_update
            - lke_node_create
            - longviewclient_create
            - longviewclient_delete
            - longviewclient_update
            - managed_disabled
            - managed_enabled
            - managed_service_create
            - managed_service_delete
            - nodebalancer_create
            - nodebalancer_delete
            - nodebalancer_update
            - nodebalancer_config_create
            - nodebalancer_config_delete
            - nodebalancer_config_update
            - nodebalancer_node_create
            - nodebalancer_node_delete
            - nodebalancer_node_update
            - oauth_client_create
            - oauth_client_delete
            - oauth_client_secret_reset
            - oauth_client_update
            - password_reset
            - payment_method_add
            - payment_submitted
            - profile_update
            - stackscript_create
            - stackscript_delete
            - stackscript_update
            - stackscript_publicize
            - stackscript_revise
            - tag_create
            - tag_delete
            - tfa_disabled
            - tfa_enabled
            - ticket_attachment_upload
            - ticket_create
            - ticket_update
            - token_create
            - token_delete
            - token_update
            - user_create
            - user_update
            - user_delete
            - user_ssh_key_add
            - user_ssh_key_delete
            - user_ssh_key_update
            - vlan_attach
            - vlan_detach
            - volume_attach
            - volume_clone
            - volume_create
            - volume_delete
            - volume_update
            - volume_detach
            - volume_resize
          readOnly: true
          description: |
            The action that caused this Event. New actions may be added in the future.
          example: ticket_create
          x-linode-cli-display: 3
          x-linode-filterable: true
        created:
          type: string
          readOnly: true
          format: date-time
          description: When this Event was created.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 6
          x-linode-filterable: true
        duration:
          type: number
          readOnly: true
          description: |
            The total duration in seconds that it takes for the Event to complete.
          example: 300.56
          x-linode-cli-display: 7
        entity:
          type: object
          readOnly: true
          description: |
            Detailed information about the Event's entity, including ID, type, label, and URL used to access it.
          properties:
            id:
              type: integer
              description: |
                The unique ID for an Event's entity.


                Some Event entities do not have IDs associated with them, so they
                will not be returned when filtering by ID. These Events include:
                  * `account`
                  * `profile`

                Entities for some Events are assigned the ID of the Linode they correspond to.
                When filtering by ID for these Events, use the corresponding Linode's ID.
                These Events include:
                  * `disks`
                  * `backups`


                Tag Events use a tag's name for the entity ID field. When filtering by ID
                for tag Events, supply the name of the tag.
              example: 11111
              x-linode-filterable: true
            label:
              type: string
              description: |
                The current label of this object. The label may reflect changes that occur with this Event.
              example: Problem booting my Linode
              x-linode-cli-display: 5
            type:
              type: string
              enum:
                - account
                - backups
                - community
                - disks
                - domain
                - entity_transfer
                - firewall
                - image
                - ipaddress
                - linode
                - longview
                - managed_service
                - nodebalancer
                - oauth_client
                - profile
                - stackscript
                - tag
                - ticket
                - token
                - user
                - user_ssh_key
                - volume
              readOnly: true
              description: |
                The type of entity that is being referenced by the Event.
              example: ticket
              x-linode-filterable: true
            url:
              type: string
              description: |
                The URL where you can access the object this Event is for. If a relative URL, it is relative to the domain you retrieved the Event from.
              example: /v4/support/tickets/11111
        secondary_entity:
          type: object
          readOnly: true
          description: |
            Detailed information about the Event's secondary entity, which provides additional information
            for events such as, but not limited to, `linode_boot`, `linode_reboot`, `linode_create`, and `linode_clone` Event actions.
          properties:
            id:
              type: string
              description: |
                The ID of the object that is the secondary entity.
              example: linode/debian9
            label:
              type: string
              description: |
                The label of this object.
              example: linode1234
            type:
              type: string
              readOnly: true
              description: |
                The type of entity that is being referenced by the Event.
              example: linode
            url:
              type: string
              description: |
                The URL where you can access the object this Event is for. If a relative URL, it is relative to the domain you retrieved the Event from.
              example: /v4/linode/instances/1234
        percent_complete:
          type: integer
          readOnly: true
          description: |
            A percentage estimating the amount of time remaining for an Event.
            Returns `null` for notification events.
          example: null
        rate:
          type: string
          readOnly: true
          description: |
            The rate of completion of the Event. Only some Events will return rate; for example, migration and resize Events.
          example: null
        read:
          type: boolean
          readOnly: true
          description: If this Event has been read.
          example: true
        seen:
          type: boolean
          readOnly: true
          description: If this Event has been seen.
          example: true
        status:
          type: string
          readOnly: true
          description: The current status of this Event.
          enum:
            - failed
            - finished
            - notification
            - scheduled
            - started
          x-linode-cli-display: 8
          x-linode-cli-color:
            failed: red
            finished: green
            started: yellow
            default_: white
        time_remaining:
          type: string
          readOnly: true
          nullable: true
          description: |
            The estimated time remaining until the completion of this Event. This value is only returned for some in-progress migration events. For all other in-progress events, the `percent_complete` attribute will indicate about how much more work is to be done.
          example: null
        username:
          type: string
          readOnly: true
          nullable: true
          description: |
            The username of the User who caused the Event.
          example: exampleUser
          x-linode-cli-display: 2
        message:
          type: string
          nullable: true
          description: |
            Provides additional information about the event. Additional information may include, but is not limited to, a more detailed representation of events which can help diagnose non-obvious failures.
          example: None
          x-linode-cli-display: 9
    Invoice:
      type: object
      description: Account Invoice object
      properties:
        id:
          type: integer
          readOnly: true
          description: The Invoice's unique ID.
          example: 123
          x-linode-cli-display: 1
        date:
          type: string
          readOnly: true
          format: date-time
          description: When this Invoice was generated.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 2
        label:
          type: string
          readOnly: true
          description: The Invoice's display label.
          example: Invoice
          x-linode-cli-display: 3
        subtotal:
          type: number
          readOnly: true
          description: The amount of the Invoice before taxes in US Dollars.
          example: 120.25
          x-linode-cli-display: 4
        tax:
          type: number
          readOnly: true
          description: The amount of tax levied on the Invoice in US Dollars.
          example: 12.25
          x-linode-cli-display: 5
        tax_summary:
          type: array
          readOnly: true
          description: The amount of tax broken down into subtotals by source.
          items:
            type: object
            properties:
              tax:
                type: number
                description: The amount of tax subtotal attributable to this source.
                example: 12.25
              name:
                type: string
                description: The source of this tax subtotal.
                example: PA STATE TAX
        total:
          type: number
          readOnly: true
          description: The amount of the Invoice after taxes in US Dollars.
          example: 132.5
          x-linode-cli-display: 6
    InvoiceItem:
      type: object
      description: An InvoiceItem object.
      properties:
        amount:
          type: number
          readOnly: true
          description: 'The price, in US dollars, of the Invoice Item. Equal to the unit price multiplied by quantity.'
          example: 20.2
          x-linode-cli-display: 4
        tax:
          type: number
          readOnly: true
          description: The amount of tax levied on this Item in US Dollars.
          example: 1.25
          x-linode-cli-display: 5
        total:
          type: number
          readOnly: true
          description: The price of this Item after taxes in US Dollars.
          example: 21.45
          x-linode-cli-display: 6
        from:
          type: string
          readOnly: true
          format: date-time
          description: 'The date the Invoice Item started, based on month.'
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 2
        label:
          type: string
          readOnly: true
          description: The Invoice Item's display label.
          example: Linode 123
          x-linode-cli-display: 1
        quantity:
          type: integer
          readOnly: true
          description: The quantity of this Item for the specified Invoice.
          example: 4
        to:
          type: string
          readOnly: true
          format: date-time
          description: 'The date the Invoice Item ended, based on month.'
          example: '2018-01-31T11:59:59'
          x-linode-cli-display: 3
        type:
          type: string
          readOnly: true
          description: 'The type of service, ether `hourly` or `misc`.'
          enum:
            - hourly
            - misc
          example: hourly
        unit_price:
          type: string
          readOnly: true
          description: The monthly service fee in US Dollars for this Item.
          example: 5.05
    Login:
      type: object
      description: |
        An object representing a previous successful login for a User.
      properties:
        id:
          type: integer
          description: |
            The unique ID of this login object.
          example: 1234
          readOnly: true
          x-linode-cli-display: 1
        datetime:
          type: string
          format: date-time
          description: |
            When the login was initiated.
          example: '2018-01-01T00:01:01'
          readOnly: true
          x-linode-cli-display: 2
        ip:
          type: string
          format: ip
          description: |
            The remote IP address that requested the login.
          example: 192.0.2.0
          readOnly: true
          x-linode-cli-display: 3
        username:
          type: string
          description: |
            The username of the User that attempted the login.
          example: example_user
          readOnly: true
          x-linode-cli-display: 4
        status:
          type: string
          enum:
            - successful
            - failed
          description: |
            Whether the login attempt succeeded or failed.
          example: successful
          readOnly: true
          x-linode-cli-display: 5
        restricted:
          type: boolean
          description: |
            True if the User that attempted the login was a restricted User, false otherwise.
          example: true
          readOnly: true
          x-linode-cli-display: 6
    Maintenance:
      type: object
      description: |
        Information about maintenance affecting an entity.
      properties:
        type:
          x-linode-filterable: true
          type: string
          enum:
            - reboot
            - cold_migration
            - live_migration
          description: |
            The type of maintenance.
          example: reboot
        status:
          x-linode-filterable: true
          type: string
          enum:
            - completed
            - pending
            - started
          description: |
            The maintenance status.

            Maintenance progresses in the following sequence: pending, started, then completed.
          example: started
        reason:
          type: string
          description: |
            The reason maintenance is being performed.
          example: This maintenance will allow us to update the BIOS on the host's motherboard.
        when:
          x-linode-filterable: true
          type: string
          description: |
            When the maintenance will begin.

            [Filterable](/docs/api/#filtering-and-sorting) with the following parameters:

            * A single value in date-time string format ("%Y-%m-%dT%H:%M:%S"), which returns only matches to that value.

            * A dictionary containing pairs of inequality operator string keys ("+or", "+gt", "+gte", "+lt", "+lte",
            or "+neq") and single date-time string format values ("%Y-%m-%dT%H:%M:%S"). "+or" accepts an array of values that
            may consist of single date-time strings or dictionaries of inequality operator pairs.
          format: date-time
          example: 2020-07-09T00:01:01.000Z
        entity:
          type: object
          description: |
            The entity being affected by maintenance.
          properties:
            label:
              type: string
              description: |
                The label of the entity being affected by maintenance.
              example: demo-linode
            id:
              type: number
              description: |
                The id of the entity being affected by maintenance.
              example: 1234
            type:
              type: string
              description: |
                The type of entity.
              example: Linode
            url:
              type: string
              description: |
                The API endpoint prefix to use in combination with the entity id to find specific information about the entity.
              example: 'https://api.linode.com/v4/linode/instances/{linodeId}'
    Notification:
      type: object
      description: |
        An important, often time-sensitive item related to your Account.
      properties:
        entity:
          type: object
          readOnly: true
          description: Detailed information about the Notification.
          properties:
            id:
              type: integer
              description: |
                The unique ID of the Notification's entity, based on the entity type.
              example: 3456
            label:
              type: string
              description: |
                The current label for this Notification's entity.
              example: Linode not booting.
            type:
              type: string
              description: The type of entity this is related to.
              example: ticket
            url:
              type: string
              description: |
                The URL where you can access the object this Notification is for. If a relative URL, it is relative to the domain you retrieved the Notification from.
              example: /support/tickets/3456
        label:
          type: string
          description: |
            A short description of this Notification.
          example: You have an important ticket open!
          readOnly: true
          x-linode-cli-display: 1
        message:
          type: string
          readOnly: true
          description: A human-readable description of the Notification.
          example: You have an important ticket open!
          x-linode-cli-display: 2
        body:
          type: string
          readOnly: true
          description: |
            A full description of this Notification, in markdown format.  Not all Notifications include bodies.
          nullable: true
          example: null
        type:
          type: string
          enum:
            - migration_scheduled
            - migration_imminent
            - migration_pending
            - reboot_scheduled
            - outage
            - payment_due
            - ticket_important
            - ticket_abuse
            - notice
            - maintenance
            - promotion
          readOnly: true
          description: The type of Notification this is.
          example: ticket_important
        severity:
          type: string
          enum:
            - minor
            - major
            - critical
          description: |
            The severity of this Notification.  This field can be used to decide how prominently to display the Notification, what color to make the display text, etc.
          example: major
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            critical: b
            minor: blue
            default_: white
        when:
          type: string
          readOnly: true
          format: date-time
          description: |
            If this Notification is of an Event that will happen at a fixed, future time, this is when the named action will be taken. For example, if a Linode is to be migrated in response to a Security Advisory, this field will contain the approximate time the Linode will be taken offline for migration.
          example: null
          x-linode-cli-display: 4
          x-linode-cli-color:
            None: black
            default_: white
        until:
          type: string
          format: date-time
          description: |
            If this Notification has a duration, this will be the ending time for the Event/action. For example, if there is scheduled maintenance for one of our systems, `until` would be set to the end of the maintenance window.
          example: null
          readOnly: true
          x-linode-cli-display: 5
          x-linode-cli-color:
            None: black
            default_: white
    OAuthClient:
      type: object
      description: |
        A third-party application registered to Linode that users may log into with their Linode account through our authentication server at <a target="_top" href="https://login.linode.com">https://login.linode.com</a>.  Using an OAuth Client, a third-party developer may be given access to some, or all, of a User's account for the purposes of their application.
      properties:
        id:
          type: string
          description: |
            The OAuth Client ID.  This is used to identify the client, and is a publicly-known value (it is not a secret).
          example: 2737bf16b39ab5d7b4a1
          readOnly: true
          x-linode-cli-display: 1
        redirect_uri:
          type: string
          format: url
          description: |
            The location a successful log in from <a target="_top" href="https://login.linode.com">https://login.linode.com</a> should be redirected to for this client.  The receiver of this redirect should be ready to accept an OAuth exchange code and finish the OAuth exchange.
          example: 'https://example.org/oauth/callback'
          x-linode-cli-display: 5
        label:
          x-linode-filterable: true
          type: string
          minLength: 1
          maxLength: 512
          description: |
            The name of this application.  This will be presented to users when they are asked to grant it access to their Account.
          example: Test_Client_1
          x-linode-cli-display: 2
        status:
          type: string
          enum:
            - active
            - disabled
            - suspended
          description: |
            The status of this application.  `active` by default.
          example: active
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            suspended: red
            default_: white
        secret:
          type: string
          description: |
            The OAuth Client secret, used in the OAuth exchange.  This is returned as `<REDACTED>` except when an OAuth Client is created or its secret is reset.  This is a secret, and should not be shared or disclosed publicly.
          example: <REDACTED>
          readOnly: true
        thumbnail_url:
          type: string
          nullable: true
          format: url
          description: |
            The URL where this client's thumbnail may be viewed, or `null` if this client does not have a thumbnail set.
          example: 'https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail'
          readOnly: true
        public:
          x-linode-filterable: true
          type: boolean
          default: false
          description: |
            If this is a public or private OAuth Client.  Public clients have a slightly different authentication workflow than private clients.  See the <a target="_top" href="https://oauth.net/2/">OAuth spec</a> for more details.
          example: false
          x-linode-cli-display: 4
    PaymentMethod:
      type: object
      description: Payment Method Response Object.
      properties:
        id:
          type: integer
          description: The unique ID of this Payment Method.
          example: 123
          x-linode-cli-display: 1
        type:
          type: string
          enum:
            - credit_card
            - google_pay
            - paypal
          description: The type of Payment Method.
          example: credit_card
          x-linode-cli-display: 2
        is_default:
          type: boolean
          description: |
            Whether this Payment Method is the default method for automatically processing service charges.
          example: true
          x-linode-cli-display: 3
        created:
          type: string
          readOnly: true
          format: date-time
          description: When the Payment Method was added to the Account.
          example: '2018-01-15T00:01:01'
        data:
          x-linode-cli-format: json
          x-linode-cli-display: 4
          oneOf:
            - x-linode-ref-name: Credit Card
              $ref: '#/components/schemas/CreditCardData'
            - x-linode-ref-name: Google Pay
              $ref: '#/components/schemas/GooglePayData'
            - x-linode-ref-name: Paypal
              $ref: '#/components/schemas/PayPalData'
          discriminator:
            propertyName: type
    CreditCardData:
      type: object
      description: Credit card information.
      properties:
        card_type:
          type: string
          readOnly: true
          description: The type of credit card.
          example: Discover
        last_four:
          type: string
          readOnly: true
          description: The last four digits of the credit card number.
          example: '1234'
        expiry:
          type: string
          readOnly: true
          format: MM/YYYY
          description: The expiration month and year of the credit card.
          example: 06/2022
    GooglePayData:
      type: object
      description: Google Pay information.
      properties:
        card_type:
          type: string
          readOnly: true
          description: The type of credit card.
          example: Discover
        last_four:
          type: string
          readOnly: true
          description: The last four digits of the credit card number.
          example: '1234'
        expiry:
          type: string
          readOnly: true
          format: MM/YYYY
          description: The expiration month and year of the credit card.
          example: 06/2022
    PayPalData:
      type: object
      description: PayPal information.
      properties:
        email:
          type: string
          readOnly: true
          description: The email address associated with your PayPal account.
          example: example@linode.com
        paypal_id:
          type: string
          readOnly: true
          description: PayPal Merchant ID associated with your PayPal account.
          example: ABC1234567890
    Payment:
      type: object
      description: Payment object response.
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique ID of the Payment.
          example: 123
          x-linode-cli-display: 1
        date:
          type: string
          readOnly: true
          format: date-time
          description: When the Payment was made.
          example: '2018-01-15T00:01:01'
          x-linode-cli-display: 2
        usd:
          type: integer
          readOnly: true
          description: 'The amount, in US dollars, of the Payment.'
          example: '120.50'
          x-linode-cli-display: 3
    PaymentRequest:
      type: object
      required:
        - usd
      description: Payment object request.
      properties:
        cvv:
          type: string
          description: |
            CVV (Card Verification Value) of the credit card to be used for the Payment. Required if paying by credit card.
          example: '123'
        usd:
          type: string
          pattern: '^\$?\d+\.\d{2}$'
          description: |
            The amount in US Dollars of the Payment.

            * Can begin with or without `$`.
            * Commas (`,`) are not accepted.
            * Must end with a decimal expression, such as `.00` or `.99`.
            * Minimum: `$5.00` or the Account balance, whichever is lower.
            * Maximum: `$2000.00` or the Account balance up to `$50000.00`, whichever is greater.
          example: $120.50
        payment_method_id:
          type: integer
          description: |
            The ID of the Payment Method to apply to the Payment.
          example: 123
    WarningObject:
      type: object
      description: |
        An object for describing a single warning associated with a response.
      properties:
        title:
          type: string
          description: |
            The general warning message.
          example: Unable to reboot Linode.
        details:
          type: string
          description: |
            Specific information related to the warning.
          example: Linode 123 could not be rebooted.
    PayPal:
      type: object
      required:
        - cancel_url
        - redirect_url
        - usd
      description: |
        An object representing the staging of a Payment via PayPal.
      properties:
        cancel_url:
          type: string
          description: The URL to have PayPal redirect to when Payment is cancelled.
          example: 'https://example.org'
        redirect_url:
          type: string
          description: The URL to have PayPal redirect to when Payment is approved.
          example: 'https://example.org'
        usd:
          type: string
          description: 'The payment amount in USD. Minimum accepted value of $5 USD. Maximum accepted value of $500 USD or credit card payment limit; whichever value is highest. PayPal''s maximum transaction limit is $10,000 USD.'
          example: '120.50'
    PayPalExecute:
      type: object
      required:
        - payer_id
        - payment_id
      description: |
        An object representing an execution of Payment to PayPal to capture the funds and credit your Linode Account.
      properties:
        payer_id:
          type: string
          description: |
            The PayerID returned by PayPal during the transaction authorization process.
          example: ABCDEFGHIJKLM
        payment_id:
          type: string
          description: |
            The PaymentID returned from [POST /account/payments/paypal](/docs/api/account/#paypal-payment-stage) that has been approved with PayPal.
          example: PAY-1234567890ABCDEFGHIJKLMN
    ServiceTransfer:
      type: object
      description: |
        An object representing a Service Transfer.
      properties:
        token:
          x-linode-cli-display: 1
          type: string
          format: uuid
          description: |
            The token used to identify and accept or cancel this transfer.
          example: 123E4567-E89B-12D3-A456-426614174000
        status:
          x-linode-cli-display: 2
          x-linode-filterable: true
          x-linode-cli-color:
            accepted: yellow
            cancelled: red
            completed: green
            failed: red
            pending: yellow
            stale: red
            default_: white
          type: string
          enum:
            - accepted
            - cancelled
            - completed
            - failed
            - pending
            - stale
          description: |
            The status of the transfer request.

            `accepted`: The transfer has been accepted by another user and is currently in progress.
            Transfers can take up to 3 hours to complete.

            `cancelled`: The transfer has been cancelled by the sender.

            `completed`: The transfer has completed successfully.

            `failed`: The transfer has failed after initiation.

            `pending`: The transfer is ready to be accepted.

            `stale`: The transfer has exceeded its expiration date. It can no longer be accepted or
            cancelled.
          example: pending
        created:
          type: string
          format: date-time
          description: |
            When this transfer was created.
          example: '2021-02-11T16:37:03'
        updated:
          type: string
          format: date-time
          description: |
            When this transfer was last updated.
          example: '2021-02-11T16:37:03'
        is_sender:
          x-linode-cli-display: 4
          x-linode-filterable: true
          type: boolean
          description: |
            If the requesting account created this transfer.
          example: true
        expiry:
          x-linode-cli-display: 3
          type: string
          format: date-time
          description: |
            When this transfer expires. Transfers will automatically expire 24 hours after creation.
          example: '2021-02-12T16:37:03'
        entities:
          type: object
          description: |
            A collection of the services to include in this transfer request, separated by type.
          properties:
            linodes:
              x-linode-cli-display: 5
              type: array
              items:
                type: integer
              description: |
                An array containing the IDs of each of the Linodes included in this transfer.
              example:
                - 111
                - 222
    AccountSettings:
      type: object
      description: Account Settings object
      properties:
        managed:
          type: boolean
          readOnly: true
          description: |
            Our 24/7 incident response service. This robust, multi-homed monitoring system distributes monitoring checks to ensure that your servers remain online and available at all times. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. Once you add a service to Linode Managed, we'll monitor it for connectivity, response, and total request time.
          example: true
          x-linode-cli-display: 3
        longview_subscription:
          type: string
          readOnly: true
          description: |
            The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](/docs/api/longview/#longview-subscriptions-list) ID or `null` for Longview Free.
          example: longview-3
          x-linode-cli-display: 2
        network_helper:
          type: boolean
          description: |
            Enables network helper across all users by default for new Linodes and Linode Configs.
          example: false
          x-linode-cli-display: 1
        backups_enabled:
          type: boolean
          description: |
            Account-wide backups default.  If `true`, all Linodes created will automatically be enrolled in the Backups service.  If `false`, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
          example: true
          x-linode-cli-display: 4
        object_storage:
          type: string
          readOnly: true
          enum:
            - disabled
            - suspended
            - active
          description: |
            A string describing the status of this account's Object Storage service enrollment.
          default: disabled
          example: active
          x-linode-cli-display: 5
    Transfer:
      type: object
      description: |
        An object representing your network utilization for the current month, in Gigabytes.
      properties:
        billable:
          type: integer
          readOnly: true
          description: |
            The amount of your transfer pool that is billable this billing cycle.
          example: 0
          x-linode-cli-display: 3
        quota:
          type: integer
          readOnly: true
          description: |
            The amount of network usage allowed this billing cycle.
          example: 9141
          x-linode-cli-display: 1
        used:
          type: integer
          readOnly: true
          description: |
            The amount of network usage you have used this billing cycle.
          example: 2
          x-linode-cli-display: 2
    User:
      type: object
      description: |
        A User on your Account. Unrestricted users can log in and access information about your Account, while restricted users may only access entities or perform actions they've been granted access to.
      properties:
        username:
          type: string
          pattern: '^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$'
          minLength: 3
          maxLength: 32
          description: |
            The User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).
          x-linode-filterable: true
          example: example_user
          x-linode-cli-display: 1
        email:
          type: string
          format: email
          description: |
            The email address for the User. Linode sends emails to this address for account management communications. May be used for other communications as configured.
          example: example_user@linode.com
          x-linode-cli-display: 2
        restricted:
          type: boolean
          description: |
            If true, the User must be granted access to perform actions or access entities on this Account. See User Grants View ([GET /account/users/{username}/grants](/docs/api/account/#users-grants-view)) for details on how to configure grants for a restricted User.
          example: true
          x-linode-cli-display: 3
        ssh_keys:
          type: array
          readOnly: true
          items:
            type: string
          description: |
            A list of SSH Key labels added by this User.

            Users can add keys with the SSH Key Add ([POST /profile/sshkeys](/docs/api/profile/#ssh-key-add)) command.

            These keys are deployed when this User is included in the `authorized_users`
            field of the following requests:
            - Linode Create ([POST /linode/instances](/docs/api/linode-instances/#linode-create))
            - Linode Rebuild ([POST /linode/instances/{linodeId}/rebuild](/docs/api/linode-instances/#linode-rebuild))
            - Disk Create ([POST /linode/instances/{linodeId}/disks](/docs/api/linode-instances/#disk-create))
          example:
            - home-pc
            - laptop
        tfa_enabled:
          type: boolean
          readOnly: true
          description: |
            A boolean value indicating if the User has Two Factor Authentication (TFA) enabled. See the Create Two Factor Secret ([POST /profile/tfa-enable](/docs/api/profile/#two-factor-secret-create)) endpoint to enable TFA.
    GrantsResponse:
      type: object
      description: |
        A structure representing all grants a restricted User has on the Account. Not available for unrestricted users, as they have access to everything without grants. If retrieved from the `/profile/grants` endpoint, entities to which a User has no access will be omitted.
      properties:
        global:
          type: object
          description: |
            A structure containing the Account-level grants a User has.
          properties:
            add_linodes:
              type: boolean
              description: 'If true, this User may create Linodes.'
              example: true
            add_longview:
              type: boolean
              description: 'If true, this User may create Longview clients and view the current plan.'
              example: true
            longview_subscription:
              type: boolean
              description: 'If true, this User may manage the Account''s Longview subscription.'
              example: true
            account_access:
              type: string
              nullable: true
              enum:
                - read_only
                - read_write
              description: |
                The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.
              example: read_only
            cancel_account:
              type: boolean
              description: 'If true, this User may cancel the entire Account.'
              example: false
            add_domains:
              type: boolean
              description: 'If true, this User may add Domains.'
              example: true
            add_stackscripts:
              type: boolean
              description: 'If true, this User may add StackScripts.'
              example: true
            add_nodebalancers:
              type: boolean
              description: 'If true, this User may add NodeBalancers.'
              example: true
            add_images:
              type: boolean
              description: 'If true, this User may add Images.'
              example: true
            add_volumes:
              type: boolean
              description: 'If true, this User may add Volumes.'
              example: true
            add_firewalls:
              type: boolean
              description: 'If true, this User may add Firewalls.'
              example: true
            add_databases:
              type: boolean
              description: 'if true, this User may add Managed Databases.'
              example: true
        linode:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Linode that is owned by this Account.
        database:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Database that is owned by this Account.
        domain:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Domain that is owned by this Account.
        nodebalancer:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each NodeBalancer that is owned by this Account.
        image:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Image that is owned by this Account.
        longview:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Longview Client that is owned by this Account.
        stackscript:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each StackScript that is owned by this Account.
        volume:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: |
            The grants this User has for each Block Storage Volume that is owned by this Account.
    Grant:
      type: object
      description: |
        Represents the level of access a restricted User has to a specific resource on the Account.
      properties:
        id:
          type: integer
          description: |
            The ID of the entity this grant applies to.
          example: 123
        permissions:
          type: string
          nullable: true
          enum:
            - read_only
            - read_write
          description: |
            The level of access this User has to this entity.  If null, this User has no access.
          example: read_only
        label:
          type: string
          description: |
            The current label of the entity this grant applies to, for display purposes.
          example: example-entity
          readOnly: true
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        minimum: 25
        maximum: 500
        default: 100
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
    AcceptedResponse:
      description: |
        Accepted with warning.

        A warnings array is included with the standard 200 response body.
      content:
        application/json:
          schema:
            type: object
            properties:
              warnings:
                type: array
                items:
                  $ref: '#/components/schemas/WarningObject'
    DeprecatedResponse:
      description: |
        Request successful. This endpoint is deprecated and may be removed in a future release.

        A warnings array is included with the standard 200 response body.
      content:
        application/json:
          schema:
            type: object
            properties:
              warnings:
                type: array
                items:
                  $ref: '#/components/schemas/WarningObject'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your Account.
            'account:read_write': Allows access to all endpoints related to your Account.
            'domains:read_only': Allows access to GET Domains on your Account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'firewall:read_only': Allows access to GET information about your Firewalls.
            'firewall:read_write': Allows acces to all Firewall endpoints.
            'images:read_only': Allows access to GET your Images.
            'images:read_write': Allows access to all endpoints related to your Images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allows access to GET Linodes on your Account.
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'lke:read_only': Allows access to GET LKE Clusters on your Account.
            'lke:read_write': Allows access to all endpoints related to LKE Clusters on your Account.
            'longview:read_only': Allows access to GET your Longview Clients.
            'longview:read_write': Allows access to all endpoints related to your Longview Clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your Account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'object_storage:read_only': Allows access to GET information related to your Object Storage.
            'object_storage:read_write': Allows access to all Object Storage endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to your StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: $request.body#/id
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: $request.body#/id
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: $request.body#/id
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: $request.body#/id
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: $request.body#/id
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: $request.body#/id
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: $request.body#/id
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: $request.body#/id
  x-stackQL-resources:
    account:
      id: linode.account.account
      name: account
      title: Account
      methods:
        getAccount:
          operation:
            $ref: '#/paths/~1account/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getAccount:
          operation:
            $ref: '#/paths/~1account/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateAccount:
          operation:
            $ref: '#/paths/~1account/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancelAccount:
          operation:
            $ref: '#/paths/~1account~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account/methods/getAccount'
        insert: []
        update: []
        delete: []
    credit_card:
      id: linode.account.credit_card
      name: credit_card
      title: Credit Card
      methods:
        createCreditCard:
          operation:
            $ref: '#/paths/~1account~1credit-card/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/credit_card/methods/createCreditCard'
        update: []
        delete: []
    entity_transfers:
      id: linode.account.entity_transfers
      name: entity_transfers
      title: Entity Transfers
      methods:
        getEntityTransfers:
          operation:
            $ref: '#/paths/~1account~1entity-transfers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getEntityTransfers:
          operation:
            $ref: '#/paths/~1account~1entity-transfers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createEntityTransfer:
          operation:
            $ref: '#/paths/~1account~1entity-transfers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getEntityTransfer:
          operation:
            $ref: '#/paths/~1account~1entity-transfers~1{token}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getEntityTransfer:
          operation:
            $ref: '#/paths/~1account~1entity-transfers~1{token}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteEntityTransfer:
          operation:
            $ref: '#/paths/~1account~1entity-transfers~1{token}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        acceptEntityTransfer:
          operation:
            $ref: '#/paths/~1account~1entity-transfers~1{token}~1accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_transfers/methods/getEntityTransfers'
          - $ref: '#/components/x-stackQL-resources/entity_transfers/methods/getEntityTransfer'
        insert:
          - $ref: '#/components/x-stackQL-resources/entity_transfers/methods/createEntityTransfer'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entity_transfers/methods/deleteEntityTransfer'
    events:
      id: linode.account.events
      name: events
      title: Events
      methods:
        getEvents:
          operation:
            $ref: '#/paths/~1account~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getEvents:
          operation:
            $ref: '#/paths/~1account~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getEvent:
          operation:
            $ref: '#/paths/~1account~1events~1{eventId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getEvent:
          operation:
            $ref: '#/paths/~1account~1events~1{eventId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventRead:
          operation:
            $ref: '#/paths/~1account~1events~1{eventId}~1read/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventSeen:
          operation:
            $ref: '#/paths/~1account~1events~1{eventId}~1seen/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/events/methods/getEvents'
          - $ref: '#/components/x-stackQL-resources/events/methods/getEvent'
        insert: []
        update: []
        delete: []
    invoices:
      id: linode.account.invoices
      name: invoices
      title: Invoices
      methods:
        getInvoices:
          operation:
            $ref: '#/paths/~1account~1invoices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getInvoices:
          operation:
            $ref: '#/paths/~1account~1invoices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getInvoice:
          operation:
            $ref: '#/paths/~1account~1invoices~1{invoiceId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getInvoice:
          operation:
            $ref: '#/paths/~1account~1invoices~1{invoiceId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invoices/methods/getInvoices'
          - $ref: '#/components/x-stackQL-resources/invoices/methods/getInvoice'
        insert: []
        update: []
        delete: []
    invoices_items:
      id: linode.account.invoices_items
      name: invoices_items
      title: Invoices Items
      methods:
        getInvoiceItems:
          operation:
            $ref: '#/paths/~1account~1invoices~1{invoiceId}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getInvoiceItems:
          operation:
            $ref: '#/paths/~1account~1invoices~1{invoiceId}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invoices_items/methods/getInvoiceItems'
        insert: []
        update: []
        delete: []
    logins:
      id: linode.account.logins
      name: logins
      title: Logins
      methods:
        getAccountLogins:
          operation:
            $ref: '#/paths/~1account~1logins/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getAccountLogins:
          operation:
            $ref: '#/paths/~1account~1logins/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getAccountLogin:
          operation:
            $ref: '#/paths/~1account~1logins~1{loginId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getAccountLogin:
          operation:
            $ref: '#/paths/~1account~1logins~1{loginId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logins/methods/getAccountLogins'
          - $ref: '#/components/x-stackQL-resources/logins/methods/getAccountLogin'
        insert: []
        update: []
        delete: []
    maintenance:
      id: linode.account.maintenance
      name: maintenance
      title: Maintenance
      methods:
        getMaintenance:
          operation:
            $ref: '#/paths/~1account~1maintenance/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getMaintenance:
          operation:
            $ref: '#/paths/~1account~1maintenance/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/maintenance/methods/getMaintenance'
        insert: []
        update: []
        delete: []
    notifications:
      id: linode.account.notifications
      name: notifications
      title: Notifications
      methods:
        getNotifications:
          operation:
            $ref: '#/paths/~1account~1notifications/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getNotifications:
          operation:
            $ref: '#/paths/~1account~1notifications/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notifications/methods/getNotifications'
        insert: []
        update: []
        delete: []
    oauth_clients:
      id: linode.account.oauth_clients
      name: oauth_clients
      title: Oauth Clients
      methods:
        getClients:
          operation:
            $ref: '#/paths/~1account~1oauth-clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getClients:
          operation:
            $ref: '#/paths/~1account~1oauth-clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createClient:
          operation:
            $ref: '#/paths/~1account~1oauth-clients/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getClient:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getClient:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateClient:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteClient:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getClientThumbnail:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}~1thumbnail/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getClientThumbnail:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}~1thumbnail/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setClientThumbnail:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}~1thumbnail/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resetClientSecret:
          operation:
            $ref: '#/paths/~1account~1oauth-clients~1{clientId}~1reset-secret/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/getClients'
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/getClient'
        insert:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/createClient'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/oauth_clients/methods/deleteClient'
    payment_methods:
      id: linode.account.payment_methods
      name: payment_methods
      title: Payment Methods
      methods:
        getPaymentMethods:
          operation:
            $ref: '#/paths/~1account~1payment-methods/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getPaymentMethods:
          operation:
            $ref: '#/paths/~1account~1payment-methods/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createPaymentMethod:
          operation:
            $ref: '#/paths/~1account~1payment-methods/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getPaymentMethod:
          operation:
            $ref: '#/paths/~1account~1payment-methods~1{paymentMethodId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getPaymentMethod:
          operation:
            $ref: '#/paths/~1account~1payment-methods~1{paymentMethodId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deletePaymentMethod:
          operation:
            $ref: '#/paths/~1account~1payment-methods~1{paymentMethodId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        makePaymentMethodDefault:
          operation:
            $ref: '#/paths/~1account~1payment-methods~1{paymentMethodId}~1make-default/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/payment_methods/methods/getPaymentMethods'
          - $ref: '#/components/x-stackQL-resources/payment_methods/methods/getPaymentMethod'
        insert:
          - $ref: '#/components/x-stackQL-resources/payment_methods/methods/createPaymentMethod'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/payment_methods/methods/deletePaymentMethod'
    payments:
      id: linode.account.payments
      name: payments
      title: Payments
      methods:
        getPayments:
          operation:
            $ref: '#/paths/~1account~1payments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getPayments:
          operation:
            $ref: '#/paths/~1account~1payments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createPayment:
          operation:
            $ref: '#/paths/~1account~1payments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        getPayment:
          operation:
            $ref: '#/paths/~1account~1payments~1{paymentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getPayment:
          operation:
            $ref: '#/paths/~1account~1payments~1{paymentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/payments/methods/getPayments'
          - $ref: '#/components/x-stackQL-resources/payments/methods/getPayment'
        insert:
          - $ref: '#/components/x-stackQL-resources/payments/methods/createPayment'
        update: []
        delete: []
    payments_paypal:
      id: linode.account.payments_paypal
      name: payments_paypal
      title: Payments Paypal
      methods:
        createPayPalPayment:
          operation:
            $ref: '#/paths/~1account~1payments~1paypal/post'
          response:
            mediaType: application/json
            openAPIDocKey: '299'
        executePayPalPayment:
          operation:
            $ref: '#/paths/~1account~1payments~1paypal~1execute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '299'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/payments_paypal/methods/createPayPalPayment'
        update: []
        delete: []
    promo_codes:
      id: linode.account.promo_codes
      name: promo_codes
      title: Promo Codes
      methods:
        createPromoCredit:
          operation:
            $ref: '#/paths/~1account~1promo-codes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/promo_codes/methods/createPromoCredit'
        update: []
        delete: []
    service_transfers:
      id: linode.account.service_transfers
      name: service_transfers
      title: Service Transfers
      methods:
        getServiceTransfers:
          operation:
            $ref: '#/paths/~1account~1service-transfers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getServiceTransfers:
          operation:
            $ref: '#/paths/~1account~1service-transfers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createServiceTransfer:
          operation:
            $ref: '#/paths/~1account~1service-transfers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getServiceTransfer:
          operation:
            $ref: '#/paths/~1account~1service-transfers~1{token}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getServiceTransfer:
          operation:
            $ref: '#/paths/~1account~1service-transfers~1{token}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteServiceTransfer:
          operation:
            $ref: '#/paths/~1account~1service-transfers~1{token}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        acceptServiceTransfer:
          operation:
            $ref: '#/paths/~1account~1service-transfers~1{token}~1accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_transfers/methods/getServiceTransfers'
          - $ref: '#/components/x-stackQL-resources/service_transfers/methods/getServiceTransfer'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_transfers/methods/createServiceTransfer'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_transfers/methods/deleteServiceTransfer'
    settings:
      id: linode.account.settings
      name: settings
      title: Settings
      methods:
        getAccountSettings:
          operation:
            $ref: '#/paths/~1account~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getAccountSettings:
          operation:
            $ref: '#/paths/~1account~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateAccountSettings:
          operation:
            $ref: '#/paths/~1account~1settings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enableAccountManaged:
          operation:
            $ref: '#/paths/~1account~1settings~1managed-enable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/getAccountSettings'
        insert: []
        update: []
        delete: []
    transfer:
      id: linode.account.transfer
      name: transfer
      title: Transfer
      methods:
        getTransfer:
          operation:
            $ref: '#/paths/~1account~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getTransfer:
          operation:
            $ref: '#/paths/~1account~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transfer/methods/getTransfer'
        insert: []
        update: []
        delete: []
    users:
      id: linode.account.users
      name: users
      title: Users
      methods:
        getUsers:
          operation:
            $ref: '#/paths/~1account~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getUsers:
          operation:
            $ref: '#/paths/~1account~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createUser:
          operation:
            $ref: '#/paths/~1account~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getUser:
          operation:
            $ref: '#/paths/~1account~1users~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getUser:
          operation:
            $ref: '#/paths/~1account~1users~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateUser:
          operation:
            $ref: '#/paths/~1account~1users~1{username}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteUser:
          operation:
            $ref: '#/paths/~1account~1users~1{username}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getUserGrants:
          operation:
            $ref: '#/paths/~1account~1users~1{username}~1grants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
            objectKey: $.data
        _getUserGrants:
          operation:
            $ref: '#/paths/~1account~1users~1{username}~1grants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        updateUserGrants:
          operation:
            $ref: '#/paths/~1account~1users~1{username}~1grants/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/getUsers'
          - $ref: '#/components/x-stackQL-resources/users/methods/getUser'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/createUser'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/deleteUser'
paths:
  /account:
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Account View
      description: |
        Returns the contact and billing information related to your Account.
      operationId: getAccount
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a single Account object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account
        - lang: CLI
          source: |
            linode-cli account view
    put:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Account Update
      description: |
        Updates contact and billing information related to your Account.
      operationId: updateAccount
      x-linode-cli-action: update
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: |
          Update contact and billing information.

          Account properties that are excluded from a request remain unchanged.

          When updating an Account's `country` to "US", an error is returned if the Account's `zip` is not a valid US zip code.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: The updated Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "address_1": "123 Main St.",
                  "address_2": "Suite 101",
                  "city": "Philadelphia",
                  "company": "My Company, LLC",
                  "country": "US",
                  "email": "jsmith@mycompany.com",
                  "first_name": "John",
                  "last_name": "Smith",
                  "phone": "555-555-1212",
                  "state": "PA",
                  "tax_id": "ATU99999999",
                  "zip": "19102"
                }' \
                https://api.linode.com/v4/account
        - lang: CLI
          source: |
            linode-cli account update \
              --address_1 "123 Main St." \
              --address_2 "Suite 101" \
              --city Philadelphia \
              --company My Company \ LLC \
              --country US \
              --email jsmith@mycompany.com \
              --first_name John \
              --last_name Smith \
              --phone 555-555-1212 \
              --state PA \
              --tax_id ATU99999999 \
              --zip 19102
  /account/cancel:
    post:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Account Cancel
      description: |
        Cancels an active Linode account. This action will cause Linode to attempt to charge the credit card on file for the remaining balance. An error will occur if Linode fails to charge the credit card on file. Restricted users will not be able to cancel an account.
      operationId: cancelAccount
      x-linode-cli-action: cancel
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: |
          Supply a comment stating the reason that you are cancelling your account.
        required: true
        content:
          application/json:
            schema:
              properties:
                comments:
                  type: string
                  description: |
                    Any reason for cancelling the account, and any other comments you might have about your Linode service.
                  example: I'm consolidating multiple accounts into one.
      responses:
        '200':
          description: Account cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_link:
                    type: string
                    description: A link to Linode's exit survey.
                example:
                  survey_link: 'https://alinktothesurvey.com'''
        '409':
          description: Could not charge the credit card on file
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        reason:
                          type: string
                          description: |
                            A string explaining that the account could not be cancelled because there is an outstanding balance on the account that must be paid first.
                          example: |
                            We were unable to charge your credit card for services rendered. We cannot cancel this account until the balance has been paid.
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "comments": "I am consolidating my accounts."
                }' \
                https://api.linode.com/v4/account/cancel
        - lang: CLI
          source: |
            linode-cli account cancel \
              --comments "I'm consolidating my accounts"
  /account/credit-card:
    post:
      deprecated: true
      x-linode-cli-skip: true
      x-linode-grant: read_write
      tags:
        - Account
      summary: Credit Card Add/Edit
      description: |
        **DEPRECATED**. Please use Payment Method Add ([POST /account/payment-methods](/docs/api/account/#payment-method-add)).

        Adds a credit card Payment Method to your account and sets it as the default method.
      operationId: createCreditCard
      x-linode-cli-action: update-card
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Update the credit card information associated with your Account.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
      responses:
        '200':
          description: Credit Card updated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "card_number": "4111111111111111",
                  "expiry_month": 11,
                  "expiry_year": 2020,
                  "cvv": "111"
                }' \
                https://api.linode.com/v4/account/credit-card
        - lang: CLI
          source: |
            linode-cli account update-card \
              --card_number 4111111111111111 \
              --expiry_month 11 \
              --expiry_year 2025 \
              --cvv 111
  /account/entity-transfers:
    get:
      deprecated: true
      x-linode-grant: unrestricted only
      x-linode-cli-skip: true
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: Entity Transfers List
      description: |
        **DEPRECATED**. Please use [Service Transfers List](/docs/api/account/#service-transfers-list).
      operationId: getEntityTransfers
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: |
            Returns a paginated list of Entity Transfer objects containing the details of all transfers that have been created and accepted by this account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EntityTransfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/entity-transfers
    post:
      deprecated: true
      x-linode-grant: unrestricted only
      x-linode-cli-skip: true
      tags:
        - Account
      summary: Entity Transfer Create
      description: |
        **DEPRECATED**. Please use [Service Transfer Create](/docs/api/account/#service-transfer-create).
      operationId: createEntityTransfer
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The entities to include in this transfer request.
        content:
          application/json:
            schema:
              required:
                - entities
              type: object
              properties:
                entities:
                  $ref: '#/components/schemas/EntityTransfer/properties/entities'
      responses:
        '200':
          description: |
            Returns an Entity Transfer object for the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTransfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "entities": {
                  "linodes": [
                    111,
                    222
                  ]
                }
              }' \
              https://api.linode.com/v4/account/entity-transfers
  '/account/entity-transfers/{token}':
    get:
      deprecated: true
      x-linode-grant: unrestricted only
      x-linode-cli-skip: true
      tags:
        - Account
      summary: Entity Transfer View
      description: |
        **DEPRECATED**. Please use [Service Transfer View](/docs/api/account/#service-transfer-view).
      operationId: getEntityTransfer
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: |
            Returns an Entity Transfer object containing the details of the transfer for the specified token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTransfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/entity-transfers/123E4567-E89B-12D3-A456-426614174000
      parameters:
        - name: token
          in: path
          description: The UUID of the Entity Transfer.
          required: true
          schema:
            type: string
            format: uuid
    delete:
      deprecated: true
      x-linode-grant: unrestricted only
      x-linode-cli-skip: true
      tags:
        - Account
      summary: Entity Transfer Cancel
      description: |
        **DEPRECATED**. Please use [Service Transfer Cancel](/docs/api/account/#service-transfer-cancel).
      operationId: deleteEntityTransfer
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: |
            Entity Transfer cancelled.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/account/entity-transfers/123E4567-E89B-12D3-A456-426614174000
      parameters:
        - name: token
          in: path
          description: The UUID of the Entity Transfer.
          required: true
          schema:
            type: string
            format: uuid
  '/account/entity-transfers/{token}/accept':
    post:
      deprecated: true
      x-linode-grant: unrestricted only
      x-linode-cli-skip: true
      tags:
        - Account
      summary: Entity Transfer Accept
      description: |
        **DEPRECATED**. Please use [Service Transfer Accept](/docs/api/account/#service-transfer-accept).
      operationId: acceptEntityTransfer
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: |
            Entity Transfer accepted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/account/entity-transfers/123E4567-E89B-12D3-A456-426614174000/accept
      parameters:
        - name: token
          in: path
          description: The UUID of the Entity Transfer.
          required: true
          schema:
            type: string
            format: uuid
  /account/events:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: Events List
      description: |
        Returns a collection of Event objects representing actions taken on your Account from the last 90 days. The Events returned depend on your grants.
      operationId: getEvents
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'events:read_only'
      responses:
        '200':
          description: |
            Returns a paginated lists of Event objects from the last 90 days.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/events
        - lang: CLI
          source: |
            linode-cli events list
  '/account/events/{eventId}':
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Event View
      description: |
        Returns a single Event object.
      operationId: getEvent
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'events:read_only'
      responses:
        '200':
          description: An Event object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/events/123
        - lang: CLI
          source: |
            linode-cli events view 123
      parameters:
        - name: eventId
          in: path
          description: The ID of the Event.
          required: true
          schema:
            type: integer
  '/account/events/{eventId}/read':
    post:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Event Mark as Read
      description: Marks a single Event as read.
      operationId: eventRead
      x-linode-cli-action: mark-read
      security:
        - personalAccessToken: []
        - oauth:
            - 'events:read_only'
      responses:
        '200':
          description: Event read.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/events/123/read
        - lang: CLI
          source: |
            linode-cli events mark-read 123
      parameters:
        - name: eventId
          in: path
          description: The ID of the Event to designate as read.
          required: true
          schema:
            type: integer
  '/account/events/{eventId}/seen':
    post:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Event Mark as Seen
      description: |
        Marks all Events up to and including this Event by ID as seen.
      operationId: eventSeen
      x-linode-cli-action: mark-seen
      security:
        - personalAccessToken: []
        - oauth:
            - 'events:read_only'
      responses:
        '200':
          description: Events seen.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/events/123/seen
        - lang: CLI
          source: |
            linode-cli events mark-seen 123
      parameters:
        - name: eventId
          in: path
          description: The ID of the Event to designate as seen.
          required: true
          schema:
            type: integer
  /account/invoices:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: Invoices List
      description: |
        Returns a paginated list of Invoices against your Account.
      operationId: getInvoices
      x-linode-cli-action: invoices-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of Invoice objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices
        - lang: CLI
          source: |
            linode-cli account invoices-list
  '/account/invoices/{invoiceId}':
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Invoice View
      description: Returns a single Invoice object.
      operationId: getInvoice
      x-linode-cli-action: invoice-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: An Invoice object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices/123
        - lang: CLI
          source: |
            linode-cli account invoice-view 123
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the Invoice.
          required: true
          schema:
            type: integer
  '/account/invoices/{invoiceId}/items':
    get:
      x-linode-grant: read_only
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the Invoice.
          required: true
          schema:
            type: integer
      tags:
        - Account
      summary: Invoice Items List
      description: Returns a paginated list of Invoice items.
      operationId: getInvoiceItems
      x-linode-cli-action: invoice-items
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: A paginated list of InvoiceItem objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceItem'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices/123/items
        - lang: CLI
          source: |
            linode-cli account invoice-items 123
  /account/logins:
    get:
      tags:
        - Account
      summary: User Logins List All
      description: |
        Returns a collection of successful logins for all users on the account during the last 90 days. This command can only be accessed by the unrestricted users of an account.
      operationId: getAccountLogins
      x-linode-cli-action: logins-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: |
            A collection of successful logins for all users on the account during the last 90 days.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Login'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/logins
        - lang: CLI
          source: |
            linode-cli account logins-list
  '/account/logins/{loginId}':
    get:
      tags:
        - Account
      summary: Login View
      description: |
        Returns a Login object that displays information about a successful login. The logins that can be viewed can be for any user on the account, and are not limited to only the logins of the user that is accessing this API endpoint. This command can only be accessed by the unrestricted users of the account.
      operationId: getAccountLogin
      x-linode-cli-action: login-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: The requested login object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/logins/1234
        - lang: CLI
          source: |
            linode-cli account login-view 1234
      parameters:
        - name: loginId
          in: path
          description: The ID of the login object to access.
          required: true
          schema:
            type: integer
  /account/maintenance:
    get:
      x-linode-grant: read_only
      servers:
        - url: 'https://api.linode.com/v4'
        - url: 'https://api.linode.com/v4beta'
      tags:
        - Account
      summary: Maintenance List
      description: |
        Returns a collection of Maintenance objects for any entity a user has permissions to view. Cancelled Maintenance objects are not returned.

        Currently, Linodes are the only entities available for viewing.
      operationId: getMaintenance
      x-linode-cli-action: maintenance-list
      security:
        - personalAccessToken: []
        - oauth: []
      responses:
        '200':
          description: Returns a paginated list of Maintenance objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Maintenance'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/maintenance
        - lang: CLI
          source: |
            linode-cli account maintenance-list
  /account/notifications:
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Notifications List
      description: |
        Returns a collection of Notification objects representing important, often time-sensitive items related to your Account.
        You cannot interact directly with Notifications, and a Notification will disappear when the circumstances causing it have been resolved. For example, if you have an important Ticket open, you must respond to the Ticket to dismiss the Notification.
      operationId: getNotifications
      x-linode-cli-action: notifications-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of Notification objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/notifications
        - lang: CLI
          source: |
            linode-cli account notifications-list
  /account/oauth-clients:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: OAuth Clients List
      description: |
        Returns a paginated list of OAuth Clients registered to your Account.  OAuth Clients allow users to log into applications you write or host using their Linode Account, and may allow them to grant some level of access to their Linodes or other entities to your application.
      operationId: getClients
      x-linode-cli-action: clients-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: A paginated list of OAuth Clients.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OAuthClient'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients
        - lang: CLI
          source: |
            linode-cli account clients-list
    post:
      tags:
        - Account
      summary: OAuth Client Create
      description: |
        Creates an OAuth Client, which can be used to allow users (using their Linode account) to log in to your own application, and optionally grant your application some amount of access to their Linodes or other entities.
      operationId: createClient
      x-linode-cli-action: client-create
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Information about the OAuth Client to create.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OAuthClient'
              required:
                - label
                - redirect_uri
      responses:
        '200':
          description: Client created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "redirect_uri": "https://example.org/oauth/callback",
                    "label": "Test_Client_1",
                    "public": false
                }' \
                https://api.linode.com/v4/account/oauth-clients
        - lang: CLI
          source: |
            linode-cli account client-create \
              --label Test_Client_1 \
              --redirect_uri https://example.org/callback
  '/account/oauth-clients/{clientId}':
    get:
      tags:
        - Account
      summary: OAuth Client View
      description: |
        Returns information about a single OAuth client.
      operationId: getClient
      x-linode-cli-action: client-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Information about the requested client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
        - lang: CLI
          source: |
            linode-cli account client-view \
              edc6790ea9db4d224c5c
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
    put:
      tags:
        - Account
      summary: OAuth Client Update
      description: |
        Update information about an OAuth Client on your Account. This can be especially useful to update the `redirect_uri` of your client in the event that the callback url changed in your application.
      operationId: updateClient
      x-linode-cli-action: client-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The fields to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClient'
      responses:
        '200':
          description: Client updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "redirect_uri": "https://example.org/oauth/callback",
                  "label": "Test_Client_1"
                  }
                }' \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
        - lang: CLI
          source: |
            linode-cli account client-update \
              edc6790ea9db4d224c5c \
              --label Test_Client_1
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
    delete:
      tags:
        - Account
      summary: OAuth Client Delete
      description: |
        Deletes an OAuth Client registered with Linode. The Client ID and Client secret will no longer be accepted by <a target="_top" href="https://login.linode.com">https://login.linode.com</a>, and all tokens issued to this client will be invalidated (meaning that if your application was using a token, it will no longer work).
      operationId: deleteClient
      x-linode-cli-action: client-delete
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: Client deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
        - lang: CLI
          source: |
            linode-cli account client-delete \
              edc6790ea9db4d224c5c
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
  '/account/oauth-clients/{clientId}/reset-secret':
    post:
      tags:
        - Account
      summary: OAuth Client Secret Reset
      description: |
        Resets the OAuth Client secret for a client you own, and returns the OAuth Client with the plaintext secret. This secret is not supposed to be publicly known or disclosed anywhere. This can be used to generate a new secret in case the one you have has been leaked, or to get a new secret if you lost the original. The old secret is expired immediately, and logins to your client with the old secret will fail.
      operationId: resetClientSecret
      x-linode-cli-action: client-reset-secret
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: Client secret reset successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/reset-secret
        - lang: CLI
          source: |
            linode-cli account client-reset-secret \
              edc6790ea9db4d224c5c
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
  '/account/oauth-clients/{clientId}/thumbnail':
    get:
      tags:
        - Account
      summary: OAuth Client Thumbnail View
      description: |
        Returns the thumbnail for this OAuth Client.  This is a publicly-viewable endpoint, and can be accessed without authentication.
      operationId: getClientThumbnail
      x-linode-cli-skip: true
      x-linode-cli-action: client-thumbnail
      responses:
        '200':
          description: The client's thumbnail.
          content:
            image/png:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail > thumbnail.png
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
    put:
      tags:
        - Account
      summary: OAuth Client Thumbnail Update
      description: |
        Upload a thumbnail for a client you own.  You must upload an image file that will be returned when the thumbnail is retrieved.  This image will be publicly-viewable.
      operationId: setClientThumbnail
      x-linode-cli-skip: true
      x-linode-cli-action: update-client-thumbnail
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The image to set as the thumbnail.
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Thumbnail updated successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: image/png" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT \
                --data-binary "/path/to/image"
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail
      parameters:
        - name: clientId
          in: path
          description: The OAuth Client ID to look up.
          required: true
          schema:
            type: string
  /account/payment-methods:
    get:
      servers:
        - url: 'https://api.linode.com/v4'
        - url: 'https://api.linode.com/v4beta'
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      x-linode-grant: read_only
      tags:
        - Account
      summary: Payment Methods List
      description: |
        Returns a paginated list of Payment Methods for this Account.
      operationId: getPaymentMethods
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of Payment Method objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payment-methods
        - lang: CLI
          source: |
            linode-cli payment-methods list
    post:
      servers:
        - url: 'https://api.linode.com/v4'
      x-linode-grant: read_write
      tags:
        - Account
      summary: Payment Method Add
      description: |
        Adds a Payment Method to your Account with the option to set it as the default method.

        * Adding a default Payment Method removes the default status from any other Payment Method.

        * An Account can have up to 6 active Payment Methods.

        * Up to 60 Payment Methods can be added each day.

        * Prior to adding a Payment Method, ensure that your billing address information is up-to-date
        with a valid `zip` by using the Account Update ([PUT /account](/docs/api/account/#account-update)) endpoint.

        * A `payment_method_add` event is generated when a payment is successfully submitted.
      operationId: createPaymentMethod
      x-linode-cli-action: add
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The details of the Payment Method to add.
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Payment Method Request Object.
              required:
                - type
                - data
                - is_default
              properties:
                type:
                  type: string
                  enum:
                    - credit_card
                  description: |
                    The type of Payment Method.

                    Alternative Payment Methods including Google Pay and PayPal can be added using the Cloud Manager. See the [Manage Payment Methods](/docs/products/platform/billing/guides/payment-methods/) guide
                    for details and instructions.
                  example: credit_card
                is_default:
                  $ref: '#/components/schemas/PaymentMethod/properties/is_default'
                data:
                  $ref: '#/components/schemas/CreditCard'
      responses:
        '200':
          description: Payment Method added.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "type": "credit_card",
                  "is_default": true,
                  "data": {
                    "card_number": "4111111111111111",
                    "expiry_month": 11,
                    "expiry_year": 2020,
                    "cvv": "111"
                  }
                }' \
                https://api.linode.com/v4/account/payment-methods
        - lang: CLI
          source: |
            linode-cli payment-methods add \
              --type credit_card \
              --is_default true \
              --data.card_number 4111111111111111 \
              --data.expiry_month 11 \
              --data.expiry_year 2020 \
              --data.cvv 111
  '/account/payment-methods/{paymentMethodId}':
    get:
      servers:
        - url: 'https://api.linode.com/v4'
      x-linode-grant: read_only
      tags:
        - Account
      summary: Payment Method View
      description: |
        View the details of the specified Payment Method.
      operationId: getPaymentMethod
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a Payment Method Object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payment-methods/123
        - lang: CLI
          source: |
            linode-cli payment-methods view 123
      parameters:
        - name: paymentMethodId
          in: path
          description: The ID of the Payment Method to look up.
          required: true
          schema:
            type: integer
    delete:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Payment Method Delete
      description: |
        Deactivate the specified Payment Method.

        The default Payment Method can not be deleted. To add a new default Payment Method, access the Payment Method
        Add ([POST /account/payment-methods](/docs/api/account/#payment-method-add)) endpoint. To designate an existing
        Payment Method as the default method, access the Payment Method Make Default
        ([POST /account/payment-methods/{paymentMethodId}/make-default](/docs/api/account/#payment-method-make-default))
        endpoint.
      operationId: deletePaymentMethod
      x-linode-cli-action:
        - delete
        - rm
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Payment Method deactivated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/account/payment-methods/123
        - lang: CLI
          source: |
            linode-cli payment-methods delete 123
      parameters:
        - name: paymentMethodId
          in: path
          description: The ID of the Payment Method to look up.
          required: true
          schema:
            type: integer
  '/account/payment-methods/{paymentMethodId}/make-default':
    post:
      servers:
        - url: 'https://api.linode.com/v4'
      x-linode-grant: read_write
      tags:
        - Account
      summary: Payment Method Make Default
      description: |
        Make the specified Payment Method the default method for automatically processing payments.

        Removes the default status from any other Payment Method.
      operationId: makePaymentMethodDefault
      x-linode-cli-action: default
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: Payment Method successfully set as the default method.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/payment-methods/123/make-default
        - lang: CLI
          source: |
            linode-cli payment-methods default 123
      parameters:
        - name: paymentMethodId
          in: path
          description: The ID of the Payment Method to make default.
          required: true
          schema:
            type: integer
  /account/payments:
    get:
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      x-linode-grant: read_only
      tags:
        - Account
      summary: Payments List
      description: |
        Returns a paginated list of Payments made on this Account.
      operationId: getPayments
      x-linode-cli-action: payments-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of Payment objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payments
        - lang: CLI
          source: |
            linode-cli account payments-list
    post:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Payment Make
      description: |
        Makes a Payment to your Account.

        * The requested amount is charged to the default Payment Method if no `payment_method_id` is specified.

        * A `payment_submitted` event is generated when a payment is successfully submitted.
      operationId: createPayment
      x-linode-cli-action: payment-create
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Information about the Payment you are making.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment submitted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '202':
          $ref: '#/components/responses/AcceptedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "cvv": "123",
                    "usd": "120.50",
                    "payment_method_id": 123
                }' \
                https://api.linode.com/v4/account/payments
        - lang: CLI
          source: |
            linode-cli account payment-create \
              --cvv 123 \
              --usd 120.50 \
              --payment_method_id 123
  '/account/payments/{paymentId}':
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Payment View
      description: |
        Returns information about a specific Payment.
      operationId: getPayment
      x-linode-cli-action: payment-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: A Payment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payments/123
        - lang: CLI
          source: |
            linode-cli account payment-view 123
      parameters:
        - name: paymentId
          in: path
          description: The ID of the Payment to look up.
          required: true
          schema:
            type: integer
  /account/payments/paypal:
    post:
      x-linode-grant: read_only
      deprecated: true
      x-linode-cli-skip: true
      tags:
        - Account
      summary: PayPal Payment Stage
      description: |
        **Note**: This endpoint is disabled and no longer accessible. PayPal can be designated as a Payment Method for automated payments using the Cloud Manager. See [Manage Payment Methods](/docs/products/platform/billing/guides/payment-methods/).
      operationId: createPayPalPayment
      x-linode-cli-action: paypal-start
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: |
          The amount of the Payment to submit via PayPal.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPal'
      responses:
        '200':
          description: PayPal Payment staged.
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_id:
                    type: string
                    description: |
                      The paypal-generated ID for this Payment. Used when authorizing the Payment in PayPal's interface.
                    example: PAY-1234567890ABCDEFGHIJKLMN
                  checkout_token:
                    type: string
                    description: |
                      The checkout token generated for this Payment.
                    example: EC-1A2B3C4D5E6F7G8H9
                    readOnly: true
        '299':
          $ref: '#/components/responses/DeprecatedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "usd": "120.50",
                    "redirect_url": "https://example.org",
                    "cancel_url": "https://example.org"
                }' \
                https://api.linode.com/v4/account/payments/paypal
        - lang: CLI
          source: |
            linode-cli account paypal-start \
              --cancel_url https://example.org \
              --redirect_url https://example.org \
              --usd 120.50
  /account/payments/paypal/execute:
    post:
      x-linode-grant: read_write
      deprecated: true
      x-linode-cli-skip: true
      tags:
        - Account
      summary: Staged/Approved PayPal Payment Execute
      description: |
        **Note**: This endpoint is disabled and no longer accessible. PayPal can be designated as a Payment Method for automated payments using the Cloud Manager. See [Manage Payment Methods](/docs/products/platform/billing/guides/payment-methods/).
      operationId: executePayPalPayment
      x-linode-cli-action: paypal-execute
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: |
          The details of the Payment to execute.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPalExecute'
      responses:
        '200':
          description: PayPal Payment executed.
          content:
            application/json:
              schema:
                type: object
        '202':
          $ref: '#/components/responses/AcceptedResponse'
        '299':
          $ref: '#/components/responses/DeprecatedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "payment_id": "PAY-1234567890ABCDEFGHIJKLMN",
                    "payer_id": "ABCDEFGHIJKLM"
                }' \
                https://api.linode.com/v4/account/payments/paypal
        - lang: CLI
          source: |
            linode-cli account paypal-execute
  /account/promo-codes:
    post:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: Promo Credit Add
      description: |
        Adds an expiring Promo Credit to your account.

        The following restrictions apply:

        * Your account must be less than 90 days old.
        * There must not be an existing Promo Credit already on your account.
        * The requesting User must be unrestricted. Use the User Update
          ([PUT /account/users/{username}](/docs/api/account/#user-update)) to change a User's restricted status.
        * The `promo_code` must be valid and unexpired.
      operationId: createPromoCredit
      x-linode-cli-action: promo-add
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      requestBody:
        description: Enter a Promo Code to add its associated credit to your Account.
        content:
          application/json:
            schema:
              required:
                - promo_code
              type: object
              properties:
                promo_code:
                  type: string
                  minLength: 1
                  maxLength: 32
                  description: |
                    The Promo Code.
      responses:
        '200':
          description: |
            Promo Credit successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "promo_code": "abcdefABCDEF1234567890"
              }' \
              https://api.linode.com/v4/account/promo-codes
        - lang: CLI
          source: |
            linode-cli account \
              promo-add \
              --promo-code abcdefABCDEF1234567890
  /account/service-transfers:
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: Service Transfers List
      description: |
        Returns a collection of all created and accepted Service Transfers for this account, regardless of the user that created or accepted the transfer.

        This command can only be accessed by the unrestricted users of an account.
      operationId: getServiceTransfers
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: |
            Returns a paginated list of Service Transfer objects containing the details of all transfers that have been created and accepted by this account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceTransfer'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/service-transfers
        - lang: CLI
          source: |
            linode-cli service-transfers \
              list
    post:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: Service Transfer Create
      description: |
        Creates a transfer request for the specified services. A request can contain any of the specified service types
        and any number of each service type. At this time, only Linodes can be transferred.

        When created successfully, a confirmation email is sent to the account that created this transfer containing a
        transfer token and instructions on completing the transfer.

        When a transfer is [accepted](/docs/api/account/#service-transfer-accept), the requested services are moved to
        the receiving account. Linode services will not experience interruptions due to the transfer process. Backups
        for Linodes are transferred as well.

        DNS records that are associated with requested services will not be transferred or updated. Please ensure that
        associated DNS records have been updated or communicated to the recipient prior to the transfer.

        A transfer can take up to three hours to complete once accepted. When a transfer is
        completed, billing for transferred services ends for the sending account and begins for the receiving account.

        This command can only be accessed by the unrestricted users of an account.

        There are several conditions that must be met in order to successfully create a transfer request:

        1. The account creating the transfer must not have a past due balance or active Terms of Service violation.

        1. The service must be owned by the account that is creating the transfer.

        1. The service must not be assigned to another Service Transfer that is pending or that has been accepted and is
        incomplete.

        1. Linodes must not:

            * be assigned to a NodeBalancer, Firewall, VLAN, or Managed Service.

            * have any attached Block Storage Volumes.

            * have any shared IP addresses.

            * have any assigned /56, /64, or /116 IPv6 ranges.
      operationId: createServiceTransfer
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The services to include in this transfer request.
        content:
          application/json:
            schema:
              required:
                - entities
              type: object
              properties:
                entities:
                  $ref: '#/components/schemas/ServiceTransfer/properties/entities'
      responses:
        '200':
          description: |
            Returns a Service Transfer object for the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTransfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "entities": {
                  "linodes": [
                    111,
                    222
                  ]
                }
              }' \
              https://api.linode.com/v4/account/service-transfers
        - lang: CLI
          source: |
            linode-cli service-transfers \
              create \
              --entities.linodes 111 \
              --entities.linodes 222
  '/account/service-transfers/{token}':
    get:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: Service Transfer View
      description: |
        Returns the details of the Service Transfer for the provided token.

        While a transfer is pending, any unrestricted user *of any account* can access this command. After a
        transfer has been accepted, it can only be viewed by unrestricted users of the accounts that created and
        accepted the transfer. If cancelled or expired, only unrestricted users of the account that created the
        transfer can view it.
      operationId: getServiceTransfer
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: |
            Returns a Service Transfer object containing the details of the transfer for the specified token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTransfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/service-transfers/123E4567-E89B-12D3-A456-426614174000
        - lang: CLI
          source: |
            linode-cli service-transfers \
              view 123E4567-E89B-12D3-A456-426614174000
      parameters:
        - name: token
          in: path
          description: The UUID of the Service Transfer.
          required: true
          schema:
            type: string
            format: uuid
    delete:
      x-linode-grant: unrestricted only
      tags:
        - account
      summary: Service Transfer Cancel
      description: |
        Cancels the Service Transfer for the provided token. Once cancelled, a transfer cannot be accepted or otherwise
        acted on in any way. If cancelled in error, the transfer must be
        [created](/docs/api/account/#service-transfer-create) again.

        When cancelled, an email notification for the cancellation is sent to the account that created
        this transfer. Transfers can not be cancelled if they are expired or have been accepted.

        This command can only be accessed by the unrestricted users of the account that created this transfer.
      operationId: deleteServiceTransfer
      x-linode-cli-action: cancel
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: |
            Service Transfer cancelled.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/account/service-transfers/123E4567-E89B-12D3-A456-426614174000
        - lang: CLI
          source: |
            linode-cli service-transfers \
              cancel 123E4567-E89B-12D3-A456-426614174000
      parameters:
        - name: token
          in: path
          description: The UUID of the Service Transfer.
          required: true
          schema:
            type: string
            format: uuid
  '/account/service-transfers/{token}/accept':
    post:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: Service Transfer Accept
      description: |
        Accept a Service Transfer for the provided token to receive the services included in the transfer to your
        account. At this time, only Linodes can be transferred.

        When accepted, email confirmations are sent to the accounts that created and accepted the transfer. A transfer
        can take up to three hours to complete once accepted. Once a transfer is completed, billing for transferred
        services ends for the sending account and begins for the receiving account.

        This command can only be accessed by the unrestricted users of the account that receives the transfer. Users
        of the same account that created a transfer cannot accept the transfer.

        There are several conditions that must be met in order to accept a transfer request:

        1. Only transfers with a `pending` status can be accepted.

        1. The account accepting the transfer must have a registered payment method and must not have a past due
          balance or other account limitations for the services to be transferred.

        1. Both the account that created the transfer and the account that is accepting the transfer must not have any
        active Terms of Service violations.

        1. The service must still be owned by the account that created the transfer.

        1. Linodes must not:

            * be assigned to a NodeBalancer, Firewall, VLAN, or Managed Service.

            * have any attached Block Storage Volumes.

            * have any shared IP addresses.

            * have any assigned /56, /64, or /116 IPv6 ranges.

        Any and all of the above conditions must be cured and maintained by the relevant account prior to the
        transfer's expiration to allow the transfer to be accepted by the receiving account.
      operationId: acceptServiceTransfer
      x-linode-cli-action: accept
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: |
            Service Transfer accepted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/account/service-transfers/123E4567-E89B-12D3-A456-426614174000/accept
        - lang: CLI
          source: |
            linode-cli service-transfers \
              accept 123E4567-E89B-12D3-A456-426614174000
      parameters:
        - name: token
          in: path
          description: The UUID of the Service Transfer.
          required: true
          schema:
            type: string
            format: uuid
  /account/settings:
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Account Settings View
      description: |
        Returns information related to your Account settings: Managed service subscription, Longview subscription, and network helper.
      operationId: getAccountSettings
      x-linode-cli-action: settings
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a single Account settings object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/settings
        - lang: CLI
          source: |
            linode-cli account settings
    put:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Account Settings Update
      description: |
        Updates your Account settings.

        To update your Longview subscription plan, send a request to [Update Longview Plan](/docs/api/longview/#longview-plan-update).
      operationId: updateAccountSettings
      x-linode-cli-action: settings-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Update Account settings information.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSettings'
      responses:
        '200':
          description: The updated Account settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "network_helper": true,
                }' \
                https://api.linode.com/v4/account/settings
        - lang: CLI
          source: |
            linode-cli account settings-update \
              --network_helper false
  /account/settings/managed-enable:
    post:
      x-linode-grant: read_write
      tags:
        - Account
      summary: Linode Managed Enable
      description: |
        Enables Linode Managed for the entire account and sends a welcome email to the account's associated email address. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. See our [Linode Managed guide](/docs/guides/linode-managed/) to learn more.
      operationId: enableAccountManaged
      x-linode-cli-action: enable-managed
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: Managed services enabled for account.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/settings/managed-enable
        - lang: CLI
          source: |
            linode-cli account enable-managed
  /account/transfer:
    get:
      x-linode-grant: read_only
      tags:
        - Account
      summary: Network Utilization View
      description: |
        Returns a Transfer object showing your network utilization, in GB, for the current month.
      operationId: getTransfer
      x-linode-cli-action: transfer
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a single Transfer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/transfer
        - lang: CLI
          source: |
            linode-cli account transfer
  /account/users:
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Account
      summary: Users List
      description: |
        Returns a paginated list of Users on your Account.

        This command can only be accessed by the unrestricted users of an account.

        Users may access all or part of your Account based on their restricted status and grants.  An unrestricted User may access everything on the account, whereas restricted User may only access entities or perform actions they've been given specific grants to.
      operationId: getUsers
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: A paginated list of Users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users
        - lang: CLI
          source: |
            linode-cli users list
    post:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User Create
      description: |
        Creates a User on your Account. Once created, a confirmation message containing
        password creation and login instructions is sent to the User's email address.

        This command can only be accessed by the unrestricted users of an account.

        The User's account access is determined by whether or not they are restricted,
        and what grants they have been given.
      operationId: createUser
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Information about the User to create.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
              required:
                - username
                - email
      responses:
        '200':
          description: New User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "username": "example_user",
                    "email": "person@place.com",
                    "restricted": true
                }' \
                https://api.linode.com/v4/account/users
        - lang: CLI
          source: |
            linode-cli users create \
              --username example_user \
              --email example_user@linode.com \
              --restricted true
  '/account/users/{username}':
    get:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User View
      description: |
        Returns information about a single User on your Account.

        This command can only be accessed by the unrestricted users of an account.
      operationId: getUser
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: The requested User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users/example_user
        - lang: CLI
          source: |
            linode-cli users view example_user
      parameters:
        - name: username
          in: path
          description: The username to look up.
          required: true
          schema:
            type: string
    put:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User Update
      description: |
        Update information about a User on your Account. This can be used to
        change the restricted status of a User. When making a User restricted,
        no grants will be configured by default and you must then set up grants
        in order for the User to access anything on the Account.

        This command can only be accessed by the unrestricted users of an account.
      operationId: updateUser
      x-linode-cli-action: update
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The information to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "username": example_user,
                    "email": example@linode.com,
                    "restricted": true
                }' \
                https://api.linode.com/v4/account/users/example_user
        - lang: CLI
          source: |
            linode-cli users update example_user \
              --username example_user \
              --email example@linode.com \
              --restricted true
      parameters:
        - name: username
          in: path
          description: The username to look up.
          required: true
          schema:
            type: string
    delete:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User Delete
      description: |
        Deletes a User. The deleted User will be immediately logged out and
        may no longer log in or perform any actions. All of the User's Grants
        will be removed.

        This command can only be accessed by the unrestricted users of an account.
      operationId: deleteUser
      x-linode-cli-action:
        - delete
        - rm
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/account/users/example_user
        - lang: CLI
          source: |
            linode-cli users delete example_user
      parameters:
        - name: username
          in: path
          description: The username to look up.
          required: true
          schema:
            type: string
  '/account/users/{username}/grants':
    get:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User's Grants View
      description: |
        Returns the full grants structure for the specified account User
        (other than the account owner, see below for details). This includes all entities
        on the Account alongside the level of access this User has to each of them.

        This command can only be accessed by the unrestricted users of an account.

        The current authenticated User, including the account owner, may view their
        own grants at the [/profile/grants](/docs/api/profile/#grants-list)
        endpoint, but will not see entities that they do not have access to.
      operationId: getUserGrants
      x-linode-cli-action: grants
      x-linode-cli-skip: true
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: The User's grants.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantsResponse'
        '204':
          description: |
            This is an unrestricted User, and therefore has no grants to return. This User may access everything on the Account and perform all actions.
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users/example_user/grants
      parameters:
        - name: username
          in: path
          description: The username to look up.
          required: true
          schema:
            type: string
    put:
      x-linode-grant: unrestricted only
      tags:
        - Account
      summary: User's Grants Update
      description: |
        Update the grants a User has. This can be used to give a User access
        to new entities or actions, or take access away.  You do not need to
        include the grant for every entity on the Account in this request; any
        that are not included will remain unchanged.

        This command can only be accessed by the unrestricted users of an account.
      operationId: updateUserGrants
      x-linode-cli-action: update-grants
      x-linode-cli-skip: true
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: The grants to update. Omitted grants will be left unchanged.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantsResponse'
      responses:
        '200':
          description: Grants updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "global": {
                      "add_linodes": true,
                      "add_nodebalancers": false,
                      "add_databases": true;
                      "add_domains": true,
                      "add_longview": false,
                      "add_stackscripts": true,
                      "longview_subscription": true,
                      "add_images": true,
                      "add_volumes": true,
                      "add_firewalls": true,
                      "account_access": "read_only",
                      "cancel_account": false
                    },
                    "domain": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ],
                    "image": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ],
                    "linode": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 234,
                        "permissions": "read_write"
                      },
                      {
                        "id": 345,
                        "permissions": "read_only"
                      },
                    ],
                    "longview": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 234,
                        "permissions": "read_write"
                      }
                    ],
                    "nodebalancer": [
                      {
                        "id": 123,
                        "permissions": "read_write"
                      }
                    ],
                    "stackscript": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 124,
                        "permissions": "read_write"
                      }
                    ],
                    "volume": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ]
                }' \
                https://api.linode.com/v4/account/users/example_user/grants
      parameters:
        - name: username
          in: path
          description: The username to look up.
          required: true
          schema:
            type: string
