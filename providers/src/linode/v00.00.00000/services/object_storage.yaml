openapi: 3.0.1
servers:
  - url: 'https://api.linode.com/v4'
  - url: 'https://api.linode.com/v4beta'
info:
  version: 4.147.0
  title: Linode API - object_storage
  description: object_storage
  contact:
    name: Linode
    url: 'https://linode.com'
    email: support@linode.com
tags:
  - name: Account
    description: 'Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account.'
  - name: Databases
    description: 'Managed Databases is Linode''s fully-managed, high-performance database service. Use the Managed Databases endpoints to create and manage database clusters.'
  - name: Domains
    description: Use the Domains endpoints to create and manage domains and domain records on your account.
  - name: Images
    description: 'Use the Images endpoints to capture, store, and manage custom Linode images.'
  - name: Linode Instances
    description: 'Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more.'
  - name: Linode Types
    description: 'Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment.'
  - name: Linode Kubernetes Engine (LKE)
    description: Linode Kubernetes Engine (LKE) is Linode's managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools.
  - name: Longview
    description: Longview is Linode's system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients.
  - name: Managed
    description: 'Managed is Linode''s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more.'
  - name: Networking
    description: 'Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing.'
  - name: NodeBalancers
    description: 'NodeBalancers is Linode''s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics.'
  - name: Object Storage
    description: 'Object Storage is Linode''s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service.'
  - name: Profile
    description: 'Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences.'
  - name: Regions
    description: 'Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more.'
  - name: StackScripts
    description: Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account.
  - name: Support
    description: 'Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies.'
  - name: Tags
    description: 'Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags.'
  - name: Volumes
    description: 'Volumes is Linode''s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes.'
components:
  schemas:
    ObjectStorageBucket:
      type: object
      description: |
        An Object Storage Bucket. This should be accessed primarily through the S3 API; [click here for more information](https://docs.ceph.com/en/latest/radosgw/s3/#api).
      properties:
        created:
          type: string
          format: date-time
          description: When this bucket was created.
          example: 2019-01-01T01:23:45.000Z
        cluster:
          type: string
          description: The ID of the Object Storage Cluster this bucket is in.
          example: us-east-1
        label:
          type: string
          description: The name of this bucket.
          example: example-bucket
        hostname:
          type: string
          description: |
            The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made public.
          example: example-bucket.us-east-1.linodeobjects.com
        size:
          type: integer
          description: The size of the bucket in bytes.
          example: 188318981
        objects:
          type: integer
          description: |
            The number of objects stored in this bucket.
          example: 4
    PaginationEnvelope:
      type: object
      description: |
        An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results. Results are presented within a `data` array. See [Pagination](/docs/api/#pagination) for more information.
      properties:
        pages:
          type: integer
          readOnly: true
          description: 'The total number of [pages](/docs/api/#pagination).'
          example: 1
        page:
          type: integer
          readOnly: true
          description: 'The current [page](/docs/api/#pagination).'
          example: 1
        results:
          type: integer
          readOnly: true
          description: The total number of results.
          example: 1
    ErrorObject:
      type: object
      description: |
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: |
            What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/docs/api/support/#support-ticket-open) or perform some other action before you can complete the request successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: |
            The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as "null" if the error is not specific to any single element of the request.
          example: fieldname
    ObjectStorageObject:
      type: object
      description: |
        An Object in Object Storage, or a "prefix" that contains one or more objects when a `delimiter` is used.
      properties:
        name:
          type: string
          description: |
            The name of this object or prefix.
          example: example
        etag:
          type: string
          description: |
            An MD-5 hash of the object. `null` if this object represents a prefix.
          example: 9f254c71e28e033bf9e0e5262e3e72ab
        last_modified:
          type: string
          format: date-time
          description: |
            The date and time this object was last modified. `null` if this object represents a prefix.
          example: 2019-01-01T01:23:45.000Z
        owner:
          type: string
          description: |
            The owner of this object, as a UUID. `null` if this object represents a prefix.
          example: bfc70ab2-e3d4-42a4-ad55-83921822270c
        size:
          type: integer
          description: |
            The size of this object, in bytes. `null` if this object represents a prefix.
          example: 123
        next_marker:
          type: string
          description: |
            Returns the value you should pass to the `marker` query parameter to get the next page of objects. If there is no next page, `null` will be returned.
          example: bd021c21-e734-4823-97a4-58b41c2cd4c8.892602.184
          nullable: true
        is_truncated:
          type: boolean
          description: Designates if there is another page of bucket objects.
          example: true
    ObjectStorageCluster:
      type: object
      description: An Object Storage Cluster
      properties:
        id:
          type: string
          description: The unique ID for this cluster.
          example: us-east-1
        domain:
          type: string
          description: 'The base URL for this cluster, used for connecting with third-party clients.'
          example: us-east-1.linodeobjects.com
        status:
          type: string
          enum:
            - available
            - unavailable
          description: This cluster's status.
          example: available
        region:
          type: string
          description: The region where this cluster is located.
          example: us-east
        static_site_domain:
          type: string
          description: The base URL for this cluster used when hosting static sites.
          example: website-us-east-1.linodeobjects.com
    ObjectStorageKey:
      type: object
      description: A keypair used to communicate with the Object Storage S3 API.
      properties:
        id:
          type: integer
          description: This keypair's unique ID
          example: 123
          readOnly: true
        label:
          type: string
          description: The label given to this key. For display purposes only.
          example: my-key
        access_key:
          type: string
          description: This keypair's access key. This is not secret.
          example: KVAKUTGBA4WTR2NSJQ81
          readOnly: true
        secret_key:
          type: string
          description: This keypair's secret key. Only returned on key creation.
          example: OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw
          readOnly: true
        limited:
          type: boolean
          description: Whether or not this key is a limited access key. Will return `false` if this key grants full access to all buckets on the user's account.
          example: true
          readOnly: true
        bucket_access:
          type: array
          description: |
            Defines this key as a Limited Access Key. Limited Access Keys restrict this Object Storage key's access to only the bucket(s) declared in this array and define their bucket-level permissions.


              Limited Access Keys can:

              * [list all buckets](/docs/api/object-storage/#object-storage-buckets-list) available on this Account, but cannot perform any actions on a bucket unless it has access to the bucket.


              * [create new buckets](/docs/api/object-storage/#object-storage-bucket-create), but do not have any access to the buckets it creates, unless explicitly given access to them.


              **Note:** You can create an Object Storage Limited Access Key without access to any buckets.
              This is achieved by sending a request with an empty `bucket_access` array.


              **Note:** If this field is omitted, a regular unlimited access key is issued.
          items:
            type: object
            properties:
              cluster:
                type: string
                description: The Object Storage cluster where a bucket to which the key is granting access is hosted.
                example: ap-south-1
              bucket_name:
                type: string
                description: The unique label of the bucket to which the key will grant limited access.
                example: example-bucket
              permissions:
                type: string
                enum:
                  - read_write
                  - read_only
                description: This Limited Access Key's permissions for the selected bucket.
                example: read_only
    ObjectStorageSSLResponse:
      type: object
      description: |
        If this Object Storage bucket has a corresponding TLS/SSL Certificate.
      properties:
        ssl:
          type: boolean
          description: |
            A boolean indicating if this Bucket has a corresponding TLS/SSL certificate that was uploaded by an Account user.
          example: true
          readOnly: true
    ObjectStorageSSL:
      type: object
      required:
        - certificate
        - private_key
      description: |
        Upload a TLS/SSL certificate and private key to be served when you visit your Object Storage bucket via HTTPS.
      properties:
        certificate:
          type: string
          description: |
            Your Base64 encoded and PEM formatted SSL certificate.

            Line breaks must be represented as "\n" in the string for requests (but not when using the Linode CLI)
          example: |-
            -----BEGIN CERTIFICATE-----
            CERTIFICATE_INFORMATION
            -----END CERTIFICATE-----
        private_key:
          type: string
          description: |
            The private key associated with this TLS/SSL certificate.

            Line breaks must be represented as "\n" in the string for requests (but not when using the Linode CLI)
          example: |-
            -----BEGIN PRIVATE KEY-----
            PRIVATE_KEY_INFORMATION
            -----END PRIVATE KEY-----
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        minimum: 25
        maximum: 500
        default: 100
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your Account.
            'account:read_write': Allows access to all endpoints related to your Account.
            'domains:read_only': Allows access to GET Domains on your Account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'firewall:read_only': Allows access to GET information about your Firewalls.
            'firewall:read_write': Allows acces to all Firewall endpoints.
            'images:read_only': Allows access to GET your Images.
            'images:read_write': Allows access to all endpoints related to your Images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allows access to GET Linodes on your Account.
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'lke:read_only': Allows access to GET LKE Clusters on your Account.
            'lke:read_write': Allows access to all endpoints related to LKE Clusters on your Account.
            'longview:read_only': Allows access to GET your Longview Clients.
            'longview:read_write': Allows access to all endpoints related to your Longview Clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your Account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'object_storage:read_only': Allows access to GET information related to your Object Storage.
            'object_storage:read_write': Allows access to all Object Storage endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to your StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: $request.body#/id
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: $request.body#/id
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: $request.body#/id
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: $request.body#/id
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: $request.body#/id
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: $request.body#/id
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: $request.body#/id
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: $request.body#/id
  x-stackQL-resources:
    buckets:
      id: linode.object_storage.buckets
      name: buckets
      title: Buckets
      methods:
        getObjectStorageBuckets:
          operation:
            $ref: '#/paths/~1object-storage~1buckets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageBuckets:
          operation:
            $ref: '#/paths/~1object-storage~1buckets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createObjectStorageBucket:
          operation:
            $ref: '#/paths/~1object-storage~1buckets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getObjectStorageBucket:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageBucket:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteObjectStorageBucket:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getObjectStorageBucketinCluster:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageBucketinCluster:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modifyObjectStorageBucketAccess:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1access/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateObjectStorageBucketAccess:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1access/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        viewObjectStorageBucketACL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-acl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _viewObjectStorageBucketACL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-acl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateObjectStorageBucketACL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-acl/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/getObjectStorageBuckets'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/getObjectStorageBucket'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/getObjectStorageBucketinCluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/createObjectStorageBucket'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/deleteObjectStorageBucket'
    buckets_object_list:
      id: linode.object_storage.buckets_object_list
      name: buckets_object_list
      title: Buckets Object List
      methods:
        getObjectStorageBucketContent:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-list/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageBucketContent:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-list/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets_object_list/methods/getObjectStorageBucketContent'
        insert: []
        update: []
        delete: []
    buckets_object_url:
      id: linode.object_storage.buckets_object_url
      name: buckets_object_url
      title: Buckets Object Url
      methods:
        createObjectStorageObjectURL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1object-url/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/buckets_object_url/methods/createObjectStorageObjectURL'
        update: []
        delete: []
    clusters:
      id: linode.object_storage.clusters
      name: clusters
      title: Clusters
      methods:
        getObjectStorageClusters:
          operation:
            $ref: '#/paths/~1object-storage~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageClusters:
          operation:
            $ref: '#/paths/~1object-storage~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getObjectStorageCluster:
          operation:
            $ref: '#/paths/~1object-storage~1clusters~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageCluster:
          operation:
            $ref: '#/paths/~1object-storage~1clusters~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/getObjectStorageClusters'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/getObjectStorageCluster'
        insert: []
        update: []
        delete: []
    keys:
      id: linode.object_storage.keys
      name: keys
      title: Keys
      methods:
        getObjectStorageKeys:
          operation:
            $ref: '#/paths/~1object-storage~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageKeys:
          operation:
            $ref: '#/paths/~1object-storage~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createObjectStorageKeys:
          operation:
            $ref: '#/paths/~1object-storage~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getObjectStorageKey:
          operation:
            $ref: '#/paths/~1object-storage~1keys~1{keyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getObjectStorageKey:
          operation:
            $ref: '#/paths/~1object-storage~1keys~1{keyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateObjectStorageKey:
          operation:
            $ref: '#/paths/~1object-storage~1keys~1{keyId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteObjectStorageKey:
          operation:
            $ref: '#/paths/~1object-storage~1keys~1{keyId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/getObjectStorageKeys'
          - $ref: '#/components/x-stackQL-resources/keys/methods/getObjectStorageKey'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/createObjectStorageKeys'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/deleteObjectStorageKey'
    cancel:
      id: linode.object_storage.cancel
      name: cancel
      title: Cancel
      methods:
        cancelObjectStorage:
          operation:
            $ref: '#/paths/~1object-storage~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    buckets_ssl:
      id: linode.object_storage.buckets_ssl
      name: buckets_ssl
      title: Buckets Ssl
      methods:
        getObjectStorageSSL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1ssl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getObjectStorageSSL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1ssl/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createObjectStorageSSL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1ssl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteObjectStorageSSL:
          operation:
            $ref: '#/paths/~1object-storage~1buckets~1{clusterId}~1{bucket}~1ssl/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets_ssl/methods/getObjectStorageSSL'
        insert:
          - $ref: '#/components/x-stackQL-resources/buckets_ssl/methods/createObjectStorageSSL'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/buckets_ssl/methods/deleteObjectStorageSSL'
    transfer:
      id: linode.object_storage.transfer
      name: transfer
      title: Transfer
      methods:
        getObjectStorageTransfer:
          operation:
            $ref: '#/paths/~1object-storage~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getObjectStorageTransfer:
          operation:
            $ref: '#/paths/~1object-storage~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transfer/methods/getObjectStorageTransfer'
        insert: []
        update: []
        delete: []
paths:
  /object-storage/buckets:
    get:
      operationId: getObjectStorageBuckets
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Buckets List
      description: |
        Returns a paginated list of all Object Storage Buckets that you own.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/serviceops/#list-buckets) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: A paginated list of buckets you own.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ObjectStorageBucket'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/buckets/
    post:
      operationId: createObjectStorageBucket
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket Create
      description: |
        Creates an Object Storage Bucket in the specified cluster.

        Accounts with negative balances cannot access this command.

        If the bucket already exists and is owned by you, this endpoint returns a `200` response with that bucket as if it had just been created.

        This endpoint is available for convenience. It is recommended that instead you use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#put-bucket) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: |
          Information about the bucket you want to create.
        content:
          application/json:
            schema:
              type: object
              required:
                - label
                - cluster
              properties:
                label:
                  type: string
                  description: |
                    The name for this bucket. Must be unique in the cluster you are creating the bucket in, or an error will be returned. Labels will be reserved only for the cluster that active buckets are created and stored in. If you want to reserve this bucket's label in another cluster, you must create a new bucket with the same label in the new cluster.
                  pattern: '^[a-z0-09][a-z0-9-]*[a-z0-9]?$'
                  example: example-bucket
                cluster:
                  type: string
                  description: |
                    The ID of the Object Storage Cluster where this bucket should be created.
                  example: us-east-1
                cors_enabled:
                  type: boolean
                  description: |
                    If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.
                  example: true
                  default: false
                acl:
                  type: string
                  enum:
                    - private
                    - public-read
                    - authenticated-read
                    - public-read-write
                  description: |
                    The Access Control Level of the bucket using a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                  default: private
                  example: private
      responses:
        '200':
          description: The bucket created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageBucket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "example-bucket",
                  "cluster": "us-east-1",
                  "cors_enabled": true,
                  "acl": "private"
                }' \
              https://api.linode.com/v4/object-storage/buckets/
  '/object-storage/buckets/{clusterId}/{bucket}':
    get:
      operationId: getObjectStorageBucket
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket View
      description: |
        Returns a single Object Storage Bucket.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#get-bucket) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: The requested bucket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageBucket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
    delete:
      operationId: deleteObjectStorageBucket
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket Remove
      description: |
        Removes a single bucket.

        Bucket objects must be removed prior to removing the bucket. While buckets containing objects _may_ be
        deleted using the [s3cmd command-line tool](/docs/products/storage/object-storage/guides/s3cmd/#delete-a-bucket), such operations
        can fail if the bucket contains too many objects. The recommended
        way to empty large buckets is to use the [S3 API to configure lifecycle policies](https://docs.ceph.com/en/latest/radosgw/bucketpolicy/#) that
        remove all objects, then delete the bucket.

        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#delete-bucket) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      responses:
        '200':
          description: Bucket deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
  '/object-storage/buckets/{clusterId}':
    get:
      operationId: getObjectStorageBucketinCluster
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Buckets in Cluster List
      description: |
        Returns a list of Buckets in this cluster belonging to this Account.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#get-bucket) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: A paginated list of buckets you own in this cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ObjectStorageBucket'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/buckets/us-east-1
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
  '/object-storage/buckets/{clusterId}/{bucket}/access':
    post:
      operationId: modifyObjectStorageBucketAccess
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket Access Modify
      description: |
        Allows changing basic Cross-origin Resource Sharing (CORS) and Access Control Level (ACL) settings.
        Only allows enabling/disabling CORS for all origins, and/or setting canned ACLs.


        For more fine-grained control of both systems, please use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#put-bucket-acl) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: The changes to make to the bucket's access controls.
        content:
          application/json:
            schema:
              properties:
                cors_enabled:
                  type: boolean
                  description: |
                    If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.
                  example: true
                acl:
                  type: string
                  enum:
                    - private
                    - public-read
                    - authenticated-read
                    - public-read-write
                    - custom
                  description: |
                    The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                  example: private
      responses:
        '200':
          description: Access controls updated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \ -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                  "cors_enabled": true,
                  "acl": "private"
                }' \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/access
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
    put:
      operationId: updateObjectStorageBucketAccess
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket Access Update
      description: |
        Allows changing basic Cross-origin Resource Sharing (CORS) and Access Control Level (ACL) settings.
        Only allows enabling/disabling CORS for all origins, and/or setting canned ACLs.


        For more fine-grained control of both systems, please use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/bucketops/#put-bucket-acl) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: The changes to make to the bucket's access controls.
        content:
          application/json:
            schema:
              properties:
                cors_enabled:
                  type: boolean
                  description: |
                    If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.
                  example: true
                acl:
                  type: string
                  enum:
                    - private
                    - public-read
                    - authenticated-read
                    - public-read-write
                    - custom
                  description: |
                    The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                  example: private
      responses:
        '200':
          description: Access controls updated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \ -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                  "cors_enabled": true,
                  "acl": "private"
                }' \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/access
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
  '/object-storage/buckets/{clusterId}/{bucket}/object-acl':
    get:
      operationId: viewObjectStorageBucketACL
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Object ACL Config View
      description: |
        View an Object's configured Access Control List (ACL) in this Object Storage bucket.
        ACLs define who can access your buckets and objects and specify the level of access
        granted to those users.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/objectops/#get-object-acl) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Object's canned ACL and policy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  acl:
                    type: string
                    enum:
                      - private
                      - public-read
                      - authenticated-read
                      - public-read-write
                      - custom
                    description: |
                      The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                    example: public-read
                  acl_xml:
                    type: string
                    description: |
                      The full XML of the object's ACL policy.
                    example: <AccessControlPolicy>...</AccessControlPolicy>
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-acl?name=example.txt
    put:
      operationId: updateObjectStorageBucketACL
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Object ACL Config Update
      description: |
        Update an Object's configured Access Control List (ACL) in this Object Storage bucket.
        ACLs define who can access your buckets and objects and specify the level of access
        granted to those users.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/objectops/#set-object-acl) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: The changes to make to this Object's access controls.
        content:
          application/json:
            schema:
              required:
                - acl
                - name
              properties:
                acl:
                  type: string
                  enum:
                    - private
                    - public-read
                    - authenticated-read
                    - public-read-write
                    - custom
                  description: |
                    The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                  example: public-read
                name:
                  type: string
                  description: |
                    The `name` of the object for which to update its Access Control List (ACL). Use the [Object Storage Bucket Contents List](/docs/api/object-storage/#object-storage-bucket-contents-list) endpoint to access all object names in a bucket.
      responses:
        '200':
          description: The Object's canned ACL and policy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  acl:
                    type: string
                    enum:
                      - private
                      - public-read
                      - authenticated-read
                      - public-read-write
                      - custom
                    description: |
                      The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
                    example: public-read
                  acl_xml:
                    type: string
                    description: |
                      The full XML of the object's ACL policy.
                    example: <AccessControlPolicy>...</AccessControlPolicy>
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \ -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "acl": "public-read",
                "name": "example.txt"
              }' \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-acl
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
  '/object-storage/buckets/{clusterId}/{bucket}/object-list':
    get:
      operationId: getObjectStorageBucketContent
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Bucket Contents List
      description: |
        Returns the contents of a bucket. The contents are paginated using a `marker`,
        which is the name of the last object on the previous page.  Objects may
        be filtered by `prefix` and `delimiter` as well; see Query Parameters for more
        information.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/objectops/#get-object) directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: One page of the requested bucket's contents.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    description: This page of objects in the bucket.
                    items:
                      $ref: '#/components/schemas/ObjectStorageObject'
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-list
  '/object-storage/buckets/{clusterId}/{bucket}/object-url':
    post:
      operationId: createObjectStorageObjectURL
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Object URL Create
      description: |
        Creates a pre-signed URL to access a single Object in a bucket. This
        can be used to share objects, and also to create/delete objects by using
        the appropriate HTTP method in your request body's `method` parameter.


        This endpoint is available for convenience. It is recommended that instead you
        use the more [fully-featured S3 API](https://docs.ceph.com/en/latest/radosgw/s3/)
        directly.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: Information about the request to sign.
        content:
          application/json:
            schema:
              required:
                - name
                - method
              properties:
                method:
                  type: string
                  description: The HTTP method allowed to be used with the pre-signed URL.
                  example: GET
                  default: GET
                name:
                  type: string
                  description: |
                    The name of the object that will be accessed with the pre-signed URL. This object need not exist, and no error will be returned if it doesn't. This behavior is useful for generating pre-signed URLs to upload new objects to by setting the `method` to "PUT".
                  example: example
                content_type:
                  type: string
                  description: |
                    The expected `Content-type` header of the request this signed URL will be valid for.  If provided, the `Content-type` header _must_ be sent with the request when this URL is used, and _must_ be the same as it was when the signed URL was created. Required for all methods *except* "GET" or "DELETE".
                  example: null
                expires_in:
                  type: integer
                  minimum: 360
                  maximum: 86400
                  default: 3600
                  description: |
                    How long this signed URL will be valid for, in seconds.  If omitted, the URL will be valid for 3600 seconds (1 hour).
                  example: null
      responses:
        '200':
          description: The URL with which to access your object.
          content:
            application/json:
              schema:
                properties:
                  url:
                    type: string
                    description: The signed URL to perform the request at.
                    example: 'https://us-east-1.linodeobjects.com/example-bucket/example?Signature=qr98TEucCntPgEG%2BsZQGDsJg93c%3D&Expires=1567609905&AWSAccessKeyId=G4YAF81XWY61DQM94SE0'
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \ -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                  "method": "GET",
                  "name": "example"
                }' \
              https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-url
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
  /object-storage/clusters:
    get:
      operationId: getObjectStorageClusters
      x-linode-cli-action: clusters-list
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Clusters List
      description: |
        Returns a paginated list of Object Storage Clusters that are available for
        use.  Users can connect to the clusters with third party clients to create buckets
        and upload objects.
      tags:
        - Object Storage
      responses:
        '200':
          description: A paginated list of available clusters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ObjectStorageCluster'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/clusters
        - lang: CLI
          source: |
            linode-cli object-storage clusters-list
  '/object-storage/clusters/{clusterId}':
    get:
      operationId: getObjectStorageCluster
      x-linode-cli-action: clusters-view
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Cluster View
      description: |
        Returns a single Object Storage Cluster.
      tags:
        - Object Storage
      responses:
        '200':
          description: The requested Cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageCluster'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/clusters/us-east-1
        - lang: CLI
          source: |
            linode-cli object-storage clusters-view us-east-1
      parameters:
        - name: clusterId
          in: path
          description: The ID of the Cluster.
          required: true
          schema:
            type: string
  /object-storage/keys:
    get:
      operationId: getObjectStorageKeys
      x-linode-cli-action: keys-list
      servers:
        - url: 'https://api.linode.com/v4'
      tags:
        - Object Storage
      summary: Object Storage Keys List
      description: |
        Returns a paginated list of Object Storage Keys for authenticating to
        the Object Storage S3 API.
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: A paginated list of Object Storage Keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ObjectStorageKey'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/keys
        - lang: CLI
          source: |
            linode-cli object-storage keys-list
    post:
      operationId: createObjectStorageKeys
      x-linode-cli-action: keys-create
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Key Create
      description: |
        Provisions a new Object Storage Key on your account.

        Accounts with negative balances cannot access this command.

        * To create a Limited Access Key with specific permissions, send a `bucket_access` array.

        * To create a Limited Access Key without access to any buckets, send an empty `bucket_access` array.

        * To create an Access Key with unlimited access to all clusters and all buckets, omit the `bucket_access` array.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: |
          The label of the key to create. This is used to identify the created key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStorageKey'
      responses:
        '200':
          description: The new keypair.  **This is the only time** the secret key is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageKey'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "my-object-storage-key",
                  "bucket_access": [
                    {
                      "cluster": "ap-south-1",
                      "bucket_name": "bucket-example-1",
                      "permissions": "read_write"
                    },
                    {
                      "cluster": "us-east-1",
                      "bucket_name": "bucket-example-2",
                      "permissions": "read_only"
                    }
                  ]
                }' \
              https://api.linode.com/v4/object-storage/keys
        - lang: CLI
          source: |
            linode-cli object-storage keys-create \
              --label "my-object-storage-key" \
              --bucket_access '[{"cluster": "ap-south-1", "bucket_name": "bucket-example-1", "permissions": "read_write" }]'
  '/object-storage/keys/{keyId}':
    get:
      operationId: getObjectStorageKey
      x-linode-cli-action: keys-view
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Key View
      description: |
        Returns a single Object Storage Key provisioned for your account.
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      tags:
        - Object Storage
      responses:
        '200':
          description: The keypair
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageKey'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/keys/12345
        - lang: CLI
          source: |
            linode-cli object-storage keys-view \
              --keyId 12345
      parameters:
        - name: keyId
          in: path
          description: The key to look up.
          required: true
          schema:
            type: integer
    put:
      operationId: updateObjectStorageKey
      x-linode-cli-action: keys-update
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Key Update
      description: |
        Updates an Object Storage Key on your account.
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      tags:
        - Object Storage
      requestBody:
        description: The fields to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: 'The label for this keypair, for display purposes only.'
                  example: my-key
      responses:
        '200':
          description: Update Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageKey'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \ -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "my-object-storage-key"
              }' \
              https://api.linode.com/v4/object-storage/keys/12345
        - lang: CLI
          source: |
            linode-cli object-storage keys-update \
              --keyId 12345
              --label "my-object-storage-key"
      parameters:
        - name: keyId
          in: path
          description: The key to look up.
          required: true
          schema:
            type: integer
    delete:
      operationId: deleteObjectStorageKey
      x-linode-cli-action: keys-delete
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Key Revoke
      description: |
        Revokes an Object Storage Key.  This keypair will no longer be usable by third-party clients.
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      tags:
        - Object Storage
      responses:
        '200':
          description: Deletion successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/object-storage/keys/12345
        - lang: CLI
          source: |
            linode-cli object-storage keys-delete 12345
      parameters:
        - name: keyId
          in: path
          description: The key to look up.
          required: true
          schema:
            type: integer
  /object-storage/cancel:
    post:
      operationId: cancelObjectStorage
      x-linode-cli-action: cancel
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Cancel
      description: |
        Cancel Object Storage on an Account.

        **Warning**: Removes all buckets and their contents from your Account. This data is irretrievable once removed.
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      tags:
        - Object Storage
      responses:
        '200':
          description: Object Storage cancellation successful.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/object-storage/cancel
        - lang: CLI
          source: |
            linode-cli object-storage cancel
  '/object-storage/buckets/{clusterId}/{bucket}/ssl':
    get:
      operationId: getObjectStorageSSL
      x-linode-cli-action: ssl-view
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage TLS/SSL Cert View
      description: |
        Returns a boolean value indicating if this bucket has a corresponding TLS/SSL certificate that was
        uploaded by an Account user.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: |
            Returns a boolean value indicating if this bucket has a corresponding TLS/SSL certificate that was uploaded by an Account user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageSSLResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl
        - lang: CLI
          source: |
            linode-cli object-storage ssl-view \
              us-east-1 example-bucket
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
    post:
      operationId: createObjectStorageSSL
      x-linode-cli-action: ssl-upload
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage TLS/SSL Cert Upload
      description: |
        Upload a TLS/SSL certificate and private key to be served when you visit your Object Storage bucket via HTTPS.
        Your TLS/SSL certificate and private key are stored encrypted at rest.


        To replace an expired certificate, [delete your current certificate](/docs/api/object-storage/#object-storage-tlsssl-cert-delete)
        and upload a new one.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      requestBody:
        description: Upload this TLS/SSL certificate with its corresponding secret key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectStorageSSL'
      responses:
        '200':
          description: Returns whether this bucket has a corresponding TLS/SSL certificate that was uploaded by a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageSSLResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "certificate": "-----BEGIN CERTIFICATE-----\nCERTIFICATE_INFORMATION\n-----END CERTIFICATE-----",
                    "private_key": "-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY_INFORMATION\n-----END PRIVATE KEY-----"
                  }' \
                https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl
        - lang: CLI
          source: |
            linode-cli object-storage ssl-upload \
              us-east-1 example-bucket \
              --certificate "-----BEGIN CERTIFICATE-----
                             CERTIFICATE_INFORMATION
                             -----END CERTIFICATE-----" \
              --private_key "-----BEGIN PRIVATE KEY-----
                             PRIVATE_KEY_INFORMATION
                             -----END PRIVATE KEY-----"
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
    delete:
      operationId: deleteObjectStorageSSL
      x-linode-cli-action: ssl-delete
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage TLS/SSL Cert Delete
      description: |
        Deletes this Object Storage bucket's user uploaded TLS/SSL certificate and private key.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_write'
      responses:
        '200':
          description: Deletes this Object Storage bucket's user uploaded TLS/SSL certificate and private key.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl
        - lang: CLI
          source: |
            linode-cli object-storage ssl-delete \
              us-east-1 example-bucket
      parameters:
        - name: clusterId
          in: path
          description: The ID of the cluster this bucket exists in.
          required: true
          schema:
            type: string
        - name: bucket
          in: path
          description: The bucket name.
          required: true
          schema:
            type: string
  /object-storage/transfer:
    get:
      operationId: getObjectStorageTransfer
      x-linode-cli-skip: true
      servers:
        - url: 'https://api.linode.com/v4'
      summary: Object Storage Transfer View
      description: |
        The amount of outbound data transfer used by your account's Object Storage buckets.
        Object Storage adds 1 terabyte of outbound data transfer to your data transfer pool.
        See the [Object Storage Overview](/docs/products/storage/object-storage/#pricing)
        guide for details on Object Storage transfer quotas.
      tags:
        - Object Storage
      security:
        - personalAccessToken: []
        - oauth:
            - 'object_storage:read_only'
      responses:
        '200':
          description: |
            Returns the amount of outbound data transfer used by your account's Object Storage buckets.
          content:
            application/json:
              schema:
                properties:
                  used:
                    type: integer
                    description: |
                      The amount of outbound data transfer used by your account's Object Storage buckets, in bytes, for the current month's billing cycle.
                    example: 12956600198
                    readOnly: true
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/object-storage/transfer/
