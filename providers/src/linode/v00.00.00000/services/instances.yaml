openapi: 3.0.1
servers:
  - url: 'https://api.linode.com/v4'
  - url: 'https://api.linode.com/v4beta'
info:
  version: 4.147.0
  title: Linode API - instances
  description: linode
  contact:
    name: Linode
    url: 'https://linode.com'
    email: support@linode.com
tags:
  - name: Account
    description: 'Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account.'
  - name: Databases
    description: 'Managed Databases is Linode''s fully-managed, high-performance database service. Use the Managed Databases endpoints to create and manage database clusters.'
  - name: Domains
    description: Use the Domains endpoints to create and manage domains and domain records on your account.
  - name: Images
    description: 'Use the Images endpoints to capture, store, and manage custom Linode images.'
  - name: Linode Instances
    description: 'Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more.'
  - name: Linode Types
    description: 'Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment.'
  - name: Linode Kubernetes Engine (LKE)
    description: Linode Kubernetes Engine (LKE) is Linode's managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools.
  - name: Longview
    description: Longview is Linode's system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients.
  - name: Managed
    description: 'Managed is Linode''s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more.'
  - name: Networking
    description: 'Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing.'
  - name: NodeBalancers
    description: 'NodeBalancers is Linode''s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics.'
  - name: Object Storage
    description: 'Object Storage is Linode''s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service.'
  - name: Profile
    description: 'Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences.'
  - name: Regions
    description: 'Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more.'
  - name: StackScripts
    description: Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account.
  - name: Support
    description: 'Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies.'
  - name: Tags
    description: 'Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags.'
  - name: Volumes
    description: 'Volumes is Linode''s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes.'
components:
  schemas:
    Linode:
      type: object
      properties:
        label:
          x-linode-filterable: true
          x-linode-cli-display: 2
          type: string
          description: |
            The Linode's label is for display purposes only. If no label is provided for a Linode,
            a default will be assigned.

            Linode labels have the following constraints:

              * Must begin and end with an alphanumeric character.
              * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).
              * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.
          example: linode123
          minLength: 3
          maxLength: 64
          pattern: '^[a-zA-Z]((?!--|__|..)[a-zA-Z0-9-_.])+$'
        region:
          type: string
          x-linode-filterable: true
          readOnly: true
          description: |
            This is the [Region](/docs/api/regions/#regions-list) where the Linode was deployed. A Linode's region can only be changed by initiating a [cross data center migration](/docs/api/linode-instances/#dc-migrationpending-host-migration-initiate).
          x-linode-cli-display: 3
          example: us-east
        image:
          x-linode-filterable: true
          readOnly: true
          nullable: true
          allOf:
            - $ref: '#/components/schemas/DiskRequest/properties/image'
          x-linode-cli-display: 5
          example: linode/debian10
        type:
          type: string
          readOnly: true
          description: |
            This is the [Linode Type](/docs/api/linode-types/#types-list) that this Linode was deployed with.
            To change a Linode's Type, use [POST /linode/instances/{linodeId}/resize](/docs/api/linode-instances/#linode-resize).
          x-linode-cli-display: 4
          example: g6-standard-1
        group:
          deprecated: true
          type: string
          x-linode-filterable: true
          description: |
            A deprecated property denoting a group label for this Linode.
          example: Linode-Group
        tags:
          x-linode-filterable: true
          description: |
            An array of tags applied to this object.  Tags are for organizational purposes only.
          type: array
          items:
            type: string
          example:
            - example tag
            - another example
        id:
          x-linode-filterable: true
          type: integer
          description: |
            This Linode's ID which must be provided for all operations impacting this Linode.
          example: 123
          readOnly: true
          x-linode-cli-display: 1
        status:
          type: string
          description: |
            A brief description of this Linode's current state. This field may change without direct action from you. For example, when a Linode goes into maintenance mode its status will display "stopped".
          example: running
          readOnly: true
          enum:
            - running
            - offline
            - booting
            - rebooting
            - shutting_down
            - provisioning
            - deleting
            - migrating
            - rebuilding
            - cloning
            - restoring
            - stopped
          x-linode-cli-display: 6
          x-linode-cli-color:
            running: green
            offline: red
            default_: yellow
        hypervisor:
          type: string
          description: |
            The virtualization software powering this Linode.
          example: kvm
          readOnly: true
          enum:
            - kvm
        created:
          type: string
          format: date-time
          description: When this Linode was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Linode was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
        ipv4:
          x-linode-filterable: true
          type: array
          format: ipv4
          items:
            type: string
          example:
            - 203.0.113.1
            - 192.0.2.1
          readOnly: true
          description: |
            This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address
            upon creation, and may get a single private IPv4 address if needed. You may need to
            [open a support ticket](/docs/api/support/#support-ticket-open)
            to get additional IPv4 addresses.

            IPv4 addresses may be reassigned between your Linodes, or shared with other Linodes.
            See the [/networking](/docs/api/networking/) endpoints for details.
          x-linode-cli-display: 7
        ipv6:
          type: string
          format: ipv6/128
          nullable: true
          description: |
            This Linode's IPv6 SLAAC address. This address is specific to a Linode, and may not be shared. If the Linode has not been assigned an IPv6 address, the return value will be `null`.
          example: 'c001:d00d::1337/128'
          readOnly: true
        specs:
          type: object
          description: Information about the resources available to this Linode.
          readOnly: true
          properties:
            disk:
              type: integer
              description: |
                The amount of storage space, in MB, this Linode has access to. A typical Linode will divide this space between a primary disk with an `image` deployed to it, and a swap disk, usually 512 MB. This is the default configuration created when deploying a Linode with an `image` through [POST /linode/instances](/docs/api/linode-instances/#linode-create). While this configuration is suitable for 99% of use cases, if you need finer control over your Linode's disks, see the [/linode/instances/{linodeId}/disks](/docs/api/linode-instances/#disks-list) endpoints.
              example: 81920
              readOnly: true
            memory:
              type: integer
              description: |
                The amount of RAM, in MB, this Linode has access to.

                Typically, a Linode boots with all of its available RAM, but this can be configured in a Config profile. See the [/linode/instances/{linodeId}/configs](/docs/api/linode-instances/#configuration-profiles-list) endpoints and the LinodeConfig object for more information.
              example: 4096
              readOnly: true
            vcpus:
              type: integer
              description: |
                The number of vcpus this Linode has access to.
              example: 2
              readOnly: true
            gpus:
              type: integer
              description: |
                The number of gpus this Linode has access to.
              example: 0
              readOnly: true
            transfer:
              type: integer
              description: The amount of network transfer this Linode is allotted each month.
              example: 4000
              readOnly: true
        alerts:
          type: object
          properties:
            cpu:
              type: integer
              description: |
                The percentage of CPU usage required to trigger an alert.
                If the average CPU usage over two hours exceeds this value, we'll send you an alert.
                Your Linode's total CPU capacity is represented as 100%, multiplied by its number of
                cores.

                For example, a two core Linode's CPU capacity is represented as 200%. If you want
                to be alerted at 90% of a two core Linode's CPU capacity, set the alert value to `180`.

                The default value is 90% multiplied by the number of cores.

                If the value is set to `0` (zero), the alert is disabled.
              example: 180
            network_in:
              type: integer
              description: |
                The amount of incoming traffic, in Mbit/s, required to trigger an alert. If the average incoming traffic over two hours exceeds this value, we'll send you an alert. If this is set to `0` (zero), the alert is disabled.
              example: 10
            network_out:
              type: integer
              description: |
                The amount of outbound traffic, in Mbit/s, required to trigger an alert. If the average outbound traffic over two hours exceeds this value, we'll send you an alert. If this is set to `0` (zero), the alert is disabled.
              example: 10
            transfer_quota:
              type: integer
              description: |
                The percentage of network transfer that may be used before an alert is triggered. When this value is exceeded, we'll alert you. If this is set to `0` (zero), the alert is disabled.
              example: 80
            io:
              type: integer
              description: |
                The amount of disk IO operation per second required to trigger an alert. If the average disk IO over two hours exceeds this value, we'll send you an alert. If set to `0` (zero), this alert is disabled.
              example: 10000
        backups:
          type: object
          description: |
            Information about this Linode's backups status. For information about available backups, see [/linode/instances/{linodeId}/backups](/docs/api/linode-instances/#backups-list).
          properties:
            enabled:
              type: boolean
              description: |
                If this Linode has the Backup service enabled. To enable backups, see [POST /linode/instances/{linodeId}/backups/enable](/docs/api/linode-instances/#backups-enable).
              example: true
              readOnly: true
            available:
              type: boolean
              description: |
                Whether Backups for this Linode are available for restoration.

                Backups undergoing maintenance are not available for restoration.
              example: true
              readOnly: true
            schedule:
              type: object
              properties:
                day:
                  type: string
                  nullable: true
                  description: |
                    The day of the week that your Linode's weekly Backup is taken.
                    If not set manually, a day will be chosen for you. Backups
                    are taken every day, but backups taken on this day are
                    preferred when selecting backups to retain for a longer period.


                    If not set manually, then when backups are initially enabled, this
                    may come back as `Scheduling` until the `day` is automatically selected.
                  example: Saturday
                  enum:
                    - Scheduling
                    - Sunday
                    - Monday
                    - Tuesday
                    - Wednesday
                    - Thursday
                    - Friday
                    - Saturday
                window:
                  type: string
                  nullable: true
                  description: |
                    The window in which your backups will be taken, in UTC. A
                    backups window is a two-hour span of time in which the backup
                    may occur.


                    For example, `W10` indicates that your backups should be
                    taken between 10:00 and 12:00. If you do not choose a backup
                    window, one will be selected for you automatically.


                    If not set manually, when backups are initially enabled this
                    may come back as `Scheduling` until the `window` is automatically selected.
                  example: W22
                  enum:
                    - Scheduling
                    - W0
                    - W2
                    - W4
                    - W6
                    - W8
                    - W10
                    - W12
                    - W14
                    - W16
                    - W18
                    - W20
                    - W22
            last_successful:
              type: string
              format: date-time
              description: The last successful backup date. 'null' if there was no previous backup.
              readOnly: true
              example: '2018-01-01T00:01:01'
        watchdog_enabled:
          type: boolean
          description: |
            The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible.
            To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
          example: true
        host_uuid:
          type: string
          format: uuid
          description: 'The Linode''s host machine, as a UUID.'
          readOnly: true
          example: 3a3ddd59d9a78bb8de041391075df44de62bfec8
    PaginationEnvelope:
      type: object
      description: |
        An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results. Results are presented within a `data` array. See [Pagination](/docs/api/#pagination) for more information.
      properties:
        pages:
          type: integer
          readOnly: true
          description: 'The total number of [pages](/docs/api/#pagination).'
          example: 1
        page:
          type: integer
          readOnly: true
          description: 'The current [page](/docs/api/#pagination).'
          example: 1
        results:
          type: integer
          readOnly: true
          description: The total number of results.
          example: 1
    DiskRequest:
      type: object
      description: Disk object request.
      properties:
        size:
          x-linode-filterable: true
          type: integer
          description: |
            The size of the Disk in MB.

            Images require a minimum size. Access the Image View ([GET /images/{imageID}](/docs/api/images/#image-view)) endpoint to view its size.
          example: 48640
        label:
          $ref: '#/components/schemas/Disk/properties/label'
        filesystem:
          $ref: '#/components/schemas/Disk/properties/filesystem'
        image:
          type: string
          description: |
            An Image ID to deploy the Linode Disk from.

            Access the Images List ([GET /images](/docs/api/images/#images-list)) endpoint with authentication to view
            all available Images. Official Linode Images start with `linode/`, while your Account's Images start with `private/`. Creating
            a disk from a Private Image requires `read_only` or `read_write` permissions for that Image. Access the User's
            Grant Update ([PUT /account/users/{username}/grants](/docs/api/account/#users-grants-update)) endpoint to
            adjust permissions for an Account Image.
          example: linode/debian9
        authorized_keys:
          type: array
          items:
            type: string
          writeOnly: true
          example:
            - ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer
          description: |
            A list of public SSH keys that will be automatically appended
            to the root user's `~/.ssh/authorized_keys` file when deploying from an Image.
        authorized_users:
          type: array
          items:
            type: string
          writeOnly: true
          example:
            - myUser
            - secondaryUser
          description: |
            A list of usernames. If the usernames have associated SSH keys, the keys will be appended to the root users `~/.ssh/authorized_keys` file automatically when deploying from an Image.
        root_pass:
          type: string
          format: password
          writeOnly: true
          example: aComplexP@ssword
          minLength: 7
          maxLength: 128
          description: |
            This sets the root user's password on a newly-created Linode Disk when deploying from an Image.

            * **Required** when creating a Linode Disk from an Image, including when using a StackScript.

            * Must meet a password strength score requirement that is calculated internally by the API.
            If the strength requirement is not met, you will receive a `Password does not meet strength requirement` error.
        stackscript_id:
          type: integer
          example: 10079
          description: |
            A StackScript ID that will cause the referenced StackScript to be run during
            deployment of this Linode. A compatible `image` is required to use a
            StackScript. To get a list of available StackScript and their permitted Images
            see [/stackscripts](/docs/api/stackscripts/#stackscripts-list).
            This field cannot be used when deploying from a Backup or a Private Image.
        stackscript_data:
          type: object
          example:
            gh_username: linode
          description: |
            This field is required only if the StackScript being deployed requires input data from the User for successful completion. See [User Defined Fields (UDFs)](/docs/guides/writing-scripts-for-use-with-linode-stackscripts-a-tutorial/#user-defined-fields-udfs) for more details.

            This field is required to be valid JSON.

            Total length cannot exceed 65,535 characters.
          maxLength: 65535
    ErrorObject:
      type: object
      description: |
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: |
            What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/docs/api/support/#support-ticket-open) or perform some other action before you can complete the request successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: |
            The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as "null" if the error is not specific to any single element of the request.
          example: fieldname
    Disk:
      type: object
      properties:
        id:
          type: integer
          description: |
            This Disk's ID which must be provided for all operations impacting this Disk.
          example: 25674
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: |
            The Disk's label is for display purposes only.
          example: Debian 9 Disk
          minLength: 1
          maxLength: 48
          x-linode-cli-display: 2
        status:
          type: string
          description: |
            A brief description of this Disk's current state. This field may change without direct action from you, as a result of operations performed to the Disk or the Linode containing the Disk.
          example: ready
          readOnly: true
          enum:
            - ready
            - not ready
            - deleting
          x-linode-cli-display: 3
          x-linode-cli-color:
            ready: green
            not ready: red
            default_: yellow
        size:
          x-linode-filterable: true
          type: integer
          description: The size of the Disk in MB.
          example: 48640
          x-linode-cli-display: 4
        filesystem:
          type: string
          description: |
            The Disk filesystem can be one of:

              * raw - No filesystem, just a raw binary stream.
              * swap - Linux swap area.
              * ext3 - The ext3 journaling filesystem for Linux.
              * ext4 - The ext4 journaling filesystem for Linux.
              * initrd - initrd (uncompressed initrd, ext2, max 32 MB).
          example: ext4
          enum:
            - raw
            - swap
            - ext3
            - ext4
            - initrd
          x-linode-cli-display: 5
        created:
          type: string
          format: date-time
          description: When this Disk was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Disk was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
    LinodeRequest:
      type: object
      description: Common properties for creating and rebuilding Linodes.
      properties:
        image:
          $ref: '#/components/schemas/DiskRequest/properties/image'
        root_pass:
          $ref: '#/components/schemas/DiskRequest/properties/root_pass'
        authorized_keys:
          $ref: '#/components/schemas/DiskRequest/properties/authorized_keys'
        authorized_users:
          $ref: '#/components/schemas/DiskRequest/properties/authorized_users'
        stackscript_id:
          $ref: '#/components/schemas/DiskRequest/properties/stackscript_id'
        stackscript_data:
          $ref: '#/components/schemas/DiskRequest/properties/stackscript_data'
        booted:
          type: boolean
          writeOnly: true
          description: |
            This field defaults to `true` if the Linode is created with an Image or from a Backup.
            If it is deployed from an Image or a Backup and you wish it to remain `offline` after deployment, set this to `false`.
          default: true
    LinodeConfigInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/LinodeConfigInterface'
      required:
        - purpose
      description: |
        An array of Network Interfaces to add to this Linode's Configuration Profile.

        Up to three interface objects can be entered in this array. The position in the array determines the interface to which the settings apply:

        - First/0:  eth0
        - Second/1: eth1
        - Third/2:  eth2

        When updating a Linode's interfaces, *each interface must be redefined*. An empty interfaces array results in a default public interface configuration only.

        If no public interface is configured, public IP addresses are still assigned to the Linode but will not be usable without manual configuration.

        **Note:** Changes to Linode interface configurations can be enabled by rebooting the Linode.

        **Note:** Only Next Generation Network (NGN) data centers support VLANs. Use the Regions ([/regions](/docs/api/regions/)) endpoint to view the capabilities of data center regions.
        If a VLAN is attached to your Linode and you attempt to migrate or clone it to a non-NGN data center,
        the migration or cloning will not initiate. If a Linode cannot be migrated because of an incompatibility,
        you will be prompted to select a different data center or contact support.

        **Note:** See the [VLANs Overview](/docs/products/networking/vlans/#technical-specifications) guide to view additional specifications and limitations.
    LinodeConfigInterface:
      type: object
      description: |
        The Network Interface to apply to this Linode's configuration profile.
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '/[a-z0-9-]+/'
          x-linode-filterable: true
          nullable: true
          description: |
            The name of this interface.

            Required for `vlan` purpose interfaces. Must be an empty string or `null` for `public` purpose interfaces.

            If the VLAN label is new, a VLAN is created. Up to 10 VLANs can be created in each data center region. To view your active VLANs, use the [VLANs List](/docs/api/networking/#vlans-list) endpoint.

            May only consist of ASCII letters, numbers, and dashes (`-`).

            Must be unique among the Linode's interfaces.
          example: example-interface
        ipam_address:
          type: string
          format: ip/netmask
          nullable: true
          description: |
            This Network Interface's private IP address in Classless Inter-Domain Routing (CIDR) notation.

            Only used for `vlan` purpose interfaces. Must be an empty string or `null` for `public` purpose interfaces.

            The Linode is configured to use this address for the associated interface upon reboot if Network Helper is enabled. If Network Helper is disabled, the address can be enabled with [manual static IP configuration](/docs/guides/manual-network-configuration/).

            Must be unique among the Linode's interfaces.
          example: 10.0.0.1/24
        purpose:
          type: string
          enum:
            - public
            - vlan
          description: |
            The type of interface.

            * `public`
              * Only one `public` interface per Linode can be defined.
              * The Linode's default public IPv4 address is assigned to the `public` interface.
              * A Linode must have a public interface in the first/eth0 position to be reachable via the public internet upon boot without additional system configuration. If no `public` interface is configured, the Linode is not directly reachable via the public internet. In this case, access can only be established via LISH or other Linodes connected to the same VLAN.

            * `vlan`
              * Configuring a `vlan` purpose interface attaches this Linode to the VLAN with the specified `label`.
              * The Linode is configured to use the specified `ipam_address`, if any.
          example: vlan
    Backup:
      type: object
      description: |
        An object representing a Backup or snapshot for a Linode with Backup service enabled.
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique ID of this Backup.
          example: 123456
          x-linode-cli-display: 1
        type:
          type: string
          enum:
            - auto
            - snapshot
          readOnly: true
          description: |
            This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time.
          example: snapshot
          x-linode-cli-display: 3
        status:
          type: string
          enum:
            - paused
            - pending
            - running
            - needsPostProcessing
            - successful
            - failed
            - userAborted
          readOnly: true
          description: The current state of a specific Backup.
          example: successful
          x-linode-cli-display: 2
          x-linode-cli-color:
            successful: green
            failed: red
            userAborted: f
            default_: yellow
        available:
          type: boolean
          description: |
            Whether this Backup is available for restoration.

            Backups undergoing maintenance are not available for restoration.
          example: true
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup was taken.
          example: '2018-01-15T00:01:01'
          x-linode-cli-display: 4
        updated:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup was most recently updated.
          example: '2018-01-15T00:01:01'
        finished:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup completed.
          example: '2018-01-15T00:01:01'
        label:
          type: string
          description: A label for Backups that are of type `snapshot`.
          example: Webserver-Backup-2018
          x-linode-cli-display: 5
          nullable: true
        configs:
          type: array
          items:
            type: string
            example: My Debian 9 Config
          readOnly: true
          description: |
            A list of the labels of the Configuration profiles that are part of the Backup.
        disks:
          type: array
          items:
            type: object
            properties:
              size:
                type: integer
                example: 9001
              filesystem:
                $ref: '#/components/schemas/Disk/properties/filesystem'
              label:
                type: string
                example: My Debian 9 Disk
          readOnly: true
          description: |
            A list of the disks that are part of the Backup.
    LinodeConfig:
      type: object
      properties:
        id:
          type: integer
          description: The ID of this Config.
          example: 23456
          readOnly: true
          x-linode-cli-display: 1
        kernel:
          type: string
          description: A Kernel ID to boot a Linode with. Defaults to "linode/latest-64bit".
          example: linode/latest-64bit
          x-linode-cli-display: 3
        comments:
          type: string
          nullable: true
          description: Optional field for arbitrary User comments on this Config.
          example: This is my main Config
        memory_limit:
          type: integer
          description: |
            Defaults to the total RAM of the Linode.
          example: 2048
        run_level:
          type: string
          description: |
            Defines the state of your Linode after booting. Defaults to `default`.
          enum:
            - default
            - single
            - binbash
          example: default
        virt_mode:
          type: string
          description: |
            Controls the virtualization mode. Defaults to `paravirt`.
            * `paravirt` is suitable for most cases. Linodes running in paravirt mode
              share some qualities with the host, ultimately making it run faster since
              there is less transition between it and the host.
            * `fullvirt` affords more customization, but is slower because 100% of the VM
              is virtualized.
          enum:
            - paravirt
            - fullvirt
          example: paravirt
        interfaces:
          $ref: '#/components/schemas/LinodeConfigInterfaces'
        helpers:
          type: object
          description: Helpers enabled when booting to this Linode Config.
          properties:
            updatedb_disabled:
              type: boolean
              description: Disables updatedb cron job to avoid disk thrashing.
              example: true
            distro:
              type: boolean
              description: Helps maintain correct inittab/upstart console device.
              example: true
            modules_dep:
              type: boolean
              description: Creates a modules dependency file for the Kernel you run.
              example: true
            network:
              type: boolean
              description: Automatically configures static networking.
              example: true
            devtmpfs_automount:
              type: boolean
              description: |
                Populates the /dev directory early during boot without udev.  Defaults to false.
              example: false
        label:
          x-linode-filterable: true
          type: string
          description: |
            The Config's label is for display purposes only.
          example: My Config
          minLength: 1
          maxLength: 48
          x-linode-cli-display: 2
        devices:
          $ref: '#/components/schemas/Devices'
        root_device:
          type: string
          pattern: 'a-z, A-Z, 0-9, /, _, -'
          description: |
            The root device to boot.
            * If no value or an invalid value is provided, root device will default to `/dev/sda`.
            * If the device specified at the root device location is not mounted, the Linode will not boot until a device is mounted.
          example: /dev/sda
    Devices:
      type: object
      description: |
        A dictionary of device disks to use as a device map in a Linode's configuration profile.
        * An empty device disk dictionary or a dictionary with empty values for device slots is allowed.
        * If no devices are specified, booting from this configuration will hold until a device exists that allows the boot process to start.
      properties:
        sda:
          $ref: '#/components/schemas/Device'
        sdb:
          $ref: '#/components/schemas/Device'
        sdc:
          $ref: '#/components/schemas/Device'
        sdd:
          $ref: '#/components/schemas/Device'
        sde:
          $ref: '#/components/schemas/Device'
        sdf:
          $ref: '#/components/schemas/Device'
        sdg:
          $ref: '#/components/schemas/Device'
        sdh:
          $ref: '#/components/schemas/Device'
    Device:
      type: object
      description: |
        Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only one type per slot allowed. Can be null.
        Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
      properties:
        disk_id:
          type: integer
          description: 'The Disk ID, or `null` if a Volume is assigned to this slot.'
          example: 124458
        volume_id:
          type: integer
          description: 'The Volume ID, or `null` if a Disk is assigned to this slot.'
          example: null
    Firewall:
      type: object
      description: |
        A resource that controls incoming and outgoing network traffic to a Linode service. Only one Firewall can be attached to a Linode at any given time. [Create a Firewall Device](/docs/api/networking/#firewall-create) to assign a Firewall to a Linode service. Currently, Firewalls can only be assigned to Linode instances.
      properties:
        id:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The Firewall's unique ID.
          example: 123
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: |
            The Firewall's label, for display purposes only.

            Firewall labels have the following constraints:

              * Must begin and end with an alphanumeric character.
              * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).
              * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.
              * Must be between 3 and 32 characters.
              * Must be unique.
          example: firewall123
          minLength: 3
          maxLength: 32
          pattern: '^[a-zA-Z]((?!--|__|..)[a-zA-Z0-9-_.])+$'
          x-linode-cli-display: 2
        created:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: |
            When this Firewall was created.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 4
        updated:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: |
            When this Firewall was last updated.
          example: '2018-01-02T00:01:01'
          x-linode-cli-display: 5
        status:
          type: string
          readOnly: true
          description: |
            The status of this Firewall.

              * When a Firewall is first created its status is `enabled`.
              * Use the [Update Firewall](/docs/api/networking/#firewall-update) endpoint to set a Firewall's status to `enabled` or `disabled`.
              * Use the [Delete Firewall](/docs/api/networking/#firewall-delete) endpoint to delete a Firewall.
          enum:
            - enabled
            - disabled
            - deleted
          example: enabled
          x-linode-cli-display: 3
        rules:
          type: object
          description: |
            The inbound and outbound access rules to apply to the Firewall.

            A Firewall may have up to 25 rules across its inbound and outbound rulesets.
          properties:
            inbound:
              type: array
              x-linode-cli-format: json
              description: |
                The inbound rules for the firewall, as a JSON array.
              items:
                $ref: '#/components/schemas/FirewallRuleConfig'
            outbound:
              type: array
              x-linode-cli-format: json
              description: |
                The outbound rules for the firewall, as a JSON array.
              items:
                $ref: '#/components/schemas/FirewallRuleConfig'
            inbound_policy:
              type: string
              enum:
                - ACCEPT
                - DROP
              description: |
                The default behavior for inbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `inbound.action` property of the Firewall Rule.
              example: DROP
            outbound_policy:
              type: string
              enum:
                - ACCEPT
                - DROP
              description: |
                The default behavior for outbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `outbound.action` property of the Firewall Rule.
              example: DROP
        tags:
          x-linode-filterable: true
          description: |
            An array of tags applied to this object. Tags are for organizational purposes only.
          type: array
          items:
            type: string
          example:
            - example tag
            - another example
    FirewallRuleConfig:
      type: object
      description: |
        One of a Firewall's inbound or outbound access rules. The `ports` property can be used to allow traffic on a comma-separated list of different ports.
      properties:
        protocol:
          type: string
          enum:
            - TCP
            - UDP
            - ICMP
            - IPENCAP
          description: |
            The type of network traffic to allow.
          example: TCP
        ports:
          type: string
          description: |
            A string representing the port or ports on which traffic will be allowed:

            - The string may be a single port, a range of ports, or a comma-separated list of single ports and port ranges. A space is permitted following each comma.
            - A range of ports is inclusive of the start and end values for the range. The end value of the range must be greater than the start value.
            - Ports must be within 1 and 65535, and may not contain any leading zeroes. For example, port "080" is not allowed.
            - Ports may not be specified if a rule's protocol is `ICMP` or `IPENCAP`.
            - At least one port must be specified if a rule's protocol is `TCP` or `UDP`.
            - The ports string can have up to 15 *pieces*, where a single port is treated as one piece, and a port range is treated as two pieces. For example, the string "22-24, 80, 443" has four pieces.
          example: '22-24, 80, 443'
        addresses:
          type: object
          description: |
            Allowed IPv4 or IPv6 addresses. A Rule can have up to 255 addresses or networks listed across its IPv4 and IPv6 arrays. A network and a single IP are treated as equivalent when accounting for this limit.
          properties:
            ipv4:
              description: A list of IPv4 addresses or networks. Must be in IP/mask format.
              type: array
              items:
                type: string
              example:
                - 192.0.2.0/24
            ipv6:
              description: A list of IPv6 addresses or networks. Must be in IP/mask format.
              type: array
              items:
                type: string
              example:
                - '2001:DB8::/32'
        action:
          type: string
          enum:
            - ACCEPT
            - DROP
          description: |
            Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall's `inbound_policy` if this is an inbound rule, or the `outbound_policy` if this is an outbound rule.
          example: ACCEPT
        label:
          type: string
          description: |
            Used to identify this rule. For display purposes only.
          example: firewallrule123
          minLength: 3
          maxLength: 32
        description:
          type: string
          description: |
            Used to describe this rule. For display purposes only.
          example: An example firewall rule description.
          minLength: 1
          maxLength: 100
    IPAddress:
      type: object
      description: |
        An IP address that exists in Linode's system, either IPv4 or IPv6.
      properties:
        address:
          type: string
          format: ip
          description: |
            The IP address.
          example: 97.107.143.141
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          nullable: true
          format: ip
          description: |
            The default gateway for this address.
          example: 97.107.143.1
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: |
            The mask that separates host bits from network bits for this address.
          example: 255.255.255.0
          readOnly: true
        prefix:
          type: integer
          description: |
            The number of bits set in the subnet mask.
          example: 24
          readOnly: true
        type:
          type: string
          enum:
            - ipv4
            - ipv6
            - ipv6/pool
            - ipv6/range
          description: |
            The type of address this is.
          example: ipv4
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: |
            Whether this is a public or private IP address.
          example: true
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: |
            The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.
          x-linode-cli-display: 4
          example: test.example.org
          nullable: true
        linode_id:
          type: integer
          description: |
            The ID of the Linode this address currently belongs to. For IPv4 addresses, this is by default the Linode that this address was assigned to on creation, and these addresses my be moved using the [/networking/ipv4/assign](/docs/api/networking/#ips-to-linodes-assign) endpoint. For SLAAC and link-local addresses, this value may not be changed.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: |
            The Region this IP address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressPrivate:
      type: object
      description: |
        A private IPv4 address that exists in Linode's system.
      properties:
        address:
          type: string
          format: ip
          description: |
            The private IPv4 address.
          example: 192.168.133.234
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          format: ip
          description: |
            The default gateway for this address.
          example: null
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: |
            The mask that separates host bits from network bits for this address.
          example: 255.255.128.0
          readOnly: true
        prefix:
          type: integer
          description: |
            The number of bits set in the subnet mask.
          example: 17
          readOnly: true
        type:
          type: string
          description: |
            The type of address this is.
          example: ipv4
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: |
            Whether this is a public or private IP address.
          example: false
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: |
            The reverse DNS assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          description: |
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: |
            The Region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressV6LinkLocal:
      type: object
      description: |
        A link-local IPv6 address that exists in Linode's system,.
      properties:
        address:
          type: string
          format: ip
          description: |
            The IPv6 link-local address.
          example: 'fe80::f03c:91ff:fe24:3a2f'
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          description: |
            The default gateway for this address.
          example: 'fe80::1'
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: |
            The subnet mask.
          example: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
          readOnly: true
        prefix:
          type: integer
          description: |
            The network prefix.
          example: 64
          readOnly: true
        type:
          type: string
          description: |
            The type of address this is.
          example: ipv6
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: |
            Whether this is a public or private IP address.
          example: false
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: |
            The reverse DNS assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          description: |
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: |
            The Region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressV6Slaac:
      type: object
      description: |
        A SLAAC IPv6 address that exists in Linode's system.
      properties:
        address:
          type: string
          format: ip
          description: |
            The address.
          example: '2600:3c03::f03c:91ff:fe24:3a2f'
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          description: |
            The default gateway for this address.
          example: 'fe80::1'
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: |
            The subnet mask.
          example: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
          readOnly: true
        prefix:
          type: integer
          description: |
            The network prefix.
          example: 64
          readOnly: true
        type:
          type: string
          description: |
            The type of address this is.
          example: ipv6
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: |
            Whether this is a public or private IP address.
          example: true
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: |
            The reverse DNS assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          description: |
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: |
            The Region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPv6Pool:
      type: object
      description: |
        An object representing an IPv6 pool.
      properties:
        range:
          type: string
          description: |
            The IPv6 range of addresses in this pool.
          example: '2600:3c01::2:5000:0'
          readOnly: true
          x-linode-cli-display: 1
        prefix:
          type: integer
          description: |
            The prefix length of the address, denoting how many addresses can be assigned from this pool calculated as 2 <sup>128-prefix</sup>.
          example: 124
          x-linode-cli-display: 2
        region:
          type: string
          description: |
            The region for this pool of IPv6 addresses.
          example: us-east
          readOnly: true
          x-linode-cli-display: 3
          x-linode-filterable: true
        route_target:
          type: string
          description: |
            The last address in this block of IPv6 addresses.
          example: '2600:3c01::2:5000:f'
          nullable: true
    Kernel:
      type: object
      description: Linux kernel object
      properties:
        id:
          type: string
          description: The unique ID of this Kernel.
          example: linode/latest-64bit
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: The friendly name of this Kernel.
          example: Latest 64 bit (4.15.7-x86_64-linode102)
          readOnly: true
          x-linode-cli-display: 2
        version:
          x-linode-filterable: true
          type: string
          description: Linux Kernel version.
          example: 4.15.7
          readOnly: true
          x-linode-cli-display: 3
        kvm:
          x-linode-filterable: true
          type: boolean
          description: If this Kernel is suitable for KVM Linodes.
          example: true
          readOnly: true
        xen:
          x-linode-filterable: true
          type: boolean
          description: If this Kernel is suitable for Xen Linodes.
          example: false
          readOnly: true
        architecture:
          x-linode-filterable: true
          type: string
          description: The architecture of this Kernel.
          enum:
            - x86_64
            - i386
          example: x86_64
          readOnly: true
          x-linode-cli-display: 4
        pvops:
          x-linode-filterable: true
          type: boolean
          description: If this Kernel is suitable for paravirtualized operations.
          example: false
          readOnly: true
        deprecated:
          x-linode-filterable: true
          type: boolean
          description: 'If this Kernel is marked as deprecated, this field has a value of true; otherwise, this field is false.'
          example: false
          readOnly: true
        built:
          type: string
          format: date-time
          description: The date on which this Kernel was built.
          example: '2018-01-01T00:01:01'
          readOnly: true
    NodeBalancer:
      type: object
      description: |
        Linode's load balancing solution.  Can handle multiple ports, SSL termination, and any number of backends.  NodeBalancer ports are configured with NodeBalancer Configs, and each config is given one or more NodeBalancer Node that accepts traffic.  The traffic should be routed to the  NodeBalancer's ip address, the NodeBalancer will handle routing individual requests to backends.
      properties:
        id:
          type: integer
          description: |
            This NodeBalancer's unique ID.
          example: 12345
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          minLength: 3
          maxLength: 32
          pattern: '[a-zA-Z0-9-_]{3,32}'
          description: |
            This NodeBalancer's label. These must be unique on your Account.
          example: balancer12345
          x-linode-cli-display: 2
        region:
          x-linode-filterable: true
          type: string
          description: |
            The Region where this NodeBalancer is located. NodeBalancers only support backends in the same Region.
          example: us-east
          readOnly: true
          x-linode-cli-display: 3
        hostname:
          type: string
          description: |
            This NodeBalancer's hostname, beginning with its IP address and ending with _.ip.linodeusercontent.com_.
          example: 192.0.2.1.ip.linodeusercontent.com
          readOnly: true
          x-linode-cli-display: 4
        ipv4:
          x-linode-filterable: true
          type: string
          format: ip
          description: |
            This NodeBalancer's public IPv4 address.
          example: 203.0.113.1
          readOnly: true
          x-linode-cli-display: 5
        ipv6:
          type: string
          nullable: true
          format: ip
          description: |
            This NodeBalancer's public IPv6 address.
          example: null
          readOnly: true
          x-linode-cli-display: 6
        created:
          type: string
          format: date-time
          description: |
            When this NodeBalancer was created.
          example: 2018-01-01T00:01:01.000Z
          readOnly: true
        updated:
          type: string
          format: date-time
          description: |
            When this NodeBalancer was last updated.
          example: 2018-03-01T00:01:01.000Z
          readOnly: true
        client_conn_throttle:
          type: integer
          minimum: 0
          maximum: 20
          description: |
            Throttle connections per second.  Set to 0 (zero) to disable throttling.
          example: 0
          x-linode-cli-display: 6
        transfer:
          type: object
          readOnly: true
          description: |
            Information about the amount of transfer this NodeBalancer has had so far this month.
          properties:
            total:
              type: number
              nullable: true
              description: |
                The total transfer, in MB, used by this NodeBalancer this month.
              example: 32.46078109741211
              readOnly: true
            out:
              type: number
              nullable: true
              description: |
                The total inbound transfer, in MB, used for this NodeBalancer this month.
              example: 3.5487728118896484
              readOnly: true
            in:
              type: number
              nullable: true
              description: |
                The total outbound transfer, in MB, used for this NodeBalancer this month.
              example: 28.91200828552246
              readOnly: true
        tags:
          x-linode-filterable: true
          description: |
            An array of Tags applied to this object.  Tags are for organizational purposes only.
          type: array
          items:
            type: string
          example:
            - example tag
            - another example
    RescueDevices:
      type: object
      properties:
        sda:
          $ref: '#/components/schemas/Device'
        sdb:
          $ref: '#/components/schemas/Device'
        sdc:
          $ref: '#/components/schemas/Device'
        sdd:
          $ref: '#/components/schemas/Device'
        sde:
          $ref: '#/components/schemas/Device'
        sdf:
          $ref: '#/components/schemas/Device'
        sdg:
          $ref: '#/components/schemas/Device'
    LinodeStats:
      type: object
      description: |
        CPU, IO, IPv4, and IPv6 statistics. Graph data, if available, is in "[timestamp, reading]" array format. Timestamp is a UNIX timestamp in EST.
      readOnly: true
      properties:
        cpu:
          type: array
          description: |
            Percentage of CPU used.
          items:
            type: array
            items:
              type: number
              example:
                - 1521483600000
                - 0.42
        io:
          type: object
          description: Input/Output statistics.
          properties:
            io:
              type: array
              description: Block/s written.
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 0.19
            swap:
              type: array
              description: Block/s written.
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 0
        netv4:
          type: object
          description: IPv4 statistics.
          properties:
            in:
              type: array
              description: 'Input stats for IPv4, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 2004.36
            out:
              type: array
              description: 'Output stats for IPv4, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 3928.91
            private_in:
              type: array
              description: 'Private IPv4 input statistics, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 0
            private_out:
              type: array
              description: 'Private IPv4 output statistics, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 5.6
        netv6:
          type: object
          description: IPv6 statistics.
          properties:
            in:
              type: array
              description: 'Input stats for IPv6, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 0
            out:
              type: array
              description: 'Output stats for IPv6, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 0
            private_in:
              type: array
              description: 'Private IPv6 input statistics, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 195.18
            private_out:
              type: array
              description: 'Private IPv6 output statistics, measured in bits/s (bits/second).'
              items:
                type: array
                items:
                  type: number
                  example:
                    - 1521484800000
                    - 5.6
        title:
          type: string
          description: The title for this data set.
          example: linode.com - my-linode (linode123456) - day (5 min avg)
    Volume:
      type: object
      description: |
        A Block Storage Volume associated with your Account.
      properties:
        id:
          type: integer
          description: The unique ID of this Volume.
          example: 12345
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: |
            The Volume's label is for display purposes only.
          example: my-volume
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$'
          x-linode-cli-display: 2
        filesystem_path:
          type: string
          description: |
            The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.
          example: /dev/disk/by-id/scsi-0Linode_Volume_my-volume
          readOnly: true
        status:
          type: string
          description: |
            The current status of the volume.  Can be one of:

              * `creating` - the Volume is being created and is not yet available
                for use.
              * `active` - the Volume is online and available for use.
              * `resizing` - the Volume is in the process of upgrading
                its current capacity.
          enum:
            - creating
            - active
            - resizing
          example: active
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            active: green
            contact_support: red
            default_: yellow
        size:
          type: integer
          description: |
            The Volume's size, in GiB.
          maximum: 10240
          x-linode-cli-display: 4
          example: 30
        region:
          $ref: '#/components/schemas/Region/properties/id'
          x-linode-cli-display: 5
        linode_id:
          type: integer
          nullable: true
          description: |
            If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here.
          example: 12346
          x-linode-cli-display: 6
        linode_label:
          type: string
          nullable: true
          description: |
            If a Volume is attached to a specific Linode, the label of that Linode will be displayed here.
          example: linode123
          x-linode-cli-display: 7
          readOnly: true
        created:
          type: string
          format: date-time
          description: When this Volume was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Volume was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
        tags:
          x-linode-filterable: true
          description: |
            An array of Tags applied to this object.  Tags are for organizational purposes only.
          type: array
          items:
            type: string
          example:
            - example tag
            - another example
        hardware_type:
          type: string
          enum:
            - hdd
            - nvme
          description: The storage type of this Volume.
          example: nvme
          readOnly: true
    Region:
      type: object
      description: An area where Linode services are available.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique ID of this Region.
          example: us-east
          x-linode-cli-display: 1
        label:
          type: string
          description: 'Detailed location information for this Region, including city, state or region, and country.'
          example: 'Newark, NJ, USA'
          readOnly: true
          x-linode-cli-display: 2
        country:
          type: string
          description: The country where this Region resides.
          example: us
          readOnly: true
          x-linode-cli-display: 3
        capabilities:
          type: array
          items:
            type: string
          description: |
            A list of capabilities of this region.
          example:
            - Linodes
            - NodeBalancers
            - Block Storage
            - Object Storage
          readOnly: true
          x-linode-cli-display: 4
        status:
          type: string
          description: |
            This region's current operational status.
          example: ok
          enum:
            - ok
            - outage
          readOnly: true
          x-linode-cli-display: 5
        resolvers:
          type: object
          readOnly: true
          x-linode-cli-display: 6
          properties:
            ipv4:
              type: string
              description: |
                The IPv4 addresses for this region's DNS resolvers, separated by commas.
              example: '192.0.2.0,192.0.2.1'
              readOnly: true
            ipv6:
              type: string
              description: |
                The IPv6 addresses for this region's DNS resolvers, separated by commas.
              example: '2001:0db8::,2001:0db8::1'
              readOnly: true
    StackScript:
      type: object
      description: |
        A StackScript enables you to quickly deploy a fully-configured application in an automated manner.
      properties:
        id:
          type: integer
          description: The unique ID of this StackScript.
          example: 10079
          readOnly: true
          x-linode-cli-display: 1
        username:
          type: string
          description: |
            The User who created the StackScript.
          example: myuser
          readOnly: true
          x-linode-cli-display: 2
        user_gravatar_id:
          type: string
          description: |
            The Gravatar ID for the User who created the StackScript.
          example: a445b305abda30ebc766bc7fda037c37
          readOnly: true
        label:
          x-linode-filterable: true
          type: string
          description: |
            The StackScript's label is for display purposes only.
          example: a-stackscript
          minLength: 3
          maxLength: 128
          x-linode-cli-display: 3
        description:
          x-linode-filterable: true
          type: string
          description: |
            A description for the StackScript.
          example: |
            This StackScript installs and configures MySQL
        images:
          type: array
          description: |
            An array of Image IDs. These are the Images that can be deployed with this StackScript.

            `any/all` indicates that all available Images, including private Images, are accepted.
          items:
            type: string
          example:
            - linode/debian9
            - linode/debian8
          x-linode-cli-display: 4
        deployments_total:
          x-linode-filterable: true
          type: integer
          description: |
            The total number of times this StackScript has been deployed.
          example: 12
          readOnly: true
        deployments_active:
          type: integer
          description: |
            Count of currently active, deployed Linodes created from this StackScript.
          example: 1
          readOnly: true
        is_public:
          x-linode-filterable: true
          type: boolean
          description: |
            This determines whether other users can use your StackScript. **Once a StackScript is made public, it cannot be made private.**
          example: true
          x-linode-cli-display: 5
        created:
          type: string
          format: date-time
          description: |
            The date this StackScript was created.
          readOnly: true
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 6
        updated:
          type: string
          format: date-time
          description: |
            The date this StackScript was last updated.
          readOnly: true
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 7
        rev_note:
          x-linode-filterable: true
          type: string
          description: |
            This field allows you to add notes for the set of revisions made to this StackScript.
          example: Set up MySQL
        script:
          type: string
          description: |
            The script to execute when provisioning a new Linode with this StackScript.
          example: |
            "#!/bin/bash"
          x-linode-cli-format: file
        user_defined_fields:
          type: array
          description: |
            This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment. See [Declare User-Defined Fields (UDFs)](/docs/products/tools/stackscripts/guides/write-a-custom-script/#declare-user-defined-fields-udfs) for more information.
          items:
            $ref: '#/components/schemas/UserDefinedField'
          readOnly: true
          example:
            label: Enter the DB password
            name: DB_PASSWORD
            example: hunter2
        mine:
          type: boolean
          x-linode-filterable: true
          description: |
            Returns `true` if this StackScript is owned by the account of the user making the request, and the user
            making the request is unrestricted or has access to this StackScript.
          readOnly: true
          example: true
    UserDefinedField:
      type: object
      required:
        - label
        - name
        - example
      description: |
        A custom field defined by the User with a special syntax within a StackScript. Derived from the contents of the script.
      properties:
        label:
          type: string
          description: |
            A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
          example: Enter the password
          readOnly: true
        name:
          type: string
          description: |
            The name of the field.
          example: DB_PASSWORD
          readOnly: true
        example:
          type: string
          description: |
            An example value for the field.
          example: hunter2
          readOnly: true
        oneOf:
          type: string
          description: |
            A list of acceptable single values for the field.
          example: 'avalue,anothervalue,thirdvalue'
          readOnly: true
        manyOf:
          type: string
          description: |
            A list of acceptable values for the field in any quantity, combination or order.
          example: 'avalue,anothervalue,thirdvalue'
          readOnly: true
        default:
          type: string
          description: |
            The default value.  If not specified, this value will be used.
          readOnly: true
    LinodeType:
      type: object
      description: |
        Returns collection of Linode types, including pricing and specifications for each type. These are used when [creating](/docs/api/linode-instances/#linode-create) or [resizing](/docs/api/linode-instances/#linode-resize) Linodes.
      properties:
        id:
          readOnly: true
          type: string
          description: The ID representing the Linode Type.
          example: g6-standard-2
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          readOnly: true
          description: |
            The Linode Type's label is for display purposes only.
          example: Linode 4GB
          x-linode-cli-display: 2
        disk:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The Disk size, in MB, of the Linode Type.
          example: 81920
          x-linode-cli-display: 4
        class:
          x-linode-filterable: true
          type: string
          readOnly: true
          description: |
            The class of the Linode Type. We currently offer five classes of Linodes:

              * nanode - Nanode instances are good for low-duty workloads,
                where performance isn't critical. **Note:** As of June 16th, 2020, Nanodes became
                1 GB Linodes in the Cloud Manager, however, the API, the CLI, and billing will
                continue to refer to these instances as Nanodes.
              * standard - Standard Shared instances are good for medium-duty workloads and
                are a good mix of performance, resources, and price. **Note:** As of June 16th, 2020,
                Standard Linodes in the Cloud Manager became Shared Linodes, however, the API, the CLI, and
                billing will continue to refer to these instances as Standard Linodes.
              * dedicated - Dedicated CPU instances are good for full-duty workloads
                where consistent performance is important.
              * gpu - Linodes with dedicated NVIDIA Quadro &reg; RTX 6000 GPUs accelerate highly
                specialized applications such as machine learning, AI, and video transcoding.
              * highmem - High Memory instances favor RAM over other resources, and can be
                good for memory hungry use cases like caching and in-memory databases.
                All High Memory plans contain dedicated CPU cores.
          enum:
            - nanode
            - standard
            - dedicated
            - gpu
            - highmem
          example: standard
          x-linode-cli-display: 3
        price:
          type: object
          readOnly: true
          description: |
            Cost in US dollars, broken down into hourly and monthly charges.
          properties:
            hourly:
              type: number
              description: Cost (in US dollars) per hour.
              example: 0.03
              x-linode-cli-display: 9
            monthly:
              type: number
              description: Cost (in US dollars) per month.
              example: 20
              x-linode-cli-display: 10
        addons:
          type: object
          readOnly: true
          description: |
            A list of optional add-on services for Linodes and their associated costs.
          properties:
            backups:
              type: object
              readOnly: true
              description: |
                Information about the optional Backup service offered for Linodes.
              properties:
                price:
                  type: object
                  description: Cost of enabling Backups for this Linode Type.
                  properties:
                    hourly:
                      type: number
                      description: |
                        The cost (in US dollars) per hour to add Backups service.
                      example: 0.008
                    monthly:
                      type: number
                      description: |
                        The cost (in US dollars) per month to add Backups service.
                      example: 5
        network_out:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The Mbits outbound bandwidth allocation.
          example: 1000
          x-linode-cli-display: 7
        memory:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            Amount of RAM included in this Linode Type.
          example: 4096
          x-linode-cli-display: 5
        successor:
          type: string
          readOnly: true
          nullable: true
          description: |
            The Linode Type that a [mutate](/docs/api/linode-instances/#linode-upgrade) will upgrade to for a Linode of this type.  If "null", a Linode of this type may not mutate.
          example: null
        transfer:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The monthly outbound transfer amount, in MB.
          example: 4000
          x-linode-cli-display: 8
        vcpus:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The number of VCPU cores this Linode Type offers.
          example: 2
          x-linode-cli-display: 6
        gpus:
          x-linode-filterable: true
          type: integer
          readOnly: true
          description: |
            The number of GPUs this Linode Type offers.
          example: 0
          x-linode-cli-display: 11
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        minimum: 25
        maximum: 500
        default: 100
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your Account.
            'account:read_write': Allows access to all endpoints related to your Account.
            'domains:read_only': Allows access to GET Domains on your Account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'firewall:read_only': Allows access to GET information about your Firewalls.
            'firewall:read_write': Allows acces to all Firewall endpoints.
            'images:read_only': Allows access to GET your Images.
            'images:read_write': Allows access to all endpoints related to your Images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allows access to GET Linodes on your Account.
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'lke:read_only': Allows access to GET LKE Clusters on your Account.
            'lke:read_write': Allows access to all endpoints related to LKE Clusters on your Account.
            'longview:read_only': Allows access to GET your Longview Clients.
            'longview:read_write': Allows access to all endpoints related to your Longview Clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your Account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'object_storage:read_only': Allows access to GET information related to your Object Storage.
            'object_storage:read_write': Allows access to all Object Storage endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to your StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: $request.body#/id
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: $request.body#/id
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: $request.body#/id
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: $request.body#/id
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: $request.body#/id
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: $request.body#/id
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: $request.body#/id
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: $request.body#/id
  x-stackQL-resources:
    linode:
      id: linode.instances.linode
      name: linode
      title: Linode
      methods:
        getLinodeInstances:
          operation:
            $ref: '#/paths/~1linode~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeInstances:
          operation:
            $ref: '#/paths/~1linode~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bootLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1boot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloneLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1clone/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        migrateLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1migrate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mutateLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1mutate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resetLinodePassword:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1password/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rebootLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1reboot/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rebuildLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1rebuild/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rescueLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1rescue/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resizeLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        shutdownLinodeInstance:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1shutdown/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode/methods/getLinodeInstances'
          - $ref: '#/components/x-stackQL-resources/linode/methods/getLinodeInstance'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode/methods/createLinodeInstance'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linode/methods/deleteLinodeInstance'
    linode_backups:
      id: linode.instances.linode_backups
      name: linode_backups
      title: Linode Backups
      methods:
        getBackups:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getBackups:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createSnapshot:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getBackup:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups~1{backupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getBackup:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups~1{backupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancelBackups:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enableBackups:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups~1enable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restoreBackup:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1backups~1{backupId}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_backups/methods/getBackups'
          - $ref: '#/components/x-stackQL-resources/linode_backups/methods/getBackup'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode_backups/methods/createSnapshot'
        update: []
        delete: []
    linode_configs:
      id: linode.instances.linode_configs
      name: linode_configs
      title: Linode Configs
      methods:
        getLinodeConfigs:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeConfigs:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        addLinodeConfig:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeConfig:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs~1{configId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeConfig:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs~1{configId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateLinodeConfig:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs~1{configId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteLinodeConfig:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1configs~1{configId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_configs/methods/getLinodeConfigs'
          - $ref: '#/components/x-stackQL-resources/linode_configs/methods/getLinodeConfig'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode_configs/methods/addLinodeConfig'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linode_configs/methods/deleteLinodeConfig'
    linode_disks:
      id: linode.instances.linode_disks
      name: linode_disks
      title: Linode Disks
      methods:
        getLinodeDisks:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeDisks:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        addLinodeDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cloneLinodeDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}~1clone/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resetDiskPassword:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}~1password/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resizeDisk:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1disks~1{diskId}~1resize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_disks/methods/getLinodeDisks'
          - $ref: '#/components/x-stackQL-resources/linode_disks/methods/getLinodeDisk'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode_disks/methods/addLinodeDisk'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linode_disks/methods/deleteDisk'
    linode_firewalls:
      id: linode.instances.linode_firewalls
      name: linode_firewalls
      title: Linode Firewalls
      methods:
        getLinodeFirewalls:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1firewalls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeFirewalls:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1firewalls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_firewalls/methods/getLinodeFirewalls'
        insert: []
        update: []
        delete: []
    linode_ips:
      id: linode.instances.linode_ips
      name: linode_ips
      title: Linode Ips
      methods:
        getLinodeIPs:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeIPs:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        addLinodeIP:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeIP:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips~1{address}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeIP:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips~1{address}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateLinodeIP:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips~1{address}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        removeLinodeIP:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1ips~1{address}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_ips/methods/getLinodeIPs'
          - $ref: '#/components/x-stackQL-resources/linode_ips/methods/getLinodeIP'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode_ips/methods/addLinodeIP'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linode_ips/methods/removeLinodeIP'
    linode_kernels:
      id: linode.instances.linode_kernels
      name: linode_kernels
      title: Linode Kernels
      methods:
        getKernels:
          operation:
            $ref: '#/paths/~1linode~1kernels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getKernels:
          operation:
            $ref: '#/paths/~1linode~1kernels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getKernel:
          operation:
            $ref: '#/paths/~1linode~1kernels~1{kernelId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getKernel:
          operation:
            $ref: '#/paths/~1linode~1kernels~1{kernelId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_kernels/methods/getKernels'
          - $ref: '#/components/x-stackQL-resources/linode_kernels/methods/getKernel'
        insert: []
        update: []
        delete: []
    linode_nodebalancers:
      id: linode.instances.linode_nodebalancers
      name: linode_nodebalancers
      title: Linode Nodebalancers
      methods:
        getLinodeNodeBalancers:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1nodebalancers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeNodeBalancers:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1nodebalancers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_nodebalancers/methods/getLinodeNodeBalancers'
        insert: []
        update: []
        delete: []
    linode_transfer:
      id: linode.instances.linode_transfer
      name: linode_transfer
      title: Linode Transfer
      methods:
        getLinodeTransfer:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeTransfer:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1transfer/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeTransferByYearMonth:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1transfer~1{year}~1{month}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeTransferByYearMonth:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1transfer~1{year}~1{month}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_transfer/methods/getLinodeTransfer'
          - $ref: '#/components/x-stackQL-resources/linode_transfer/methods/getLinodeTransferByYearMonth'
        insert: []
        update: []
        delete: []
    linode_stats:
      id: linode.instances.linode_stats
      name: linode_stats
      title: Linode Stats
      methods:
        getLinodeStats:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeStats:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1stats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeStatsByYearMonth:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1stats~1{year}~1{month}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeStatsByYearMonth:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1stats~1{year}~1{month}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_stats/methods/getLinodeStats'
          - $ref: '#/components/x-stackQL-resources/linode_stats/methods/getLinodeStatsByYearMonth'
        insert: []
        update: []
        delete: []
    linode_volumes:
      id: linode.instances.linode_volumes
      name: linode_volumes
      title: Linode Volumes
      methods:
        getLinodeVolumes:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeVolumes:
          operation:
            $ref: '#/paths/~1linode~1instances~1{linodeId}~1volumes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_volumes/methods/getLinodeVolumes'
        insert: []
        update: []
        delete: []
    linode_stackscripts:
      id: linode.instances.linode_stackscripts
      name: linode_stackscripts
      title: Linode Stackscripts
      methods:
        getStackScripts:
          operation:
            $ref: '#/paths/~1linode~1stackscripts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getStackScripts:
          operation:
            $ref: '#/paths/~1linode~1stackscripts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        addStackScript:
          operation:
            $ref: '#/paths/~1linode~1stackscripts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getStackScript:
          operation:
            $ref: '#/paths/~1linode~1stackscripts~1{stackscriptId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getStackScript:
          operation:
            $ref: '#/paths/~1linode~1stackscripts~1{stackscriptId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateStackScript:
          operation:
            $ref: '#/paths/~1linode~1stackscripts~1{stackscriptId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteStackScript:
          operation:
            $ref: '#/paths/~1linode~1stackscripts~1{stackscriptId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_stackscripts/methods/getStackScripts'
          - $ref: '#/components/x-stackQL-resources/linode_stackscripts/methods/getStackScript'
        insert:
          - $ref: '#/components/x-stackQL-resources/linode_stackscripts/methods/addStackScript'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linode_stackscripts/methods/deleteStackScript'
    linode_types:
      id: linode.instances.linode_types
      name: linode_types
      title: Linode Types
      methods:
        getLinodeTypes:
          operation:
            $ref: '#/paths/~1linode~1types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeTypes:
          operation:
            $ref: '#/paths/~1linode~1types/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLinodeType:
          operation:
            $ref: '#/paths/~1linode~1types~1{typeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLinodeType:
          operation:
            $ref: '#/paths/~1linode~1types~1{typeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linode_types/methods/getLinodeTypes'
          - $ref: '#/components/x-stackQL-resources/linode_types/methods/getLinodeType'
        insert: []
        update: []
        delete: []
paths:
  /linode/instances:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      summary: Linodes List
      description: |
        Returns a paginated list of Linodes you have permission to view.
      tags:
        - Linode Instances
      operationId: getLinodeInstances
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns an array of all Linodes on your Account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Linode'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances
        - lang: CLI
          source: |
            linode-cli linodes list
    post:
      x-linode-charge: true
      x-linode-grant: add_linodes
      summary: Linode Create
      description: |
        Creates a Linode Instance on your Account. In order for this
        request to complete successfully, your User must have the `add_linodes` grant. Creating a
        new Linode will incur a charge on your Account.

        Linodes can be created using one of the available Types. See
        Types List ([GET /linode/types](/docs/api/linode-types/#types-list)) to get more
        information about each Type's specs and cost.

        Linodes can be created in any one of our available Regions, which are accessible from the
        Regions List ([GET /regions](/docs/api/regions/#regions-list)) endpoint.

        In an effort to fight spam, Linode restricts outbound connections on ports 25, 465, and 587
        on all Linodes for new accounts created after November 5th, 2019. For more information,
        see [Sending Email on Linode](/docs/guides/running-a-mail-server/#sending-email-on-linode).

        Linodes can be created in a number of ways:

        * Using a Linode Public Image distribution or a Private Image you created based on another Linode.
          * Access the Images List ([GET /images](/docs/api/images/#images-list)) endpoint with authentication to view
            all available Images.
          * The Linode will be `running` after it completes `provisioning`.
          * A default config with two Disks, one being a 512 swap disk, is created.
            * `swap_size` can be used to customize the swap disk size.
          * Requires a `root_pass` be supplied to use for the root User's Account.
          * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.
          * You may also supply a list of usernames via the `authorized_users` field.
            * These users must have an SSH Key associated with your Profile first. See SSH Key Add ([POST /profile/sshkeys](/docs/api/profile/#ssh-key-add)) for more information.

        * Using a StackScript.
          * See StackScripts List ([GET /linode/stackscripts](/docs/api/stackscripts/#stackscripts-list)) for
            a list of available StackScripts.
          * The Linode will be `running` after it completes `provisioning`.
          * Requires a compatible Image to be supplied.
            * See StackScript View ([GET /linode/stackscript/{stackscriptId}](/docs/api/stackscripts/#stackscript-view)) for compatible Images.
          * Requires a `root_pass` be supplied to use for the root User's Account.
          * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.
          * You may also supply a list of usernames via the `authorized_users` field.
            * These users must have an SSH Key associated with your Profile first. See SSH Key Add ([POST /profile/sshkeys](/docs/api/profile/#ssh-key-add)) for more information.

        * Using one of your other Linode's backups.
          * You must create a Linode large enough to accommodate the Backup's size.
          * The Disks and Config will match that of the Linode that was backed up.
          * The `root_pass` will match that of the Linode that was backed up.

        * Attached to a private VLAN.
          * Review the `interfaces` property of the [Request Body Schema](/docs/api/linode-instances/#linode-create__request-body-schema) for details.
          * For more information, see our guide on [Getting Started with VLANs](/docs/products/networking/vlans/get-started/).

        * Create an empty Linode.
          * The Linode will remain `offline` and must be manually started.
            * See Linode Boot ([POST /linode/instances/{linodeId}/boot](/docs/api/linode-instances/#linode-boot)).
          * Disks and Configs must be created manually.
          * This is only recommended for advanced use cases.

        **Important**: You must be an unrestricted User in order to add or modify
        tags on Linodes.
      tags:
        - Linode Instances
      operationId: createLinodeInstance
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The requested initial state of a new Linode.
        required: true
        x-linode-cli-allowed-defaults:
          - authorized_users
          - region
          - image
          - type
        content:
          application/json:
            schema:
              required:
                - type
                - region
              type: object
              allOf:
                - $ref: '#/components/schemas/LinodeRequest'
                - properties:
                    backup_id:
                      type: integer
                      example: 1234
                      description: |
                        A Backup ID from another Linode's available backups. Your User must have
                        `read_write` access to that Linode, the Backup must have a `status` of
                        `successful`, and the Linode must be deployed to the same `region` as the Backup.
                        See [GET /linode/instances/{linodeId}/backups](/docs/api/linode-instances/#backups-list)
                        for a Linode's available backups.

                        This field and the `image` field are mutually exclusive.
                    backups_enabled:
                      type: boolean
                      description: |
                        If this field is set to `true`, the created Linode will automatically be
                        enrolled in the Linode Backup service. This will incur an additional charge.
                        The cost for the Backup service is dependent on the Type of Linode deployed.

                        This option is always treated as `true` if the account-wide `backups_enabled`
                        setting is `true`.  See [account settings](/docs/api/account/#account-settings-view)
                        for more information.

                        Backup pricing is included in the response from [/linodes/types](/docs/api/linode-types/#types-list)
                    swap_size:
                      type: integer
                      example: 512
                      description: |
                        When deploying from an Image, this field is optional, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
                      default: 512
                    type:
                      type: string
                      description: |
                        The [Linode Type](/docs/api/linode-types/#types-list) of the Linode you are creating.
                      example: g6-standard-2
                    region:
                      type: string
                      description: |
                        The [Region](/docs/api/regions/#regions-list) where the Linode will be located.
                      example: us-east
                    label:
                      $ref: '#/components/schemas/Linode/properties/label'
                    tags:
                      $ref: '#/components/schemas/Linode/properties/tags'
                    group:
                      $ref: '#/components/schemas/Linode/properties/group'
                    private_ip:
                      type: boolean
                      description: |
                        If true, the created Linode will have private networking enabled and assigned a private IPv4 address.
                      example: true
                    interfaces:
                      $ref: '#/components/schemas/LinodeConfigInterfaces'
      responses:
        '200':
          description: |
            A new Linode is being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "backup_id": 1234,
                  "backups_enabled": true,
                  "swap_size": 512,
                  "image": "linode/debian9",
                  "root_pass": "aComplexP@ssword",
                  "stackscript_id": 10079,
                  "stackscript_data": {
                    "gh_username": "linode"
                  },
                  "interfaces": [
                    {
                      "purpose": "public",
                      "label": "",
                      "ipam_address": ""
                    },
                    {
                      "purpose": "vlan",
                      "label": "vlan-1",
                      "ipam_address": "10.0.0.1/24"
                    }
                  ],
                  "authorized_keys": [
                    "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                  ],
                  "authorized_users": [
                    "myUser",
                    "secondaryUser"
                  ],
                  "booted": true,
                  "label": "linode123",
                  "type": "g6-standard-2",
                  "region": "us-east",
                  "group": "Linode-Group"
                }' \
                https://api.linode.com/v4/linode/instances
        - lang: CLI
          source: |
            linode-cli linodes create \
              --label linode123 \
              --root_pass aComplex@Password \
              --booted true \
              --stackscript_id 10079 \
              --stackscript_data '{"gh_username": "linode"}' \
              --region us-east \
              --type g6-standard-2 \
              --authorized_keys "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
              --authorized_users "myUser"
              --authorized_users "secondaryUser"
  '/linode/instances/{linodeId}':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Linode View
      description: Get a specific Linode by ID.
      operationId: getLinodeInstance
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns a single Linode object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
          links:
            boot:
              $ref: '#/components/links/bootLinode'
            reboot:
              $ref: '#/components/links/rebootLinode'
            shutdown:
              $ref: '#/components/links/shutdownLinode'
            update:
              $ref: '#/components/links/updateLinode'
            delete:
              $ref: '#/components/links/deleteLinode'
            rebuild:
              $ref: '#/components/links/rebuildLinode'
            mutate:
              $ref: '#/components/links/mutateLinode'
            resize:
              $ref: '#/components/links/resizeLinode'
            rescue:
              $ref: '#/components/links/rescueLinode'
            clone:
              $ref: '#/components/links/cloneLinode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123
        - lang: CLI
          source: |
            linode-cli linodes view 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up
          required: true
          schema:
            type: integer
    put:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Linode Update
      description: |
        Updates a Linode that you have permission to `read_write`.

        **Important**: You must be an unrestricted User in order to add or modify tags on Linodes.
      operationId: updateLinodeInstance
      x-linode-cli-action: update
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: |
          Any field that is not marked as `readOnly` may be updated. Fields that are marked `readOnly` will be ignored. If any updated field fails to pass validation, the Linode will not be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Linode'
      responses:
        '200':
          description: The updated Linode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "label": "linode123",
                  "group": "Linode-Group",
                  "alerts": {
                    "cpu": 180,
                    "network_in": 10,
                    "network_out": 10,
                    "transfer_quota": 80,
                    "io": 10000
                  },
                  "backups": {
                    "schedule": {
                      "day": "Saturday",
                      "window": "W22"
                    }
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123
        - lang: CLI
          source: |
            linode-cli linodes update 7833080 \
              --label linode123 \
              --backups.schedule.day "Saturday" \
              --backups.schedule.window "W22" \
              --alerts.cpu 180 \
              --alerts.network_in 10 \
              --alerts.network_out 10 \
              --alerts.transfer_quota 80 \
              --alerts.io 10000
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up
          required: true
          schema:
            type: integer
    delete:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Linode Delete
      description: |
        Deletes a Linode you have permission to `read_write`.

        **Deleting a Linode is a destructive action and cannot be undone.**

        Additionally, deleting a Linode:

          * Gives up any IP addresses the Linode was assigned.
          * Deletes all Disks, Backups, Configs, etc.
          * Stops billing for the Linode and its associated services. You will be billed for time used
            within the billing period the Linode was active.

        Linodes that are in the process of [cloning](/docs/api/linode-instances/#linode-clone) or [backup restoration](/docs/api/linode-instances/#backup-restore) cannot be deleted.
      operationId: deleteLinodeInstance
      x-linode-cli-action:
        - delete
        - rm
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/linode/instances/123
        - lang: CLI
          source: |
            linode-cli linodes delete 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/backups':
    get:
      x-linode-grant: read_only
      summary: Backups List
      description: |
        Returns information about this Linode's available backups.
      tags:
        - Linode Instances
      operationId: getBackups
      x-linode-cli-action: backups-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: A collection of the specified Linode's available backups.
          content:
            application/json:
              x-linode-cli-rows:
                - automatic
                - snapshot.current
                - snapshot.in_progress
              x-linode-cli-use-schema:
                $ref: '#/components/schemas/Backup'
              schema:
                type: object
                properties:
                  automatic:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Backup'
                        - properties:
                            type:
                              type: string
                              example: automatic
                  snapshot:
                    type: object
                    properties:
                      in_progress:
                        $ref: '#/components/schemas/Backup'
                      current:
                        $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/backups
        - lang: CLI
          source: |
            linode-cli linodes backups-list 123
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode the backups belong to.
          required: true
          schema:
            type: integer
    post:
      x-linode-grant: read_write
      summary: Snapshot Create
      description: |
        Creates a snapshot Backup of a Linode.

        **Important:** If you already have a snapshot of this Linode, this is a destructive
        action. The previous snapshot will be deleted.
      tags:
        - Linode Instances
      operationId: createSnapshot
      x-linode-cli-action: snapshot
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - label
              type: object
              properties:
                label:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: The label for the new snapshot.
                  example: SnapshotLabel
      responses:
        '200':
          description: Snapshot request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "MyNewSnapshot"
                }' \
                https://api.linode.com/v4/linode/instances/123/backups
        - lang: CLI
          source: |
            linode-cli linodes snapshot 123
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode the backups belong to.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/backups/cancel':
    post:
      x-linode-grant: read_write
      summary: Backups Cancel
      description: |
        Cancels the Backup service on the given Linode. Deletes all of this Linode's existing backups forever.
      tags:
        - Linode Instances
      operationId: cancelBackups
      x-linode-cli-action: backups-cancel
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Backup service was cancelled for the specified Linode.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/backups/cancel
        - lang: CLI
          source: |
            linode-cli linodes backups-cancel 123
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to cancel backup service for.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/backups/enable':
    post:
      x-linode-grant: read_write
      summary: Backups Enable
      description: |
        Enables backups for the specified Linode.
      tags:
        - Linode Instances
      operationId: enableBackups
      x-linode-cli-action: backups-enable
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Backup service was enabled.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/backups/enable
        - lang: CLI
          source: |
            linode-cli linodes backups-enable 123
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to enable backup service for.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/backups/{backupId}':
    get:
      x-linode-grant: read_only
      summary: Backup View
      description: |
        Returns information about a Backup.
      tags:
        - Linode Instances
      operationId: getBackup
      x-linode-cli-action: backup-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: A single Backup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/backups/123456
        - lang: CLI
          source: |
            linode-cli linodes backup-view 123 123456
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode the Backup belongs to.
          required: true
          schema:
            type: integer
        - name: backupId
          in: path
          description: The ID of the Backup to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/backups/{backupId}/restore':
    post:
      x-linode-grant: read_write
      summary: Backup Restore
      description: |
        Restores a Linode's Backup to the specified Linode.
      tags:
        - Linode Instances
      operationId: restoreBackup
      x-linode-cli-action: backup-restore
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Parameters to provide when restoring the Backup.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - linode_id
              properties:
                linode_id:
                  type: integer
                  description: |
                    The ID of the Linode to restore a Backup to.
                  example: 234
                overwrite:
                  type: boolean
                  description: |
                    If True, deletes all Disks and Configs on the target Linode
                    before restoring.

                    If False, and the Disk image size is larger than the available
                    space on the Linode, an error message indicating insufficient
                    space is returned.
                  example: true
      responses:
        '200':
          description: Restore from Backup was initiated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "linode_id": 234,
                  "overwrite": true
                }' \
                https://api.linode.com/v4/linode/instances/123/backups/123456/restore
        - lang: CLI
          source: |
            linode-cli linodes backup-restore 123 123456 \
              --linode_id 234 \
              --overwrite true
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode that the Backup belongs to.
          required: true
          schema:
            type: integer
        - name: backupId
          in: path
          description: The ID of the Backup to restore.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/boot':
    post:
      x-linode-grant: read_write
      summary: Linode Boot
      description: |
        Boots a Linode you have permission to modify. If no parameters are given, a Config profile
        will be chosen for this boot based on the following criteria:

        * If there is only one Config profile for this Linode, it will be used.
        * If there is more than one Config profile, the last booted config will be used.
        * If there is more than one Config profile and none were the last to be booted (because the
          Linode was never booted or the last booted config was deleted) an error will be returned.
      tags:
        - Linode Instances
      operationId: bootLinodeInstance
      x-linode-cli-action: boot
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Optional configuration to boot into (see above).
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                config_id:
                  type: integer
                  description: |
                    The Linode Config ID to boot into.
                  example: null
      responses:
        '200':
          description: Boot started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/boot
        - lang: CLI
          source: |
            linode-cli linodes boot 123
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to boot.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/clone':
    post:
      x-linode-charge: true
      x-linode-grant: add_linodes
      summary: Linode Clone
      description: |
        You can clone your Linode's existing Disks or Configuration profiles to
        another Linode on your Account. In order for this request to complete
        successfully, your User must have the `add_linodes` grant. Cloning to a
        new Linode will incur a charge on your Account.

        If cloning to an existing Linode, any actions currently running or
        queued must be completed first before you can clone to it.

        Up to five clone operations from any given source Linode can be run concurrently.
        If more concurrent clones are attempted, an HTTP 400 error will be
        returned by this endpoint.

        Any [tags](/docs/api/tags/#tags-list) existing on the source Linode will be cloned to the target Linode.
      tags:
        - Linode Instances
      operationId: cloneLinodeInstance
      x-linode-cli-action: clone
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The requested state your Linode will be cloned into.
        required: true
        x-linode-cli-allowed-defaults:
          - region
          - type
        content:
          application/json:
            schema:
              type: object
              properties:
                region:
                  type: string
                  description: |
                    This is the Region where the Linode will be deployed.
                    To view all available Regions you can deploy to see [/regions](/docs/api/regions/#regions-list).
                    * Region can only be provided and is required when cloning to a new Linode.
                  example: us-east
                type:
                  type: string
                  description: |
                    A Linode's Type determines what resources are available to
                    it, including disk space, memory, and virtual cpus. The
                    amounts available to a specific Linode are returned as
                    `specs` on the Linode object.

                    To view all available Linode Types you can deploy with
                    see [/linode/types](/docs/api/linode-types/#types-list).

                    * Type can only be provided and is required when cloning to a new Linode.
                  example: g6-standard-2
                linode_id:
                  type: integer
                  description: |
                    If an existing Linode is the target for the clone, the ID of that Linode. The existing Linode must have enough resources to accept the clone.
                  example: 124
                label:
                  type: string
                  minLength: 3
                  maxLength: 64
                  description: |
                    The label to assign this Linode when cloning to a new Linode.
                    * Can only be provided when cloning to a new Linode.
                    * Defaults to "linode".
                  example: cloned-linode
                group:
                  deprecated: true
                  type: string
                  description: |
                    A label used to group Linodes for display. Linodes are not required to have a group.
                  example: Linode-Group
                backups_enabled:
                  type: boolean
                  description: |
                    If this field is set to `true`, the created Linode will
                    automatically be enrolled in the Linode Backup service. This
                    will incur an additional charge. Pricing is included in the
                    response from
                    [/linodes/types](/docs/api/linode-types/#types-list).

                    * Can only be included when cloning to a new Linode.
                  example: true
                disks:
                  type: array
                  description: |
                    An array of disk IDs.
                    * If the `disks` parameter **is not provided**, then **no extra disks will be cloned** from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned.
                    * **If an empty array is provided** for the `disks` parameter, then **no extra disks will be cloned** from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned.
                    * **If a non-empty array is provided** for the `disks` parameter, then **the disks specified in the array will be cloned** from the source Linode, in addition to any disks associated with the configuration profiles specified by the `configs` parameter.
                  items:
                    type: integer
                    example: 25674
                configs:
                  type: array
                  description: |
                    An array of configuration profile IDs.
                    * If the `configs` parameter **is not provided**, then **all configuration profiles and their associated disks will be cloned** from the source Linode. Any disks specified by the `disks` parameter will also be cloned.
                    * **If an empty array is provided** for the `configs` parameter, then **no configuration profiles (nor their associated disks) will be cloned** from the source Linode. Any disks specified by the `disks` parameter will still be cloned.
                    * **If a non-empty array is provided** for the `configs` parameter, then **the configuration profiles specified in the array (and their associated disks) will be cloned** from the source Linode. Any disks specified by the `disks` parameter will also be cloned.
                  items:
                    type: integer
                    example: 23456
                private_ip:
                  type: boolean
                  description: |
                    If true, the created Linode will have private networking enabled and assigned a private IPv4 address.
                    * Can only be provided when cloning to a new Linode.
                  example: true
      responses:
        '200':
          description: Clone started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "region": "us-east",
                  "type": "g6-standard-2",
                  "linode_id": 124,
                  "label": "cloned-linode",
                  "group": "Linode-Group",
                  "backups_enabled": true,
                  "disks": [25674],
                  "configs": [23456],
                  "private_ip": true
                }' \
                https://api.linode.com/v4/linode/instances/123/clone
        - lang: CLI
          source: |
            linode-cli linodes clone 123 \
              --linode_id 124 \
              --region us-east \
              --type g6-standard-2 \
              --label cloned-linode \
              --backups_enabled true \
              --disks 25674 \
              --configs 23456 \
              --private_ip true
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to clone.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/configs':
    get:
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up Configuration profiles for.
          required: true
          schema:
            type: integer
      tags:
        - Linode Instances
      summary: Configuration Profiles List
      description: |
        Lists Configuration profiles associated with a Linode.
      operationId: getLinodeConfigs
      x-linode-cli-action: configs-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: |
            Returns an array of Configuration profiles associated with this Linode.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LinodeConfig'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/configs
        - lang: CLI
          source: |
            linode-cli linodes configs-list 123
    post:
      tags:
        - Linode Instances
      summary: Configuration Profile Create
      description: |
        Adds a new Configuration profile to a Linode.
      operationId: addLinodeConfig
      x-linode-cli-action: config-create
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: |
          The parameters to set when creating the Configuration profile.
          This determines which kernel, devices, how much memory, etc. a Linode boots with.
        required: true
        content:
          application/json:
            schema:
              required:
                - label
                - devices
              allOf:
                - $ref: '#/components/schemas/LinodeConfig'
      responses:
        '200':
          description: |
            A Configuration profile was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "kernel": "linode/latest-64bit",
                  "comments": "This is my main Config",
                  "memory_limit": 2048,
                  "run_level": "default",
                  "virt_mode": "paravirt",
                  "interfaces": [
                    {
                      "purpose": "public",
                      "label": "",
                      "ipam_address": ""
                    },
                    {
                      "purpose": "vlan",
                      "label": "vlan-1",
                      "ipam_address": "10.0.0.1/24"
                    }
                  ],
                  "helpers": {
                    "updatedb_disabled": true,
                    "distro": true,
                    "modules_dep": true,
                    "network": true,
                    "devtmpfs_automount": false
                  },
                  "label": "My Config",
                  "devices": {
                    "sda": {
                      "disk_id": 123456,
                      "volume_id": null
                    },
                    "sdb": {
                      "disk_id": 123457,
                      "volume_id": null
                    }
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123/configs
        - lang: CLI
          source: |
            linode-cli linodes config-create 7590910 \
              --label "My Config" \
              --devices.sda.disk_id 123456 \
              --devices.sdb.disk_id 123457
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up Configuration profiles for.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/configs/{configId}':
    get:
      tags:
        - Linode Instances
      x-linode-grant: read_only
      summary: Configuration Profile View
      description: |
        Returns information about a specific Configuration profile.
      operationId: getLinodeConfig
      x-linode-cli-action: config-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: A Configuration profile object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/configs/23456
        - lang: CLI
          source: |
            linode-cli linodes config-view 123 23456
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode whose Configuration profile to look up.
          required: true
          schema:
            type: integer
        - name: configId
          in: path
          description: The ID of the Configuration profile to look up.
          required: true
          schema:
            type: integer
    put:
      x-linode-grant: read_write
      summary: Configuration Profile Update
      description: |
        Updates a Configuration profile.
      tags:
        - Linode Instances
      operationId: updateLinodeConfig
      x-linode-cli-action: config-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The Configuration profile parameters to modify.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinodeConfig'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "kernel": "linode/latest-64bit",
                  "comments": "This is my main Config",
                  "memory_limit": 2048,
                  "run_level": "default",
                  "virt_mode": "paravirt",
                  "interfaces": [
                    {
                      "purpose": "public",
                      "label": "",
                      "ipam_address": ""
                    },
                    {
                      "purpose": "vlan",
                      "label": "vlan-1",
                      "ipam_address": "10.0.0.1/24"
                    }
                  ],
                  "helpers": {
                    "updatedb_disabled": true,
                    "distro": true,
                    "modules_dep": true,
                    "network": true,
                    "devtmpfs_automount": false
                  },
                  "label": "My Config",
                  "devices": {
                    "sda": {
                      "disk_id": 123456,
                      "volume_id": null
                    },
                    "sdb": {
                      "disk_id": 123457,
                      "volume_id": null
                    }
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123/configs/23456
        - lang: CLI
          source: |
            linode-cli linodes config-update 123 23456 \
              --kernel "linode/latest-64bit" \
              --comments "This is my main Config" \
              --memory_limit 2048 \
              --run_level default \
              --virt_mode paravirt \
              --helpers.updatedb_disabled true \
              --helpers.distro true \
              --helpers.modules_dep true \
              --helpers.network true \
              --helpers.devtmpfs_automount false \
              --label "My Config" \
              --devices.sda.disk_id 123456 \
              --devices.sdb.disk_id 123457
      responses:
        '200':
          description: Configuration profile successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode whose Configuration profile to look up.
          required: true
          schema:
            type: integer
        - name: configId
          in: path
          description: The ID of the Configuration profile to look up.
          required: true
          schema:
            type: integer
    delete:
      summary: Configuration Profile Delete
      description: |
        Deletes the specified Configuration profile from the specified Linode.
      x-linode-grant: read_write
      tags:
        - Linode Instances
      operationId: deleteLinodeConfig
      x-linode-cli-action: config-delete
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: |
            Configuration profile successfully deleted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/linode/instances/123/configs/23456
        - lang: CLI
          source: |
            linode-cli linodes config-delete 123 23456
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode whose Configuration profile to look up.
          required: true
          schema:
            type: integer
        - name: configId
          in: path
          description: The ID of the Configuration profile to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/disks':
    get:
      x-linode-grant: read_only
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
      tags:
        - Linode Instances
      summary: Disks List
      description: |
        View Disk information for Disks associated with this Linode.
      operationId: getLinodeDisks
      x-linode-cli-action: disks-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns a paginated list of disks associated with this Linode.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Disk'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/disks
        - lang: CLI
          source: |
            linode-cli linodes disks-list 123
    post:
      tags:
        - Linode Instances
      summary: Disk Create
      description: |
        Adds a new Disk to a Linode.

        * You can optionally create a Disk from an Image or an Empty Disk if no Image is provided with a request.

        * When creating an Empty Disk, providing a `label` is required.

        * If no `label` is provided, an `image` is required instead.

        * When creating a Disk from an Image, `root_pass` is required.

        * The default filesystem for new Disks is `ext4`. If creating a Disk from an Image, the filesystem
        of the Image is used unless otherwise specified.

        * When deploying a StackScript on a Disk:
          * See StackScripts List ([GET /linode/stackscripts](/docs/api/stackscripts/#stackscripts-list)) for
            a list of available StackScripts.
          * Requires a compatible Image to be supplied.
            * See StackScript View ([GET /linode/stackscript/{stackscriptId}](/docs/api/stackscripts/#stackscript-view)) for compatible Images.
          * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.
          * You may also supply a list of usernames via the `authorized_users` field.
            * These users must have an SSH Key associated with their Profiles first. See SSH Key Add ([POST /profile/sshkeys](/docs/api/profile/#ssh-key-add)) for more information.
      operationId: addLinodeDisk
      x-linode-cli-action: disk-create
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: |
          The parameters to set when creating the Disk.
        required: true
        content:
          application/json:
            schema:
              required:
                - size
              allOf:
                - $ref: '#/components/schemas/DiskRequest'
      responses:
        '200':
          description: Disk created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "Debian 9 Disk",
                  "image": "linode/debian9",
                  "size": 1300,
                  "authorized_keys": [
                    "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                  ],
                  "authorized_users": [
                    "myUser",
                    "secondaryUser"
                  ],
                  "root_pass": "aComplexP@ssword",
                  "stackscript_id": 10079,
                  "stackscript_data": {
                    "gh_username": "linode"
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123/disks
        - lang: CLI
          source: |
            linode-cli linodes disk-create 123 \
              --size 1300 \
              --authorized_keys "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer" \
              --authorized_users "myUser" \
              --authorized_users "secondaryUser" \
              --root_pass aComplex@Password \
              --image "linode/debian9" \
              --stackscript_id 10079 \
              --stackscript_data '{"gh_username": "linode"}'
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/disks/{diskId}':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Disk View
      description: |
        View Disk information for a Disk associated with this Linode.
      operationId: getLinodeDisk
      x-linode-cli-action: disk-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns a single Disk object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/disks/25674
        - lang: CLI
          source: |
            linode-cli linodes disk-view 123 25674
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to look up.
          required: true
          schema:
            type: integer
    put:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Disk Update
      description: |
        Updates a Disk that you have permission to `read_write`.
      operationId: updateDisk
      x-linode-cli-action: disk-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: |
          Updates the parameters of a single Disk.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
      responses:
        '200':
          description: The updated Disk.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "label": "Debian 9 Disk"
                }' \
                https://api.linode.com/v4/linode/instances/123/disks/25674
        - lang: CLI
          source: |
            linode-cli linodes disk-update 123 25674 \
              --label "Debian 9 Disk"
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to look up.
          required: true
          schema:
            type: integer
    delete:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Disk Delete
      description: |
        Deletes a Disk you have permission to `read_write`.

        **Deleting a Disk is a destructive action and cannot be undone.**
      operationId: deleteDisk
      x-linode-cli-action: disk-delete
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/linode/instances/123/disks/25674
        - lang: CLI
          source: |
            linode-cli linodes disk-delete 123 24674
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/disks/{diskId}/clone':
    post:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Disk Clone
      description: |
        Copies a disk, byte-for-byte, into a new Disk belonging to the same Linode. The Linode must have enough storage space available to accept a new Disk of the same size as this one or this operation will fail.
      operationId: cloneLinodeDisk
      x-linode-cli-action: disk-clone
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Disk clone initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to clone.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/disks/{diskId}/password':
    post:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Disk Root Password Reset
      description: |
        Resets the password of a Disk you have permission to `read_write`.
      operationId: resetDiskPassword
      x-linode-cli-action: disk-reset-password
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The new password.
        required: true
        content:
          application/json:
            schema:
              required:
                - password
              properties:
                password:
                  type: string
                  description: |
                    The new root password for the OS installed on this Disk.
                    The password must meet the complexity strength validation requirements for a strong password.
                  example: another@complex^Password123
      responses:
        '200':
          description: Returns a single Disk object.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "password": "another@complex^Password123"
                }' \
                https://api.linode.com/v4/linode/instances/123/disks/25674/password
        - lang: CLI
          source: |
            linode-cli linodes disk-reset-password \
              123 25674 \
              --password aComplex@Password
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/disks/{diskId}/resize':
    post:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: Disk Resize
      description: |
        Resizes a Disk you have permission to `read_write`.

        The Disk must not be in use. If the Disk is in use, the request will
        succeed but the resize will ultimately fail. For a request to succeed,
        the Linode must be shut down prior to resizing the Disk, or the Disk
        must not be assigned to the Linode's active Configuration Profile.

        If you are resizing the Disk to a smaller size, it cannot be made smaller
        than what is required by the total size of the files current on the Disk.
      operationId: resizeDisk
      x-linode-cli-action: disk-resize
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The new size of the Disk.
        required: true
        content:
          application/json:
            schema:
              required:
                - size
              properties:
                size:
                  type: integer
                  description: |
                    The desired size, in MB, of the disk.
                  minimum: 1
                  example: 2048
      responses:
        '200':
          description: Resize started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "size": 2048
                }' \
                https://api.linode.com/v4/linode/instances/123/disks/25674/resize
        - lang: CLI
          source: |
            linode-cli linodes disk-resize 123 25674 \
              --size 2048
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: diskId
          in: path
          description: ID of the Disk to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/firewalls':
    get:
      x-linode-grant: read_only
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
      tags:
        - Linode Instances
      summary: Firewalls List
      description: |
        View Firewall information for Firewalls associated with this Linode.
      operationId: getLinodeFirewalls
      x-linode-cli-action: firewalls-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns a paginated list of Firewalls associated with this Linode.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Firewall'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/firewalls
        - lang: CLI
          source: |
            linode-cli linodes firewalls-list 123
  '/linode/instances/{linodeId}/ips':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Networking Information List
      description: |
        Returns networking information for a single Linode.
      operationId: getLinodeIPs
      x-linode-cli-action: ips-list
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Requested Linode's networking configuration.
          content:
            application/json:
              schema:
                properties:
                  ipv4:
                    type: object
                    description: |
                      Information about this Linode's IPv4 addresses.
                    readOnly: true
                    properties:
                      public:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPAddress'
                        description: |
                          A list of public IP Address objects belonging to this Linode.
                        readOnly: true
                      private:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPAddressPrivate'
                        description: |
                          A list of private IP Address objects belonging to this Linode.
                        readOnly: true
                      shared:
                        type: array
                        readOnly: true
                        items:
                          $ref: '#/components/schemas/IPAddress'
                        description: |
                          A list of shared IP Address objects assigned to this Linode.
                      reserved:
                        type: array
                        readOnly: true
                        items:
                          $ref: '#/components/schemas/IPAddress'
                        description: |
                          A list of reserved IP Address objects belonging to this Linode.
                  ipv6:
                    type: object
                    description: |
                      Information about this Linode's IPv6 addresses.
                    readOnly: true
                    properties:
                      link_local:
                        $ref: '#/components/schemas/IPAddressV6LinkLocal'
                      slaac:
                        $ref: '#/components/schemas/IPAddressV6Slaac'
                      global:
                        $ref: '#/components/schemas/IPv6Pool'
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                https://api.linode.com/v4/linode/instances/123/ips
        - lang: CLI
          source: |
            linode-cli linodes 123 ips-list
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
    post:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: IPv4 Address Allocate
      description: |
        Allocates a public or private IPv4 address to a Linode. Public IP Addresses, after the one included with each Linode, incur an additional monthly charge. If you need an additional public IP Address you must request one - please [open a support ticket](/docs/api/support/#support-ticket-open). You may not add more than one private IPv4 address to a single Linode.
      operationId: addLinodeIP
      x-linode-cli-action: ip-add
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Information about the address you are creating.
        required: true
        content:
          application/json:
            schema:
              required:
                - type
                - public
              properties:
                type:
                  type: string
                  enum:
                    - ipv4
                  description: |
                    The type of address you are allocating. Only IPv4 addresses may be allocated through this endpoint.
                  example: ipv4
                public:
                  type: boolean
                  description: |
                    Whether to create a public or private IPv4 address.
                  example: true
      responses:
        '200':
          description: IP address was successfully allocated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "type": "ipv4",
                  "public": true
                }' \
                https://api.linode.com/v4/linode/instances/123/ips
        - lang: CLI
          source: |
            linode-cli linodes ip-add 123 \
              --type ipv4 \
              --public true
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/ips/{address}':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: IP Address View
      description: |
        View information about the specified IP address associated with the specified Linode.
      operationId: getLinodeIP
      x-linode-cli-action: ip-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: A single IP address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141
        - lang: CLI
          source: |
            linode-cli linodes ip-view 123 97.107.143.141
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: address
          in: path
          description: The IP address to look up.
          required: true
          schema:
            type: string
            format: ip
    put:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: IP Address Update
      description: |
        Updates a the reverse DNS (RDNS) for a particular IP Address associated with this Linode.

        Setting the RDNS to `null` for a public IPv4 address, resets it to the default "ip.linodeusercontent.com" RDNS value.
      operationId: updateLinodeIP
      x-linode-cli-action: ip-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The information to update for the IP address.
        content:
          application/json:
            schema:
              required:
                - rdns
              type: object
              properties:
                rdns:
                  type: string
                  description: |
                    The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.
                  nullable: true
                  example: test.example.org
      responses:
        '200':
          description: The updated IP address record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "rdns": "test.example.org"
                }' \
                https://api.linode.com/v4/linode/instances/123/ips/203.0.113.1
        - lang: CLI
          source: |
            linode-cli linodes ip-update 123 \
              203.0.113.1 \
              --rdns test.example.org
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: address
          in: path
          description: The IP address to look up.
          required: true
          schema:
            type: string
            format: ip
    delete:
      x-linode-grant: read_write
      tags:
        - Linode Instances
      summary: IPv4 Address Delete
      description: |
        Deletes a public or private IPv4 address associated with this Linode. This will fail if it is the Linode's last remaining public IPv4 address.
      operationId: removeLinodeIP
      x-linode-cli-action: ip-delete
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: IP address successfully removed.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141
        - lang: CLI
          source: |
            linode-cli linodes ip-delete 97.107.143.141
      parameters:
        - name: linodeId
          in: path
          description: The ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: address
          in: path
          description: The IP address to look up.
          required: true
          schema:
            type: string
            format: ip
  /linode/kernels:
    get:
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Linode Instances
      summary: Kernels List
      description: |
        Lists available Kernels.
      operationId: getKernels
      x-linode-cli-action:
        - list
        - ls
      responses:
        '200':
          description: Returns an array of Kernels.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Kernel'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/kernels
        - lang: CLI
          source: |
            linode-cli kernels list
  '/linode/kernels/{kernelId}':
    get:
      tags:
        - Linode Instances
      summary: Kernel View
      description: |
        Returns information about a single Kernel.
      operationId: getKernel
      x-linode-cli-action: view
      responses:
        '200':
          description: A single Kernel object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kernel'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/kernels/linode/latest-64bit
        - lang: CLI
          source: |
            linode-cli kernels view latest-64bit
      parameters:
        - name: kernelId
          in: path
          description: ID of the Kernel to look up.
          required: true
          schema:
            type: string
  '/linode/instances/{linodeId}/migrate':
    post:
      x-linode-grant: read_write
      summary: DC Migration/Pending Host Migration Initiate
      description: |
        Initiate a pending host migration that has been scheduled by Linode or initiate a cross data center (DC) migration.  A list of pending migrations, if any, can be accessed from [GET /account/notifications](/docs/api/account/#notifications-list). When the migration begins, your Linode will be shutdown if not already off. If the migration initiated the shutdown, it will reboot the Linode when completed.

        To initiate a cross DC migration, you must pass a `region` parameter to the request body specifying the target data center region. You can view a list of all available regions and their feature capabilities from [GET /regions](/docs/api/regions/#regions-list). If your Linode has a DC migration already queued or you have initiated a previously scheduled migration, you will not be able to initiate a DC migration until it has completed.

        **Note:** Next Generation Network (NGN) data centers do not support IPv6 `/116` pools or IP Failover. If you have these features enabled on your Linode and attempt to migrate to an NGN data center, the migration will not initiate. If a Linode cannot be migrated because of an incompatibility, you will be prompted to select a different data center or contact support.
      tags:
        - Linode Instances
      operationId: migrateLinodeInstance
      x-linode-cli-action: migrate
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                region:
                  type: string
                  description: |
                    The region to which the Linode will be migrated. Must be a valid region slug. A list of regions can be viewed by using the [GET /regions](/docs/api/regions/#regions-list) endpoint. A cross data center migration will cancel a pending migration that has not yet been initiated.
                    A cross data center migration will initiate a `linode_migrate_datacenter_create` event.
                  example: us-east
                upgrade:
                  type: boolean
                  description: |
                    When initiating a cross DC migration, setting this value to true will also ensure that the Linode is upgraded to the latest generation of hardware that corresponds to your Linode's Type, if any free upgrades are available for it.
                    If no free upgrades are available, and this value is set to true, then the endpoint will return a 400 error code and the migration will not be performed.
                    If the data center set in the `region` field does not allow upgrades, then the endpoint will return a 400 error code and the migration will not be performed.
                  example: false
                  default: false
      responses:
        '200':
          description: Scheduled migration started
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "region": "us-central"
                }' \
                https://api.linode.com/v4/linode/instances/123/migrate
        - lang: CLI
          source: |
            linode-cli linodes migrate 123 --region us-central
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to migrate.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/mutate':
    post:
      x-linode-grant: read_write
      summary: Linode Upgrade
      description: |
        Linodes created with now-deprecated Types are entitled to a free upgrade to the next generation. A mutating Linode will be allocated any new resources the upgraded Type provides, and will be subsequently restarted if it was currently running.
        If any actions are currently running or queued, those actions must be completed first before you can initiate a mutate.
      tags:
        - Linode Instances
      operationId: mutateLinodeInstance
      x-linode-cli-action: upgrade
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Whether to automatically resize disks or not.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                allow_auto_disk_resize:
                  type: boolean
                  description: |
                    Automatically resize disks when resizing a Linode. When resizing down to a smaller plan your Linode's data must fit within the smaller disk size.
                  example: true
                  default: true
      responses:
        '200':
          description: Mutate started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/mutate
        - lang: CLI
          source: |
            linode-cli linodes upgrade 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to mutate.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/nodebalancers':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Linode NodeBalancers View
      description: |
        Returns a list of NodeBalancers that are assigned to this Linode and readable by the requesting User.

        Read permission to a NodeBalancer can be given to a User by accessing the User's Grants Update
        ([PUT /account/users/{username}/grants](/docs/api/account/#users-grants-update)) endpoint.
      operationId: getLinodeNodeBalancers
      x-linode-cli-action: nodebalancers
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: Returns a paginated list of NodeBalancers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NodeBalancer'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/nodebalancers
        - lang: CLI
          source: |
            linode-cli linodes nodebalancers 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/password':
    post:
      x-linode-grant: read_write
      summary: Linode Root Password Reset
      description: |
        Resets the root password for this Linode.
        * Your Linode must be [shut down](/docs/api/linode-instances/#linode-shut-down) for a password reset to complete.
        * If your Linode has more than one disk (not counting its swap disk), use the [Reset Disk Root Password](/docs/api/linode-instances/#disk-root-password-reset) endpoint to update a specific disk's root password.
        * A `password_reset` event is generated when a root password reset is successful.
      tags:
        - Linode Instances
      operationId: resetLinodePassword
      x-linode-cli-action: linode-reset-password
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: This Linode's new root password.
        content:
          application/json:
            schema:
              required:
                - root_pass
              properties:
                root_pass:
                  type: string
                  description: |
                    The root user's password on this Linode. Linode passwords must meet a password strength score requirement that is calculated internally by the API. If the strength requirement is not met, you will receive a Password does not meet strength requirement error.
                  example: a$eCure4assw0rd!43v51
      responses:
        '200':
          description: Password Reset.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "root_pass": "a$eCure4assw0rd!43v51"
                }' \
                https://api.linode.com/v4/linode/instances/123/password
        - lang: CLI
          source: |
            linode-cli linodes linode-reset-password 123 a$eCure4assw0rd!43v51
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode for which to reset its root password.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/reboot':
    post:
      x-linode-grant: read_write
      summary: Linode Reboot
      description: |
        Reboots a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a reboot.
      tags:
        - Linode Instances
      operationId: rebootLinodeInstance
      x-linode-cli-action: reboot
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Optional reboot parameters.
        content:
          application/json:
            schema:
              properties:
                config_id:
                  type: integer
                  description: |
                    The Linode Config ID to reboot into.  If null or omitted, the last booted config will be used.  If there was no last booted config and this Linode only has one config, it will be used.  If a config cannot be determined, an error will be returned.
                  example: null
      responses:
        '200':
          description: Reboot started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/reboot
        - lang: CLI
          source: |
            linode-cli linodes reboot 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the linode to reboot.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/rebuild':
    post:
      x-linode-grant: read_write
      summary: Linode Rebuild
      description: |
        Rebuilds a Linode you have the `read_write` permission to modify.
        A rebuild will first shut down the Linode, delete all disks and configs on the Linode, and then deploy a new `image` to the Linode with the given attributes. Additionally:

          * Requires an `image` be supplied.
          * Requires a `root_pass` be supplied to use for the root User's Account.
          * It is recommended to supply SSH keys for the root User using the
            `authorized_keys` field.
      tags:
        - Linode Instances
      operationId: rebuildLinodeInstance
      x-linode-cli-action: rebuild
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: The requested state your Linode will be rebuilt into.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - image
                - root_pass
              allOf:
                - $ref: '#/components/schemas/LinodeRequest'
      responses:
        '200':
          description: Rebuild started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "image": "linode/debian9",
                  "root_pass": "aComplexP@ssword",
                  "authorized_keys": [
                    "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                  ],
                  "authorized_users": [
                    "myUsername",
                    "secondaryUsername"
                  ],
                  "booted": true,
                  "stackscript_id": 10079,
                  "stackscript_data": {
                    "gh_username": "linode"
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123/rebuild
        - lang: CLI
          source: |
            linode-cli linodes rebuild 123 \
              --image "linode/debian9" \
              --root_pass aComplex@Password \
              --authorized_keys "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer" \
              --authorized_users "myUsername" \
              --authorized_users "secondaryUsername" \
              --booted true \
              --stackscript_id 10079 \
              --stackscript_data '{"gh_username": "linode"}'
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to rebuild.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/rescue':
    post:
      x-linode-grant: read_write
      summary: Linode Boot into Rescue Mode
      description: |
        Rescue Mode is a safe environment for performing many system recovery and disk management tasks. Rescue Mode is based on the Finnix recovery distribution, a self-contained and bootable Linux distribution. You can also use Rescue Mode for tasks other than disaster recovery, such as formatting disks to use different filesystems, copying data between disks, and downloading files from a disk via SSH and SFTP.
        * Note that "sdh" is reserved and unavailable during rescue.
      tags:
        - Linode Instances
      operationId: rescueLinodeInstance
      x-linode-cli-action: rescue
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: Optional object of devices to be mounted.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                devices:
                  $ref: '#/components/schemas/RescueDevices'
      responses:
        '200':
          description: Rescue started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "devices": {
                    "sda": {
                      "disk_id": 124458,
                      "volume_id": null
                    },
                    "sdb": {
                      "disk_id": null,
                      "volume_id": null
                    }
                  }
                }' \
                https://api.linode.com/v4/linode/instances/123/rescue
        - lang: CLI
          source: |
            linode-cli linodes rescue 123 \
              --devices.sda.disk_id 124458
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to rescue.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/resize':
    post:
      x-linode-grant: read_write
      summary: Linode Resize
      description: |
        Resizes a Linode you have the `read_write` permission to a different Type. If any actions are currently running or queued, those actions must be completed first before you can initiate a resize. Additionally, the following criteria must be met in order to resize a Linode:

          * The Linode must not have a pending migration.
          * Your Account cannot have an outstanding balance.
          * The Linode must not have more disk allocation than the new Type allows.
            * In that situation, you must first delete or resize the disk to be smaller.
      tags:
        - Linode Instances
      operationId: resizeLinodeInstance
      x-linode-cli-action: resize
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      requestBody:
        description: |
          The Type your current Linode will resize to, and whether to attempt to automatically resize the Linode's disks.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  description: The ID representing the Linode Type.
                  example: g6-standard-2
                  x-linode-cli-display: 1
                allow_auto_disk_resize:
                  type: boolean
                  description: |
                    Automatically resize disks when resizing a Linode. When resizing down to a smaller plan your Linode's data must fit within the smaller disk size.
                  example: true
                  default: true
      responses:
        '200':
          description: Resize started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "type": "g6-standard-2"
                }' \
                https://api.linode.com/v4/linode/instances/123/resize
        - lang: CLI
          source: |
            linode-cli linodes resize 123 \
              --type g6-standard-2
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to resize.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/shutdown':
    post:
      x-linode-grant: read_write
      summary: Linode Shut Down
      description: |
        Shuts down a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a shutdown.
      tags:
        - Linode Instances
      operationId: shutdownLinodeInstance
      x-linode-cli-action: shutdown
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_write'
      responses:
        '200':
          description: Shutdown started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/linode/instances/123/shutdown
        - lang: CLI
          source: |
            linode-cli linodes shutdown 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to shutdown.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/transfer':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Network Transfer View
      description: |
        Returns a Linode's network transfer pool statistics for the current month.
      operationId: getLinodeTransfer
      x-linode-cli-action: transfer-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: A collection of the specified Linode's network transfer statistics.
          content:
            application/json:
              schema:
                properties:
                  used:
                    type: integer
                    description: |
                      The amount of network transfer used by this Linode, in bytes, for the current month's billing cycle.
                    example: 22956600198
                    readOnly: true
                  quota:
                    type: integer
                    description: |
                      The amount of network transfer this Linode adds to your transfer pool, in GB, for the current month's billing cycle.
                    example: 2000
                    readOnly: true
                  billable:
                    type: integer
                    description: |
                      The amount of network transfer this Linode has used, in GB, past your monthly quota.
                    example: 0
                    readOnly: true
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/transfer
        - lang: CLI
          source: |
            linode-cli linodes transfer-view 123
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/transfer/{year}/{month}':
    get:
      x-linode-grant: read_only
      tags:
        - Linode Instances
      summary: Network Transfer View (year/month)
      description: |
        Returns a Linode's network transfer statistics for a specific month. The year/month values must be either a date in the past, or the current month.
      operationId: getLinodeTransferByYearMonth
      x-linode-cli-skip: true
      x-linode-cli-action: transfer-month
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: |
            A collection of the specified Linode's network transfer statistics for the requested month.
          content:
            application/json:
              schema:
                properties:
                  bytes_in:
                    type: integer
                    description: |
                      The amount of inbound public network traffic received by this Linode, in bytes, for a specific year/month.
                    example: 30471077120
                    readOnly: true
                  bytes_out:
                    type: integer
                    description: |
                      The amount of outbound public network traffic sent by this Linode, in bytes, for a specific year/month.
                    example: 22956600198
                    readOnly: true
                  bytes_total:
                    type: integer
                    description: |
                      The total amount of public network traffic sent and received by this Linode, in bytes, for a specific year/month.
                    example: 53427677318
                    readOnly: true
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/transfer/2018/01
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: year
          in: path
          description: Numeric value representing the year to look up.
          required: true
          schema:
            type: integer
            minimum: 2000
            maximum: 2037
        - name: month
          in: path
          description: Numeric value representing the month to look up.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
  '/linode/instances/{linodeId}/stats':
    get:
      tags:
        - Linode Instances
      summary: Linode Statistics View
      description: |
        Returns CPU, IO, IPv4, and IPv6 statistics for your Linode for the past 24 hours.
      operationId: getLinodeStats
      x-linode-cli-skip: true
      x-linode-cli-action: stats
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: The Linode's stats for the past 24 hours.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeStats'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/stats
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
  '/linode/instances/{linodeId}/stats/{year}/{month}':
    get:
      tags:
        - Linode Instances
      summary: Statistics View (year/month)
      description: |
        Returns statistics for a specific month. The year/month values must be either a date in the past, or the current month. If the current month, statistics will be retrieved for the past 30 days.
      operationId: getLinodeStatsByYearMonth
      x-linode-cli-skip: true
      x-linode-cli-action: stats-month
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: The Linode's statistics for the requested period.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeStats'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/stats/2018/01
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
        - name: year
          in: path
          description: Numeric value representing the year to look up.
          required: true
          schema:
            type: integer
        - name: month
          in: path
          description: Numeric value representing the month to look up.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
  '/linode/instances/{linodeId}/volumes':
    get:
      parameters:
        - name: linodeId
          in: path
          description: ID of the Linode to look up.
          required: true
          schema:
            type: integer
      tags:
        - Linode Instances
      summary: Linode's Volumes List
      description: |
        View Block Storage Volumes attached to this Linode.
      operationId: getLinodeVolumes
      x-linode-cli-action: volumes
      security:
        - personalAccessToken: []
        - oauth:
            - 'linodes:read_only'
      responses:
        '200':
          description: |
            Returns an array of Block Storage Volumes attached to this Linode.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Volume'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/linode/instances/123/volumes
        - lang: CLI
          source: |
            linode-cli linode volumes 123
  /linode/stackscripts:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - StackScripts
      summary: StackScripts List
      description: |
        If the request is not authenticated, only public StackScripts are returned.

        For more information on StackScripts, please read our [StackScripts documentation](/docs/products/tools/stackscripts/).
      operationId: getStackScripts
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'stackscripts:read_only'
      responses:
        '200':
          description: |
            A list of StackScripts available to the User, including private StackScripts owned by the User if the request is authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StackScript'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/stackscripts
        - lang: CLI
          source: |
            linode-cli stackscripts list
    post:
      x-linode-grant: add_stackscripts
      tags:
        - StackScripts
      summary: StackScript Create
      description: |
        Creates a StackScript in your Account.
      operationId: addStackScript
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'stackscripts:read_write'
      requestBody:
        description: The properties to set for the new StackScript.
        required: true
        content:
          application/json:
            schema:
              required:
                - script
                - label
                - images
              allOf:
                - $ref: '#/components/schemas/StackScript'
      responses:
        '200':
          description: StackScript successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "a-stackscript",
                  "description": "This StackScript installs and configures MySQL",
                  "images": [
                    "linode/debian9",
                    "linode/debian8"
                  ],
                  "is_public": true,
                  "rev_note": "Set up MySQL",
                  "script": "#!/bin/bash"
                }' \
                https://api.linode.com/v4/linode/stackscripts
        - lang: CLI
          source: |
            linode-cli stackscripts create \
              --label a-stackscript \
              --description "This StackScript install and configures MySQL" \
              --images "linode/debian9" \
              --images "linode/debian8" \
              --is_public true \
              --rev_note "Set up MySQL" \
              --script '#!/bin/bash'
  '/linode/stackscripts/{stackscriptId}':
    get:
      x-linode-grant: read_only
      tags:
        - StackScripts
      summary: StackScript View
      description: |
        Returns all of the information about a specified StackScript, including the contents of the script.
      operationId: getStackScript
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'stackscripts:read_only'
      responses:
        '200':
          description: A single StackScript.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/stackscripts/10079
        - lang: CLI
          source: |
            linode-cli stackscripts view 10079
      parameters:
        - name: stackscriptId
          in: path
          description: The ID of the StackScript to look up.
          required: true
          schema:
            type: string
    put:
      x-linode-grant: read_write
      tags:
        - StackScripts
      summary: StackScript Update
      description: |
        Updates a StackScript.

        **Once a StackScript is made public, it cannot be made private.**
      operationId: updateStackScript
      x-linode-cli-action: update
      security:
        - personalAccessToken: []
        - oauth:
            - 'stackscripts:read_write'
      requestBody:
        description: The fields to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackScript'
      responses:
        '200':
          description: StackScript was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "label": "a-stackscript",
                  "description": "This StackScript installs and configures MySQL",
                  "images": [
                    "linode/debian9",
                    "linode/debian8"
                  ],
                  "is_public": true,
                  "rev_note": "Set up MySQL",
                  "script": "#!/bin/bash"
                }' \
                https://api.linode.com/v4/linode/stackscripts/10079
        - lang: CLI
          source: |
            linode-cli stackscripts update 10079 \
              --label a-stackscript \
              --description "This StackScript installs \
                and configures MySQL" \
              --images "linode/debian9" \
              --images "linode/debian8" \
              --is_public true \
              --rev_note "Set up MySQL" \
              --script '#!/bin/bash'
      parameters:
        - name: stackscriptId
          in: path
          description: The ID of the StackScript to look up.
          required: true
          schema:
            type: string
    delete:
      x-linode-grant: read_write
      tags:
        - StackScripts
      summary: StackScript Delete
      description: |
        Deletes a private StackScript you have permission to `read_write`. You cannot delete a public StackScript.
      operationId: deleteStackScript
      x-linode-cli-action:
        - delete
        - rm
      security:
        - personalAccessToken: []
        - oauth:
            - 'stackscripts:read_write'
      responses:
        '200':
          description: StackScript was deleted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/linode/stackscripts/10079
        - lang: CLI
          source: |
            linode-cli stackscripts delete 10079
      parameters:
        - name: stackscriptId
          in: path
          description: The ID of the StackScript to look up.
          required: true
          schema:
            type: string
  /linode/types:
    get:
      tags:
        - Linode Types
      summary: Types List
      description: |
        Returns collection of Linode Types, including pricing and specifications for each Type. These are used when [creating](/docs/api/linode-instances/#linode-create) or [resizing](/docs/api/linode-instances/#linode-resize) Linodes.
      x-linode-redoc-load-ids: true
      operationId: getLinodeTypes
      x-linode-cli-action: types
      responses:
        '200':
          description: A collection of Linode Types.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LinodeType'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/types
        - lang: CLI
          source: |
            linode-cli linodes types
  '/linode/types/{typeId}':
    get:
      tags:
        - Linode Types
      summary: Type View
      description: |
        Returns information about a specific Linode Type, including pricing and specifications. This is used when [creating](/docs/api/linode-instances/#linode-create) or [resizing](/docs/api/linode-instances/#linode-resize) Linodes.
      operationId: getLinodeType
      x-linode-cli-action: type-view
      responses:
        '200':
          description: A single Linode Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeType'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl https://api.linode.com/v4/linode/types/g6-standard-2
        - lang: CLI
          source: |
            linode-cli linodes type-view g6-standard-2
      parameters:
        - name: typeId
          in: path
          description: The ID of the Linode Type to look up.
          required: true
          schema:
            type: string
