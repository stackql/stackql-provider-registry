openapi: 3.0.1
servers:
  - url: 'https://api.linode.com/v4'
  - url: 'https://api.linode.com/v4beta'
info:
  version: 4.147.0
  title: Linode API - support
  description: support
  contact:
    name: Linode
    url: 'https://linode.com'
    email: support@linode.com
tags:
  - name: Account
    description: 'Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account.'
  - name: Databases
    description: 'Managed Databases is Linode''s fully-managed, high-performance database service. Use the Managed Databases endpoints to create and manage database clusters.'
  - name: Domains
    description: Use the Domains endpoints to create and manage domains and domain records on your account.
  - name: Images
    description: 'Use the Images endpoints to capture, store, and manage custom Linode images.'
  - name: Linode Instances
    description: 'Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more.'
  - name: Linode Types
    description: 'Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment.'
  - name: Linode Kubernetes Engine (LKE)
    description: Linode Kubernetes Engine (LKE) is Linode's managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools.
  - name: Longview
    description: Longview is Linode's system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients.
  - name: Managed
    description: 'Managed is Linode''s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more.'
  - name: Networking
    description: 'Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing.'
  - name: NodeBalancers
    description: 'NodeBalancers is Linode''s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics.'
  - name: Object Storage
    description: 'Object Storage is Linode''s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service.'
  - name: Profile
    description: 'Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences.'
  - name: Regions
    description: 'Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more.'
  - name: StackScripts
    description: Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account.
  - name: Support
    description: 'Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies.'
  - name: Tags
    description: 'Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags.'
  - name: Volumes
    description: 'Volumes is Linode''s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes.'
components:
  schemas:
    SupportTicket:
      type: object
      description: |
        A Support Ticket opened on your Account.
      properties:
        id:
          type: integer
          readOnly: true
          description: |
            The ID of the Support Ticket.
          example: 11223344
          x-linode-cli-display: 1
        attachments:
          type: array
          description: |
            A list of filenames representing attached files associated with this Ticket.
          readOnly: true
          items:
            type: string
            example:
              - screenshot.jpg
              - screenshot.txt
        closed:
          x-linode-filterable: true
          type: string
          nullable: true
          format: date-time
          readOnly: true
          description: |
            The date and time this Ticket was closed.
          example: '2015-06-04T16:07:03'
        closable:
          type: boolean
          description: |
            Whether the Support Ticket may be closed.
          example: false
        description:
          type: string
          readOnly: true
          description: |
            The full details of the issue or question.
          minLength: 1
          maxLength: 65000
          example: |
            I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?
          x-linode-cli-display: 5
        entity:
          type: object
          nullable: true
          readOnly: true
          description: |
            The entity this Ticket was opened for.
          x-linode-cli-display: 6
          properties:
            id:
              type: integer
              readOnly: true
              description: |
                The unique ID for this Ticket's entity.
              example: 10400
            label:
              type: string
              readOnly: true
              description: |
                The current label of this entity.
              example: linode123456
            type:
              type: string
              readOnly: true
              description: |
                The type of entity this is related to.
              example: linode
            url:
              type: string
              readOnly: true
              description: |
                The URL where you can access the object this event is for. If a relative URL, it is relative to the domain you retrieved the entity from.
              example: /v4/linode/instances/123456
        gravatar_id:
          type: string
          readOnly: true
          description: |
            The Gravatar ID of the User who opened this Ticket.
          example: 474a1b7373ae0be4132649e69c36ce30
        opened:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: |
            The date and time this Ticket was created.
          example: '2015-06-04T14:16:44'
          x-linode-cli-display: 4
        opened_by:
          type: string
          readOnly: true
          description: |
            The User who opened this Ticket.
          example: some_user
          x-linode-cli-display: 3
        status:
          type: string
          readOnly: true
          description: The current status of this Ticket.
          enum:
            - closed
            - new
            - open
          example: open
        summary:
          type: string
          readOnly: true
          minLength: 1
          maxLength: 64
          description: |
            The summary or title for this Ticket.
          example: |
            Having trouble resetting root password on my Linode
          x-linode-cli-display: 2
        updated:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: |
            The date and time this Ticket was last updated.
          example: '2015-06-04T16:07:03'
        updated_by:
          type: string
          nullable: true
          readOnly: true
          description: |
            The User who last updated this Ticket.
          example: some_other_user
    PaginationEnvelope:
      type: object
      description: |
        An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results. Results are presented within a `data` array. See [Pagination](/docs/api/#pagination) for more information.
      properties:
        pages:
          type: integer
          readOnly: true
          description: 'The total number of [pages](/docs/api/#pagination).'
          example: 1
        page:
          type: integer
          readOnly: true
          description: 'The current [page](/docs/api/#pagination).'
          example: 1
        results:
          type: integer
          readOnly: true
          description: The total number of results.
          example: 1
    ErrorObject:
      type: object
      description: |
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: |
            What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/docs/api/support/#support-ticket-open) or perform some other action before you can complete the request successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: |
            The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as "null" if the error is not specific to any single element of the request.
          example: fieldname
    SupportTicketRequest:
      type: object
      required:
        - summary
        - description
      description: |
        An object representing a created Support Ticket - a question or issue and request for help from the Linode support team.
        Only one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.
      properties:
        description:
          type: string
          description: |
            The full details of the issue or question.
          minLength: 1
          maxLength: 65000
          example: |
            I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?
        database_id:
          type: integer
          description: |
            The ID of the Managed Database this ticket is regarding, if relevant.
        domain_id:
          type: integer
          description: |
            The ID of the Domain this ticket is regarding, if relevant.
          example: null
        firewall_id:
          type: integer
          description: |
            The ID of the Firewall this ticket is regarding, if relevant.
        linode_id:
          type: integer
          description: |
            The ID of the Linode this ticket is regarding, if relevant.
          example: 123
        lkecluster_id:
          type: integer
          description: |
            The ID of the Kubernetes cluster this ticket is regarding, if relevant.
          example: 123
        longviewclient_id:
          type: integer
          description: |
            The ID of the Longview client this ticket is regarding, if relevant.
          example: null
        nodebalancer_id:
          type: integer
          description: |
            The ID of the NodeBalancer this ticket is regarding, if relevant.
          example: null
        summary:
          type: string
          minLength: 1
          maxLength: 64
          description: |
            The summary or title for this SupportTicket.
          example: |
            Having trouble resetting root password on my Linode
        managed_issue:
          type: boolean
          description: |
            Designates if this ticket is related to a [Managed service](https://www.linode.com/products/managed/). If `true`, the following constraints will apply:
            * No ID attributes (i.e. `linode_id`, `domain_id`, etc.) should be provided with this request.
            * Your account must have a [Managed service enabled](/docs/api/managed/#managed-service-enable).
          example: false
        volume_id:
          type: integer
          description: |
            The ID of the Volume this ticket is regarding, if relevant.
          example: null
        vlan:
          type: string
          description: |
            The label of the VLAN this ticket is regarding, if relevant. To view your VLANs, use the VLANs List ([GET /networking/vlans](/docs/api/networking/#vlans-list)) endpoint.

            Requires a specified `region` to identify the VLAN.
          example: null
        region:
          type: string
          description: |
            The [Region](/docs/api/regions/) ID for the associated VLAN this ticket is regarding.

            Only allowed when submitting a VLAN ticket.
          example: null
    SupportTicketReply:
      type: object
      description: |
        An object representing a reply to a Support Ticket.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          description: |
            The date and time this Ticket reply was created.
          example: '2015-06-02T14:31:41'
          x-linode-cli-display: 3
        created_by:
          type: string
          readOnly: true
          description: |
            The User who submitted this reply.
          example: John Q. Linode
          x-linode-cli-display: 2
        description:
          type: string
          readOnly: true
          description: |
            The body of this Support Ticket reply.
          example: |
            Hello,\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\n \nhttps://linode.com/docs/guides/reset-the-root-password-on-your-linode/ \n\nIf you have, please reply with any additional steps you have also taken.\n\nRegards, Linode Support Team
        from_linode:
          type: boolean
          readOnly: true
          description: |
            If set to true, this reply came from a Linode employee.
          example: true
        gravatar_id:
          type: string
          readOnly: true
          description: |
            The Gravatar ID of the User who created this reply.
          example: 474a1b7373ae0be4132649e69c36ce30
        id:
          type: integer
          readOnly: true
          description: |
            The unique ID of this Support Ticket reply.
          example: 11223345
          x-linode-cli-display: 1
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        minimum: 25
        maximum: 500
        default: 100
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your Account.
            'account:read_write': Allows access to all endpoints related to your Account.
            'domains:read_only': Allows access to GET Domains on your Account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'firewall:read_only': Allows access to GET information about your Firewalls.
            'firewall:read_write': Allows acces to all Firewall endpoints.
            'images:read_only': Allows access to GET your Images.
            'images:read_write': Allows access to all endpoints related to your Images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allows access to GET Linodes on your Account.
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'lke:read_only': Allows access to GET LKE Clusters on your Account.
            'lke:read_write': Allows access to all endpoints related to LKE Clusters on your Account.
            'longview:read_only': Allows access to GET your Longview Clients.
            'longview:read_write': Allows access to all endpoints related to your Longview Clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your Account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'object_storage:read_only': Allows access to GET information related to your Object Storage.
            'object_storage:read_write': Allows access to all Object Storage endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to your StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: $request.body#/id
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: $request.body#/id
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: $request.body#/id
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: $request.body#/id
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: $request.body#/id
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: $request.body#/id
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: $request.body#/id
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: $request.body#/id
  x-stackQL-resources:
    tickets:
      id: linode.support.tickets
      name: tickets
      title: Tickets
      methods:
        getTickets:
          operation:
            $ref: '#/paths/~1support~1tickets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getTickets:
          operation:
            $ref: '#/paths/~1support~1tickets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createTicket:
          operation:
            $ref: '#/paths/~1support~1tickets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getTicket:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getTicket:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        closeTicket:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}~1close/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tickets/methods/getTickets'
          - $ref: '#/components/x-stackQL-resources/tickets/methods/getTicket'
        insert:
          - $ref: '#/components/x-stackQL-resources/tickets/methods/createTicket'
        update: []
        delete: []
    tickets_attachments:
      id: linode.support.tickets_attachments
      name: tickets_attachments
      title: Tickets Attachments
      methods:
        createTicketAttachment:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}~1attachments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/tickets_attachments/methods/createTicketAttachment'
        update: []
        delete: []
    tickets_replies:
      id: linode.support.tickets_replies
      name: tickets_replies
      title: Tickets Replies
      methods:
        getTicketReplies:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}~1replies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getTicketReplies:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}~1replies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createTicketReply:
          operation:
            $ref: '#/paths/~1support~1tickets~1{ticketId}~1replies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tickets_replies/methods/getTicketReplies'
        insert:
          - $ref: '#/components/x-stackQL-resources/tickets_replies/methods/createTicketReply'
        update: []
        delete: []
paths:
  /support/tickets:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Support
      summary: Support Tickets List
      description: |
        Returns a collection of Support Tickets on your Account. Support Tickets can be both tickets you open with Linode for support, as well as tickets generated by Linode regarding your Account.
        This collection includes all Support Tickets generated on your Account, with open tickets returned first.
      operationId: getTickets
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of SupportTicket objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SupportTicket'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/support/tickets
        - lang: CLI
          source: |
            linode-cli tickets list
    post:
      x-linode-grant: read_write
      tags:
        - Support
      summary: Support Ticket Open
      description: |
        Open a Support Ticket.
        Only one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.
      operationId: createTicket
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Open a Support Ticket.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicketRequest'
      responses:
        '200':
          description: Support Ticket opened.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "description": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?",
                  "linode_id": 123,
                  "summary": "Having trouble resetting root password on my Linode"
                }' \
                https://api.linode.com/v4/support/tickets
        - lang: CLI
          source: |
            linode-cli tickets create \
              --description "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?" \
              --linode_id 123 \
              --summary "Having trouble resetting root password on my Linode"
  '/support/tickets/{ticketId}':
    get:
      x-linode-grant: read_only
      tags:
        - Support
      summary: Support Ticket View
      description: |
        Returns a Support Ticket under your Account.
      operationId: getTicket
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a single SupportTicket object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/support/tickets/11223344
        - lang: CLI
          source: |
            linode-cli tickets view 11223344
      parameters:
        - name: ticketId
          in: path
          description: The ID of the Support Ticket.
          required: true
          schema:
            type: integer
  '/support/tickets/{ticketId}/attachments':
    post:
      x-linode-grant: read_write
      tags:
        - Support
      summary: Support Ticket Attachment Create
      description: |
        Adds a file attachment to an existing Support
        Ticket on your Account. File attachments are used to assist our
        Support team in resolving your Ticket. Examples of attachments
        are screen shots and text files that provide additional information.

        The file attachment is submitted in the request as multipart/form-data.

        **Note**: Accepted file extensions include: .gif, .jpg, .jpeg, .pjpg,
        .pjpeg, .tif, .tiff, .png, .pdf, or .txt.
      operationId: createTicketAttachment
      x-linode-cli-skip: true
      x-linode-cli-action: upload-attachment
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Add an attachment.
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: string
                  description: |
                    The local, absolute path to the file you want to attach to your Support Ticket.
                  example: /Users/LinodeGuy/pictures/screen_shot.jpg
      responses:
        '200':
          description: Attachment created.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X POST \
                -F 'file=@/Users/LinodeGuy/pictures/screen_shot.jpg' \
                https://api.linode.com/v4/support/tickets/11223344/attachments
      parameters:
        - name: ticketId
          in: path
          description: The ID of the Support Ticket.
          required: true
          schema:
            type: integer
  '/support/tickets/{ticketId}/close':
    post:
      x-linode-grant: read_write
      tags:
        - Support
      summary: Support Ticket Close
      description: |
        Closes a Support Ticket you have access to modify.
      operationId: closeTicket
      x-linode-cli-action: close
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      responses:
        '200':
          description: Support Ticket closed successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/support/tickets/11223344/close
        - lang: CLI
          source: |
            linode-cli tickets close 11223344
      parameters:
        - name: ticketId
          in: path
          description: The ID of the Support Ticket.
          required: true
          schema:
            type: integer
  '/support/tickets/{ticketId}/replies':
    get:
      x-linode-grant: read_only
      parameters:
        - name: ticketId
          in: path
          description: The ID of the Support Ticket.
          required: true
          schema:
            type: integer
      tags:
        - Support
      summary: Replies List
      description: |
        Returns a collection of replies to a Support Ticket on your Account.
      operationId: getTicketReplies
      x-linode-cli-action: replies
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_only'
      responses:
        '200':
          description: Returns a paginated list of SupportTicketReply objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SupportTicketReply'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/support/tickets/11223344/replies
        - lang: CLI
          source: |
            linode-cli tickets replies 11223344
    post:
      x-linode-grant: read_write
      tags:
        - Support
      summary: Reply Create
      description: |
        Adds a reply to an existing Support Ticket.
      operationId: createTicketReply
      x-linode-cli-action: reply
      security:
        - personalAccessToken: []
        - oauth:
            - 'account:read_write'
      requestBody:
        description: Add a reply.
        required: true
        content:
          application/json:
            schema:
              required:
                - description
              properties:
                description:
                  type: string
                  description: |
                    The content of your reply.
                  minLength: 1
                  maxLength: 65535
                  example: |
                    Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!
      responses:
        '200':
          description: Reply created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicketReply'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "description": "Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!"
                }' \
                https://api.linode.com/v4/support/tickets/11223344/replies
        - lang: CLI
          source: |
            linode-cli tickets reply 11223344 \
              --description "Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!"
      parameters:
        - name: ticketId
          in: path
          description: The ID of the Support Ticket.
          required: true
          schema:
            type: integer
