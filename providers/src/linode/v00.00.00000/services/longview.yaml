openapi: 3.0.1
servers:
  - url: 'https://api.linode.com/v4'
  - url: 'https://api.linode.com/v4beta'
info:
  version: 4.147.0
  title: Linode API - longview
  description: longview
  contact:
    name: Linode
    url: 'https://linode.com'
    email: support@linode.com
tags:
  - name: Account
    description: 'Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account.'
  - name: Databases
    description: 'Managed Databases is Linode''s fully-managed, high-performance database service. Use the Managed Databases endpoints to create and manage database clusters.'
  - name: Domains
    description: Use the Domains endpoints to create and manage domains and domain records on your account.
  - name: Images
    description: 'Use the Images endpoints to capture, store, and manage custom Linode images.'
  - name: Linode Instances
    description: 'Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more.'
  - name: Linode Types
    description: 'Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment.'
  - name: Linode Kubernetes Engine (LKE)
    description: Linode Kubernetes Engine (LKE) is Linode's managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools.
  - name: Longview
    description: Longview is Linode's system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients.
  - name: Managed
    description: 'Managed is Linode''s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more.'
  - name: Networking
    description: 'Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing.'
  - name: NodeBalancers
    description: 'NodeBalancers is Linode''s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics.'
  - name: Object Storage
    description: 'Object Storage is Linode''s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service.'
  - name: Profile
    description: 'Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences.'
  - name: Regions
    description: 'Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more.'
  - name: StackScripts
    description: Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account.
  - name: Support
    description: 'Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies.'
  - name: Tags
    description: 'Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags.'
  - name: Volumes
    description: 'Volumes is Linode''s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes.'
components:
  schemas:
    LongviewClient:
      type: object
      description: |
        A LongviewClient is a single monitor set up to track statistics about one of your servers.
      properties:
        id:
          type: integer
          description: |
            This Client's unique ID.
          example: 789
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          minLength: 3
          maxLength: 32
          pattern: '[a-zA-Z0-9-_]{3,32}'
          description: |
            This Client's unique label. This is for display purposes only.
          example: client789
          x-linode-cli-display: 2
        api_key:
          type: string
          description: |
            The API key for this Client, used when configuring the Longview
            Client application on your Linode.

            Returns as `[REDACTED]` if you do not have read-write access to this client.
          example: BD1B4B54-D752-A76D-5A9BD8A17F39DB61
          readOnly: true
        install_code:
          type: string
          description: |
            The install code for this Client, used when configuring the Longview
            Client application on your Linode.

            Returns as `[REDACTED]` if you do not have read-write access to this client.
          example: BD1B5605-BF5E-D385-BA07AD518BE7F321
          readOnly: true
          x-linode-cli-display: 4
        apps:
          type: object
          description: |
            The apps this Client is monitoring on your Linode. This is configured when you install the Longview Client application, and is present here for information purposes only.
          readOnly: true
          properties:
            apache:
              type: boolean
              description: |
                If True, the Apache Longview Client module is monitoring Apache on your server.
              example: true
              readOnly: true
            nginx:
              type: boolean
              description: |
                If True, the Nginx Longview Client module is monitoring Nginx on your server.
              example: false
              readOnly: true
            mysql:
              type: boolean
              description: |
                If True, the MySQL Longview Client modules is monitoring MySQL on your server.
              example: true
              readOnly: true
        created:
          type: string
          format: date-time
          description: |
            When this Longview Client was created.
          example: 2018-01-01T00:01:01.000Z
          readOnly: true
          x-linode-cli-display: 3
        updated:
          type: string
          format: date-time
          description: |
            When this Longview Client was last updated.
          example: 2018-01-01T00:01:01.000Z
          readOnly: true
    PaginationEnvelope:
      type: object
      description: |
        An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results. Results are presented within a `data` array. See [Pagination](/docs/api/#pagination) for more information.
      properties:
        pages:
          type: integer
          readOnly: true
          description: 'The total number of [pages](/docs/api/#pagination).'
          example: 1
        page:
          type: integer
          readOnly: true
          description: 'The current [page](/docs/api/#pagination).'
          example: 1
        results:
          type: integer
          readOnly: true
          description: The total number of results.
          example: 1
    ErrorObject:
      type: object
      description: |
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: |
            What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/docs/api/support/#support-ticket-open) or perform some other action before you can complete the request successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: |
            The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as "null" if the error is not specific to any single element of the request.
          example: fieldname
    LongviewSubscription:
      type: object
      description: |
        A Longview Subscription represents a tier of Longview service you can subscribe to.
      properties:
        id:
          type: string
          enum:
            - longview-3
            - longview-10
            - longview-40
            - longview-100
          description: |
            The unique ID of this Subscription tier.
          example: longview-10
          readOnly: true
          x-linode-cli-display: 1
        price:
          type: object
          description: |
            Pricing information about this Subscription tier.
          readOnly: true
          x-linode-cli-display: 4
          properties:
            hourly:
              type: number
              description: |
                The hourly price, in US dollars, for this Subscription tier.
              example: 0.06
              readOnly: true
            monthly:
              type: number
              description: |
                The maximum monthly price in US Dollars for this Subscription tier. You will never be charged more than this amount per month for this subscription.
              example: 40
              readOnly: true
        label:
          type: string
          description: |
            A display name for this Subscription tier.
          example: Longview Pro 10 pack
          readOnly: true
          x-linode-cli-display: 2
        clients_included:
          type: integer
          description: |
            The number of Longview Clients that may be created with this Subscription tier.
          example: 10
          readOnly: true
          x-linode-cli-display: 3
    LongviewPlan:
      type: object
      description: |
        Longview Plan object.
      properties:
        longview_subscription:
          type: string
          enum:
            - longview-3
            - longview-10
            - longview-40
            - longview-100
          nullable: true
          description: |
            The subscription ID for a particular Longview plan. A value of `null` corresponds to Longview Free.

            You can send a request to the [List Longview Subscriptions](/docs/api/longview/#longview-subscriptions-list) endpoint to receive the details of each plan.
          example: longview-10
          x-linode-cli-display: 1
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        minimum: 25
        maximum: 500
        default: 100
  responses:
    ErrorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your Account.
            'account:read_write': Allows access to all endpoints related to your Account.
            'domains:read_only': Allows access to GET Domains on your Account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'firewall:read_only': Allows access to GET information about your Firewalls.
            'firewall:read_write': Allows acces to all Firewall endpoints.
            'images:read_only': Allows access to GET your Images.
            'images:read_write': Allows access to all endpoints related to your Images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allows access to GET Linodes on your Account.
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'lke:read_only': Allows access to GET LKE Clusters on your Account.
            'lke:read_write': Allows access to all endpoints related to LKE Clusters on your Account.
            'longview:read_only': Allows access to GET your Longview Clients.
            'longview:read_write': Allows access to all endpoints related to your Longview Clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your Account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'object_storage:read_only': Allows access to GET information related to your Object Storage.
            'object_storage:read_write': Allows access to all Object Storage endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to your StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: $request.body#/id
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: $request.body#/id
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: $request.body#/id
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: $request.body#/id
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: $request.body#/id
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: $request.body#/id
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: $request.body#/id
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: $request.body#/id
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: $request.body#/id
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: $request.body#/id
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: $request.body#/id
  x-stackQL-resources:
    clients:
      id: linode.longview.clients
      name: clients
      title: Clients
      methods:
        getLongviewClients:
          operation:
            $ref: '#/paths/~1longview~1clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLongviewClients:
          operation:
            $ref: '#/paths/~1longview~1clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        createLongviewClient:
          operation:
            $ref: '#/paths/~1longview~1clients/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLongviewClient:
          operation:
            $ref: '#/paths/~1longview~1clients~1{clientId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLongviewClient:
          operation:
            $ref: '#/paths/~1longview~1clients~1{clientId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateLongviewClient:
          operation:
            $ref: '#/paths/~1longview~1clients~1{clientId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deleteLongviewClient:
          operation:
            $ref: '#/paths/~1longview~1clients~1{clientId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clients/methods/getLongviewClients'
          - $ref: '#/components/x-stackQL-resources/clients/methods/getLongviewClient'
        insert:
          - $ref: '#/components/x-stackQL-resources/clients/methods/createLongviewClient'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clients/methods/deleteLongviewClient'
    plan:
      id: linode.longview.plan
      name: plan
      title: Plan
      methods:
        getLongviewPlan:
          operation:
            $ref: '#/paths/~1longview~1plan/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $
        _getLongviewPlan:
          operation:
            $ref: '#/paths/~1longview~1plan/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateLongviewPlan:
          operation:
            $ref: '#/paths/~1longview~1plan/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plan/methods/getLongviewPlan'
        insert: []
        update: []
        delete: []
    subscriptions:
      id: linode.longview.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        getLongviewSubscriptions:
          operation:
            $ref: '#/paths/~1longview~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLongviewSubscriptions:
          operation:
            $ref: '#/paths/~1longview~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getLongviewSubscription:
          operation:
            $ref: '#/paths/~1longview~1subscriptions~1{subscriptionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _getLongviewSubscription:
          operation:
            $ref: '#/paths/~1longview~1subscriptions~1{subscriptionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/getLongviewSubscriptions'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/getLongviewSubscription'
        insert: []
        update: []
        delete: []
paths:
  /longview/clients:
    get:
      x-linode-grant: read_only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Longview
      summary: Longview Clients List
      description: |
        Returns a paginated list of Longview Clients you have access to. Longview Client is used to monitor stats on your Linode with the help of the Longview Client application.
      operationId: getLongviewClients
      x-linode-cli-action:
        - list
        - ls
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_only'
      responses:
        '200':
          description: A paginated list of Longview Clients.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LongviewClient'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/longview/clients
        - lang: CLI
          source: |
            linode-cli longview list
    post:
      x-linode-grant: add_longview
      tags:
        - Longview
      summary: Longview Client Create
      description: |
        Creates a Longview Client.  This Client will not begin monitoring the status of your server until you configure the Longview Client application on your Linode using the returning `install_code` and `api_key`.
      operationId: createLongviewClient
      x-linode-cli-action: create
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_write'
      requestBody:
        description: Information about the LongviewClient to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongviewClient'
      responses:
        '200':
          description: Longview Client created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "client789"
                }' \
                https://api.linode.com/v4/longview/clients
        - lang: CLI
          source: |
            linode-cli longview create \
              --label client789
  '/longview/clients/{clientId}':
    get:
      x-linode-grant: read_only
      tags:
        - Longview
      summary: Longview Client View
      description: |
        Returns a single Longview Client you can access.
      operationId: getLongviewClient
      x-linode-cli-action: view
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_only'
      responses:
        '200':
          description: The requested Longview Client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/longview/clients/789
        - lang: CLI
          source: |
            linode-cli longview view 789
      parameters:
        - name: clientId
          in: path
          required: true
          description: The Longview Client ID to access.
          schema:
            type: integer
    put:
      x-linode-grant: read_write
      tags:
        - Longview
      summary: Longview Client Update
      description: |
        Updates a Longview Client.  This cannot update how it monitors your server; use the Longview Client application on your Linode for monitoring configuration.
      operationId: updateLongviewClient
      x-linode-cli-action: update
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_write'
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongviewClient'
      responses:
        '200':
          description: Longview Client updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "label": "client789"
                }' \
                https://api.linode.com/v4/longview/clients/789
        - lang: CLI
          source: |
            linode-cli longview update 789 \
              --label client789
      parameters:
        - name: clientId
          in: path
          required: true
          description: The Longview Client ID to access.
          schema:
            type: integer
    delete:
      x-linode-grant: read_write
      tags:
        - Longview
      summary: Longview Client Delete
      description: |
        Deletes a Longview Client from your Account.

        **All information stored for this client will be lost.**

        This _does not_ uninstall the Longview Client application for your Linode - you must do that manually.
      operationId: deleteLongviewClient
      x-linode-cli-action:
        - delete
        - rm
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_write'
      responses:
        '200':
          description: Longview Client deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/longview/clients/789
        - lang: CLI
          source: |
            linode-cli longview delete 789
      parameters:
        - name: clientId
          in: path
          required: true
          description: The Longview Client ID to access.
          schema:
            type: integer
  /longview/plan:
    get:
      tags:
        - Longview
      summary: Longview Plan View
      description: |
        Get the details of your current Longview plan. This returns a `LongviewSubscription` object for your current Longview Pro plan, or an empty set `{}` if your current plan is Longview Free.

        You must have at least one of the following `global` [User Grants](/docs/api/account/#users-grants-view) in order to access this endpoint:

          - `"account_access": read_write`
          - `"account_access": read_only`
          - `"longview_subscription": true`
          - `"add_longview": true`


        To update your subscription plan, send a request to [Update Longview Plan](/docs/api/longview/#longview-plan-update).
      operationId: getLongviewPlan
      x-linode-cli-action: plan-view
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_only'
      responses:
        '200':
          description: The Longview plan details for this account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewSubscription'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/longview/plan
        - lang: CLI
          source: |
            linode-cli longview plan-view
    put:
      tags:
        - Longview
      summary: Longview Plan Update
      description: |
        Update your Longview plan to that of the given subcription ID. This returns a `LongviewSubscription` object for the updated Longview Pro plan, or an empty set `{}` if the updated plan is Longview Free.

        You must have `"longview_subscription": true` configured as a `global` [User Grant](/docs/api/account/#users-grants-view) in order to access this endpoint.

        You can send a request to the [List Longview Subscriptions](/docs/api/longview/#longview-subscriptions-list) endpoint to receive the details, including `id`'s, of each plan.
      operationId: updateLongviewPlan
      x-linode-cli-action: plan-update
      security:
        - personalAccessToken: []
        - oauth:
            - 'longview:read_write'
      requestBody:
        description: Update your Longview subscription plan.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongviewPlan'
      responses:
        '200':
          description: The updated Longview plan details for this account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewSubscription'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "longview_subscription": "longview-10"
                }' \
                https://api.linode.com/v4/longview/plan
        - lang: CLI
          source: |
            linode-cli longview plan-update --longview_subscription longview-10
  /longview/subscriptions:
    get:
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Longview
      summary: Longview Subscriptions List
      description: |
        Returns a paginated list of available Longview Subscriptions. This is a public endpoint and requires no authentication.
      operationId: getLongviewSubscriptions
      x-linode-cli-action: subscriptions-list
      responses:
        '200':
          description: A paginated list of Longview Subscriptions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LongviewSubscription'
                  page:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/page'
                  pages:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/pages'
                  results:
                    $ref: '#/components/schemas/PaginationEnvelope/properties/results'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/longview/subscriptions
        - lang: CLI
          source: |
            linode-cli longview subscriptions-list
  '/longview/subscriptions/{subscriptionId}':
    get:
      tags:
        - Longview
      summary: Longview Subscription View
      description: |
        Get the Longview plan details as a single `LongviewSubscription` object for the provided subscription ID. This is a public endpoint and requires no authentication.
      operationId: getLongviewSubscription
      x-linode-cli-action: subscription-view
      responses:
        '200':
          description: The requested Longview Subscription details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewSubscription'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/longview/subscriptions/longview-10
        - lang: CLI
          source: |
            linode-cli longview subscription-view \
              longview-10
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: The Longview Subscription to look up.
          schema:
            type: string
