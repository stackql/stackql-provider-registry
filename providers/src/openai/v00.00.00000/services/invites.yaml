openapi: 3.0.0
servers:
  - url: 'https://api.openai.com/v1'
info:
  version: 2.3.0
  termsOfService: 'https://openai.com/policies/terms-of-use'
  contact:
    name: OpenAI Support
    url: 'https://help.openai.com/'
  license:
    name: MIT
    url: 'https://github.com/openai/openai-openapi/blob/master/LICENSE'
  title: OpenAI API - invites
  description: Invites
security:
  - ApiKeyAuth: []
tags:
  - name: Assistants
    description: Build Assistants that can call models and use tools.
  - name: Audio
    description: Turn audio into text or text into audio.
  - name: Chat
    description: 'Given a list of messages comprising a conversation, the model will return a response.'
  - name: Completions
    description: 'Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.'
  - name: Embeddings
    description: Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.
  - name: Fine-tuning
    description: Manage fine-tuning jobs to tailor a model to your specific training data.
  - name: Batch
    description: Create large batches of API requests to run asynchronously.
  - name: Files
    description: Files are used to upload documents that can be used with features like Assistants and Fine-tuning.
  - name: Uploads
    description: Use Uploads to upload large files in multiple parts.
  - name: Images
    description: 'Given a prompt and/or an input image, the model will generate a new image.'
  - name: Models
    description: List and describe the various models available in the API.
  - name: Moderations
    description: 'Given text and/or image inputs, classifies if those inputs are potentially harmful.'
  - name: Audit Logs
    description: List user actions and configuration changes within this organization.
components:
  schemas:
    InviteListResponse:
      type: object
      properties:
        object:
          type: string
          enum:
            - list
          description: 'The object type, which is always `list`'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
        first_id:
          type: string
          description: The first `invite_id` in the retrieved `list`
        last_id:
          type: string
          description: The last `invite_id` in the retrieved `list`
        has_more:
          type: boolean
          description: The `has_more` property is used for pagination to indicate there are additional results.
      required:
        - object
        - data
    Invite:
      type: object
      description: Represents an individual `invite` to the organization.
      properties:
        object:
          type: string
          enum:
            - organization.invite
          description: 'The object type, which is always `organization.invite`'
        id:
          type: string
          description: 'The identifier, which can be referenced in API endpoints'
        email:
          type: string
          description: The email address of the individual to whom the invite was sent
        role:
          type: string
          enum:
            - owner
            - reader
          description: '`owner` or `reader`'
        status:
          type: string
          enum:
            - accepted
            - expired
            - pending
          description: '`accepted`,`expired`, or `pending`'
        invited_at:
          type: integer
          description: The Unix timestamp (in seconds) of when the invite was sent.
        expires_at:
          type: integer
          description: The Unix timestamp (in seconds) of when the invite expires.
        accepted_at:
          type: integer
          description: The Unix timestamp (in seconds) of when the invite was accepted.
      required:
        - object
        - id
        - email
        - role
        - status
        - invited_at
        - expires_at
      x-oaiMeta:
        name: The invite object
        example: |
          {
            "object": "organization.invite",
            "id": "invite-abc",
            "email": "user@example.com",
            "role": "owner",
            "status": "accepted",
            "invited_at": 1711471533,
            "expires_at": 1711471533,
            "accepted_at": 1711471533
          }
    InviteRequest:
      type: object
      properties:
        email:
          type: string
          description: Send an email to this address
        role:
          type: string
          enum:
            - reader
            - owner
          description: '`owner` or `reader`'
      required:
        - email
        - role
    InviteDeleteResponse:
      type: object
      properties:
        object:
          type: string
          enum:
            - organization.invite.deleted
          description: 'The object type, which is always `organization.invite.deleted`'
        id:
          type: string
        deleted:
          type: boolean
      required:
        - object
        - id
        - deleted
  responses: {}
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
  x-stackQL-resources:
    invites:
      id: openai.invites.invites
      name: invites
      title: Invites
      methods:
        list_invites:
          operation:
            $ref: '#/paths/~1organization~1invites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retrieve_invite:
          operation:
            $ref: '#/paths/~1organization~1invites~1{invite_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_invite:
          operation:
            $ref: '#/paths/~1organization~1invites~1{invite_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invites/methods/retrieve_invite'
          - $ref: '#/components/x-stackQL-resources/invites/methods/list_invites'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/invites/methods/delete_invite'
    users:
      id: openai.invites.users
      name: users
      title: Users
      methods:
        invite_user:
          operation:
            $ref: '#/paths/~1organization~1invites/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /organization/invites:
    get:
      summary: Returns a list of invites in the organization.
      operationId: list-invites
      tags:
        - Invites
      parameters:
        - name: limit
          in: query
          description: |
            A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
          required: false
          schema:
            type: integer
            default: 20
        - name: after
          in: query
          description: |
            A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Invites listed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteListResponse'
      x-oaiMeta:
        name: List invites
        group: administration
        returns: 'A list of [Invite](/docs/api-reference/invite/object) objects.'
        examples:
          request:
            curl: |
              curl https://api.openai.com/v1/organization/invites?after=invite-abc&limit=20 \
                -H "Authorization: Bearer $OPENAI_ADMIN_KEY" \
                -H "Content-Type: application/json"
          response:
            content: |
              {
                "object": "list",
                "data": [
                  {
                    "object": "organization.invite",
                    "id": "invite-abc",
                    "email": "user@example.com",
                    "role": "owner",
                    "status": "accepted",
                    "invited_at": 1711471533,
                    "expires_at": 1711471533,
                    "accepted_at": 1711471533
                  }
                ],
                "first_id": "invite-abc",
                "last_id": "invite-abc",
                "has_more": false
              }
    post:
      summary: Create an invite for a user to the organization. The invite must be accepted by the user before they have access to the organization.
      operationId: inviteUser
      tags:
        - Invites
      requestBody:
        description: The invite request payload.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteRequest'
      responses:
        '200':
          description: User invited successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
      x-oaiMeta:
        name: Create invite
        group: administration
        returns: 'The created [Invite](/docs/api-reference/invite/object) object.'
        examples:
          request:
            curl: |
              curl -X POST https://api.openai.com/v1/organization/invites \
                -H "Authorization: Bearer $OPENAI_ADMIN_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                    "email": "user@example.com",
                    "role": "owner"
                }'
          response:
            content: |
              {
                  "object": "organization.invite",
                  "id": "invite-abc",
                  "email": "user@example.com",
                  "role": "owner",
                  "invited_at": 1711471533,
                  "expires_at": 1711471533,
                  "accepted_at": null
              }
  '/organization/invites/{invite_id}':
    get:
      summary: Retrieves an invite.
      operationId: retrieve-invite
      tags:
        - Invites
      parameters:
        - in: path
          name: invite_id
          required: true
          schema:
            type: string
          description: The ID of the invite to retrieve.
      responses:
        '200':
          description: Invite retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
      x-oaiMeta:
        name: Retrieve invite
        group: administration
        returns: 'The [Invite](/docs/api-reference/invite/object) object matching the specified ID.'
        examples:
          request:
            curl: |
              curl https://api.openai.com/v1/organization/invites/invite-abc \
                -H "Authorization: Bearer $OPENAI_ADMIN_KEY" \
                -H "Content-Type: application/json"
          response:
            content: |
              {
                  "object": "organization.invite",
                  "id": "invite-abc",
                  "email": "user@example.com",
                  "role": "owner",
                  "status": "accepted",
                  "invited_at": 1711471533,
                  "expires_at": 1711471533,
                  "accepted_at": 1711471533
              }
    delete:
      summary: 'Delete an invite. If the invite has already been accepted, it cannot be deleted.'
      operationId: delete-invite
      tags:
        - Invites
      parameters:
        - in: path
          name: invite_id
          required: true
          schema:
            type: string
          description: The ID of the invite to delete.
      responses:
        '200':
          description: Invite deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteDeleteResponse'
      x-oaiMeta:
        name: Delete invite
        group: administration
        returns: Confirmation that the invite has been deleted
        examples:
          request:
            curl: |
              curl -X DELETE https://api.openai.com/v1/organization/invites/invite-abc \
                -H "Authorization: Bearer $OPENAI_ADMIN_KEY" \
                -H "Content-Type: application/json"
          response:
            content: |
              {
                  "object": "organization.invite.deleted",
                  "id": "invite-abc",
                  "deleted": true
              }
