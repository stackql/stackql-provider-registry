openapi: 3.0.0
info:
  title: BackupGateway
  version: 1.0.0
paths: {}
components:
  schemas:
    HypervisorState:
      type: string
      enum:
        - PENDING
        - ONLINE
        - OFFLINE
        - ERROR
    SyncMetadataStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - FAILED
        - SUCCEEDED
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
        Value:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^[^\x00]*$
      required:
        - Key
        - Value
      additionalProperties: false
    Hypervisor:
      type: object
      properties:
        Host:
          type: string
          maxLength: 128
          minLength: 3
          pattern: ^.+$
        HypervisorArn:
          type: string
          maxLength: 500
          minLength: 50
          pattern: ^arn:(aws|aws-cn|aws-us-gov):backup-gateway(:[a-zA-Z-0-9]+){3}\/[a-zA-Z-0-9]+$
        KmsKeyArn:
          type: string
          maxLength: 500
          minLength: 50
          pattern: ^(^arn:(aws|aws-cn|aws-us-gov):kms:([a-zA-Z0-9-]+):([0-9]+):(key|alias)/(\S+)$)|(^alias/(\S+)$)$
        LogGroupArn:
          type: string
          maxLength: 2048
          minLength: 0
          pattern: ^$|^arn:(aws|aws-cn|aws-us-gov):logs:([a-zA-Z0-9-]+):([0-9]+):log-group:[a-zA-Z0-9_\-\/\.]+:\*$
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9-]*$
        Password:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[ -~]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Username:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[ -\.0-\[\]-~]*[!-\.0-\[\]-~][ -\.0-\[\]-~]*$
      x-stackql-resource-name: hypervisor
      x-stackql-primaryIdentifier:
        - HypervisorArn
      x-create-only-properties:
        - KmsKeyArn
        - Tags
      x-read-only-properties:
        - HypervisorArn
      x-required-permissions:
        create:
          - backup-gateway:ImportHypervisorConfiguration
          - backup-gateway:GetHypervisor
          - backup-gateway:ListHypervisors
          - backup-gateway:TagResource
          - kms:CreateGrant
          - kms:Encrypt
          - kms:Decrypt
        read:
          - backup-gateway:GetHypervisor
          - backup-gateway:ListHypervisors
        update:
          - backup-gateway:UpdateHypervisor
          - backup-gateway:GetHypervisor
          - backup-gateway:ListHypervisors
          - backup-gateway:ImportHypervisorConfiguration
          - backup-gateway:DeleteHypervisor
        delete:
          - backup-gateway:DeleteHypervisor
          - backup-gateway:GetHypervisor
          - backup-gateway:ListHypervisors
        list:
          - backup-gateway:ListHypervisors
  x-stackQL-resources:
    hypervisors:
      name: hypervisors
      id: awscc.backupgateway.hypervisors
      x-cfn-schema-name: Hypervisor
      x-type: list
      x-identifiers:
        - HypervisorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HypervisorArn') as hypervisor_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::BackupGateway::Hypervisor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'HypervisorArn') as hypervisor_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::BackupGateway::Hypervisor'
                AND region = 'us-east-1'
    hypervisor:
      name: hypervisor
      id: awscc.backupgateway.hypervisor
      x-cfn-schema-name: Hypervisor
      x-type: get
      x-identifiers:
        - HypervisorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Host') as host,
              JSON_EXTRACT(Properties, '$.HypervisorArn') as hypervisor_arn,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.LogGroupArn') as log_group_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Username') as username
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::BackupGateway::Hypervisor'
              AND data__Identifier = '<HypervisorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Host') as host,
                json_extract_path_text(Properties, 'HypervisorArn') as hypervisor_arn,
                json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'LogGroupArn') as log_group_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Password') as password,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Username') as username
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::BackupGateway::Hypervisor'
                AND data__Identifier = '<HypervisorArn>'
                AND region = 'us-east-1'
