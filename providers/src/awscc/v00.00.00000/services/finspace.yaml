openapi: 3.0.0
info:
  title: FinSpace
  version: 1.0.0
paths: {}
components:
  schemas:
    FederationParameters:
      description: Additional parameters to identify Federation mode
      type: object
      properties:
        SamlMetadataURL:
          description: SAML metadata URL to link with the Environment
          type: string
          pattern: ^https?://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]{1,1000}
        FederationProviderName:
          description: Federation provider name to link with the Environment
          type: string
          pattern: '[^_\p{Z}][\p{L}\p{M}\p{S}\p{N}\p{P}][^_\p{Z}]+'
          minLength: 1
          maxLength: 32
        SamlMetadataDocument:
          description: SAML metadata document to link the federation provider to the Environment
          type: string
          pattern: .*
          minLength: 1000
          maxLength: 10000000
        ApplicationCallBackURL:
          description: SAML metadata URL to link with the Environment
          type: string
          pattern: ^https?://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]{1,1000}
        FederationURN:
          description: SAML metadata URL to link with the Environment
          type: string
        AttributeMap:
          description: Attribute map for SAML configuration
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: object
            properties:
              Key:
                type: string
                description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
                minLength: 1
                maxLength: 128
              Value:
                type: string
                description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
                minLength: 0
                maxLength: 256
            additionalProperties: false
      additionalProperties: false
    SuperuserParameters:
      description: Parameters of the first Superuser for the FinSpace Environment
      type: object
      properties:
        FirstName:
          description: First name
          type: string
          pattern: ^[a-zA-Z0-9]{1,50}$
          minLength: 1
          maxLength: 50
        LastName:
          description: Last name
          type: string
          pattern: ^[a-zA-Z0-9]{1,50}$
          minLength: 1
          maxLength: 50
        EmailAddress:
          description: Email address
          type: string
          pattern: '[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+[.]+[A-Za-z]+'
          minLength: 1
          maxLength: 128
      additionalProperties: false
    DataBundleArn:
      type: string
      pattern: ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d*:data-bundle/[0-9A-Za-z_-]{1,128}$
    Tag:
      description: A list of all tags for a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Environment:
      type: object
      properties:
        EnvironmentId:
          description: Unique identifier for representing FinSpace Environment
          type: string
          pattern: ^[a-zA-Z0-9]{1,26}$
        Name:
          description: Name of the Environment
          type: string
          pattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]{1,255}$
        AwsAccountId:
          description: AWS account ID associated with the Environment
          type: string
          pattern: ^[a-zA-Z0-9]{1,26}$
        Description:
          description: Description of the Environment
          type: string
          pattern: ^[a-zA-Z0-9. ]{1,1000}$
        Status:
          description: State of the Environment
          type: string
          enum:
            - CREATE_REQUESTED
            - CREATING
            - CREATED
            - DELETE_REQUESTED
            - DELETING
            - DELETED
            - FAILED_CREATION
            - FAILED_DELETION
            - RETRY_DELETION
            - SUSPENDED
        EnvironmentUrl:
          description: URL used to login to the Environment
          type: string
          pattern: ^[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]{1,1000}
        EnvironmentArn:
          description: ARN of the Environment
          type: string
          pattern: ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$
        SageMakerStudioDomainUrl:
          description: SageMaker Studio Domain URL associated with the Environment
          type: string
          pattern: ^[a-zA-Z-0-9-:\/.]*{1,1000}$
        KmsKeyId:
          description: KMS key used to encrypt customer data within FinSpace Environment infrastructure
          type: string
          pattern: ^[a-zA-Z-0-9-:\/]*{1,1000}$
        DedicatedServiceAccountId:
          description: ID for FinSpace created account used to store Environment artifacts
          type: string
          pattern: ^[a-zA-Z0-9]{1,26}$
        FederationMode:
          description: Federation mode used with the Environment
          type: string
          enum:
            - LOCAL
            - FEDERATED
        FederationParameters:
          $ref: '#/components/schemas/FederationParameters'
        SuperuserParameters:
          $ref: '#/components/schemas/SuperuserParameters'
        DataBundles:
          description: ARNs of FinSpace Data Bundles to install
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/DataBundleArn'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: environment
      x-stackql-primaryIdentifier:
        - EnvironmentId
      x-create-only-properties:
        - KmsKeyId
        - SuperuserParameters
        - FederationParameters
        - DataBundles
        - Tags
      x-read-only-properties:
        - EnvironmentId
        - Status
        - SageMakerStudioDomainUrl
        - EnvironmentArn
        - EnvironmentUrl
        - AwsAccountId
        - DedicatedServiceAccountId
      x-required-permissions:
        create:
          - finspace:CreateEnvironment
          - finspace:GetEnvironment
          - finspace:ListEnvironments
          - sts:AssumeRole
        read:
          - finspace:GetEnvironment
        update:
          - finspace:UpdateEnvironment
        delete:
          - finspace:DeleteEnvironment
          - finspace:GetEnvironment
        list:
          - finspace:ListEnvironments
  x-stackQL-resources:
    environments:
      name: environments
      id: awscc.finspace.environments
      x-cfn-schema-name: Environment
      x-type: list
      x-identifiers:
        - EnvironmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FinSpace::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentId') as environment_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FinSpace::Environment'
                AND region = 'us-east-1'
    environment:
      name: environment
      id: awscc.finspace.environment
      x-cfn-schema-name: Environment
      x-type: get
      x-identifiers:
        - EnvironmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.EnvironmentUrl') as environment_url,
              JSON_EXTRACT(Properties, '$.EnvironmentArn') as environment_arn,
              JSON_EXTRACT(Properties, '$.SageMakerStudioDomainUrl') as sage_maker_studio_domain_url,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.DedicatedServiceAccountId') as dedicated_service_account_id,
              JSON_EXTRACT(Properties, '$.FederationMode') as federation_mode,
              JSON_EXTRACT(Properties, '$.FederationParameters') as federation_parameters,
              JSON_EXTRACT(Properties, '$.SuperuserParameters') as superuser_parameters,
              JSON_EXTRACT(Properties, '$.DataBundles') as data_bundles,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FinSpace::Environment'
              AND data__Identifier = '<EnvironmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'AwsAccountId') as aws_account_id,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'EnvironmentUrl') as environment_url,
                json_extract_path_text(Properties, 'EnvironmentArn') as environment_arn,
                json_extract_path_text(Properties, 'SageMakerStudioDomainUrl') as sage_maker_studio_domain_url,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'DedicatedServiceAccountId') as dedicated_service_account_id,
                json_extract_path_text(Properties, 'FederationMode') as federation_mode,
                json_extract_path_text(Properties, 'FederationParameters') as federation_parameters,
                json_extract_path_text(Properties, 'SuperuserParameters') as superuser_parameters,
                json_extract_path_text(Properties, 'DataBundles') as data_bundles,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FinSpace::Environment'
                AND data__Identifier = '<EnvironmentId>'
                AND region = 'us-east-1'
