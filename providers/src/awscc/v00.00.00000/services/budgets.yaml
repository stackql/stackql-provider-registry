openapi: 3.0.0
info:
  title: Budgets
  version: 1.0.0
paths: {}
components:
  schemas:
    Subscriber:
      type: object
      properties:
        Type:
          type: string
          enum:
            - SNS
            - EMAIL
        Address:
          type: string
      required:
        - Type
        - Address
      additionalProperties: false
    ActionThreshold:
      type: object
      properties:
        Value:
          type: number
        Type:
          type: string
          enum:
            - PERCENTAGE
            - ABSOLUTE_VALUE
      required:
        - Value
        - Type
      additionalProperties: false
    IamActionDefinition:
      type: object
      properties:
        PolicyArn:
          type: string
        Roles:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
        Groups:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
        Users:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - PolicyArn
      additionalProperties: false
    ScpActionDefinition:
      type: object
      properties:
        PolicyId:
          type: string
        TargetIds:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - PolicyId
        - TargetIds
      additionalProperties: false
    SsmActionDefinition:
      type: object
      properties:
        Subtype:
          type: string
          enum:
            - STOP_EC2_INSTANCES
            - STOP_RDS_INSTANCES
        Region:
          type: string
        InstanceIds:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - Subtype
        - Region
        - InstanceIds
      additionalProperties: false
    Definition:
      type: object
      properties:
        IamActionDefinition:
          $ref: '#/components/schemas/IamActionDefinition'
        ScpActionDefinition:
          $ref: '#/components/schemas/ScpActionDefinition'
        SsmActionDefinition:
          $ref: '#/components/schemas/SsmActionDefinition'
      additionalProperties: false
    BudgetsAction:
      type: object
      properties:
        ActionId:
          type: string
        BudgetName:
          type: string
        NotificationType:
          type: string
          enum:
            - ACTUAL
            - FORECASTED
        ActionType:
          type: string
          enum:
            - APPLY_IAM_POLICY
            - APPLY_SCP_POLICY
            - RUN_SSM_DOCUMENTS
        ActionThreshold:
          $ref: '#/components/schemas/ActionThreshold'
        ExecutionRoleArn:
          type: string
        ApprovalModel:
          type: string
          enum:
            - AUTOMATIC
            - MANUAL
        Subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber'
          maxItems: 11
          minItems: 1
        Definition:
          $ref: '#/components/schemas/Definition'
      required:
        - BudgetName
        - NotificationType
        - ActionType
        - ActionThreshold
        - ExecutionRoleArn
        - Definition
        - Subscribers
      x-stackql-resource-name: budgets_action
      x-stackql-primaryIdentifier:
        - ActionId
        - BudgetName
      x-create-only-properties:
        - ActionType
        - BudgetName
      x-read-only-properties:
        - ActionId
      x-required-permissions:
        create:
          - budgets:CreateBudgetAction
          - iam:PassRole
        read:
          - budgets:DescribeBudgetAction
        update:
          - budgets:UpdateBudgetAction
          - iam:PassRole
        delete:
          - budgets:DeleteBudgetAction
        list:
          - budgets:DescribeBudgetActionsForAccount
          - budgets:DescribeBudgetActionsForBudget
  x-stackQL-resources:
    budgets_actions:
      name: budgets_actions
      id: awscc.budgets.budgets_actions
      x-cfn-schema-name: BudgetsAction
      x-type: list
      x-identifiers:
        - ActionId
        - BudgetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ActionId') as action_id,
              JSON_EXTRACT(Properties, '$.BudgetName') as budget_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ActionId') as action_id,
                json_extract_path_text(Properties, 'BudgetName') as budget_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
                AND region = 'us-east-1'
    budgets_action:
      name: budgets_action
      id: awscc.budgets.budgets_action
      x-cfn-schema-name: BudgetsAction
      x-type: get
      x-identifiers:
        - ActionId
        - BudgetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ActionId') as action_id,
              JSON_EXTRACT(Properties, '$.BudgetName') as budget_name,
              JSON_EXTRACT(Properties, '$.NotificationType') as notification_type,
              JSON_EXTRACT(Properties, '$.ActionType') as action_type,
              JSON_EXTRACT(Properties, '$.ActionThreshold') as action_threshold,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.ApprovalModel') as approval_model,
              JSON_EXTRACT(Properties, '$.Subscribers') as subscribers,
              JSON_EXTRACT(Properties, '$.Definition') as definition
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
              AND data__Identifier = '<ActionId>|<BudgetName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ActionId') as action_id,
                json_extract_path_text(Properties, 'BudgetName') as budget_name,
                json_extract_path_text(Properties, 'NotificationType') as notification_type,
                json_extract_path_text(Properties, 'ActionType') as action_type,
                json_extract_path_text(Properties, 'ActionThreshold') as action_threshold,
                json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                json_extract_path_text(Properties, 'ApprovalModel') as approval_model,
                json_extract_path_text(Properties, 'Subscribers') as subscribers,
                json_extract_path_text(Properties, 'Definition') as definition
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
                AND data__Identifier = '<ActionId>|<BudgetName>'
                AND region = 'us-east-1'
