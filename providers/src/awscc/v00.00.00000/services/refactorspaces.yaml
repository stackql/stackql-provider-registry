openapi: 3.0.0
info:
  title: RefactorSpaces
  version: 1.0.0
paths: {}
components:
  schemas:
    ApiGatewayEndpointType:
      type: string
      enum:
        - REGIONAL
        - PRIVATE
    ApiGatewayProxyInput:
      type: object
      properties:
        StageName:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[-a-zA-Z0-9_]*$
        EndpointType:
          $ref: '#/components/schemas/ApiGatewayEndpointType'
      additionalProperties: false
    ProxyType:
      type: string
      enum:
        - API_GATEWAY
    Tag:
      description: A label for tagging Environment resource
      type: object
      properties:
        Key:
          description: A string used to identify this tag
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:).+
        Value:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Application:
      type: object
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/ApiGatewayProxyInput'
        Arn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\-]+:\w{12}:[a-zA-Z_0-9+=,.@\-_/]+$
        ApiGatewayId:
          type: string
          maxLength: 10
          minLength: 10
          pattern: ^[a-z0-9]{10}$
        VpcLinkId:
          type: string
          maxLength: 10
          minLength: 10
          pattern: ^[a-z0-9]{10}$
        NlbArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:(aws[a-zA-Z-]*)?:elasticloadbalancing:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\-_\/]+$
        NlbName:
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^(?!internal-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+.*[^-]$
        ApplicationIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^app-([0-9A-Za-z]{10}$)
        EnvironmentIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^env-([0-9A-Za-z]{10}$)
        Name:
          type: string
          maxLength: 63
          minLength: 3
          pattern: ^(?!app-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$
        ProxyType:
          $ref: '#/components/schemas/ProxyType'
        VpcId:
          type: string
          maxLength: 21
          minLength: 12
          pattern: ^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$
        StageName:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[-a-zA-Z0-9_]*$
        ProxyUrl:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^http://[-a-zA-Z0-9+\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\x38@#/%=~_|]$
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
      required:
        - EnvironmentIdentifier
        - VpcId
        - Name
        - ProxyType
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - EnvironmentIdentifier
        - ApplicationIdentifier
      x-create-only-properties:
        - ApiGatewayProxy
        - EnvironmentIdentifier
        - Name
        - ProxyType
        - VpcId
      x-read-only-properties:
        - ApplicationIdentifier
        - Arn
        - ApiGatewayId
        - VpcLinkId
        - NlbArn
        - NlbName
        - ProxyUrl
        - StageName
      x-required-permissions:
        create:
          - refactor-spaces:GetApplication
          - refactor-spaces:CreateApplication
          - refactor-spaces:TagResource
          - ec2:CreateTags
          - ec2:CreateVpcEndpointServiceConfiguration
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DescribeVpcEndpointServiceConfigurations
          - ec2:DescribeAccountAttributes
          - ec2:DescribeInternetGateways
          - ec2:ModifyVpcEndpointServicePermissions
          - apigateway:DELETE
          - apigateway:GET
          - apigateway:PATCH
          - apigateway:POST
          - apigateway:PUT
          - apigateway:UpdateRestApiPolicy
          - apigateway:Update*
          - apigateway:Delete*
          - apigateway:Get*
          - apigateway:Put*
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:DescribeLoadBalancers
          - elasticloadbalancing:DescribeTags
          - elasticloadbalancing:AddTags
          - iam:CreateServiceLinkedRole
        read:
          - refactor-spaces:GetApplication
          - refactor-spaces:ListTagsForResource
        delete:
          - refactor-spaces:GetApplication
          - refactor-spaces:DeleteApplication
          - refactor-spaces:UntagResource
          - ec2:DescribeVpcEndpointServiceConfigurations
          - ec2:DeleteRoute
          - ec2:DeleteSecurityGroup
          - ec2:DeleteTransitGateway
          - ec2:DeleteTransitGatewayVpcAttachment
          - ec2:DeleteVpcEndpointServiceConfigurations
          - ec2:DeleteTags
          - ec2:RevokeSecurityGroupIngress
          - elasticloadbalancing:DeleteLoadBalancer
          - apigateway:Update*
          - apigateway:Delete*
          - apigateway:Get*
          - apigateway:Put*
        list:
          - refactor-spaces:ListApplications
          - refactor-spaces:ListTagsForResource
    NetworkFabricType:
      type: string
      enum:
        - TRANSIT_GATEWAY
        - NONE
    Environment:
      type: object
      properties:
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[a-zA-Z0-9-_\s\.\!\*\#\@\']+$
        EnvironmentIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^env-([0-9A-Za-z]{10}$)
        Name:
          type: string
          maxLength: 63
          minLength: 3
          pattern: ^(?!env-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$
        NetworkFabricType:
          $ref: '#/components/schemas/NetworkFabricType'
        Arn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\-]+:\w{12}:[a-zA-Z_0-9+=,.@\-_/]+$
        TransitGatewayId:
          type: string
          maxLength: 21
          minLength: 21
          pattern: ^tgw-[-a-f0-9]{17}$
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
      required:
        - Name
        - NetworkFabricType
      x-stackql-resource-name: environment
      x-stackql-primaryIdentifier:
        - EnvironmentIdentifier
      x-create-only-properties:
        - Description
        - Name
        - NetworkFabricType
      x-read-only-properties:
        - EnvironmentIdentifier
        - Arn
        - TransitGatewayId
      x-required-permissions:
        create:
          - refactor-spaces:CreateEnvironment
          - refactor-spaces:GetEnvironment
          - refactor-spaces:TagResource
          - ec2:CreateTransitGateway
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CreateSecurityGroup
          - ec2:CreateTags
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeRouteTables
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeTags
          - ec2:DescribeTransitGateways
          - ec2:DescribeTransitGatewayVpcAttachments
          - ec2:DescribeVpcEndpointServiceConfigurations
          - ec2:ModifyVpcEndpointServicePermissions
          - ec2:RevokeSecurityGroupIngress
          - ram:AssociateResourceShare
          - ram:CreateResourceShare
          - ram:GetResourceShareAssociations
          - ram:GetResourceShares
          - ram:TagResource
          - ram:GetResourceShareInvitations
          - ram:AcceptResourceShareInvitation
          - ram:DisassociateResourceShare
          - tag:GetResources
          - iam:CreateServiceLinkedRole
        read:
          - refactor-spaces:GetEnvironment
          - refactor-spaces:ListTagsForResource
        delete:
          - refactor-spaces:GetEnvironment
          - refactor-spaces:DeleteEnvironment
          - refactor-spaces:UntagResource
          - ec2:DescribeTransitGateways
          - ec2:DescribeTransitGatewayVpcAttachments
          - ec2:DeleteTransitGateway
          - ec2:DeleteTransitGatewayVpcAttachment
          - ec2:DeleteTags
          - ram:GetResourceShareAssociations
          - ram:DeleteResourceShare
        list:
          - refactor-spaces:ListEnvironments
          - refactor-spaces:ListTagsForResource
    RouteActivationState:
      type: string
      enum:
        - INACTIVE
        - ACTIVE
    Method:
      type: string
      enum:
        - DELETE
        - GET
        - HEAD
        - OPTIONS
        - PATCH
        - POST
        - PUT
    RouteType:
      type: string
      enum:
        - DEFAULT
        - URI_PATH
    DefaultRouteInput:
      type: object
      properties:
        ActivationState:
          $ref: '#/components/schemas/RouteActivationState'
      required:
        - ActivationState
      additionalProperties: false
    UriPathRouteInput:
      type: object
      properties:
        SourcePath:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^(/([a-zA-Z0-9._:-]+|\{[a-zA-Z0-9._:-]+\}))+$
        ActivationState:
          $ref: '#/components/schemas/RouteActivationState'
        Methods:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Method'
        IncludeChildPaths:
          type: boolean
        AppendSourcePath:
          type: boolean
      required:
        - ActivationState
      additionalProperties: false
    Route:
      type: object
      properties:
        PathResourceToId:
          type: string
        Arn:
          type: string
          minLength: 20
          maxLength: 2048
          pattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\-]+:\w{12}:[a-zA-Z_0-9+=,.@\-_/]+$
        ApplicationIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^app-([0-9A-Za-z]{10}$)
        EnvironmentIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^env-([0-9A-Za-z]{10}$)
        RouteIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^rte-([0-9A-Za-z]{10}$)
        RouteType:
          $ref: '#/components/schemas/RouteType'
        ServiceIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^svc-([0-9A-Za-z]{10}$)
        DefaultRoute:
          $ref: '#/components/schemas/DefaultRouteInput'
        UriPathRoute:
          $ref: '#/components/schemas/UriPathRouteInput'
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
      required:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - ServiceIdentifier
        - RouteType
      x-stackql-resource-name: route
      x-stackql-primaryIdentifier:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - RouteIdentifier
      x-create-only-properties:
        - ApplicationIdentifier
        - EnvironmentIdentifier
        - RouteType
        - ServiceIdentifier
        - UriPathRoute/SourcePath
        - UriPathRoute/Methods
        - UriPathRoute/IncludeChildPaths
        - UriPathRoute/AppendSourcePath
      x-read-only-properties:
        - RouteIdentifier
        - PathResourceToId
        - Arn
      x-required-permissions:
        create:
          - refactor-spaces:CreateRoute
          - refactor-spaces:GetRoute
          - refactor-spaces:TagResource
          - iam:CreateServiceLinkedRole
          - apigateway:GET
          - apigateway:PATCH
          - apigateway:POST
          - apigateway:PUT
          - apigateway:DELETE
          - apigateway:UpdateRestApiPolicy
          - lambda:GetFunctionConfiguration
          - lambda:AddPermission
          - elasticloadbalancing:DescribeListeners
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DescribeTags
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RegisterTargets
          - elasticloadbalancing:DescribeTargetHealth
          - ec2:DescribeSubnets
          - tag:GetResources
        read:
          - refactor-spaces:GetRoute
          - refactor-spaces:ListTagsForResource
        delete:
          - refactor-spaces:DeleteRoute
          - refactor-spaces:GetRoute
          - refactor-spaces:UntagResource
          - apigateway:GET
          - apigateway:PATCH
          - apigateway:POST
          - apigateway:PUT
          - apigateway:DELETE
          - apigateway:UpdateRestApiPolicy
          - lambda:GetFunctionConfiguration
          - lambda:AddPermission
          - elasticloadbalancing:DescribeListeners
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:DescribeTags
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RegisterTargets
          - elasticloadbalancing:DescribeTargetHealth
          - ec2:DescribeSubnets
          - tag:GetResources
        list:
          - refactor-spaces:ListRoutes
          - refactor-spaces:ListTagsForResource
        update:
          - refactor-spaces:UpdateRoute
          - refactor-spaces:GetRoute
          - refactor-spaces:TagResource
          - iam:CreateServiceLinkedRole
          - apigateway:GET
          - apigateway:PATCH
          - apigateway:POST
          - apigateway:PUT
          - apigateway:DELETE
          - apigateway:UpdateRestApiPolicy
          - lambda:GetFunctionConfiguration
          - lambda:AddPermission
          - elasticloadbalancing:DescribeListeners
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:DescribeTags
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RegisterTargets
          - elasticloadbalancing:DescribeTargetHealth
          - ec2:DescribeSubnets
          - ec2:DescribeSubnets
          - tag:GetResources
    LambdaEndpointInput:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
      required:
        - Arn
      additionalProperties: false
    ServiceEndpointType:
      type: string
      enum:
        - LAMBDA
        - URL
    UrlEndpointInput:
      type: object
      properties:
        HealthUrl:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^https?://[-a-zA-Z0-9+\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\x38@#/%=~_|]$
        Url:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^https?://[-a-zA-Z0-9+\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\x38@#/%=~_|]$
      required:
        - Url
      additionalProperties: false
    Service:
      type: object
      properties:
        Arn:
          type: string
          minLength: 20
          maxLength: 2048
          pattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\-]+:\w{12}:[a-zA-Z_0-9+=,.@\-_/]+$
        ApplicationIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^app-([0-9A-Za-z]{10}$)
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[a-zA-Z0-9-_\s\.\!\*\#\@\']+$
        EndpointType:
          $ref: '#/components/schemas/ServiceEndpointType'
        EnvironmentIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^env-([0-9A-Za-z]{10}$)
        LambdaEndpoint:
          $ref: '#/components/schemas/LambdaEndpointInput'
        Name:
          type: string
          maxLength: 63
          minLength: 3
          pattern: ^(?!svc-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$
        ServiceIdentifier:
          type: string
          maxLength: 14
          minLength: 14
          pattern: ^svc-([0-9A-Za-z]{10}$)
        UrlEndpoint:
          $ref: '#/components/schemas/UrlEndpointInput'
        VpcId:
          type: string
          maxLength: 21
          minLength: 12
          pattern: ^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
      required:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - EndpointType
        - Name
      x-stackql-resource-name: service
      x-stackql-primaryIdentifier:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - ServiceIdentifier
      x-create-only-properties:
        - Description
        - EndpointType
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - LambdaEndpoint
        - Name
        - UrlEndpoint
        - VpcId
      x-read-only-properties:
        - ServiceIdentifier
        - Arn
      x-required-permissions:
        create:
          - refactor-spaces:CreateService
          - refactor-spaces:GetService
          - refactor-spaces:TagResource
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DescribeRouteTables
          - ec2:CreateTags
          - ec2:CreateTransitGatewayVpcAttachment
          - ec2:DescribeTransitGatewayVpcAttachments
          - ec2:CreateSecurityGroup
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CreateRoute
          - lambda:GetFunctionConfiguration
        read:
          - refactor-spacess:GetService
          - refactor-spaces:ListTagsForResource
        delete:
          - refactor-spaces:DeleteService
          - refactor-spaces:GetService
          - refactor-spaces:UntagResource
          - ram:DisassociateResourceShare
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeRouteTables
          - ec2:DescribeTransitGatewayVpcAttachments
          - ec2:DescribeSecurityGroups
          - ec2:DeleteSecurityGroup
          - ec2:DeleteRoute
          - ec2:RevokeSecurityGroupIngress
          - ec2:DeleteTransitGatewayVpcAttachment
          - ec2:DeleteTags
        list:
          - refactor-spaces:ListServices
          - refactor-spaces:ListTagsForResource
  x-stackQL-resources:
    applications:
      name: applications
      id: awscc.refactorspaces.applications
      x-cfn-schema-name: Application
      x-type: list
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Application'
                AND region = 'us-east-1'
    application:
      name: application
      id: awscc.refactorspaces.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApiGatewayProxy') as api_gateway_proxy,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApiGatewayId') as api_gateway_id,
              JSON_EXTRACT(Properties, '$.VpcLinkId') as vpc_link_id,
              JSON_EXTRACT(Properties, '$.NlbArn') as nlb_arn,
              JSON_EXTRACT(Properties, '$.NlbName') as nlb_name,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ProxyType') as proxy_type,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.StageName') as stage_name,
              JSON_EXTRACT(Properties, '$.ProxyUrl') as proxy_url,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Application'
              AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ApiGatewayProxy') as api_gateway_proxy,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ApiGatewayId') as api_gateway_id,
                json_extract_path_text(Properties, 'VpcLinkId') as vpc_link_id,
                json_extract_path_text(Properties, 'NlbArn') as nlb_arn,
                json_extract_path_text(Properties, 'NlbName') as nlb_name,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ProxyType') as proxy_type,
                json_extract_path_text(Properties, 'VpcId') as vpc_id,
                json_extract_path_text(Properties, 'StageName') as stage_name,
                json_extract_path_text(Properties, 'ProxyUrl') as proxy_url,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Application'
                AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>'
                AND region = 'us-east-1'
    environments:
      name: environments
      id: awscc.refactorspaces.environments
      x-cfn-schema-name: Environment
      x-type: list
      x-identifiers:
        - EnvironmentIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Environment'
                AND region = 'us-east-1'
    environment:
      name: environment
      id: awscc.refactorspaces.environment
      x-cfn-schema-name: Environment
      x-type: get
      x-identifiers:
        - EnvironmentIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NetworkFabricType') as network_fabric_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Environment'
              AND data__Identifier = '<EnvironmentIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'NetworkFabricType') as network_fabric_type,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'TransitGatewayId') as transit_gateway_id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Environment'
                AND data__Identifier = '<EnvironmentIdentifier>'
                AND region = 'us-east-1'
    routes:
      name: routes
      id: awscc.refactorspaces.routes
      x-cfn-schema-name: Route
      x-type: list
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - RouteIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier,
              JSON_EXTRACT(Properties, '$.RouteIdentifier') as route_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Route'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier,
                json_extract_path_text(Properties, 'RouteIdentifier') as route_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Route'
                AND region = 'us-east-1'
    route:
      name: route
      id: awscc.refactorspaces.route
      x-cfn-schema-name: Route
      x-type: get
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - RouteIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PathResourceToId') as path_resource_to_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.RouteIdentifier') as route_identifier,
              JSON_EXTRACT(Properties, '$.RouteType') as route_type,
              JSON_EXTRACT(Properties, '$.ServiceIdentifier') as service_identifier,
              JSON_EXTRACT(Properties, '$.DefaultRoute') as default_route,
              JSON_EXTRACT(Properties, '$.UriPathRoute') as uri_path_route,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Route'
              AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>|<RouteIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PathResourceToId') as path_resource_to_id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'RouteIdentifier') as route_identifier,
                json_extract_path_text(Properties, 'RouteType') as route_type,
                json_extract_path_text(Properties, 'ServiceIdentifier') as service_identifier,
                json_extract_path_text(Properties, 'DefaultRoute') as default_route,
                json_extract_path_text(Properties, 'UriPathRoute') as uri_path_route,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Route'
                AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>|<RouteIdentifier>'
                AND region = 'us-east-1'
    services:
      name: services
      id: awscc.refactorspaces.services
      x-cfn-schema-name: Service
      x-type: list
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - ServiceIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier,
              JSON_EXTRACT(Properties, '$.ServiceIdentifier') as service_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Service'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier,
                json_extract_path_text(Properties, 'ServiceIdentifier') as service_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::RefactorSpaces::Service'
                AND region = 'us-east-1'
    service:
      name: service
      id: awscc.refactorspaces.service
      x-cfn-schema-name: Service
      x-type: get
      x-identifiers:
        - EnvironmentIdentifier
        - ApplicationIdentifier
        - ServiceIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EndpointType') as endpoint_type,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.LambdaEndpoint') as lambda_endpoint,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ServiceIdentifier') as service_identifier,
              JSON_EXTRACT(Properties, '$.UrlEndpoint') as url_endpoint,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Service'
              AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>|<ServiceIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'EndpointType') as endpoint_type,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'LambdaEndpoint') as lambda_endpoint,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ServiceIdentifier') as service_identifier,
                json_extract_path_text(Properties, 'UrlEndpoint') as url_endpoint,
                json_extract_path_text(Properties, 'VpcId') as vpc_id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::RefactorSpaces::Service'
                AND data__Identifier = '<EnvironmentIdentifier>|<ApplicationIdentifier>|<ServiceIdentifier>'
                AND region = 'us-east-1'
