openapi: 3.0.0
info:
  title: MSK
  version: 1.0.0
paths: {}
components:
  schemas:
    SecretArnList:
      type: array
      x-insertionOrder: false
      items:
        type: string
    BatchScramSecret:
      type: object
      properties:
        ClusterArn:
          type: string
        SecretArnList:
          $ref: '#/components/schemas/SecretArnList'
      required:
        - ClusterArn
      x-stackql-resource-name: batch_scram_secret
      x-stackql-primaryIdentifier:
        - ClusterArn
      x-create-only-properties:
        - ClusterArn
      x-required-permissions:
        create:
          - kafka:BatchAssociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        delete:
          - kafka:BatchDisassociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
        list:
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        read:
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        update:
          - kafka:BatchAssociateScramSecret
          - kafka:BatchDisassociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
    S3:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        Prefix:
          type: string
        Bucket:
          type: string
      required:
        - Enabled
    BrokerLogs:
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3'
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogs'
        Firehose:
          $ref: '#/components/schemas/Firehose'
    NodeExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    EncryptionInfo:
      type: object
      additionalProperties: false
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/EncryptionAtRest'
        EncryptionInTransit:
          $ref: '#/components/schemas/EncryptionInTransit'
    Firehose:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        DeliveryStream:
          type: string
      required:
        - Enabled
    OpenMonitoring:
      type: object
      additionalProperties: false
      properties:
        Prometheus:
          $ref: '#/components/schemas/Prometheus'
      required:
        - Prometheus
    Prometheus:
      type: object
      additionalProperties: false
      properties:
        JmxExporter:
          $ref: '#/components/schemas/JmxExporter'
        NodeExporter:
          $ref: '#/components/schemas/NodeExporter'
    CloudWatchLogs:
      type: object
      additionalProperties: false
      properties:
        LogGroup:
          type: string
        Enabled:
          type: boolean
      required:
        - Enabled
    EBSStorageInfo:
      type: object
      additionalProperties: false
      properties:
        VolumeSize:
          type: integer
          minimum: 1
          maximum: 16384
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
    ProvisionedThroughput:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        VolumeThroughput:
          type: integer
    PublicAccess:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          minLength: 7
          maxLength: 23
    VpcConnectivity:
      type: object
      additionalProperties: false
      properties:
        ClientAuthentication:
          $ref: '#/components/schemas/VpcConnectivityClientAuthentication'
    ConfigurationInfo:
      type: object
      additionalProperties: false
      properties:
        Revision:
          type: integer
        Arn:
          type: string
      required:
        - Revision
        - Arn
    BrokerNodeGroupInfo:
      type: object
      additionalProperties: false
      properties:
        StorageInfo:
          $ref: '#/components/schemas/StorageInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/ConnectivityInfo'
        SecurityGroups:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        BrokerAZDistribution:
          type: string
          minLength: 6
          maxLength: 9
        ClientSubnets:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        InstanceType:
          type: string
          minLength: 5
          maxLength: 32
      required:
        - ClientSubnets
        - InstanceType
    EncryptionAtRest:
      type: object
      additionalProperties: false
      properties:
        DataVolumeKMSKeyId:
          type: string
      required:
        - DataVolumeKMSKeyId
    JmxExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    StorageInfo:
      type: object
      additionalProperties: false
      properties:
        EBSStorageInfo:
          $ref: '#/components/schemas/EBSStorageInfo'
    ConnectivityInfo:
      type: object
      additionalProperties: false
      properties:
        PublicAccess:
          $ref: '#/components/schemas/PublicAccess'
        VpcConnectivity:
          $ref: '#/components/schemas/VpcConnectivity'
    VpcConnectivityTls:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivitySasl:
      type: object
      additionalProperties: false
      properties:
        Scram:
          $ref: '#/components/schemas/VpcConnectivityScram'
        Iam:
          $ref: '#/components/schemas/VpcConnectivityIam'
    VpcConnectivityScram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivityIam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Tls:
      type: object
      additionalProperties: false
      properties:
        CertificateAuthorityArnList:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Enabled:
          type: boolean
    Sasl:
      type: object
      additionalProperties: false
      properties:
        Iam:
          $ref: '#/components/schemas/Iam'
      required:
        - Iam
    Scram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Iam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Unauthenticated:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    ClientAuthentication:
      type: object
      properties:
        Sasl:
          $ref: '#/components/schemas/Sasl'
      additionalProperties: false
      required:
        - Sasl
    VpcConnectivityClientAuthentication:
      type: object
      additionalProperties: false
      properties:
        Tls:
          $ref: '#/components/schemas/VpcConnectivityTls'
        Sasl:
          $ref: '#/components/schemas/VpcConnectivitySasl'
    LoggingInfo:
      type: object
      additionalProperties: false
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/BrokerLogs'
      required:
        - BrokerLogs
    EncryptionInTransit:
      type: object
      additionalProperties: false
      properties:
        InCluster:
          type: boolean
        ClientBroker:
          type: string
          enum:
            - TLS
            - TLS_PLAINTEXT
            - PLAINTEXT
    Cluster:
      type: object
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/BrokerNodeGroupInfo'
        EnhancedMonitoring:
          type: string
          minLength: 7
          maxLength: 23
          enum:
            - DEFAULT
            - PER_BROKER
            - PER_TOPIC_PER_BROKER
            - PER_TOPIC_PER_PARTITION
        KafkaVersion:
          type: string
          minLength: 1
          maxLength: 128
        NumberOfBrokerNodes:
          type: integer
        EncryptionInfo:
          $ref: '#/components/schemas/EncryptionInfo'
        OpenMonitoring:
          $ref: '#/components/schemas/OpenMonitoring'
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          type: string
        CurrentVersion:
          description: The current version of the MSK cluster
          type: string
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        ConfigurationInfo:
          $ref: '#/components/schemas/ConfigurationInfo'
        StorageMode:
          type: string
          minLength: 5
          maxLength: 6
          enum:
            - LOCAL
            - TIERED
      required:
        - BrokerNodeGroupInfo
        - KafkaVersion
        - NumberOfBrokerNodes
        - ClusterName
      x-stackql-resource-name: cluster
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - BrokerNodeGroupInfo/BrokerAZDistribution
        - BrokerNodeGroupInfo/ClientSubnets
        - BrokerNodeGroupInfo/SecurityGroups
        - EncryptionInfo/EncryptionAtRest
        - EncryptionInfo/EncryptionInTransit/InCluster
        - ClusterName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kms:CreateGrant
          - kms:DescribeKey
          - kafka:CreateCluster
          - kafka:DescribeCluster
          - kafka:TagResource
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - firehose:TagDeliveryStream
          - acm-pca:GetCertificateAuthorityCertificate
        update:
          - kafka:UpdateMonitoring
          - kafka:UpdateClusterKafkaVersion
          - kafka:UpdateClusterConfiguration
          - kafka:UpdateBrokerType
          - kafka:UpdateBrokerCount
          - kafka:UpdateBrokerStorage
          - kafka:UpdateStorage
          - kafka:UpdateSecurity
          - kafka:UpdateConnectivity
          - kafka:DescribeCluster
          - kafka:DescribeClusterOperation
          - kafka:TagResource
          - kafka:UntagResource
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - ec2:DescribeSecurityGroups
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - firehose:TagDeliveryStream
          - acm-pca:GetCertificateAuthorityCertificate
        delete:
          - kafka:DeleteCluster
          - kafka:DescribeCluster
        list:
          - kafka:ListClusters
        read:
          - kafka:DescribeCluster
    ClusterPolicy:
      type: object
      properties:
        Policy:
          description: A policy document containing permissions to add to the specified cluster.
          type: object
        ClusterArn:
          description: The arn of the cluster for the resource policy.
          type: string
          pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
        CurrentVersion:
          description: The current version of the policy attached to the specified cluster
          type: string
          pattern: ^(K)([a-zA-Z0-9]+)\Z
      required:
        - Policy
        - ClusterArn
      x-stackql-resource-name: cluster_policy
      x-stackql-primaryIdentifier:
        - ClusterArn
      x-create-only-properties:
        - ClusterArn
      x-read-only-properties:
        - CurrentVersion
      x-required-permissions:
        create:
          - kafka:PutClusterPolicy
          - kafka:GetClusterPolicy
        read:
          - kafka:GetClusterPolicy
        list:
          - kafka:GetClusterPolicy
        update:
          - kafka:PutClusterPolicy
          - kafka:GetClusterPolicy
        delete:
          - kafka:DeleteClusterPolicy
          - kafka:GetClusterPolicy
    KafkaVersionsList:
      type: array
      x-insertionOrder: false
      items:
        type: string
    LatestRevision:
      type: object
      additionalProperties: false
      properties:
        CreationTime:
          type: string
        Description:
          type: string
        Revision:
          type: integer
    Configuration:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        ServerProperties:
          type: string
        KafkaVersionsList:
          $ref: '#/components/schemas/KafkaVersionsList'
        Arn:
          type: string
        LatestRevision:
          $ref: '#/components/schemas/LatestRevision'
      required:
        - ServerProperties
        - Name
      x-stackql-resource-name: configuration
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - KafkaVersionsList
        - Name
      x-read-only-properties:
        - Arn
        - LatestRevision/CreationTime
        - LatestRevision/Revision
        - LatestRevision/Description
      x-required-permissions:
        create:
          - kafka:CreateConfiguration
          - Kafka:DescribeConfiguration
        delete:
          - kafka:DeleteConfiguration
          - kafka:DescribeConfiguration
        list:
          - kafka:ListConfigurations
        read:
          - kafka:DescribeConfiguration
        update:
          - kafka:UpdateConfiguration
          - kafka:DescribeConfiguration
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    TopicReplication:
      type: object
      additionalProperties: false
      properties:
        TopicsToReplicate:
          description: List of regular expression patterns indicating the topics to copy.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 249
        TopicsToExclude:
          description: List of regular expression patterns indicating the topics that should not be replicated.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 249
        CopyTopicConfigurations:
          description: Whether to periodically configure remote topics to match their corresponding upstream topics.
          type: boolean
        CopyAccessControlListsForTopics:
          description: Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
          type: boolean
        DetectAndCopyNewTopics:
          description: Whether to periodically check for new topics and partitions.
          type: boolean
      required:
        - TopicsToReplicate
    ConsumerGroupReplication:
      description: Configuration relating to consumer group replication.
      type: object
      additionalProperties: false
      properties:
        ConsumerGroupsToReplicate:
          description: List of regular expression patterns indicating the consumer groups to copy.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 100
          items:
            type: string
            maxLength: 256
        ConsumerGroupsToExclude:
          description: List of regular expression patterns indicating the consumer groups that should not be replicated.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 256
        SynchroniseConsumerGroupOffsets:
          description: Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
          type: boolean
        DetectAndCopyNewConsumerGroups:
          description: Whether to periodically check for new consumer groups.
          type: boolean
      required:
        - ConsumerGroupsToReplicate
    ReplicationInfo:
      description: Specifies configuration for replication between a source and target Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        SourceKafkaClusterArn:
          description: Amazon Resource Name of the source Kafka cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        TargetKafkaClusterArn:
          description: Amazon Resource Name of the target Kafka cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        TargetCompressionType:
          description: The type of compression to use writing records to target Kafka cluster.
          type: string
          enum:
            - NONE
            - GZIP
            - SNAPPY
            - LZ4
            - ZSTD
        TopicReplication:
          description: Configuration relating to topic replication.
          $ref: '#/components/schemas/TopicReplication'
        ConsumerGroupReplication:
          description: Configuration relating to consumer group replication.
          $ref: '#/components/schemas/ConsumerGroupReplication'
      required:
        - SourceKafkaClusterArn
        - TargetKafkaClusterArn
        - TopicReplication
        - ConsumerGroupReplication
        - TargetCompressionType
    AmazonMskCluster:
      description: Details of an Amazon MSK cluster.
      type: object
      additionalProperties: false
      properties:
        MskClusterArn:
          description: The ARN of an Amazon MSK cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
      required:
        - MskClusterArn
    KafkaClusterClientVpcConfig:
      description: Details of an Amazon VPC which has network connectivity to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        SecurityGroupIds:
          description: The AWS security groups to associate with the elastic network interfaces in order to specify what the replicator has access to. If a security group is not specified, the default security group associated with the VPC is used.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 16
          items:
            type: string
        SubnetIds:
          description: The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 2
          maxItems: 3
          items:
            type: string
      required:
        - SubnetIds
    KafkaCluster:
      description: Details of a Kafka cluster for replication.
      type: object
      additionalProperties: false
      properties:
        AmazonMskCluster:
          description: Details of an Amazon MSK cluster. Exactly one of AmazonMskCluster is required.
          $ref: '#/components/schemas/AmazonMskCluster'
        VpcConfig:
          description: Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
          $ref: '#/components/schemas/KafkaClusterClientVpcConfig'
      required:
        - AmazonMskCluster
        - VpcConfig
    Replicator:
      type: object
      properties:
        ReplicatorArn:
          description: Amazon Resource Name for the created replicator.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        ReplicatorName:
          description: The name of the replicator.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[0-9A-Za-z][0-9A-Za-z-]{0,}$
        CurrentVersion:
          description: The current version of the MSK replicator.
          type: string
        Description:
          description: A summary description of the replicator.
          type: string
          maxLength: 1024
        KafkaClusters:
          description: Specifies a list of Kafka clusters which are targets of the replicator.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/KafkaCluster'
        ReplicationInfoList:
          description: A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ReplicationInfo'
        ServiceExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used by the replicator to access external resources.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicatorName
        - ReplicationInfoList
        - KafkaClusters
        - ServiceExecutionRoleArn
      x-stackql-resource-name: replicator
      x-stackql-primaryIdentifier:
        - ReplicatorArn
      x-create-only-properties:
        - ReplicatorName
        - Description
        - KafkaClusters
        - ServiceExecutionRoleArn
      x-read-only-properties:
        - ReplicatorArn
      x-required-permissions:
        create:
          - ec2:CreateNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - kafka:CreateReplicator
          - kafka:CreateReplicatorReference
          - kafka:DescribeClusterV2
          - kafka:DescribeReplicator
          - kafka:GetBootstrapBrokers
          - kafka:ListTagsForResource
          - kafka:TagResource
        read:
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
        update:
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
          - kafka:TagResource
          - kafka:UntagResource
          - kafka:UpdateReplicationInfo
        delete:
          - kafka:DeleteReplicator
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
          - kafka:UntagResource
        list:
          - kafka:ListReplicators
    VpcConfig:
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
      required:
        - SubnetIds
    ServerlessCluster:
      type: object
      properties:
        Arn:
          type: string
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        VpcConfigs:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/VpcConfig'
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
      required:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
      x-stackql-resource-name: serverless_cluster
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
        - Tags
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - kafka:CreateClusterV2
          - kafka:TagResource
          - kafka:DescribeClusterV2
          - ec2:CreateVpcEndpoint
          - ec2:CreateTags
          - ec2:DescribeVpcAttribute
          - ec2:DescribeSubnets
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeVpcs
          - ec2:DescribeSecurityGroups
        read:
          - kafka:DescribeClusterV2
        delete:
          - kafka:DeleteCluster
          - kafka:DescribeClusterV2
          - ec2:DeleteVpcEndpoints
        list:
          - kafka:ListClustersV2
    Authentication:
      type: string
      description: The type of private link authentication
      minLength: 3
      maxLength: 10
      enum:
        - SASL_IAM
        - SASL_SCRAM
        - TLS
    ClientSubnets:
      type: array
      uniqueItems: false
      x-insertionOrder: false
      items:
        type: string
        pattern: ^(subnet-)([a-z0-9]+)\Z
    SecurityGroups:
      type: array
      uniqueItems: false
      x-insertionOrder: false
      items:
        type: string
        pattern: ^(sg-)([a-z0-9]+)\Z
    Tags:
      type: object
      description: A key-value pair to associate with a resource.
      x-patternProperties:
        ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
          type: string
      additionalProperties: false
    VpcId:
      type: string
      pattern: ^(vpc-)([a-z0-9]+)\Z
    VpcConnection:
      type: object
      properties:
        Arn:
          type: string
        Authentication:
          $ref: '#/components/schemas/Authentication'
        ClientSubnets:
          $ref: '#/components/schemas/ClientSubnets'
        TargetClusterArn:
          description: The Amazon Resource Name (ARN) of the target cluster
          type: string
          pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroups'
        Tags:
          $ref: '#/components/schemas/Tags'
        VpcId:
          $ref: '#/components/schemas/VpcId'
      required:
        - Authentication
        - ClientSubnets
        - SecurityGroups
        - TargetClusterArn
        - VpcId
      x-stackql-resource-name: vpc_connection
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - ClientSubnets
        - Authentication
        - SecurityGroups
        - TargetClusterArn
        - VpcId
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - ec2:CreateVpcEndpoint
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DescribeVpcEndpoints
          - ec2:AcceptVpcEndpointConnections
          - ec2:RejectVpcEndpointConnections
          - ec2:DescribeVpcEndpointConnections
          - ec2:CreateTags
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kafka:CreateVpcConnection
          - kafka:DescribeVpcConnection
          - kafka:TagResource
          - kms:CreateGrant
          - kms:DescribeKey
        read:
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
        update:
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
          - kafka:TagResource
          - kafka:UntagResource
        delete:
          - ec2:DeleteVpcEndpoint
          - ec2:DeleteVpcEndpoints
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeVpcEndpointConnections
          - kafka:DeleteVpcConnection
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
        list:
          - kafka:ListVpcConnections
          - kms:CreateGrant
          - kms:DescribeKey
  x-stackQL-resources:
    batch_scram_secrets:
      name: batch_scram_secrets
      id: awscc.msk.batch_scram_secrets
      x-cfn-schema-name: BatchScramSecret
      x-type: list
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
                AND region = 'us-east-1'
    batch_scram_secret:
      name: batch_scram_secret
      id: awscc.msk.batch_scram_secret
      x-cfn-schema-name: BatchScramSecret
      x-type: get
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.SecretArnList') as secret_arn_list
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(Properties, 'SecretArnList') as secret_arn_list
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
                AND data__Identifier = '<ClusterArn>'
                AND region = 'us-east-1'
    clusters:
      name: clusters
      id: awscc.msk.clusters
      x-cfn-schema-name: Cluster
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Cluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Cluster'
                AND region = 'us-east-1'
    cluster:
      name: cluster
      id: awscc.msk.cluster
      x-cfn-schema-name: Cluster
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo') as broker_node_group_info,
              JSON_EXTRACT(Properties, '$.EnhancedMonitoring') as enhanced_monitoring,
              JSON_EXTRACT(Properties, '$.KafkaVersion') as kafka_version,
              JSON_EXTRACT(Properties, '$.NumberOfBrokerNodes') as number_of_broker_nodes,
              JSON_EXTRACT(Properties, '$.EncryptionInfo') as encryption_info,
              JSON_EXTRACT(Properties, '$.OpenMonitoring') as open_monitoring,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(Properties, '$.ClientAuthentication') as client_authentication,
              JSON_EXTRACT(Properties, '$.LoggingInfo') as logging_info,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ConfigurationInfo') as configuration_info,
              JSON_EXTRACT(Properties, '$.StorageMode') as storage_mode
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Cluster'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'BrokerNodeGroupInfo') as broker_node_group_info,
                json_extract_path_text(Properties, 'EnhancedMonitoring') as enhanced_monitoring,
                json_extract_path_text(Properties, 'KafkaVersion') as kafka_version,
                json_extract_path_text(Properties, 'NumberOfBrokerNodes') as number_of_broker_nodes,
                json_extract_path_text(Properties, 'EncryptionInfo') as encryption_info,
                json_extract_path_text(Properties, 'OpenMonitoring') as open_monitoring,
                json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CurrentVersion') as current_version,
                json_extract_path_text(Properties, 'ClientAuthentication') as client_authentication,
                json_extract_path_text(Properties, 'LoggingInfo') as logging_info,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ConfigurationInfo') as configuration_info,
                json_extract_path_text(Properties, 'StorageMode') as storage_mode
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Cluster'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    cluster_policies:
      name: cluster_policies
      id: awscc.msk.cluster_policies
      x-cfn-schema-name: ClusterPolicy
      x-type: list
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
                AND region = 'us-east-1'
    cluster_policy:
      name: cluster_policy
      id: awscc.msk.cluster_policy
      x-cfn-schema-name: ClusterPolicy
      x-type: get
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Policy') as policy,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(Properties, 'CurrentVersion') as current_version
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
                AND data__Identifier = '<ClusterArn>'
                AND region = 'us-east-1'
    configurations:
      name: configurations
      id: awscc.msk.configurations
      x-cfn-schema-name: Configuration
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Configuration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Configuration'
                AND region = 'us-east-1'
    configuration:
      name: configuration
      id: awscc.msk.configuration
      x-cfn-schema-name: Configuration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ServerProperties') as server_properties,
              JSON_EXTRACT(Properties, '$.KafkaVersionsList') as kafka_versions_list,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.LatestRevision') as latest_revision
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Configuration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ServerProperties') as server_properties,
                json_extract_path_text(Properties, 'KafkaVersionsList') as kafka_versions_list,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'LatestRevision') as latest_revision
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Configuration'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    replicators:
      name: replicators
      id: awscc.msk.replicators
      x-cfn-schema-name: Replicator
      x-type: list
      x-identifiers:
        - ReplicatorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicatorArn') as replicator_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Replicator'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicatorArn') as replicator_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Replicator'
                AND region = 'us-east-1'
    replicator:
      name: replicator
      id: awscc.msk.replicator
      x-cfn-schema-name: Replicator
      x-type: get
      x-identifiers:
        - ReplicatorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ReplicatorArn') as replicator_arn,
              JSON_EXTRACT(Properties, '$.ReplicatorName') as replicator_name,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KafkaClusters') as kafka_clusters,
              JSON_EXTRACT(Properties, '$.ReplicationInfoList') as replication_info_list,
              JSON_EXTRACT(Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Replicator'
              AND data__Identifier = '<ReplicatorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ReplicatorArn') as replicator_arn,
                json_extract_path_text(Properties, 'ReplicatorName') as replicator_name,
                json_extract_path_text(Properties, 'CurrentVersion') as current_version,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'KafkaClusters') as kafka_clusters,
                json_extract_path_text(Properties, 'ReplicationInfoList') as replication_info_list,
                json_extract_path_text(Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Replicator'
                AND data__Identifier = '<ReplicatorArn>'
                AND region = 'us-east-1'
    serverless_clusters:
      name: serverless_clusters
      id: awscc.msk.serverless_clusters
      x-cfn-schema-name: ServerlessCluster
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND region = 'us-east-1'
    serverless_cluster:
      name: serverless_cluster
      id: awscc.msk.serverless_cluster
      x-cfn-schema-name: ServerlessCluster
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.VpcConfigs') as vpc_configs,
              JSON_EXTRACT(Properties, '$.ClientAuthentication') as client_authentication,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(Properties, 'VpcConfigs') as vpc_configs,
                json_extract_path_text(Properties, 'ClientAuthentication') as client_authentication,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    vpc_connections:
      name: vpc_connections
      id: awscc.msk.vpc_connections
      x-cfn-schema-name: VpcConnection
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::VpcConnection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::VpcConnection'
                AND region = 'us-east-1'
    vpc_connection:
      name: vpc_connection
      id: awscc.msk.vpc_connection
      x-cfn-schema-name: VpcConnection
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Authentication') as authentication,
              JSON_EXTRACT(Properties, '$.ClientSubnets') as client_subnets,
              JSON_EXTRACT(Properties, '$.TargetClusterArn') as target_cluster_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::VpcConnection'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Authentication') as authentication,
                json_extract_path_text(Properties, 'ClientSubnets') as client_subnets,
                json_extract_path_text(Properties, 'TargetClusterArn') as target_cluster_arn,
                json_extract_path_text(Properties, 'SecurityGroups') as security_groups,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'VpcId') as vpc_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::VpcConnection'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
