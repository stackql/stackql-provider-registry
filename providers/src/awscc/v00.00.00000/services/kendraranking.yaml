openapi: 3.0.0
info:
  title: KendraRanking
  version: 1.0.0
paths: {}
components:
  schemas:
    Description:
      type: string
      maxLength: 1000
    Tag:
      description: A label for tagging KendraRanking resources
      type: object
      properties:
        Key:
          description: A string used to identify this tag
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Tags:
      description: List of tags
      type: array
      x-insertionOrder: false
      maxItems: 200
      items:
        $ref: '#/components/schemas/Tag'
    RescoreCapacityUnits:
      type: integer
      minimum: 0
    CapacityUnitsConfiguration:
      type: object
      properties:
        RescoreCapacityUnits:
          $ref: '#/components/schemas/RescoreCapacityUnits'
      additionalProperties: false
      required:
        - RescoreCapacityUnits
    Name:
      description: Name of kendra ranking rescore execution plan
      type: string
      minLength: 1
      maxLength: 1000
    Id:
      description: Unique ID of rescore execution plan
      type: string
      minLength: 36
      maxLength: 36
    Arn:
      type: string
      maxLength: 1000
    ExecutionPlan:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Id'
        Arn:
          $ref: '#/components/schemas/Arn'
        Description:
          description: A description for the execution plan
          $ref: '#/components/schemas/Description'
        Tags:
          description: Tags for labeling the execution plan
          $ref: '#/components/schemas/Tags'
        Name:
          $ref: '#/components/schemas/Name'
        CapacityUnits:
          description: Capacity units
          $ref: '#/components/schemas/CapacityUnitsConfiguration'
      required:
        - Name
      x-stackql-resource-name: execution_plan
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - kendra-ranking:CreateRescoreExecutionPlan
          - kendra-ranking:DescribeRescoreExecutionPlan
          - kendra-ranking:UpdateRescoreExecutionPlan
          - kendra-ranking:ListTagsForResource
          - kendra-ranking:TagResource
        read:
          - kendra-ranking:DescribeRescoreExecutionPlan
          - kendra-ranking:ListTagsForResource
        update:
          - kendra-ranking:DescribeRescoreExecutionPlan
          - kendra-ranking:UpdateRescoreExecutionPlan
          - kendra-ranking:ListTagsForResource
          - kendra-ranking:TagResource
          - kendra-ranking:UntagResource
        delete:
          - kendra-ranking:DescribeRescoreExecutionPlan
          - kendra-ranking:DeleteRescoreExecutionPlan
        list:
          - kendra-ranking:ListRescoreExecutionPlans
  x-stackQL-resources:
    execution_plans:
      name: execution_plans
      id: awscc.kendraranking.execution_plans
      x-cfn-schema-name: ExecutionPlan
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::KendraRanking::ExecutionPlan'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::KendraRanking::ExecutionPlan'
                AND region = 'us-east-1'
    execution_plan:
      name: execution_plan
      id: awscc.kendraranking.execution_plan
      x-cfn-schema-name: ExecutionPlan
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CapacityUnits') as capacity_units
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::KendraRanking::ExecutionPlan'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'CapacityUnits') as capacity_units
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::KendraRanking::ExecutionPlan'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
