openapi: 3.0.0
info:
  title: Oam
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceType:
      type: string
      enum:
        - AWS::CloudWatch::Metric
        - AWS::Logs::LogGroup
        - AWS::XRay::Trace
        - AWS::ApplicationInsights::Application
    Link:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 2048
        Label:
          type: string
        LabelTemplate:
          type: string
          maxLength: 64
          minLength: 1
        ResourceTypes:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ResourceType'
          maxItems: 50
          minItems: 1
          uniqueItems: true
        SinkIdentifier:
          type: string
          maxLength: 2048
          minLength: 1
        Tags:
          description: Tags to apply to the link
          type: object
          additionalProperties: false
          x-patternProperties:
            ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{1,128}$:
              type: string
              description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
              pattern: ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{0,256}$
              minLength: 0
              maxLength: 256
      required:
        - ResourceTypes
        - SinkIdentifier
      x-stackql-resource-name: link
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - SinkIdentifier
        - LabelTemplate
      x-read-only-properties:
        - Arn
        - Label
      x-required-permissions:
        create:
          - oam:CreateLink
          - oam:GetLink
          - cloudwatch:Link
          - logs:Link
          - xray:Link
          - applicationinsights:Link
        read:
          - oam:GetLink
        update:
          - oam:GetLink
          - oam:UpdateLink
          - cloudwatch:Link
          - logs:Link
          - xray:Link
          - applicationinsights:Link
          - oam:TagResource
          - oam:UntagResource
        delete:
          - oam:DeleteLink
          - oam:GetLink
        list:
          - oam:ListLinks
    Sink:
      type: object
      properties:
        Arn:
          description: The Amazon resource name (ARN) of the ObservabilityAccessManager Sink
          type: string
          maxLength: 2048
        Name:
          description: The name of the ObservabilityAccessManager Sink.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9_.-]+$
        Policy:
          description: The policy of this ObservabilityAccessManager Sink.
          type: object
        Tags:
          description: Tags to apply to the sink
          type: object
          additionalProperties: false
          x-patternProperties:
            ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{1,128}$:
              type: string
              description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
              pattern: ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{0,256}$
              minLength: 0
              maxLength: 256
      required:
        - Name
      x-stackql-resource-name: sink
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - oam:CreateSink
          - oam:PutSinkPolicy
          - oam:GetSinkPolicy
          - oam:GetSink
        delete:
          - oam:DeleteSink
          - oam:GetSinkPolicy
          - oam:GetSink
        list:
          - oam:ListSinks
        read:
          - oam:GetSinkPolicy
          - oam:GetSink
        update:
          - oam:PutSinkPolicy
          - oam:GetSinkPolicy
          - oam:GetSink
          - oam:TagResource
          - oam:UntagResource
  x-stackQL-resources:
    links:
      name: links
      id: awscc.oam.links
      x-cfn-schema-name: Link
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Oam::Link'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Oam::Link'
                AND region = 'us-east-1'
    link:
      name: link
      id: awscc.oam.link
      x-cfn-schema-name: Link
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Label') as label,
              JSON_EXTRACT(Properties, '$.LabelTemplate') as label_template,
              JSON_EXTRACT(Properties, '$.ResourceTypes') as resource_types,
              JSON_EXTRACT(Properties, '$.SinkIdentifier') as sink_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Oam::Link'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Label') as label,
                json_extract_path_text(Properties, 'LabelTemplate') as label_template,
                json_extract_path_text(Properties, 'ResourceTypes') as resource_types,
                json_extract_path_text(Properties, 'SinkIdentifier') as sink_identifier,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Oam::Link'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    sinks:
      name: sinks
      id: awscc.oam.sinks
      x-cfn-schema-name: Sink
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Oam::Sink'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Oam::Sink'
                AND region = 'us-east-1'
    sink:
      name: sink
      id: awscc.oam.sink
      x-cfn-schema-name: Sink
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Oam::Sink'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Policy') as policy,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Oam::Sink'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
