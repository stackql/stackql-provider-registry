openapi: 3.0.0
info:
  title: ControlTower
  version: 1.0.0
paths: {}
components:
  schemas:
    Parameter:
      type: object
      properties:
        Key:
          type: string
          maxLength: 256
          minLength: 1
        Value:
          $ref: '#/components/schemas/AnyType'
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 256
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      additionalProperties: false
    AnyType:
      anyOf:
        - type: string
        - type: object
        - type: number
        - type: array
          items:
            anyOf:
              - type: boolean
              - type: number
              - type: object
              - type: string
          insertionOrder: false
        - type: boolean
    EnabledBaseline:
      type: object
      properties:
        BaselineIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        BaselineVersion:
          type: string
          pattern: ^\d+(?:\.\d+){0,2}$
        EnabledBaselineIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        TargetIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      required:
        - BaselineIdentifier
        - TargetIdentifier
        - BaselineVersion
      x-stackql-resource-name: enabled_baseline
      x-stackql-primaryIdentifier:
        - EnabledBaselineIdentifier
      x-create-only-properties:
        - TargetIdentifier
        - BaselineIdentifier
      x-read-only-properties:
        - EnabledBaselineIdentifier
      x-required-permissions:
        create:
          - controltower:EnableBaseline
          - controltower:TagResource
          - controltower:GetBaselineOperation
          - controltower:GetEnabledBaseline
          - controltower:ListTagsForResource
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
        read:
          - controltower:GetEnabledBaseline
          - controltower:ListEnabledBaselines
          - controltower:ListTagsForResource
        update:
          - controltower:UpdateEnabledBaseline
          - controltower:GetBaselineOperation
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
          - controltower:TagResource
          - controltower:ListTagsForResource
          - controltower:GetEnabledBaseline
        delete:
          - controltower:DisableBaseline
          - controltower:GetBaselineOperation
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
        list:
          - controltower:ListEnabledBaselines
    EnabledControlParameter:
      type: object
      properties:
        Value:
          anyOf:
            - type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: object
                  - type: boolean
              minItems: 1
              insertionOrder: false
            - type: string
            - type: number
            - type: object
            - type: boolean
        Key:
          type: string
      required:
        - Value
        - Key
      additionalProperties: false
    EnabledControl:
      type: object
      properties:
        ControlIdentifier:
          description: Arn of the control.
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
        TargetIdentifier:
          description: Arn for Organizational unit to which the control needs to be applied
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
        Parameters:
          description: Parameters to configure the enabled control behavior.
          type: array
          items:
            $ref: '#/components/schemas/EnabledControlParameter'
          minItems: 1
          x-insertionOrder: false
        Tags:
          description: A set of tags to assign to the enabled control.
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          x-insertionOrder: false
      required:
        - TargetIdentifier
        - ControlIdentifier
      x-stackql-resource-name: enabled_control
      x-stackql-primaryIdentifier:
        - TargetIdentifier
        - ControlIdentifier
      x-create-only-properties:
        - TargetIdentifier
        - ControlIdentifier
      x-required-permissions:
        create:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:GetControlOperation
          - controltower:EnableControl
          - controltower:TagResource
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        update:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:GetControlOperation
          - controltower:UpdateEnabledControl
          - controltower:UntagResource
          - controltower:TagResource
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        delete:
          - controltower:GetControlOperation
          - controltower:DisableControl
          - organizations:UpdatePolicy
          - organizations:DeletePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        read:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:ListTagsForResource
        list:
          - controltower:ListEnabledControls
    LandingZoneDriftStatus:
      type: string
      enum:
        - DRIFTED
        - IN_SYNC
    LandingZoneStatus:
      type: string
      enum:
        - ACTIVE
        - PROCESSING
        - FAILED
    LandingZone:
      type: object
      properties:
        LandingZoneIdentifier:
          type: string
        Arn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        Status:
          $ref: '#/components/schemas/LandingZoneStatus'
        LatestAvailableVersion:
          type: string
          maxLength: 10
          minLength: 3
          pattern: \d+.\d+
        DriftStatus:
          $ref: '#/components/schemas/LandingZoneDriftStatus'
        Manifest: {}
        Version:
          type: string
          maxLength: 10
          minLength: 3
          pattern: \d+.\d+
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Manifest
        - Version
      x-stackql-resource-name: landing_zone
      x-stackql-primaryIdentifier:
        - LandingZoneIdentifier
      x-read-only-properties:
        - LandingZoneIdentifier
        - Arn
        - Status
        - LatestAvailableVersion
        - DriftStatus
      x-required-permissions:
        create:
          - controltower:CreateLandingZone
          - controltower:GetLandingZoneOperation
          - controltower:ListTagsForResource
          - controltower:TagResource
          - controltower:GetLandingZone
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - sso:StartPeregrine
          - sso:RegisterRegion
        read:
          - controltower:GetLandingZone
          - controltower:ListTagsForResource
        update:
          - controltower:UpdateLandingZone
          - controltower:GetLandingZoneOperation
          - controltower:ListTagsForResource
          - controltower:TagResource
          - controltower:GetLandingZone
          - controltower:UntagResource
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - sso:StartPeregrine
          - sso:RegisterRegion
        delete:
          - controltower:DeleteLandingZone
          - controltower:GetLandingZone
          - controltower:GetLandingZoneOperation
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:DeleteProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProduct
          - servicecatalog:DisassociatePrincipalFromPortfolio
          - servicecatalog:DisassociateProductFromPortfolio
          - servicecatalog:DeletePortfolio
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - iam:DeleteRolePolicy
          - iam:DetachRolePolicy
          - iam:DeleteRole
        list:
          - controltower:ListLandingZones
  x-stackQL-resources:
    enabled_baselines:
      name: enabled_baselines
      id: awscc.controltower.enabled_baselines
      x-cfn-schema-name: EnabledBaseline
      x-type: list
      x-identifiers:
        - EnabledBaselineIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND region = 'us-east-1'
    enabled_baseline:
      name: enabled_baseline
      id: awscc.controltower.enabled_baseline
      x-cfn-schema-name: EnabledBaseline
      x-type: get
      x-identifiers:
        - EnabledBaselineIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BaselineIdentifier') as baseline_identifier,
              JSON_EXTRACT(Properties, '$.BaselineVersion') as baseline_version,
              JSON_EXTRACT(Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND data__Identifier = '<EnabledBaselineIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'BaselineIdentifier') as baseline_identifier,
                json_extract_path_text(Properties, 'BaselineVersion') as baseline_version,
                json_extract_path_text(Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier,
                json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(Properties, 'Parameters') as parameters,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND data__Identifier = '<EnabledBaselineIdentifier>'
                AND region = 'us-east-1'
    enabled_controls:
      name: enabled_controls
      id: awscc.controltower.enabled_controls
      x-cfn-schema-name: EnabledControl
      x-type: list
      x-identifiers:
        - TargetIdentifier
        - ControlIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(Properties, 'ControlIdentifier') as control_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND region = 'us-east-1'
    enabled_control:
      name: enabled_control
      id: awscc.controltower.enabled_control
      x-cfn-schema-name: EnabledControl
      x-type: get
      x-identifiers:
        - TargetIdentifier
        - ControlIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND data__Identifier = '<TargetIdentifier>|<ControlIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ControlIdentifier') as control_identifier,
                json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(Properties, 'Parameters') as parameters,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND data__Identifier = '<TargetIdentifier>|<ControlIdentifier>'
                AND region = 'us-east-1'
    landing_zones:
      name: landing_zones
      id: awscc.controltower.landing_zones
      x-cfn-schema-name: LandingZone
      x-type: list
      x-identifiers:
        - LandingZoneIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LandingZoneIdentifier') as landing_zone_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LandingZoneIdentifier') as landing_zone_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
                AND region = 'us-east-1'
    landing_zone:
      name: landing_zone
      id: awscc.controltower.landing_zone
      x-cfn-schema-name: LandingZone
      x-type: get
      x-identifiers:
        - LandingZoneIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LandingZoneIdentifier') as landing_zone_identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.LatestAvailableVersion') as latest_available_version,
              JSON_EXTRACT(Properties, '$.DriftStatus') as drift_status,
              JSON_EXTRACT(Properties, '$.Manifest') as manifest,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
              AND data__Identifier = '<LandingZoneIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'LandingZoneIdentifier') as landing_zone_identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'LatestAvailableVersion') as latest_available_version,
                json_extract_path_text(Properties, 'DriftStatus') as drift_status,
                json_extract_path_text(Properties, 'Manifest') as manifest,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
                AND data__Identifier = '<LandingZoneIdentifier>'
                AND region = 'us-east-1'
