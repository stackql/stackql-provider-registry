openapi: 3.0.0
info:
  title: DataSync
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      additionalProperties: false
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: The key for an AWS resource tag.
          pattern: ^[a-zA-Z0-9\s+=._:/-]+$
          maxLength: 256
          minLength: 1
        Value:
          type: string
          description: The value for an AWS resource tag.
          pattern: ^[a-zA-Z0-9\s+=._:@/-]+$
          maxLength: 256
          minLength: 1
      required:
        - Key
        - Value
    Agent:
      type: object
      properties:
        AgentName:
          description: The name configured for the agent. Text reference used to identify the agent in the console.
          type: string
          pattern: ^[a-zA-Z0-9\s+=._:@/-]+$
          maxLength: 256
          minLength: 1
        ActivationKey:
          description: Activation key of the Agent.
          type: string
          pattern: '[A-Z0-9]{5}(-[A-Z0-9]{5}){4}'
          maxLength: 29
        SecurityGroupArns:
          description: The ARNs of the security group used to protect your data transfer task subnets.
          type: array
          x-insertionOrder: false
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/.*$
            maxLength: 128
        SubnetArns:
          description: The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
          type: array
          x-insertionOrder: false
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:subnet/.*$
            maxLength: 128
        VpcEndpointId:
          description: The ID of the VPC endpoint that the agent has access to.
          type: string
          pattern: ^vpce-[0-9a-f]{17}$
        EndpointType:
          description: The service endpoints that the agent will connect to.
          type: string
          enum:
            - FIPS
            - PUBLIC
            - PRIVATE_LINK
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AgentArn:
          description: The DataSync Agent ARN.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
          maxLength: 128
      required: []
      x-stackql-resource-name: agent
      x-stackql-primaryIdentifier:
        - AgentArn
      x-create-only-properties:
        - ActivationKey
        - SecurityGroupArns
        - SubnetArns
        - VpcEndpointId
      x-read-only-properties:
        - AgentArn
        - EndpointType
      x-required-permissions:
        create:
          - datasync:CreateAgent
          - datasync:TagResource
          - datasync:DescribeAgent
          - datasync:ListTagsForResource
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcEndpoints
        read:
          - datasync:DescribeAgent
          - datasync:ListTagsForResource
        update:
          - datasync:UpdateAgent
          - datasync:DescribeAgent
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteAgent
        list:
          - datasync:ListAgents
    AzureBlobSasConfiguration:
      additionalProperties: false
      description: Specifies the shared access signature (SAS) that DataSync uses to access your Azure Blob Storage container.
      type: object
      properties:
        AzureBlobSasToken:
          description: Specifies the shared access signature (SAS) token, which indicates the permissions DataSync needs to access your Azure Blob Storage container.
          type: string
          pattern: (^.+$)
          minLength: 1
          maxLength: 255
      required:
        - AzureBlobSasToken
    LocationAzureBlob:
      type: object
      properties:
        AgentArns:
          description: The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
            maxLength: 128
          minItems: 1
          maxItems: 4
          x-insertionOrder: false
        AzureBlobAuthenticationType:
          description: The specific authentication type that you want DataSync to use to access your Azure Blob Container.
          type: string
          enum:
            - SAS
          default: SAS
        AzureBlobSasConfiguration:
          $ref: '#/components/schemas/AzureBlobSasConfiguration'
        AzureBlobContainerUrl:
          description: The URL of the Azure Blob container that was described.
          type: string
          pattern: ^https://[A-Za-z0-9]((.|-+)?[A-Za-z0-9]){0,252}/[a-z0-9](-?[a-z0-9]){2,62}$
          maxLength: 325
        AzureBlobType:
          description: Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
          type: string
          enum:
            - BLOCK
          default: BLOCK
        AzureAccessTier:
          description: Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
          type: string
          enum:
            - HOT
            - COOL
            - ARCHIVE
          default: HOT
        Subdirectory:
          description: The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
          type: string
          maxLength: 1024
          pattern: ^[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}\p{C}]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the Azure Blob Location that was described.
          type: string
          pattern: ^(azure-blob)://[a-zA-Z0-9./\-]+$
          maxLength: 4356
      required:
        - AzureBlobAuthenticationType
        - AgentArns
      x-stackql-resource-name: location_azure_blob
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - AzureBlobContainerUrl
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationAzureBlob
          - datasync:DescribeLocationAzureBlob
          - datasync:TagResource
          - datasync:ListTagsForResource
        read:
          - datasync:DescribeLocationAzureBlob
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationAzureBlob
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - datasync:UpdateLocationAzureBlob
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    Ec2Config:
      additionalProperties: false
      description: The subnet and security group that DataSync uses to access target EFS file system.
      type: object
      properties:
        SecurityGroupArns:
          description: The Amazon Resource Names (ARNs) of the security groups that are configured for the Amazon EC2 resource.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/.*$
            maxLength: 128
          minItems: 1
          maxItems: 5
          x-insertionOrder: false
        SubnetArn:
          description: The ARN of the subnet that DataSync uses to access the target EFS file system.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:subnet/.*$
          maxLength: 128
      required:
        - SecurityGroupArns
        - SubnetArn
    LocationEFS:
      type: object
      properties:
        Ec2Config:
          $ref: '#/components/schemas/Ec2Config'
        EfsFilesystemArn:
          description: The Amazon Resource Name (ARN) for the Amazon EFS file system.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):elasticfilesystem:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$
          maxLength: 128
        AccessPointArn:
          description: The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):elasticfilesystem:[a-z\-0-9]+:[0-9]{12}:access-point/fsap-[0-9a-f]{8,40}$
          maxLength: 128
        FileSystemAccessRoleArn:
          description: The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$
          maxLength: 128
        InTransitEncryption:
          description: Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
          type: string
          enum:
            - NONE
            - TLS1_2
        Subdirectory:
          description: A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the EFS location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9.\-/]+$
          maxLength: 4356
      required:
        - Ec2Config
      x-stackql-resource-name: location_efs
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - Ec2Config
        - EfsFilesystemArn
        - Subdirectory
        - FileSystemAccessRoleArn
        - InTransitEncryption
        - AccessPointArn
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationEfs
          - datasync:DescribeLocationEfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - elasticfilesystem:DescribeFileSystems
          - elasticfilesystem:DescribeMountTargets
          - elasticfilesystem:DescribeAccessPoints
          - iam:PassRole
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - datasync:DescribeLocationEfs
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationEfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    LocationFSxLustre:
      type: object
      properties:
        FsxFilesystemArn:
          description: The Amazon Resource Name (ARN) for the FSx for Lustre file system.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]+:[0-9]{12}:file-system/fs-[0-9a-f]+$
        SecurityGroupArns:
          description: The ARNs of the security groups that are to use to configure the FSx for Lustre file system.
          type: array
          items:
            type: string
            maxLength: 128
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/sg-[a-f0-9]+$
          maxItems: 5
          minItems: 1
          x-insertionOrder: false
        Subdirectory:
          description: A subdirectory in the location's path.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          minItems: 0
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon FSx for Lustre file system location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the FSx for Lustre location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw|hdfs|fsxl)://[a-zA-Z0-9.:/\-]+$
          maxLength: 4356
      required:
        - SecurityGroupArns
      x-stackql-resource-name: locationf_sx_lustre
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - FsxFilesystemArn
        - SecurityGroupArns
        - Subdirectory
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationFsxLustre
          - datasync:DescribeLocationFsxLustre
          - datasync:ListTagsForResource
          - datasync:TagResource
          - fsx:DescribeFileSystems
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - datasync:DescribeLocationFsxLustre
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationFsxLustre
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    Protocol:
      additionalProperties: false
      description: Configuration settings for an NFS or SMB protocol, currently only support NFS
      type: object
      properties:
        NFS:
          $ref: '#/components/schemas/NFS'
    NFS:
      additionalProperties: false
      description: FSx OpenZFS file system NFS protocol information
      type: object
      properties:
        MountOptions:
          $ref: '#/components/schemas/MountOptions'
      required:
        - MountOptions
    SMB:
      additionalProperties: false
      description: SMB protocol configuration for FSx ONTAP file system.
      type: object
      properties:
        MountOptions:
          $ref: '#/components/schemas/SmbMountOptions'
        Domain:
          description: The name of the Windows domain that the SMB server belongs to.
          type: string
          maxLength: 253
          pattern: ^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$
        Password:
          description: The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
          type: string
          maxLength: 104
          pattern: ^.{0,104}$
        User:
          description: The user who can mount the share, has the permissions to access files and folders in the SMB share.
          type: string
          maxLength: 104
          pattern: ^[^\x5B\x5D\\/:;|=,+*?]{1,104}$
      required:
        - User
        - Password
        - MountOptions
    NfsMountOptions:
      additionalProperties: false
      description: The NFS mount options that DataSync can use to mount your NFS share.
      type: object
      properties:
        Version:
          description: The specific NFS version that you want DataSync to use to mount your NFS share.
          type: string
          enum:
            - AUTOMATIC
            - NFS3
            - NFS4_0
            - NFS4_1
    SmbMountOptions:
      additionalProperties: false
      description: The mount options used by DataSync to access the SMB server.
      type: object
      properties:
        Version:
          description: The specific SMB version that you want DataSync to use to mount your SMB share.
          type: string
          enum:
            - AUTOMATIC
            - SMB2
            - SMB3
    LocationFSxONTAP:
      type: object
      properties:
        StorageVirtualMachineArn:
          description: The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
          type: string
          maxLength: 162
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]+:[0-9]{12}:storage-virtual-machine/fs-[0-9a-f]+/svm-[0-9a-f]{17,}$
        FsxFilesystemArn:
          description: The Amazon Resource Name (ARN) for the FSx ONAP file system.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]+:[0-9]{12}:file-system/fs-[0-9a-f]+$
        SecurityGroupArns:
          description: The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
          type: array
          items:
            type: string
            maxLength: 128
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/sg-[a-f0-9]+$
          maxItems: 5
          minItems: 1
          x-insertionOrder: false
        Protocol:
          $ref: '#/components/schemas/Protocol'
        Subdirectory:
          description: A subdirectory in the location's path.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          minItems: 0
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon FSx ONTAP file system location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the FSx ONTAP file system that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|hdfs|fsx[a-z0-9-]+)://[a-zA-Z0-9.:/\-]+$
          maxLength: 4360
      required:
        - SecurityGroupArns
        - StorageVirtualMachineArn
      x-stackql-resource-name: locationf_sx_ontap
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - StorageVirtualMachineArn
        - SecurityGroupArns
        - Protocol
        - Subdirectory
      x-read-only-properties:
        - LocationArn
        - LocationUri
        - FsxFilesystemArn
      x-required-permissions:
        create:
          - datasync:CreateLocationFsxOntap
          - datasync:DescribeLocationFsxOntap
          - datasync:ListTagsForResource
          - datasync:TagResource
          - fsx:DescribeStorageVirtualMachines
          - fsx:DescribeFileSystems
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - datasync:DescribeLocationFsxOntap
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationFsxOntap
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    MountOptions:
      additionalProperties: false
      description: The mount options used by DataSync to access the SMB server.
      type: object
      properties:
        Version:
          description: The specific SMB version that you want DataSync to use to mount your SMB share.
          type: string
          enum:
            - AUTOMATIC
            - SMB1
            - SMB2_0
            - SMB2
            - SMB3
    LocationFSxOpenZFS:
      type: object
      properties:
        FsxFilesystemArn:
          description: The Amazon Resource Name (ARN) for the FSx OpenZFS file system.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]+:[0-9]{12}:file-system/fs-[0-9a-f]+$
        SecurityGroupArns:
          description: The ARNs of the security groups that are to use to configure the FSx OpenZFS file system.
          type: array
          items:
            type: string
            maxLength: 128
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/sg-[a-f0-9]+$
          maxItems: 5
          minItems: 1
          x-insertionOrder: false
        Protocol:
          $ref: '#/components/schemas/Protocol'
        Subdirectory:
          description: A subdirectory in the location's path.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          minItems: 0
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon FSx OpenZFS file system location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the FSx OpenZFS that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw|hdfs|fsxl|fsxz)://[a-zA-Z0-9.:/\-]+$
          maxLength: 4356
      required:
        - SecurityGroupArns
        - Protocol
      x-stackql-resource-name: locationf_sx_open_zfs
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - FsxFilesystemArn
        - SecurityGroupArns
        - Protocol
        - Subdirectory
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationFsxOpenZfs
          - datasync:DescribeLocationFsxOpenZfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - fsx:DescribeFileSystems
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - datasync:DescribeLocationFsxOpenZfs
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationFsxOpenZfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    LocationFSxWindows:
      type: object
      properties:
        Domain:
          description: The name of the Windows domain that the FSx for Windows server belongs to.
          type: string
          maxLength: 253
          pattern: ^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$
        FsxFilesystemArn:
          description: The Amazon Resource Name (ARN) for the FSx for Windows file system.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$
        Password:
          description: The password of the user who has the permissions to access files and folders in the FSx for Windows file system.
          type: string
          maxLength: 104
          pattern: ^.{0,104}$
        SecurityGroupArns:
          description: The ARNs of the security groups that are to use to configure the FSx for Windows file system.
          type: array
          items:
            type: string
            maxLength: 128
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/.*$
          x-insertionOrder: false
        Subdirectory:
          description: A subdirectory in the location's path.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        User:
          description: The user who has the permissions to access files and folders in the FSx for Windows file system.
          type: string
          maxLength: 104
          pattern: ^[^\x5B\x5D\\/:;|=,+*?]{1,104}$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon FSx for Windows file system location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the FSx for Windows location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\-]+$
          maxLength: 4356
      required:
        - User
        - SecurityGroupArns
      x-stackql-resource-name: locationf_sx_windows
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - Domain
        - FsxFilesystemArn
        - Password
        - SecurityGroupArns
        - Subdirectory
        - User
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationFsxWindows
          - datasync:DescribeLocationFsxWindows
          - datasync:ListTagsForResource
          - datasync:TagResource
          - fsx:DescribeFileSystems
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - datasync:DescribeLocationFsxWindows
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationFsxWindows
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    NameNode:
      additionalProperties: false
      description: HDFS Name Node IP and port information.
      type: object
      properties:
        Hostname:
          description: The DNS name or IP address of the Name Node in the customer's on premises HDFS cluster.
          type: string
          pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
          maxLength: 255
        Port:
          description: The port on which the Name Node is listening on for client requests.
          type: integer
          minimum: 1
          maximum: 65536
      required:
        - Hostname
        - Port
    QopConfiguration:
      additionalProperties: false
      description: Configuration information for RPC Protection and Data Transfer Protection. These parameters can be set to AUTHENTICATION, INTEGRITY, or PRIVACY. The default value is PRIVACY.
      type: object
      properties:
        RpcProtection:
          type: string
          description: Configuration for RPC Protection.
          enum:
            - AUTHENTICATION
            - INTEGRITY
            - PRIVACY
            - DISABLED
          default: PRIVACY
        DataTransferProtection:
          type: string
          description: Configuration for Data Transfer Protection.
          enum:
            - AUTHENTICATION
            - INTEGRITY
            - PRIVACY
            - DISABLED
          default: PRIVACY
    LocationHDFS:
      type: object
      properties:
        NameNodes:
          description: An array of Name Node(s) of the HDFS location.
          type: array
          items:
            $ref: '#/components/schemas/NameNode'
          minItems: 1
          x-insertionOrder: false
        BlockSize:
          description: Size of chunks (blocks) in bytes that the data is divided into when stored in the HDFS cluster.
          type: integer
          format: int64
          minimum: 1048576
          maximum: 1073741824
        ReplicationFactor:
          description: Number of copies of each block that exists inside the HDFS cluster.
          type: integer
          format: int64
          default: 3
          minimum: 1
          maximum: 512
        KmsKeyProviderUri:
          description: The identifier for the Key Management Server where the encryption keys that encrypt data inside HDFS clusters are stored.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^kms:\/\/http[s]?@(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])(;(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9]))*:[0-9]{1,5}\/kms$
        QopConfiguration:
          $ref: '#/components/schemas/QopConfiguration'
        AuthenticationType:
          description: The authentication mode used to determine identity of user.
          type: string
          enum:
            - SIMPLE
            - KERBEROS
        SimpleUser:
          description: The user name that has read and write permissions on the specified HDFS cluster.
          type: string
          pattern: ^[_.A-Za-z0-9][-_.A-Za-z0-9]*$
          minLength: 1
          maxLength: 256
        KerberosPrincipal:
          description: The unique identity, or principal, to which Kerberos can assign tickets.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 256
        KerberosKeytab:
          description: The Base64 string representation of the Keytab file.
          type: string
          maxLength: 87384
        KerberosKrb5Conf:
          description: The string representation of the Krb5Conf file, or the presigned URL to access the Krb5.conf file within an S3 bucket.
          type: string
          maxLength: 174764
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AgentArns:
          description: ARN(s) of the agent(s) to use for an HDFS location.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
            maxLength: 128
          minItems: 1
          maxItems: 4
          x-insertionOrder: false
        Subdirectory:
          description: The subdirectory in HDFS that is used to read data from the HDFS source location or write data to the HDFS destination.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        LocationArn:
          description: The Amazon Resource Name (ARN) of the HDFS location.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the HDFS location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw|hdfs)://[a-zA-Z0-9.:/\-]+$
          maxLength: 4356
      required:
        - NameNodes
        - AuthenticationType
        - AgentArns
      x-stackql-resource-name: location_hdfs
      x-stackql-primaryIdentifier:
        - LocationArn
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationHdfs
          - datasync:DescribeLocationHdfs
          - datasync:TagResource
          - datasync:ListTagsForResource
        read:
          - datasync:DescribeLocationHdfs
          - datasync:ListTagsForResource
        update:
          - datasync:UpdateLocationHdfs
          - datasync:DescribeLocationHdfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    OnPremConfig:
      additionalProperties: false
      description: Contains a list of Amazon Resource Names (ARNs) of agents that are used to connect an NFS server.
      type: object
      properties:
        AgentArns:
          description: ARN(s) of the agent(s) to use for an NFS location.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
            maxLength: 128
          minItems: 1
          maxItems: 4
          x-insertionOrder: false
      required:
        - AgentArns
    LocationNFS:
      type: object
      properties:
        MountOptions:
          $ref: '#/components/schemas/MountOptions'
          default:
            Version: AUTOMATIC
        OnPremConfig:
          $ref: '#/components/schemas/OnPremConfig'
        ServerHostname:
          description: The name of the NFS server. This value is the IP address or DNS name of the NFS server.
          type: string
          pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
          maxLength: 255
        Subdirectory:
          description: The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the NFS location.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the NFS location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\-]+$
          maxLength: 4356
      required:
        - OnPremConfig
      x-stackql-resource-name: location_nfs
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - ServerHostname
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationNfs
          - datasync:DescribeLocationNfs
          - datasync:ListTagsForResource
          - datasync:TagResource
        read:
          - datasync:DescribeLocationNfs
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationNfs
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - datasync:UpdateLocationNfs
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    LocationObjectStorage:
      type: object
      properties:
        AccessKey:
          description: Optional. The access key is used if credentials are required to access the self-managed object storage server.
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^.+$
        AgentArns:
          description: The Amazon Resource Name (ARN) of the agents associated with the self-managed object storage server location.
          type: array
          items:
            type: string
            maxLength: 128
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
          minItems: 1
          maxItems: 4
          x-insertionOrder: false
        BucketName:
          description: The name of the bucket on the self-managed object storage server.
          type: string
          maxLength: 63
          minLength: 3
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        SecretKey:
          description: Optional. The secret key is used if credentials are required to access the self-managed object storage server.
          type: string
          minLength: 8
          maxLength: 200
          pattern: ^.+$
        ServerCertificate:
          description: X.509 PEM content containing a certificate authority or chain to trust.
          type: string
          maxLength: 32768
        ServerHostname:
          description: The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server.
          type: string
          maxLength: 255
          pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
        ServerPort:
          description: The port that your self-managed server accepts inbound network traffic on.
          type: integer
          minimum: 1
          maximum: 65536
        ServerProtocol:
          description: The protocol that the object storage server uses to communicate.
          type: string
          enum:
            - HTTPS
            - HTTP
        Subdirectory:
          description: The subdirectory in the self-managed object storage server that is used to read data from.
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\p{Zs}]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the object storage location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw|object-storage)://[a-zA-Z0-9./\-]+$
          maxLength: 4356
      required:
        - AgentArns
      x-stackql-resource-name: location_object_storage
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - BucketName
        - ServerHostname
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationObjectStorage
          - datasync:DescribeLocationObjectStorage
          - datasync:ListTagsForResource
          - datasync:TagResource
        read:
          - datasync:DescribeLocationObjectStorage
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationObjectStorage
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - datasync:UpdateLocationObjectStorage
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    S3Config:
      additionalProperties: false
      description: The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
      type: object
      properties:
        BucketAccessRoleArn:
          description: The ARN of the IAM role of the Amazon S3 bucket.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$
          maxLength: 2048
      required:
        - BucketAccessRoleArn
    LocationS3:
      type: object
      properties:
        S3Config:
          $ref: '#/components/schemas/S3Config'
        S3BucketArn:
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket.
          type: string
          maxLength: 156
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):s3:[a-z\-0-9]*:[0-9]*:.*$
        Subdirectory:
          description: A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination.
          type: string
          maxLength: 1024
          pattern: ^[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}\p{C}]*$
        S3StorageClass:
          description: The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
          type: string
          enum:
            - STANDARD
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - GLACIER_INSTANT_RETRIEVAL
            - DEEP_ARCHIVE
          default: STANDARD
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the S3 location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9.\-/]+$
          maxLength: 4356
      required:
        - S3Config
      x-stackql-resource-name: location_s3
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - S3Config
        - S3StorageClass
        - Subdirectory
        - S3BucketArn
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationS3
          - datasync:DescribeLocationS3
          - datasync:ListTagsForResource
          - datasync:TagResource
          - s3:ListAllMyBuckets
          - s3:ListBucket
          - iam:GetRole
          - iam:PassRole
        read:
          - datasync:DescribeLocationS3
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationS3
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    LocationSMB:
      type: object
      properties:
        AgentArns:
          description: The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
            maxLength: 128
          minItems: 1
          maxItems: 4
          x-insertionOrder: false
        Domain:
          description: The name of the Windows domain that the SMB server belongs to.
          type: string
          maxLength: 253
          pattern: ^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$
        MountOptions:
          $ref: '#/components/schemas/MountOptions'
          default:
            Version: AUTOMATIC
        Password:
          description: The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
          type: string
          maxLength: 104
          pattern: ^.{0,104}$
        ServerHostname:
          description: The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
          type: string
          maxLength: 255
          pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
        Subdirectory:
          description: The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
          type: string
          maxLength: 4096
          pattern: ^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$
        User:
          description: The user who can mount the share, has the permissions to access files and folders in the SMB share.
          type: string
          maxLength: 104
          pattern: ^[^\x5B\x5D\\/:;|=,+*?]{1,104}$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LocationArn:
          description: The Amazon Resource Name (ARN) of the SMB location that is created.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
          maxLength: 128
        LocationUri:
          description: The URL of the SMB location that was described.
          type: string
          pattern: ^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\-]+$
          maxLength: 4356
      required:
        - User
        - AgentArns
      x-stackql-resource-name: location_smb
      x-stackql-primaryIdentifier:
        - LocationArn
      x-create-only-properties:
        - ServerHostname
      x-read-only-properties:
        - LocationArn
        - LocationUri
      x-required-permissions:
        create:
          - datasync:CreateLocationSmb
          - datasync:DescribeLocationSmb
          - datasync:ListTagsForResource
          - datasync:TagResource
        read:
          - datasync:DescribeLocationSmb
          - datasync:ListTagsForResource
        update:
          - datasync:DescribeLocationSmb
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - datasync:UpdateLocationSmb
        delete:
          - datasync:DeleteLocation
        list:
          - datasync:ListLocations
    ServerConfiguration:
      additionalProperties: false
      description: The server name and network port required to connect with the management interface of the on-premises storage system.
      type: object
      properties:
        ServerHostname:
          type: string
          description: The domain name or IP address of the storage system's management interface.
          pattern: ^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$
          maxLength: 255
        ServerPort:
          type: integer
          description: The network port needed to access the system's management interface
          minimum: 1
          maximum: 65535
      required:
        - ServerHostname
    ServerCredentials:
      additionalProperties: false
      description: The username and password for accessing your on-premises storage system's management interface.
      type: object
      properties:
        Username:
          type: string
          description: The username for your storage system's management interface.
          maxLength: 1024
        Password:
          type: string
          description: The password for your storage system's management interface
          maxLength: 1024
      required:
        - Username
        - Password
    StorageSystem:
      type: object
      properties:
        ServerConfiguration:
          $ref: '#/components/schemas/ServerConfiguration'
        ServerCredentials:
          $ref: '#/components/schemas/ServerCredentials'
        SecretsManagerArn:
          description: The ARN of a secret stored by AWS Secrets Manager.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):secretsmanager:[a-z\-0-9]+:[0-9]{12}:secret:.*
          maxLength: 2048
        SystemType:
          description: The type of on-premises storage system that DataSync Discovery will analyze.
          type: string
          enum:
            - NetAppONTAP
        AgentArns:
          description: The ARN of the DataSync agent that connects to and reads from the on-premises storage system's management interface.
          type: array
          items:
            type: string
            pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
            maxLength: 128
          minItems: 1
          maxItems: 1
          x-insertionOrder: false
        CloudWatchLogGroupArn:
          description: The ARN of the Amazon CloudWatch log group used to monitor and log discovery job events.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):logs:[a-z\-0-9]+:[0-9]{12}:log-group:([^:\*]*)(:\*)?$
          maxLength: 562
        Name:
          description: A familiar name for the on-premises storage system.
          type: string
          pattern: ^[a-zA-Z0-9\s+=._:@/-]+$
          minLength: 1
          maxLength: 256
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        StorageSystemArn:
          description: The ARN of the on-premises storage system added to DataSync Discovery.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:system/storage-system-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          maxLength: 128
        ConnectivityStatus:
          description: Indicates whether the DataSync agent can access the on-premises storage system.
          type: string
          enum:
            - PASS
            - FAIL
            - UNKNOWN
      required:
        - ServerConfiguration
        - SystemType
        - AgentArns
      x-stackql-resource-name: storage_system
      x-stackql-primaryIdentifier:
        - StorageSystemArn
      x-read-only-properties:
        - StorageSystemArn
        - ConnectivityStatus
        - SecretsManagerArn
      x-required-permissions:
        create:
          - datasync:AddStorageSystem
          - datasync:DescribeStorageSystem
          - datasync:ListTagsForResource
          - datasync:TagResource
          - secretsmanager:CreateSecret
          - secretsmanager:DescribeSecret
          - iam:CreateServiceLinkedRole
        read:
          - datasync:DescribeStorageSystem
          - datasync:ListTagsForResource
          - secretsmanager:DescribeSecret
        update:
          - datasync:UpdateStorageSystem
          - datasync:DescribeStorageSystem
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - secretsmanager:DescribeSecret
          - secretsmanager:PutSecretValue
        delete:
          - datasync:DescribeStorageSystem
          - datasync:RemoveStorageSystem
          - secretsmanager:DescribeSecret
          - secretsmanager:DeleteSecret
        list:
          - datasync:ListStorageSystems
    FilterRule:
      additionalProperties: false
      description: Specifies which files folders and objects to include or exclude when transferring files from source to destination.
      type: object
      properties:
        FilterType:
          description: The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
          type: string
          enum:
            - SIMPLE_PATTERN
          pattern: ^[A-Z0-9_]+$
          maxLength: 128
        Value:
          description: A single filter string that consists of the patterns to include or exclude. The patterns are delimited by "|".
          type: string
          pattern: ^[^\x00]+$
          maxLength: 409600
    TaskReportConfig:
      additionalProperties: false
      description: Specifies how you want to configure a task report, which provides detailed information about for your Datasync transfer.
      type: object
      properties:
        Destination:
          additionalProperties: false
          description: Specifies where DataSync uploads your task report.
          type: object
          properties:
            S3:
              additionalProperties: false
              description: Specifies the Amazon S3 bucket where DataSync uploads your task report.
              type: object
              properties:
                Subdirectory:
                  description: Specifies a bucket prefix for your report.
                  type: string
                  maxLength: 4096
                  pattern: ^[a-zA-Z0-9_\-\+\./\(\)\p{Zs}]*$
                BucketAccessRoleArn:
                  description: Specifies the Amazon Resource Name (ARN) of the IAM policy that allows Datasync to upload a task report to your S3 bucket.
                  type: string
                  maxLength: 2048
                  pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$
                S3BucketArn:
                  description: Specifies the ARN of the S3 bucket where Datasync uploads your report.
                  type: string
                  maxLength: 156
                  pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(s3|s3-outposts):[a-z\-0-9]*:[0-9]*:.*$
        OutputType:
          description: Specifies the type of task report that you want.
          type: string
          enum:
            - SUMMARY_ONLY
            - STANDARD
        ReportLevel:
          description: Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.
          type: string
          enum:
            - ERRORS_ONLY
            - SUCCESSES_AND_ERRORS
        ObjectVersionIds:
          description: Specifies whether your task report includes the new version of each object transferred into an S3 bucket, this only applies if you enable versioning on your bucket.
          type: string
          enum:
            - INCLUDE
            - NONE
        Overrides:
          additionalProperties: false
          description: Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that Datasync attempted to delete in your destination location.
          type: object
          properties:
            Transferred:
              additionalProperties: false
              description: Specifies the level of reporting for the files, objects, and directories that Datasync attempted to transfer.
              type: object
              properties:
                ReportLevel:
                  description: Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.
                  type: string
                  enum:
                    - ERRORS_ONLY
                    - SUCCESSES_AND_ERRORS
            Verified:
              additionalProperties: false
              description: Specifies the level of reporting for the files, objects, and directories that Datasync attempted to verify at the end of your transfer. This only applies if you configure your task to verify data during and after the transfer (which Datasync does by default)
              type: object
              properties:
                ReportLevel:
                  description: Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.
                  type: string
                  enum:
                    - ERRORS_ONLY
                    - SUCCESSES_AND_ERRORS
            Deleted:
              additionalProperties: false
              description: Specifies the level of reporting for the files, objects, and directories that Datasync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn't in the source.
              type: object
              properties:
                ReportLevel:
                  description: Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.
                  type: string
                  enum:
                    - ERRORS_ONLY
                    - SUCCESSES_AND_ERRORS
            Skipped:
              additionalProperties: false
              description: Specifies the level of reporting for the files, objects, and directories that Datasync attempted to skip during your transfer.
              type: object
              properties:
                ReportLevel:
                  description: Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.
                  type: string
                  enum:
                    - ERRORS_ONLY
                    - SUCCESSES_AND_ERRORS
      required:
        - Destination
        - OutputType
    TaskSchedule:
      additionalProperties: false
      description: Specifies the schedule you want your task to use for repeated executions.
      type: object
      properties:
        ScheduleExpression:
          description: A cron expression that specifies when AWS DataSync initiates a scheduled transfer from a source to a destination location
          type: string
          maxLength: 256
          pattern: ^[a-zA-Z0-9\ \_\*\?\,\|\^\-\/\#\s\(\)\+]*$
      required:
        - ScheduleExpression
    Options:
      additionalProperties: false
      description: Represents the options that are available to control the behavior of a StartTaskExecution operation.
      type: object
      properties:
        Atime:
          description: A file metadata value that shows the last time a file was accessed (that is, when the file was read or written to).
          type: string
          enum:
            - NONE
            - BEST_EFFORT
        BytesPerSecond:
          description: A value that limits the bandwidth used by AWS DataSync.
          type: integer
          format: int64
          minimum: -1
        Gid:
          description: The group ID (GID) of the file's owners.
          type: string
          enum:
            - NONE
            - INT_VALUE
            - NAME
            - BOTH
        LogLevel:
          description: A value that determines the types of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide.
          type: string
          enum:
            - 'OFF'
            - BASIC
            - TRANSFER
        Mtime:
          description: A value that indicates the last time that a file was modified (that is, a file was written to) before the PREPARING phase.
          type: string
          enum:
            - NONE
            - PRESERVE
        OverwriteMode:
          description: A value that determines whether files at the destination should be overwritten or preserved when copying files.
          type: string
          enum:
            - ALWAYS
            - NEVER
        PosixPermissions:
          description: A value that determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file.
          type: string
          enum:
            - NONE
            - PRESERVE
        PreserveDeletedFiles:
          description: A value that specifies whether files in the destination that don't exist in the source file system should be preserved.
          type: string
          enum:
            - PRESERVE
            - REMOVE
        PreserveDevices:
          description: A value that determines whether AWS DataSync should preserve the metadata of block and character devices in the source file system, and recreate the files with that device name and metadata on the destination.
          type: string
          enum:
            - NONE
            - PRESERVE
        SecurityDescriptorCopyFlags:
          description: A value that determines which components of the SMB security descriptor are copied during transfer.
          type: string
          enum:
            - NONE
            - OWNER_DACL
            - OWNER_DACL_SACL
        TaskQueueing:
          description: A value that determines whether tasks should be queued before executing the tasks.
          type: string
          enum:
            - ENABLED
            - DISABLED
        TransferMode:
          description: A value that determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location.
          type: string
          enum:
            - CHANGED
            - ALL
        Uid:
          description: The user ID (UID) of the file's owner.
          type: string
          enum:
            - NONE
            - INT_VALUE
            - NAME
            - BOTH
        VerifyMode:
          description: A value that determines whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred.
          type: string
          enum:
            - POINT_IN_TIME_CONSISTENT
            - ONLY_FILES_TRANSFERRED
            - NONE
        ObjectTags:
          description: A value that determines whether object tags should be read from the source object store and written to the destination object store.
          type: string
          enum:
            - PRESERVE
            - NONE
    SourceNetworkInterfaceArns:
      description: The Amazon Resource Names (ARNs) of the source ENIs (Elastic Network Interfaces) that were created for your subnet.
      type: array
      items:
        type: string
        pattern: ^arn:aws[\-a-z]{0,}:ec2:[a-z\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$
      maxItems: 128
      x-insertionOrder: false
    DestinationNetworkInterfaceArns:
      description: The Amazon Resource Names (ARNs) of the destination ENIs (Elastic Network Interfaces) that were created for your subnet.
      type: array
      items:
        type: string
        pattern: ^arn:aws[\-a-z]{0,}:ec2:[a-z\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$
      maxItems: 128
      x-insertionOrder: false
    Task:
      type: object
      properties:
        Excludes:
          type: array
          minItems: 0
          maxItems: 1
          items:
            $ref: '#/components/schemas/FilterRule'
          x-insertionOrder: false
        Includes:
          type: array
          minItems: 0
          maxItems: 1
          items:
            $ref: '#/components/schemas/FilterRule'
          x-insertionOrder: false
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CloudWatchLogGroupArn:
          description: The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
          type: string
          maxLength: 562
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):logs:[a-z\-0-9]*:[0-9]{12}:log-group:([^:\*]*)(:\*)?$
        DestinationLocationArn:
          description: The ARN of an AWS storage resource's location.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
        Name:
          description: The name of a task. This value is a text reference that is used to identify the task in the console.
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[a-zA-Z0-9\s+=._:@/-]+$
        Options:
          $ref: '#/components/schemas/Options'
        TaskReportConfig:
          $ref: '#/components/schemas/TaskReportConfig'
        Schedule:
          $ref: '#/components/schemas/TaskSchedule'
        SourceLocationArn:
          description: The ARN of the source location for the task.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
        TaskArn:
          description: The ARN of the task.
          type: string
          maxLength: 128
          pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}$
        Status:
          description: The status of the task that was described.
          type: string
          enum:
            - AVAILABLE
            - CREATING
            - QUEUED
            - RUNNING
            - UNAVAILABLE
        SourceNetworkInterfaceArns:
          $ref: '#/components/schemas/SourceNetworkInterfaceArns'
        DestinationNetworkInterfaceArns:
          $ref: '#/components/schemas/DestinationNetworkInterfaceArns'
      required:
        - DestinationLocationArn
        - SourceLocationArn
      x-stackql-resource-name: task
      x-stackql-primaryIdentifier:
        - TaskArn
      x-create-only-properties:
        - DestinationLocationArn
        - SourceLocationArn
      x-read-only-properties:
        - TaskArn
        - Status
        - SourceNetworkInterfaceArns
        - DestinationNetworkInterfaceArns
      x-required-permissions:
        create:
          - datasync:CreateTask
          - datasync:DescribeTask
          - datasync:ListTagsForResource
          - datasync:TagResource
          - s3:ListAllMyBuckets
          - s3:ListBucket
          - ec2:DescribeNetworkInterfaces
          - ec2:CreateNetworkInterface
          - ec2:DeleteNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:CreateNetworkInterfacePermission
          - fsx:DescribeFileSystems
          - elasticfilesystem:DescribeFileSystems
          - elasticfilesystem:DescribeMountTargets
          - logs:DescribeLogGroups
          - iam:GetRole
          - iam:PassRole
          - iam:AssumeRole
        read:
          - datasync:DescribeTask
          - datasync:ListTagsForResource
        update:
          - datasync:UpdateTask
          - datasync:DescribeTask
          - datasync:ListTagsForResource
          - datasync:TagResource
          - datasync:UntagResource
          - logs:DescribeLogGroups
          - iam:PassRole
        delete:
          - datasync:DeleteTask
          - ec2:DescribeNetworkInterfaces
          - ec2:DeleteNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - fsx:DescribeFileSystems
          - elasticfilesystem:DescribeFileSystems
          - elasticfilesystem:DescribeMountTargets
          - iam:GetRole
        list:
          - datasync:ListTasks
  x-stackQL-resources:
    agents:
      name: agents
      id: awscc.datasync.agents
      x-cfn-schema-name: Agent
      x-type: list
      x-identifiers:
        - AgentArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AgentArn') as agent_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::Agent'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AgentArn') as agent_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::Agent'
                AND region = 'us-east-1'
    agent:
      name: agent
      id: awscc.datasync.agent
      x-cfn-schema-name: Agent
      x-type: get
      x-identifiers:
        - AgentArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AgentName') as agent_name,
              JSON_EXTRACT(Properties, '$.ActivationKey') as activation_key,
              JSON_EXTRACT(Properties, '$.SecurityGroupArns') as security_group_arns,
              JSON_EXTRACT(Properties, '$.SubnetArns') as subnet_arns,
              JSON_EXTRACT(Properties, '$.VpcEndpointId') as vpc_endpoint_id,
              JSON_EXTRACT(Properties, '$.EndpointType') as endpoint_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AgentArn') as agent_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::Agent'
              AND data__Identifier = '<AgentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AgentName') as agent_name,
                json_extract_path_text(Properties, 'ActivationKey') as activation_key,
                json_extract_path_text(Properties, 'SecurityGroupArns') as security_group_arns,
                json_extract_path_text(Properties, 'SubnetArns') as subnet_arns,
                json_extract_path_text(Properties, 'VpcEndpointId') as vpc_endpoint_id,
                json_extract_path_text(Properties, 'EndpointType') as endpoint_type,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AgentArn') as agent_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::Agent'
                AND data__Identifier = '<AgentArn>'
                AND region = 'us-east-1'
    location_azure_blobs:
      name: location_azure_blobs
      id: awscc.datasync.location_azure_blobs
      x-cfn-schema-name: LocationAzureBlob
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationAzureBlob'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationAzureBlob'
                AND region = 'us-east-1'
    location_azure_blob:
      name: location_azure_blob
      id: awscc.datasync.location_azure_blob
      x-cfn-schema-name: LocationAzureBlob
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AgentArns') as agent_arns,
              JSON_EXTRACT(Properties, '$.AzureBlobAuthenticationType') as azure_blob_authentication_type,
              JSON_EXTRACT(Properties, '$.AzureBlobSasConfiguration') as azure_blob_sas_configuration,
              JSON_EXTRACT(Properties, '$.AzureBlobContainerUrl') as azure_blob_container_url,
              JSON_EXTRACT(Properties, '$.AzureBlobType') as azure_blob_type,
              JSON_EXTRACT(Properties, '$.AzureAccessTier') as azure_access_tier,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationAzureBlob'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AgentArns') as agent_arns,
                json_extract_path_text(Properties, 'AzureBlobAuthenticationType') as azure_blob_authentication_type,
                json_extract_path_text(Properties, 'AzureBlobSasConfiguration') as azure_blob_sas_configuration,
                json_extract_path_text(Properties, 'AzureBlobContainerUrl') as azure_blob_container_url,
                json_extract_path_text(Properties, 'AzureBlobType') as azure_blob_type,
                json_extract_path_text(Properties, 'AzureAccessTier') as azure_access_tier,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationAzureBlob'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_efs:
      name: location_efs
      id: awscc.datasync.location_efs
      x-cfn-schema-name: LocationEFS
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Ec2Config') as ec2_config,
              JSON_EXTRACT(Properties, '$.EfsFilesystemArn') as efs_filesystem_arn,
              JSON_EXTRACT(Properties, '$.AccessPointArn') as access_point_arn,
              JSON_EXTRACT(Properties, '$.FileSystemAccessRoleArn') as file_system_access_role_arn,
              JSON_EXTRACT(Properties, '$.InTransitEncryption') as in_transit_encryption,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationEFS'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Ec2Config') as ec2_config,
                json_extract_path_text(Properties, 'EfsFilesystemArn') as efs_filesystem_arn,
                json_extract_path_text(Properties, 'AccessPointArn') as access_point_arn,
                json_extract_path_text(Properties, 'FileSystemAccessRoleArn') as file_system_access_role_arn,
                json_extract_path_text(Properties, 'InTransitEncryption') as in_transit_encryption,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationEFS'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    locationf_sx_lustres:
      name: locationf_sx_lustres
      id: awscc.datasync.locationf_sx_lustres
      x-cfn-schema-name: LocationFSxLustre
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationFSxLustre'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationFSxLustre'
                AND region = 'us-east-1'
    locationf_sx_lustre:
      name: locationf_sx_lustre
      id: awscc.datasync.locationf_sx_lustre
      x-cfn-schema-name: LocationFSxLustre
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FsxFilesystemArn') as fsx_filesystem_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroupArns') as security_group_arns,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxLustre'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'FsxFilesystemArn') as fsx_filesystem_arn,
                json_extract_path_text(Properties, 'SecurityGroupArns') as security_group_arns,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxLustre'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    locationf_sx_ontaps:
      name: locationf_sx_ontaps
      id: awscc.datasync.locationf_sx_ontaps
      x-cfn-schema-name: LocationFSxONTAP
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationFSxONTAP'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationFSxONTAP'
                AND region = 'us-east-1'
    locationf_sx_ontap:
      name: locationf_sx_ontap
      id: awscc.datasync.locationf_sx_ontap
      x-cfn-schema-name: LocationFSxONTAP
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.StorageVirtualMachineArn') as storage_virtual_machine_arn,
              JSON_EXTRACT(Properties, '$.FsxFilesystemArn') as fsx_filesystem_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroupArns') as security_group_arns,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxONTAP'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'StorageVirtualMachineArn') as storage_virtual_machine_arn,
                json_extract_path_text(Properties, 'FsxFilesystemArn') as fsx_filesystem_arn,
                json_extract_path_text(Properties, 'SecurityGroupArns') as security_group_arns,
                json_extract_path_text(Properties, 'Protocol') as protocol,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxONTAP'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    locationf_sx_open_zfs:
      name: locationf_sx_open_zfs
      id: awscc.datasync.locationf_sx_open_zfs
      x-cfn-schema-name: LocationFSxOpenZFS
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FsxFilesystemArn') as fsx_filesystem_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroupArns') as security_group_arns,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxOpenZFS'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'FsxFilesystemArn') as fsx_filesystem_arn,
                json_extract_path_text(Properties, 'SecurityGroupArns') as security_group_arns,
                json_extract_path_text(Properties, 'Protocol') as protocol,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxOpenZFS'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    locationf_sx_windows:
      name: locationf_sx_windows
      id: awscc.datasync.locationf_sx_windows
      x-cfn-schema-name: LocationFSxWindows
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.FsxFilesystemArn') as fsx_filesystem_arn,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.SecurityGroupArns') as security_group_arns,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.User') as user,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxWindows'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Domain') as domain,
                json_extract_path_text(Properties, 'FsxFilesystemArn') as fsx_filesystem_arn,
                json_extract_path_text(Properties, 'Password') as password,
                json_extract_path_text(Properties, 'SecurityGroupArns') as security_group_arns,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'User') as user,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationFSxWindows'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_hdfs:
      name: location_hdfs
      id: awscc.datasync.location_hdfs
      x-cfn-schema-name: LocationHDFS
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.NameNodes') as name_nodes,
              JSON_EXTRACT(Properties, '$.BlockSize') as block_size,
              JSON_EXTRACT(Properties, '$.ReplicationFactor') as replication_factor,
              JSON_EXTRACT(Properties, '$.KmsKeyProviderUri') as kms_key_provider_uri,
              JSON_EXTRACT(Properties, '$.QopConfiguration') as qop_configuration,
              JSON_EXTRACT(Properties, '$.AuthenticationType') as authentication_type,
              JSON_EXTRACT(Properties, '$.SimpleUser') as simple_user,
              JSON_EXTRACT(Properties, '$.KerberosPrincipal') as kerberos_principal,
              JSON_EXTRACT(Properties, '$.KerberosKeytab') as kerberos_keytab,
              JSON_EXTRACT(Properties, '$.KerberosKrb5Conf') as kerberos_krb5_conf,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AgentArns') as agent_arns,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationHDFS'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'NameNodes') as name_nodes,
                json_extract_path_text(Properties, 'BlockSize') as block_size,
                json_extract_path_text(Properties, 'ReplicationFactor') as replication_factor,
                json_extract_path_text(Properties, 'KmsKeyProviderUri') as kms_key_provider_uri,
                json_extract_path_text(Properties, 'QopConfiguration') as qop_configuration,
                json_extract_path_text(Properties, 'AuthenticationType') as authentication_type,
                json_extract_path_text(Properties, 'SimpleUser') as simple_user,
                json_extract_path_text(Properties, 'KerberosPrincipal') as kerberos_principal,
                json_extract_path_text(Properties, 'KerberosKeytab') as kerberos_keytab,
                json_extract_path_text(Properties, 'KerberosKrb5Conf') as kerberos_krb5_conf,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AgentArns') as agent_arns,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationHDFS'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_nfs:
      name: location_nfs
      id: awscc.datasync.location_nfs
      x-cfn-schema-name: LocationNFS
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MountOptions') as mount_options,
              JSON_EXTRACT(Properties, '$.OnPremConfig') as on_prem_config,
              JSON_EXTRACT(Properties, '$.ServerHostname') as server_hostname,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationNFS'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'MountOptions') as mount_options,
                json_extract_path_text(Properties, 'OnPremConfig') as on_prem_config,
                json_extract_path_text(Properties, 'ServerHostname') as server_hostname,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationNFS'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_object_storages:
      name: location_object_storages
      id: awscc.datasync.location_object_storages
      x-cfn-schema-name: LocationObjectStorage
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationObjectStorage'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationObjectStorage'
                AND region = 'us-east-1'
    location_object_storage:
      name: location_object_storage
      id: awscc.datasync.location_object_storage
      x-cfn-schema-name: LocationObjectStorage
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccessKey') as access_key,
              JSON_EXTRACT(Properties, '$.AgentArns') as agent_arns,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.SecretKey') as secret_key,
              JSON_EXTRACT(Properties, '$.ServerCertificate') as server_certificate,
              JSON_EXTRACT(Properties, '$.ServerHostname') as server_hostname,
              JSON_EXTRACT(Properties, '$.ServerPort') as server_port,
              JSON_EXTRACT(Properties, '$.ServerProtocol') as server_protocol,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationObjectStorage'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AccessKey') as access_key,
                json_extract_path_text(Properties, 'AgentArns') as agent_arns,
                json_extract_path_text(Properties, 'BucketName') as bucket_name,
                json_extract_path_text(Properties, 'SecretKey') as secret_key,
                json_extract_path_text(Properties, 'ServerCertificate') as server_certificate,
                json_extract_path_text(Properties, 'ServerHostname') as server_hostname,
                json_extract_path_text(Properties, 'ServerPort') as server_port,
                json_extract_path_text(Properties, 'ServerProtocol') as server_protocol,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationObjectStorage'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_s3s:
      name: location_s3s
      id: awscc.datasync.location_s3s
      x-cfn-schema-name: LocationS3
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationS3'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationS3'
                AND region = 'us-east-1'
    location_s3:
      name: location_s3
      id: awscc.datasync.location_s3
      x-cfn-schema-name: LocationS3
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.S3Config') as s3_config,
              JSON_EXTRACT(Properties, '$.S3BucketArn') as s3_bucket_arn,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.S3StorageClass') as s3_storage_class,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationS3'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'S3Config') as s3_config,
                json_extract_path_text(Properties, 'S3BucketArn') as s3_bucket_arn,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'S3StorageClass') as s3_storage_class,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationS3'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    location_smbs:
      name: location_smbs
      id: awscc.datasync.location_smbs
      x-cfn-schema-name: LocationSMB
      x-type: list
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationSMB'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationArn') as location_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::LocationSMB'
                AND region = 'us-east-1'
    location_smb:
      name: location_smb
      id: awscc.datasync.location_smb
      x-cfn-schema-name: LocationSMB
      x-type: get
      x-identifiers:
        - LocationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AgentArns') as agent_arns,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.MountOptions') as mount_options,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.ServerHostname') as server_hostname,
              JSON_EXTRACT(Properties, '$.Subdirectory') as subdirectory,
              JSON_EXTRACT(Properties, '$.User') as user,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationSMB'
              AND data__Identifier = '<LocationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AgentArns') as agent_arns,
                json_extract_path_text(Properties, 'Domain') as domain,
                json_extract_path_text(Properties, 'MountOptions') as mount_options,
                json_extract_path_text(Properties, 'Password') as password,
                json_extract_path_text(Properties, 'ServerHostname') as server_hostname,
                json_extract_path_text(Properties, 'Subdirectory') as subdirectory,
                json_extract_path_text(Properties, 'User') as user,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'LocationUri') as location_uri
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::LocationSMB'
                AND data__Identifier = '<LocationArn>'
                AND region = 'us-east-1'
    storage_systems:
      name: storage_systems
      id: awscc.datasync.storage_systems
      x-cfn-schema-name: StorageSystem
      x-type: list
      x-identifiers:
        - StorageSystemArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StorageSystemArn') as storage_system_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::StorageSystem'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StorageSystemArn') as storage_system_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::StorageSystem'
                AND region = 'us-east-1'
    storage_system:
      name: storage_system
      id: awscc.datasync.storage_system
      x-cfn-schema-name: StorageSystem
      x-type: get
      x-identifiers:
        - StorageSystemArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ServerConfiguration') as server_configuration,
              JSON_EXTRACT(Properties, '$.ServerCredentials') as server_credentials,
              JSON_EXTRACT(Properties, '$.SecretsManagerArn') as secrets_manager_arn,
              JSON_EXTRACT(Properties, '$.SystemType') as system_type,
              JSON_EXTRACT(Properties, '$.AgentArns') as agent_arns,
              JSON_EXTRACT(Properties, '$.CloudWatchLogGroupArn') as cloud_watch_log_group_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.StorageSystemArn') as storage_system_arn,
              JSON_EXTRACT(Properties, '$.ConnectivityStatus') as connectivity_status
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::StorageSystem'
              AND data__Identifier = '<StorageSystemArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ServerConfiguration') as server_configuration,
                json_extract_path_text(Properties, 'ServerCredentials') as server_credentials,
                json_extract_path_text(Properties, 'SecretsManagerArn') as secrets_manager_arn,
                json_extract_path_text(Properties, 'SystemType') as system_type,
                json_extract_path_text(Properties, 'AgentArns') as agent_arns,
                json_extract_path_text(Properties, 'CloudWatchLogGroupArn') as cloud_watch_log_group_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'StorageSystemArn') as storage_system_arn,
                json_extract_path_text(Properties, 'ConnectivityStatus') as connectivity_status
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::StorageSystem'
                AND data__Identifier = '<StorageSystemArn>'
                AND region = 'us-east-1'
    tasks:
      name: tasks
      id: awscc.datasync.tasks
      x-cfn-schema-name: Task
      x-type: list
      x-identifiers:
        - TaskArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TaskArn') as task_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::Task'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TaskArn') as task_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DataSync::Task'
                AND region = 'us-east-1'
    task:
      name: task
      id: awscc.datasync.task
      x-cfn-schema-name: Task
      x-type: get
      x-identifiers:
        - TaskArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Excludes') as excludes,
              JSON_EXTRACT(Properties, '$.Includes') as includes,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CloudWatchLogGroupArn') as cloud_watch_log_group_arn,
              JSON_EXTRACT(Properties, '$.DestinationLocationArn') as destination_location_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Options') as options,
              JSON_EXTRACT(Properties, '$.TaskReportConfig') as task_report_config,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.SourceLocationArn') as source_location_arn,
              JSON_EXTRACT(Properties, '$.TaskArn') as task_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SourceNetworkInterfaceArns') as source_network_interface_arns,
              JSON_EXTRACT(Properties, '$.DestinationNetworkInterfaceArns') as destination_network_interface_arns
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::Task'
              AND data__Identifier = '<TaskArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Excludes') as excludes,
                json_extract_path_text(Properties, 'Includes') as includes,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CloudWatchLogGroupArn') as cloud_watch_log_group_arn,
                json_extract_path_text(Properties, 'DestinationLocationArn') as destination_location_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Options') as options,
                json_extract_path_text(Properties, 'TaskReportConfig') as task_report_config,
                json_extract_path_text(Properties, 'Schedule') as schedule,
                json_extract_path_text(Properties, 'SourceLocationArn') as source_location_arn,
                json_extract_path_text(Properties, 'TaskArn') as task_arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'SourceNetworkInterfaceArns') as source_network_interface_arns,
                json_extract_path_text(Properties, 'DestinationNetworkInterfaceArns') as destination_network_interface_arns
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DataSync::Task'
                AND data__Identifier = '<TaskArn>'
                AND region = 'us-east-1'
