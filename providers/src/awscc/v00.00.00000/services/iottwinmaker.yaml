openapi: 3.0.0
info:
  title: IoTTwinMaker
  version: 1.0.0
paths: {}
components:
  schemas:
    DateTimeFormat:
      type: string
      format: date-time
    ParentComponentType:
      type: string
      pattern: '[a-zA-Z_\.\-0-9:]+'
    PropertyName:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    RequiredProperty:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    LambdaFunction:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):lambda:[a-z0-9-]+:[0-9]{12}:function:[\/a-zA-Z0-9_-]+
          minLength: 1
          maxLength: 128
      additionalProperties: false
      required:
        - Arn
    DataConnector:
      description: The data connector.
      type: object
      properties:
        IsNative:
          description: A Boolean value that specifies whether the data connector is native to IoT TwinMaker.
          type: boolean
        Lambda:
          description: The Lambda function associated with this data connector.
          $ref: '#/components/schemas/LambdaFunction'
      additionalProperties: false
    Function:
      description: The function of component type.
      type: object
      properties:
        ImplementedBy:
          description: The data connector.
          $ref: '#/components/schemas/DataConnector'
        RequiredProperties:
          description: The required properties of the function.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RequiredProperty'
        Scope:
          description: The scope of the function.
          type: string
          enum:
            - ENTITY
            - WORKSPACE
      additionalProperties: false
    DataValue:
      description: An object that specifies a value for a property.
      type: object
      properties:
        BooleanValue:
          description: A Boolean value.
          type: boolean
        DoubleValue:
          description: A double value.
          type: number
        Expression:
          description: An expression that produces the value.
          type: string
          pattern: (^\$\{Parameters\.[a-zA-z]+([a-zA-z_0-9]*)}$)
          minLength: 1
          maxLength: 316
        IntegerValue:
          description: An integer value.
          type: integer
        ListValue:
          description: A list of multiple values.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        LongValue:
          description: A long value.
          type: number
        StringValue:
          description: A string value.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        MapValue:
          description: An object that maps strings to multiple DataValue objects.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/DataValue'
          additionalProperties: false
        RelationshipValue:
          description: A value that relates a component to another component.
          type: object
          properties:
            TargetComponentName:
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
            TargetEntityId:
              type: string
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+'
              minLength: 1
              maxLength: 128
          additionalProperties: false
      additionalProperties: false
    Relationship:
      description: The type of the relationship.
      type: object
      properties:
        RelationshipType:
          description: The type of the relationship.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        TargetComponentTypeId:
          description: The ID of the target component type associated with this relationship.
          type: string
          pattern: '[a-zA-Z_\.\-0-9:]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    DataType:
      description: An object that specifies the data type of a property.
      type: object
      properties:
        AllowedValues:
          description: The allowed values for this data type.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        NestedType:
          description: The nested type in the data type.
          $ref: '#/components/schemas/DataType'
        Relationship:
          description: A relationship that associates a component with another component.
          $ref: '#/components/schemas/Relationship'
        Type:
          description: The underlying type of the data type.
          type: string
          enum:
            - RELATIONSHIP
            - STRING
            - LONG
            - BOOLEAN
            - INTEGER
            - DOUBLE
            - LIST
            - MAP
        UnitOfMeasure:
          description: The unit of measure used in this data type.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
      additionalProperties: false
    PropertyDefinition:
      description: An object that sets information about a property.
      type: object
      properties:
        Configurations:
          description: An object that specifies information about a property.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
          additionalProperties: false
        DataType:
          description: An object that contains information about the data type.
          $ref: '#/components/schemas/DataType'
        DefaultValue:
          description: An object that contains the default value.
          $ref: '#/components/schemas/DataValue'
        IsExternalId:
          description: A Boolean value that specifies whether the property ID comes from an external data store.
          type: boolean
        IsRequiredInEntity:
          description: A Boolean value that specifies whether the property is required.
          type: boolean
        IsStoredExternally:
          description: A Boolean value that specifies whether the property is stored externally.
          type: boolean
        IsTimeSeries:
          description: A Boolean value that specifies whether the property consists of time series data.
          type: boolean
      additionalProperties: false
    PropertyGroup:
      description: An object that specifies information about a property group.
      type: object
      properties:
        GroupType:
          description: The type of property group.
          type: string
          enum:
            - TABULAR
        PropertyNames:
          description: The list of property names in the property group.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PropertyName'
      additionalProperties: false
    CompositeComponentType:
      description: An object that sets information about a composite component type.
      type: object
      properties:
        ComponentTypeId:
          description: The id of the composite component type.
          type: string
          pattern: '[a-zA-Z_\.\-0-9:]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    Status:
      type: object
      properties:
        State:
          type: string
          enum:
            - CREATING
            - UPDATING
            - DELETING
            - ACTIVE
            - ERROR
        Error:
          type: object
          anyOf:
            - description: Empty Error object.
              type: object
              additionalProperties: false
            - description: Error object with Message and Code.
              type: object
              properties:
                Message:
                  type: string
                  minLength: 0
                  maxLength: 2048
                Code:
                  type: string
                  enum:
                    - VALIDATION_ERROR
                    - INTERNAL_FAILURE
              additionalProperties: false
      additionalProperties: false
    ComponentType:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace that contains the component type.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_\.\-0-9:]+'
        Description:
          description: The description of the component type.
          type: string
          minLength: 0
          maxLength: 512
        ExtendsFrom:
          description: Specifies the parent component type to extend.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ParentComponentType'
        Functions:
          description: a Map of functions in the component type. Each function's key must be unique to this map.
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Function'
        IsSingleton:
          description: A Boolean value that specifies whether an entity can have more than one component of this type.
          type: boolean
        PropertyDefinitions:
          description: An map of the property definitions in the component type. Each property definition's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyDefinition'
          additionalProperties: false
        PropertyGroups:
          description: An map of the property groups in the component type. Each property group's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        CompositeComponentTypes:
          description: An map of the composite component types in the component type. Each composite component type's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/CompositeComponentType'
          additionalProperties: false
        Arn:
          description: The ARN of the component type.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        CreationDateTime:
          description: The date and time when the component type was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the component type was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Status:
          description: The current status of the component type.
          $ref: '#/components/schemas/Status'
        IsAbstract:
          description: A Boolean value that specifies whether the component type is abstract.
          type: boolean
        IsSchemaInitialized:
          description: A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.
          type: boolean
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - ComponentTypeId
      x-stackql-resource-name: component_type
      x-stackql-primaryIdentifier:
        - WorkspaceId
        - ComponentTypeId
      x-create-only-properties:
        - WorkspaceId
        - ComponentTypeId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - Status
        - IsAbstract
        - IsSchemaInitialized
      x-required-permissions:
        create:
          - iottwinmaker:CreateComponentType
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateComponentType
        delete:
          - iottwinmaker:DeleteComponentType
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListComponentTypes
          - iottwinmaker:ListTagsForResource
    PropertyDefinitionConfiguration:
      description: An object that specifies information about a property configuration.
      type: object
      x-patternProperties:
        '[a-zA-Z_\-0-9]+':
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    Definition:
      description: An object that specifies information about a property definition.
      type: object
      properties:
        Configuration:
          description: An object that specifies information about a property configuration.
          $ref: '#/components/schemas/PropertyDefinitionConfiguration'
        DataType:
          description: An object that contains information about the data type.
          $ref: '#/components/schemas/DataType'
        DefaultValue:
          description: An object that contains the default value.
          $ref: '#/components/schemas/DataValue'
        IsExternalId:
          description: A Boolean value that specifies whether the property ID comes from an external data store.
          type: boolean
        IsFinal:
          description: A Boolean value that specifies whether the property definition can be updated.
          type: boolean
        IsImported:
          description: A Boolean value that specifies whether the property definition is imported from an external data store.
          type: boolean
        IsInherited:
          description: A Boolean value that specifies whether the property definition is inherited from a parent entity.
          type: boolean
        IsRequiredInEntity:
          description: A Boolean value that specifies whether the property is required.
          type: boolean
        IsStoredExternally:
          description: A Boolean value that specifies whether the property is stored externally.
          type: boolean
        IsTimeSeries:
          description: A Boolean value that specifies whether the property consists of time series data.
          type: boolean
      additionalProperties: false
    Property:
      description: An object that specifies information about a property.
      type: object
      properties:
        Definition:
          description: The definition of the property.
          $ref: '#/components/schemas/Definition'
        Value:
          description: The value of the property.
          $ref: '#/components/schemas/DataValue'
      additionalProperties: false
    Component:
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        Description:
          description: The description of the component.
          type: string
          minLength: 0
          maxLength: 512
        DefinedIn:
          description: The name of the property definition set in the component.
          type: string
          minLength: 1
          maxLength: 256
        Properties:
          description: An object that maps strings to the properties to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Property'
          additionalProperties: false
        PropertyGroups:
          description: An object that maps strings to the property groups to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    CompositeComponent:
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        ComponentPath:
          description: The path of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9/]+'
          minLength: 1
          maxLength: 256
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        Description:
          description: The description of the component.
          type: string
          minLength: 0
          maxLength: 512
        Properties:
          description: An object that maps strings to the properties to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Property'
          additionalProperties: false
        PropertyGroups:
          description: An object that maps strings to the property groups to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Status:
          description: The current status of the component.
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    Entity:
      type: object
      properties:
        EntityId:
          description: The ID of the entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+'
        EntityName:
          description: The name of the entity.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_0-9-.][a-zA-Z_0-9-. ]*[a-zA-Z0-9]+'
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
        HasChildEntities:
          description: A Boolean value that specifies whether the entity has child entities or not.
          type: boolean
        ParentEntityId:
          description: The ID of the parent entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: \$ROOT|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
        Arn:
          description: The ARN of the entity.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the entity.
          type: string
          minLength: 0
          maxLength: 512
        CreationDateTime:
          description: The date and time when the entity was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the entity was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Components:
          description: A map that sets information about a component type.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Component'
          additionalProperties: false
        CompositeComponents:
          description: A map that sets information about a composite component.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9/]+':
              $ref: '#/components/schemas/CompositeComponent'
          additionalProperties: false
      required:
        - WorkspaceId
        - EntityName
      x-stackql-resource-name: entity
      x-stackql-primaryIdentifier:
        - WorkspaceId
        - EntityId
      x-create-only-properties:
        - WorkspaceId
        - EntityId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - Status
        - HasChildEntities
      x-required-permissions:
        create:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:CreateEntity
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListEntities
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateEntity
          - iottwinmaker:UpdateComponentType
        delete:
          - iottwinmaker:GetEntity
          - iottwinmaker:GetWorkspace
          - iottwinmaker:DeleteEntity
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:GetEntity
          - iottwinmaker:ListEntities
    Scene:
      type: object
      properties:
        SceneId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the scene.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the scene.
          type: string
          minLength: 0
          maxLength: 512
        ContentLocation:
          description: The relative path that specifies the location of the content definition file.
          type: string
          minLength: 0
          maxLength: 256
          pattern: '[sS]3://[A-Za-z0-9._/-]+'
        CreationDateTime:
          description: The date and time when the scene was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Capabilities:
          description: A list of capabilities that the scene uses to render.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            minLength: 0
            maxLength: 256
            pattern: .*
        SceneMetadata:
          description: A key-value pair of scene metadata for the scene.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              minLength: 0
              maxLength: 2048
          minLength: 0
          maxLength: 50
          additionalProperties: false
        GeneratedSceneMetadata:
          description: A key-value pair of generated scene metadata for the scene.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              minLength: 0
              maxLength: 2048
          minLength: 0
          maxLength: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - SceneId
        - ContentLocation
      x-stackql-resource-name: scene
      x-stackql-primaryIdentifier:
        - WorkspaceId
        - SceneId
      x-create-only-properties:
        - SceneId
        - WorkspaceId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - GeneratedSceneMetadata
      x-required-permissions:
        create:
          - iottwinmaker:CreateScene
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:GetScene
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateScene
        delete:
          - iottwinmaker:DeleteScene
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:ListScenes
    SyncJob:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        SyncSource:
          description: The source of the SyncJob.
          type: string
          minLength: 1
          maxLength: 128
        SyncRole:
          description: The IAM Role that execute SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        CreationDateTime:
          description: The date and time when the sync job was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time when the sync job was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Arn:
          description: The ARN of the SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        State:
          description: The state of SyncJob.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_\-0-9]+'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
      required:
        - WorkspaceId
        - SyncSource
        - SyncRole
      x-stackql-resource-name: sync_job
      x-stackql-primaryIdentifier:
        - WorkspaceId
        - SyncSource
      x-create-only-properties:
        - WorkspaceId
        - SyncSource
        - SyncRole
        - Tags
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - State
      x-required-permissions:
        create:
          - iam:PassRole
          - iottwinmaker:CreateSyncJob
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        delete:
          - iottwinmaker:DeleteSyncJob
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListSyncJobs
          - iottwinmaker:ListTagsForResource
    Workspace:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the workspace.
          type: string
          minLength: 0
          maxLength: 512
        Role:
          description: The ARN of the execution role associated with the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        S3Location:
          description: The ARN of the S3 bucket where resources associated with the workspace are stored.
          type: string
        CreationDateTime:
          description: The date and time when the workspace was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - Role
        - S3Location
      x-stackql-resource-name: workspace
      x-stackql-primaryIdentifier:
        - WorkspaceId
      x-create-only-properties:
        - WorkspaceId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
      x-required-permissions:
        create:
          - iam:PassRole
          - iottwinmaker:CreateWorkspace
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateWorkspace
        delete:
          - iottwinmaker:DeleteWorkspace
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:ListWorkspaces
  x-stackQL-resources:
    component_types:
      name: component_types
      id: awscc.iottwinmaker.component_types
      x-cfn-schema-name: ComponentType
      x-type: list
      x-identifiers:
        - WorkspaceId
        - ComponentTypeId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.ComponentTypeId') as component_type_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'ComponentTypeId') as component_type_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND region = 'us-east-1'
    component_type:
      name: component_type
      id: awscc.iottwinmaker.component_type
      x-cfn-schema-name: ComponentType
      x-type: get
      x-identifiers:
        - WorkspaceId
        - ComponentTypeId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.ComponentTypeId') as component_type_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ExtendsFrom') as extends_from,
              JSON_EXTRACT(Properties, '$.Functions') as functions,
              JSON_EXTRACT(Properties, '$.IsSingleton') as is_singleton,
              JSON_EXTRACT(Properties, '$.PropertyDefinitions') as property_definitions,
              JSON_EXTRACT(Properties, '$.PropertyGroups') as property_groups,
              JSON_EXTRACT(Properties, '$.CompositeComponentTypes') as composite_component_types,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.IsAbstract') as is_abstract,
              JSON_EXTRACT(Properties, '$.IsSchemaInitialized') as is_schema_initialized,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND data__Identifier = '<WorkspaceId>|<ComponentTypeId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'ComponentTypeId') as component_type_id,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ExtendsFrom') as extends_from,
                json_extract_path_text(Properties, 'Functions') as functions,
                json_extract_path_text(Properties, 'IsSingleton') as is_singleton,
                json_extract_path_text(Properties, 'PropertyDefinitions') as property_definitions,
                json_extract_path_text(Properties, 'PropertyGroups') as property_groups,
                json_extract_path_text(Properties, 'CompositeComponentTypes') as composite_component_types,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'IsAbstract') as is_abstract,
                json_extract_path_text(Properties, 'IsSchemaInitialized') as is_schema_initialized,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND data__Identifier = '<WorkspaceId>|<ComponentTypeId>'
                AND region = 'us-east-1'
    entities:
      name: entities
      id: awscc.iottwinmaker.entities
      x-cfn-schema-name: Entity
      x-type: list
      x-identifiers:
        - WorkspaceId
        - EntityId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.EntityId') as entity_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'EntityId') as entity_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND region = 'us-east-1'
    entity:
      name: entity
      id: awscc.iottwinmaker.entity
      x-cfn-schema-name: Entity
      x-type: get
      x-identifiers:
        - WorkspaceId
        - EntityId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EntityId') as entity_id,
              JSON_EXTRACT(Properties, '$.EntityName') as entity_name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.HasChildEntities') as has_child_entities,
              JSON_EXTRACT(Properties, '$.ParentEntityId') as parent_entity_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.CompositeComponents') as composite_components
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND data__Identifier = '<WorkspaceId>|<EntityId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'EntityId') as entity_id,
                json_extract_path_text(Properties, 'EntityName') as entity_name,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'HasChildEntities') as has_child_entities,
                json_extract_path_text(Properties, 'ParentEntityId') as parent_entity_id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'Components') as components,
                json_extract_path_text(Properties, 'CompositeComponents') as composite_components
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND data__Identifier = '<WorkspaceId>|<EntityId>'
                AND region = 'us-east-1'
    scenes:
      name: scenes
      id: awscc.iottwinmaker.scenes
      x-cfn-schema-name: Scene
      x-type: list
      x-identifiers:
        - WorkspaceId
        - SceneId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SceneId') as scene_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'SceneId') as scene_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND region = 'us-east-1'
    scene:
      name: scene
      id: awscc.iottwinmaker.scene
      x-cfn-schema-name: Scene
      x-type: get
      x-identifiers:
        - WorkspaceId
        - SceneId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SceneId') as scene_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ContentLocation') as content_location,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.SceneMetadata') as scene_metadata,
              JSON_EXTRACT(Properties, '$.GeneratedSceneMetadata') as generated_scene_metadata
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND data__Identifier = '<WorkspaceId>|<SceneId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'SceneId') as scene_id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ContentLocation') as content_location,
                json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'Capabilities') as capabilities,
                json_extract_path_text(Properties, 'SceneMetadata') as scene_metadata,
                json_extract_path_text(Properties, 'GeneratedSceneMetadata') as generated_scene_metadata
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND data__Identifier = '<WorkspaceId>|<SceneId>'
                AND region = 'us-east-1'
    sync_jobs:
      name: sync_jobs
      id: awscc.iottwinmaker.sync_jobs
      x-cfn-schema-name: SyncJob
      x-type: list
      x-identifiers:
        - WorkspaceId
        - SyncSource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'SyncSource') as sync_source
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND region = 'us-east-1'
    sync_job:
      name: sync_job
      id: awscc.iottwinmaker.sync_job
      x-cfn-schema-name: SyncJob
      x-type: get
      x-identifiers:
        - WorkspaceId
        - SyncSource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source,
              JSON_EXTRACT(Properties, '$.SyncRole') as sync_role,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND data__Identifier = '<WorkspaceId>|<SyncSource>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'SyncSource') as sync_source,
                json_extract_path_text(Properties, 'SyncRole') as sync_role,
                json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND data__Identifier = '<WorkspaceId>|<SyncSource>'
                AND region = 'us-east-1'
    workspaces:
      name: workspaces
      id: awscc.iottwinmaker.workspaces
      x-cfn-schema-name: Workspace
      x-type: list
      x-identifiers:
        - WorkspaceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND region = 'us-east-1'
    workspace:
      name: workspace
      id: awscc.iottwinmaker.workspace
      x-cfn-schema-name: Workspace
      x-type: get
      x-identifiers:
        - WorkspaceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Role') as role,
              JSON_EXTRACT(Properties, '$.S3Location') as s3_location,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND data__Identifier = '<WorkspaceId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Role') as role,
                json_extract_path_text(Properties, 'S3Location') as s3_location,
                json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND data__Identifier = '<WorkspaceId>'
                AND region = 'us-east-1'
