openapi: 3.0.0
info:
  title: CleanRooms
  version: 1.0.0
paths: {}
components:
  schemas:
    AnalysisParameter:
      type: object
      additionalProperties: false
      properties:
        DefaultValue:
          type: string
          minLength: 0
          maxLength: 250
        Name:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '[0-9a-zA-Z_]+'
        Type:
          type: string
          enum:
            - SMALLINT
            - INTEGER
            - BIGINT
            - DECIMAL
            - REAL
            - DOUBLE_PRECISION
            - BOOLEAN
            - CHAR
            - VARCHAR
            - DATE
            - TIMESTAMP
            - TIMESTAMPTZ
            - TIME
            - TIMETZ
            - VARBYTE
      required:
        - Name
        - Type
    TableName:
      type: string
      maxLength: 128
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
    ReferencedTables:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/TableName'
      minItems: 0
    AnalysisSchema:
      type: object
      additionalProperties: false
      properties:
        ReferencedTables:
          $ref: '#/components/schemas/ReferencedTables'
      required:
        - ReferencedTables
    AnalysisSource:
      type: object
      additionalProperties: false
      properties:
        Text:
          type: string
          minLength: 0
          maxLength: 15000
      required:
        - Text
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    AnalysisTemplate:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 200
        CollaborationArn:
          type: string
          maxLength: 100
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms analysis template.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        AnalysisParameters:
          description: The member who can query can provide this placeholder for a literal data value in an analysis template
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisParameter'
          type: array
          minItems: 0
          maxItems: 10
        AnalysisTemplateIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        MembershipArn:
          type: string
          maxLength: 100
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Name:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        Schema:
          $ref: '#/components/schemas/AnalysisSchema'
        Source:
          $ref: '#/components/schemas/AnalysisSource'
        Format:
          type: string
          enum:
            - SQL
      required:
        - Source
        - Format
        - Name
        - MembershipIdentifier
      x-stackql-resource-name: analysis_template
      x-stackql-primaryIdentifier:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - Name
        - MembershipIdentifier
        - Source
        - Source/Text
        - Format
        - AnalysisParameters
        - AnalysisParameters/Name
        - AnalysisParameters/Type
        - AnalysisParameters/DefaultValue
      x-read-only-properties:
        - CollaborationArn
        - CollaborationIdentifier
        - AnalysisTemplateIdentifier
        - Schema
        - Arn
        - MembershipArn
      x-required-permissions:
        create:
          - cleanrooms:CreateAnalysisTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListAnalysisTemplates
        read:
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateAnalysisTemplate
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeleteAnalysisTemplate
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListAnalysisTemplates
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
        list:
          - cleanrooms:ListAnalysisTemplates
    CollaborationQueryLogStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DataEncryptionMetadata:
      type: object
      properties:
        AllowCleartext:
          type: boolean
        AllowDuplicates:
          type: boolean
        AllowJoinsOnColumnsWithDifferentNames:
          type: boolean
        PreserveNulls:
          type: boolean
      required:
        - AllowCleartext
        - AllowDuplicates
        - AllowJoinsOnColumnsWithDifferentNames
        - PreserveNulls
      additionalProperties: false
    MemberAbility:
      type: string
      enum:
        - CAN_QUERY
        - CAN_RECEIVE_RESULTS
    MemberAbilities:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/MemberAbility'
      uniqueItems: true
    MemberSpecification:
      type: object
      properties:
        AccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        MemberAbilities:
          $ref: '#/components/schemas/MemberAbilities'
        DisplayName:
          $ref: '#/components/schemas/Name'
        PaymentConfiguration:
          $ref: '#/components/schemas/PaymentConfiguration'
      required:
        - AccountId
        - DisplayName
        - MemberAbilities
      additionalProperties: false
    MemberStatus:
      type: string
      enum:
        - INVITED
        - ACTIVE
        - LEFT
        - REMOVED
    Name:
      type: string
      maxLength: 100
      minLength: 1
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
    PaymentConfiguration:
      type: object
      additionalProperties: false
      properties:
        QueryCompute:
          $ref: '#/components/schemas/QueryComputePaymentConfig'
      required:
        - QueryCompute
    QueryComputePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    Collaboration:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        CreatorDisplayName:
          $ref: '#/components/schemas/Name'
        CreatorMemberAbilities:
          $ref: '#/components/schemas/MemberAbilities'
        DataEncryptionMetadata:
          $ref: '#/components/schemas/DataEncryptionMetadata'
        Description:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Members:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MemberSpecification'
          maxItems: 9
          minItems: 0
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        QueryLogStatus:
          $ref: '#/components/schemas/CollaborationQueryLogStatus'
        CreatorPaymentConfiguration:
          $ref: '#/components/schemas/PaymentConfiguration'
      required:
        - CreatorDisplayName
        - CreatorMemberAbilities
        - Members
        - Name
        - Description
        - QueryLogStatus
      x-stackql-resource-name: collaboration
      x-stackql-primaryIdentifier:
        - CollaborationIdentifier
      x-create-only-properties:
        - CreatorDisplayName
        - CreatorMemberAbilities
        - DataEncryptionMetadata
        - QueryLogStatus
        - Members
        - CreatorPaymentConfiguration
      x-read-only-properties:
        - Arn
        - CollaborationIdentifier
      x-required-permissions:
        create:
          - cleanrooms:CreateCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetCollaboration
          - cleanrooms:ListCollaborations
        read:
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeleteCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:ListMembers
          - cleanrooms:ListCollaborations
        list:
          - cleanrooms:ListCollaborations
    AnalysisRuleColumnName:
      type: string
      maxLength: 127
      minLength: 1
      pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
    AggregateColumn:
      type: object
      properties:
        ColumnNames:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
          minItems: 1
        Function:
          $ref: '#/components/schemas/AggregateFunctionName'
      required:
        - ColumnNames
        - Function
      additionalProperties: false
    AggregateFunctionName:
      type: string
      enum:
        - SUM
        - SUM_DISTINCT
        - COUNT
        - COUNT_DISTINCT
        - AVG
    AggregationConstraint:
      type: object
      properties:
        ColumnName:
          $ref: '#/components/schemas/AnalysisRuleColumnName'
        Minimum:
          type: number
          minimum: 2
          maximum: 100000
        Type:
          $ref: '#/components/schemas/AggregationType'
      required:
        - ColumnName
        - Minimum
        - Type
      additionalProperties: false
    AggregationType:
      type: string
      enum:
        - COUNT_DISTINCT
    JoinOperator:
      type: string
      enum:
        - OR
        - AND
    AnalysisMethod:
      type: string
      enum:
        - DIRECT_QUERY
    JoinRequiredOption:
      type: string
      enum:
        - QUERY_RUNNER
    ScalarFunctions:
      type: string
      enum:
        - TRUNC
        - ABS
        - CEILING
        - FLOOR
        - LN
        - LOG
        - ROUND
        - SQRT
        - CAST
        - LOWER
        - RTRIM
        - UPPER
        - COALESCE
    AnalysisRuleAggregation:
      type: object
      properties:
        AggregateColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AggregateColumn'
          minItems: 1
        JoinColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
        AllowedJoinOperators:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/JoinOperator'
          maxItems: 2
        JoinRequired:
          $ref: '#/components/schemas/JoinRequiredOption'
        DimensionColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
        ScalarFunctions:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ScalarFunctions'
        OutputConstraints:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AggregationConstraint'
          minItems: 1
      required:
        - AggregateColumns
        - JoinColumns
        - DimensionColumns
        - ScalarFunctions
        - OutputConstraints
      additionalProperties: false
    AnalysisRuleList:
      type: object
      properties:
        JoinColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
          minItems: 1
        AllowedJoinOperators:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/JoinOperator'
          maxItems: 2
        ListColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
      required:
        - JoinColumns
        - ListColumns
      additionalProperties: false
    AllowedAnalysis:
      type: string
      minLength: 0
      maxLength: 200
      pattern: (ANY_QUERY|arn:[\w]{3}:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/analysistemplate/[\d\w-]+)
    AllowedAnalyses:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AllowedAnalysis'
    AllowedAnalysisProvider:
      type: string
      minLength: 12
      maxLength: 12
      pattern: \d+
    AllowedAnalysisProviders:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AllowedAnalysisProvider'
    AnalysisRuleCustom:
      type: object
      properties:
        AllowedAnalyses:
          $ref: '#/components/schemas/AllowedAnalyses'
        AllowedAnalysisProviders:
          $ref: '#/components/schemas/AllowedAnalysisProviders'
      required:
        - AllowedAnalyses
      additionalProperties: false
    ConfiguredTableAnalysisRulePolicy:
      type: object
      x-title: V1
      properties:
        V1:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicyV1'
      required:
        - V1
      additionalProperties: false
    ConfiguredTableAnalysisRulePolicyV1:
      oneOf:
        - type: object
          title: List
          properties:
            List:
              $ref: '#/components/schemas/AnalysisRuleList'
          required:
            - List
          additionalProperties: false
        - type: object
          title: Aggregation
          properties:
            Aggregation:
              $ref: '#/components/schemas/AnalysisRuleAggregation'
          required:
            - Aggregation
          additionalProperties: false
        - type: object
          title: Custom
          properties:
            Custom:
              $ref: '#/components/schemas/AnalysisRuleCustom'
          required:
            - Custom
          additionalProperties: false
    ConfiguredTableAnalysisRuleType:
      type: string
      enum:
        - AGGREGATION
        - LIST
        - CUSTOM
    GlueTableReference:
      type: object
      properties:
        TableName:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        DatabaseName:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
      required:
        - DatabaseName
        - TableName
      additionalProperties: false
    AnalysisRule:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
        Policy:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
      required:
        - Type
        - Policy
      additionalProperties: false
    TableReference:
      type: object
      x-title: Glue
      properties:
        Glue:
          $ref: '#/components/schemas/GlueTableReference'
      required:
        - Glue
      additionalProperties: false
    ConfiguredTable:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        AllowedColumns:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 128
            pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
          maxItems: 100
          minItems: 1
        AnalysisMethod:
          $ref: '#/components/schemas/AnalysisMethod'
        ConfiguredTableIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        AnalysisRules:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRule'
          maxItems: 1
          minItems: 1
        TableReference:
          $ref: '#/components/schemas/TableReference'
      required:
        - AllowedColumns
        - AnalysisMethod
        - Name
        - TableReference
      x-stackql-resource-name: configured_table
      x-stackql-primaryIdentifier:
        - ConfiguredTableIdentifier
      x-create-only-properties:
        - AllowedColumns
        - AnalysisMethod
        - TableReference
      x-read-only-properties:
        - Arn
        - ConfiguredTableIdentifier
      x-required-permissions:
        create:
          - cleanrooms:CreateConfiguredTable
          - cleanrooms:DeleteConfiguredTable
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:CreateConfiguredTableAnalysisRule
          - cleanrooms:GetConfiguredTable
          - cleanrooms:GetConfiguredTableAnalysisRule
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:ListConfiguredTables
        read:
          - cleanrooms:GetConfiguredTable
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateConfiguredTable
          - cleanrooms:GetConfiguredTable
          - cleanrooms:CreateConfiguredTableAnalysisRule
          - cleanrooms:UpdateConfiguredTableAnalysisRule
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
        delete:
          - cleanrooms:DeleteConfiguredTable
          - cleanrooms:GetConfiguredTable
          - cleanrooms:ListConfiguredTables
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
        list:
          - cleanrooms:ListConfiguredTables
    ConfiguredTableAssociation:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        ConfiguredTableAssociationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        ConfiguredTableIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Name:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        RoleArn:
          type: string
          maxLength: 512
          minLength: 32
      required:
        - ConfiguredTableIdentifier
        - Name
        - RoleArn
        - MembershipIdentifier
      x-stackql-resource-name: configured_table_association
      x-stackql-primaryIdentifier:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - ConfiguredTableIdentifier
        - Name
        - MembershipIdentifier
      x-read-only-properties:
        - ConfiguredTableAssociationIdentifier
        - Arn
      x-required-permissions:
        create:
          - cleanrooms:CreateConfiguredTableAssociation
          - iam:PassRole
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListConfiguredTableAssociations
        read:
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateConfiguredTableAssociation
          - cleanrooms:GetConfiguredTableAssociation
          - iam:PassRole
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeleteConfiguredTableAssociation
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListConfiguredTableAssociations
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
        list:
          - cleanrooms:ListConfiguredTableAssociations
    MembershipQueryLogStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    MembershipStatus:
      type: string
      enum:
        - ACTIVE
        - REMOVED
        - COLLABORATION_DELETED
    ResultFormat:
      type: string
      enum:
        - CSV
        - PARQUET
    ProtectedQueryS3OutputConfiguration:
      type: object
      additionalProperties: false
      properties:
        ResultFormat:
          $ref: '#/components/schemas/ResultFormat'
        Bucket:
          type: string
          minLength: 3
          maxLength: 63
        KeyPrefix:
          type: string
      required:
        - ResultFormat
        - Bucket
    MembershipProtectedQueryOutputConfiguration:
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/ProtectedQueryS3OutputConfiguration'
      required:
        - S3
    MembershipProtectedQueryResultConfiguration:
      type: object
      additionalProperties: false
      properties:
        OutputConfiguration:
          $ref: '#/components/schemas/MembershipProtectedQueryOutputConfiguration'
        RoleArn:
          type: string
          minLength: 32
          maxLength: 512
      required:
        - OutputConfiguration
    MembershipPaymentConfiguration:
      type: object
      additionalProperties: false
      properties:
        QueryCompute:
          $ref: '#/components/schemas/MembershipQueryComputePaymentConfig'
      required:
        - QueryCompute
    MembershipQueryComputePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    Membership:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms membership.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        CollaborationArn:
          type: string
          maxLength: 100
        CollaborationCreatorAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        QueryLogStatus:
          $ref: '#/components/schemas/MembershipQueryLogStatus'
        DefaultResultConfiguration:
          $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
        PaymentConfiguration:
          $ref: '#/components/schemas/MembershipPaymentConfiguration'
      required:
        - CollaborationIdentifier
        - QueryLogStatus
      x-stackql-resource-name: membership
      x-stackql-primaryIdentifier:
        - MembershipIdentifier
      x-create-only-properties:
        - CollaborationIdentifier
      x-read-only-properties:
        - Arn
        - CollaborationArn
        - CollaborationCreatorAccountId
        - MembershipIdentifier
      x-required-permissions:
        create:
          - cleanrooms:CreateMembership
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:PutResourcePolicy
          - logs:CreateLogGroup
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:ListMemberships
          - iam:PassRole
        read:
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:GetLogDelivery
        update:
          - cleanrooms:UpdateMembership
          - cleanrooms:GetMembership
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:PutResourcePolicy
          - logs:CreateLogGroup
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - iam:PassRole
        delete:
          - cleanrooms:DeleteMembership
          - cleanrooms:GetMembership
          - cleanrooms:ListMemberships
          - cleanrooms:ListTagsForResource
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:GetLogDelivery
        list:
          - cleanrooms:ListMemberships
  x-stackQL-resources:
    analysis_templates:
      name: analysis_templates
      id: awscc.cleanrooms.analysis_templates
      x-cfn-schema-name: AnalysisTemplate
      x-type: list
      x-identifiers:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND region = 'us-east-1'
    analysis_template:
      name: analysis_template
      id: awscc.cleanrooms.analysis_template
      x-cfn-schema-name: AnalysisTemplate
      x-type: get
      x-identifiers:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AnalysisParameters') as analysis_parameters,
              JSON_EXTRACT(Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Schema') as _schema,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.Format') as _format
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND data__Identifier = '<AnalysisTemplateIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AnalysisParameters') as analysis_parameters,
                json_extract_path_text(Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'MembershipArn') as membership_arn,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Schema') as _schema,
                json_extract_path_text(Properties, 'Source') as source,
                json_extract_path_text(Properties, 'Format') as _format
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND data__Identifier = '<AnalysisTemplateIdentifier>'
                AND region = 'us-east-1'
    collaborations:
      name: collaborations
      id: awscc.cleanrooms.collaborations
      x-cfn-schema-name: Collaboration
      x-type: list
      x-identifiers:
        - CollaborationIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND region = 'us-east-1'
    collaboration:
      name: collaboration
      id: awscc.cleanrooms.collaboration
      x-cfn-schema-name: Collaboration
      x-type: get
      x-identifiers:
        - CollaborationIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.CreatorDisplayName') as creator_display_name,
              JSON_EXTRACT(Properties, '$.CreatorMemberAbilities') as creator_member_abilities,
              JSON_EXTRACT(Properties, '$.DataEncryptionMetadata') as data_encryption_metadata,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Members') as members,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(Properties, '$.CreatorPaymentConfiguration') as creator_payment_configuration
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND data__Identifier = '<CollaborationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(Properties, 'CreatorDisplayName') as creator_display_name,
                json_extract_path_text(Properties, 'CreatorMemberAbilities') as creator_member_abilities,
                json_extract_path_text(Properties, 'DataEncryptionMetadata') as data_encryption_metadata,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Members') as members,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'QueryLogStatus') as query_log_status,
                json_extract_path_text(Properties, 'CreatorPaymentConfiguration') as creator_payment_configuration
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND data__Identifier = '<CollaborationIdentifier>'
                AND region = 'us-east-1'
    configured_tables:
      name: configured_tables
      id: awscc.cleanrooms.configured_tables
      x-cfn-schema-name: ConfiguredTable
      x-type: list
      x-identifiers:
        - ConfiguredTableIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND region = 'us-east-1'
    configured_table:
      name: configured_table
      id: awscc.cleanrooms.configured_table
      x-cfn-schema-name: ConfiguredTable
      x-type: get
      x-identifiers:
        - ConfiguredTableIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AllowedColumns') as allowed_columns,
              JSON_EXTRACT(Properties, '$.AnalysisMethod') as analysis_method,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AnalysisRules') as analysis_rules,
              JSON_EXTRACT(Properties, '$.TableReference') as table_reference
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND data__Identifier = '<ConfiguredTableIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AllowedColumns') as allowed_columns,
                json_extract_path_text(Properties, 'AnalysisMethod') as analysis_method,
                json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'AnalysisRules') as analysis_rules,
                json_extract_path_text(Properties, 'TableReference') as table_reference
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND data__Identifier = '<ConfiguredTableIdentifier>'
                AND region = 'us-east-1'
    configured_table_associations:
      name: configured_table_associations
      id: awscc.cleanrooms.configured_table_associations
      x-cfn-schema-name: ConfiguredTableAssociation
      x-type: list
      x-identifiers:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND region = 'us-east-1'
    configured_table_association:
      name: configured_table_association
      id: awscc.cleanrooms.configured_table_association
      x-cfn-schema-name: ConfiguredTableAssociation
      x-type: get
      x-identifiers:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND data__Identifier = '<ConfiguredTableAssociationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND data__Identifier = '<ConfiguredTableAssociationIdentifier>'
                AND region = 'us-east-1'
    memberships:
      name: memberships
      id: awscc.cleanrooms.memberships
      x-cfn-schema-name: Membership
      x-type: list
      x-identifiers:
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Membership'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Membership'
                AND region = 'us-east-1'
    membership:
      name: membership
      id: awscc.cleanrooms.membership
      x-cfn-schema-name: Membership
      x-type: get
      x-identifiers:
        - MembershipIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.CollaborationCreatorAccountId') as collaboration_creator_account_id,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(Properties, '$.DefaultResultConfiguration') as default_result_configuration,
              JSON_EXTRACT(Properties, '$.PaymentConfiguration') as payment_configuration
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Membership'
              AND data__Identifier = '<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(Properties, 'CollaborationCreatorAccountId') as collaboration_creator_account_id,
                json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(Properties, 'QueryLogStatus') as query_log_status,
                json_extract_path_text(Properties, 'DefaultResultConfiguration') as default_result_configuration,
                json_extract_path_text(Properties, 'PaymentConfiguration') as payment_configuration
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Membership'
                AND data__Identifier = '<MembershipIdentifier>'
                AND region = 'us-east-1'
