openapi: 3.0.0
info:
  title: WorkSpacesThinClient
  version: 1.0.0
paths: {}
components:
  schemas:
    Hour:
      type: integer
      minimum: 0
      maximum: 23
    Minute:
      type: integer
      minimum: 0
      maximum: 59
    DayOfWeek:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          maxLength: 256
      required:
        - Key
        - Value
    MaintenanceWindow:
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The type of maintenance window.
          type: string
          enum:
            - SYSTEM
            - CUSTOM
        StartTimeHour:
          description: The hour start time of maintenance window.
          $ref: '#/components/schemas/Hour'
        StartTimeMinute:
          description: The minute start time of maintenance window.
          $ref: '#/components/schemas/Minute'
        EndTimeHour:
          description: The hour end time of maintenance window.
          $ref: '#/components/schemas/Hour'
        EndTimeMinute:
          description: The minute end time of maintenance window.
          $ref: '#/components/schemas/Minute'
        DaysOfTheWeek:
          description: The date of maintenance window.
          type: array
          minItems: 1
          maxItems: 7
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DayOfWeek'
        ApplyTimeOf:
          description: The desired time zone maintenance window.
          type: string
          enum:
            - UTC
            - DEVICE
      required:
        - Type
    Environment:
      type: object
      properties:
        Id:
          description: Unique identifier of the environment.
          type: string
          pattern: ^[a-z0-9]{9}$
        Name:
          description: The name of the environment.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 64
        DesktopArn:
          description: The Amazon Resource Name (ARN) of the desktop to stream from Amazon WorkSpaces, WorkSpaces Web, or AppStream 2.0.
          type: string
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[0-9]{0,12}:[a-zA-Z0-9\-\/\._]+$
          minLength: 20
          maxLength: 2048
        DesktopEndpoint:
          description: The URL for the identity provider login (only for environments that use AppStream 2.0).
          type: string
          pattern: ^(https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,32}(:[0-9]{1,5})?(\/.*)?$
          minLength: 1
          maxLength: 1024
        DesktopType:
          description: The type of VDI.
          type: string
          enum:
            - workspaces
            - appstream
            - workspaces-web
        ActivationCode:
          description: Activation code for devices associated with environment.
          type: string
          pattern: ^[a-z]{2}[a-z0-9]{6}$
        RegisteredDevicesCount:
          description: Number of devices registered to the environment.
          type: integer
          minimum: 0
        SoftwareSetUpdateSchedule:
          description: An option to define if software updates should be applied within a maintenance window.
          type: string
          enum:
            - USE_MAINTENANCE_WINDOW
            - APPLY_IMMEDIATELY
        MaintenanceWindow:
          description: A specification for a time window to apply software updates.
          $ref: '#/components/schemas/MaintenanceWindow'
        SoftwareSetUpdateMode:
          description: An option to define which software updates to apply.
          type: string
          enum:
            - USE_LATEST
            - USE_DESIRED
        DesiredSoftwareSetId:
          description: The ID of the software set to apply.
          type: string
          pattern: ^[0-9]{1,9}$
        PendingSoftwareSetId:
          description: The ID of the software set that is pending to be installed.
          type: string
          pattern: ^[0-9]{1,9}$
        PendingSoftwareSetVersion:
          description: The version of the software set that is pending to be installed.
          type: string
        SoftwareSetComplianceStatus:
          description: Describes if the software currently installed on all devices in the environment is a supported version.
          type: string
          enum:
            - COMPLIANT
            - NOT_COMPLIANT
            - NO_REGISTERED_DEVICES
        CreatedAt:
          description: The timestamp in unix epoch format when environment was created.
          type: string
        UpdatedAt:
          description: The timestamp in unix epoch format when environment was last updated.
          type: string
        Arn:
          description: The environment ARN.
          type: string
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[0-9]{0,12}:[a-zA-Z0-9\-\/\._]+$
          minLength: 20
          maxLength: 2048
        KmsKeyArn:
          description: The Amazon Resource Name (ARN) of the AWS Key Management Service key used to encrypt the environment.
          type: string
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[0-9]{0,12}:key\/[a-zA-Z0-9-]+$
          minLength: 20
          maxLength: 2048
        Tags:
          type: array
          maxItems: 20
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DesktopArn
      x-stackql-resource-name: environment
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - KmsKeyArn
        - DesktopArn
      x-read-only-properties:
        - Id
        - ActivationCode
        - Arn
        - CreatedAt
        - DesktopType
        - RegisteredDevicesCount
        - UpdatedAt
        - PendingSoftwareSetId
        - PendingSoftwareSetVersion
        - SoftwareSetComplianceStatus
      x-required-permissions:
        create:
          - thinclient:CreateEnvironment
          - thinclient:TagResource
          - thinclient:ListTagsForResource
          - appstream:DescribeStacks
          - workspaces:DescribeWorkspaceDirectories
          - workspaces-web:GetPortal
          - workspaces-web:GetUserSettings
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
        read:
          - thinclient:GetEnvironment
          - thinclient:ListTagsForResource
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
        update:
          - appstream:DescribeStacks
          - workspaces:DescribeWorkspaceDirectories
          - workspaces-web:GetPortal
          - workspaces-web:GetUserSettings
          - thinclient:UpdateEnvironment
          - thinclient:GetEnvironment
          - thinclient:TagResource
          - thinclient:UntagResource
          - thinclient:ListTagsForResource
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:RetireGrant
        delete:
          - thinclient:DeleteEnvironment
          - thinclient:UntagResource
          - kms:DescribeKey
          - kms:RetireGrant
        list:
          - thinclient:ListEnvironment
          - thinclient:ListTagsForResource
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
  x-stackQL-resources:
    environments:
      name: environments
      id: awscc.workspacesthinclient.environments
      x-cfn-schema-name: Environment
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesThinClient::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesThinClient::Environment'
                AND region = 'us-east-1'
    environment:
      name: environment
      id: awscc.workspacesthinclient.environment
      x-cfn-schema-name: Environment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DesktopArn') as desktop_arn,
              JSON_EXTRACT(Properties, '$.DesktopEndpoint') as desktop_endpoint,
              JSON_EXTRACT(Properties, '$.DesktopType') as desktop_type,
              JSON_EXTRACT(Properties, '$.ActivationCode') as activation_code,
              JSON_EXTRACT(Properties, '$.RegisteredDevicesCount') as registered_devices_count,
              JSON_EXTRACT(Properties, '$.SoftwareSetUpdateSchedule') as software_set_update_schedule,
              JSON_EXTRACT(Properties, '$.MaintenanceWindow') as maintenance_window,
              JSON_EXTRACT(Properties, '$.SoftwareSetUpdateMode') as software_set_update_mode,
              JSON_EXTRACT(Properties, '$.DesiredSoftwareSetId') as desired_software_set_id,
              JSON_EXTRACT(Properties, '$.PendingSoftwareSetId') as pending_software_set_id,
              JSON_EXTRACT(Properties, '$.PendingSoftwareSetVersion') as pending_software_set_version,
              JSON_EXTRACT(Properties, '$.SoftwareSetComplianceStatus') as software_set_compliance_status,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesThinClient::Environment'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'DesktopArn') as desktop_arn,
                json_extract_path_text(Properties, 'DesktopEndpoint') as desktop_endpoint,
                json_extract_path_text(Properties, 'DesktopType') as desktop_type,
                json_extract_path_text(Properties, 'ActivationCode') as activation_code,
                json_extract_path_text(Properties, 'RegisteredDevicesCount') as registered_devices_count,
                json_extract_path_text(Properties, 'SoftwareSetUpdateSchedule') as software_set_update_schedule,
                json_extract_path_text(Properties, 'MaintenanceWindow') as maintenance_window,
                json_extract_path_text(Properties, 'SoftwareSetUpdateMode') as software_set_update_mode,
                json_extract_path_text(Properties, 'DesiredSoftwareSetId') as desired_software_set_id,
                json_extract_path_text(Properties, 'PendingSoftwareSetId') as pending_software_set_id,
                json_extract_path_text(Properties, 'PendingSoftwareSetVersion') as pending_software_set_version,
                json_extract_path_text(Properties, 'SoftwareSetComplianceStatus') as software_set_compliance_status,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesThinClient::Environment'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
