openapi: 3.0.0
info:
  title: DMS
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      description: |-
        <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
                    resource.</p>
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Tag key.</p>
        Value:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Tag value.</p>
      required:
        - Key
        - Value
      additionalProperties: false
    DmsSslModeValue:
      type: string
      enum:
        - none
        - require
        - verify_ca
        - verify_full
    DataProvider:
      type: object
      properties:
        DataProviderName:
          description: The property describes a name to identify the data provider.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderIdentifier:
          description: The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        DataProviderArn:
          description: The data provider ARN.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderCreationTime:
          description: The data provider creation time.
          type: string
          minLength: 1
          maxLength: 40
        Description:
          description: The optional description of the data provider.
          type: string
          minLength: 1
          maxLength: 255
        Engine:
          description: The property describes a data engine for the data provider.
          type: string
          enum:
            - postgres
            - mysql
            - oracle
            - sqlserver
            - aurora
            - aurora_postgresql
        ExactSettings:
          description: The property describes the exact settings which can be modified
          type: boolean
          default: false
        Settings:
          description: The property identifies the exact type of settings for the data provider.
          type: object
          oneOf:
            - description: PostgreSqlSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                PostgreSqlSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
            - description: MySqlSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                MySqlSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
            - description: OracleSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                OracleSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                    AsmServer:
                      type: string
                    SecretsManagerOracleAsmSecretId:
                      type: string
                    SecretsManagerOracleAsmAccessRoleArn:
                      type: string
                    SecretsManagerSecurityDbEncryptionSecretId:
                      type: string
                    SecretsManagerSecurityDbEncryptionAccessRoleArn:
                      type: string
            - description: MicrosoftSqlServerSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                MicrosoftSqlServerSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Engine
      x-stackql-resource-name: data_provider
      x-stackql-primaryIdentifier:
        - DataProviderArn
      x-read-only-properties:
        - DataProviderArn
        - DataProviderCreationTime
      x-required-permissions:
        create:
          - dms:CreateDataProvider
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:AddTagsToResource
          - dms:ListTagsForResource
        read:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
        update:
          - dms:UpdateDataProvider
          - dms:ModifyDataProvider
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteDataProvider
        list:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
    InstanceProfile:
      type: object
      properties:
        InstanceProfileArn:
          description: The property describes an ARN of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileIdentifier:
          description: The property describes an identifier for the instance profile. It is used for describing/deleting/modifying. Can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        AvailabilityZone:
          description: The property describes an availability zone of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        Description:
          description: The optional description of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        KmsKeyArn:
          description: The property describes kms key arn for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        PubliclyAccessible:
          description: The property describes the publicly accessible of the instance profile
          type: boolean
          default: false
        NetworkType:
          description: The property describes a network type for the instance profile.
          type: string
          enum:
            - IPV4
            - IPV6
            - DUAL
        InstanceProfileName:
          description: The property describes a name for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileCreationTime:
          description: The property describes a creating time of the instance profile.
          type: string
          minLength: 1
          maxLength: 40
        SubnetGroupIdentifier:
          description: The property describes a subnet group identifier for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        VpcSecurityGroups:
          description: The property describes vps security groups for the instance profile.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: instance_profile
      x-stackql-primaryIdentifier:
        - InstanceProfileArn
      x-read-only-properties:
        - InstanceProfileArn
        - InstanceProfileCreationTime
      x-required-permissions:
        create:
          - dms:CreateInstanceProfile
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:AddTagsToResource
          - dms:ListTagsForResource
        read:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
        update:
          - dms:UpdateInstanceProfile
          - dms:ModifyInstanceProfile
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteInstanceProfile
        list:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
    DataProviderDescriptor:
      type: object
      description: It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
      additionalProperties: false
      properties:
        DataProviderIdentifier:
          type: string
        DataProviderName:
          type: string
        DataProviderArn:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
    MigrationProject:
      type: object
      properties:
        MigrationProjectName:
          description: The property describes a name to identify the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectIdentifier:
          description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectArn:
          description: The property describes an ARN of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectCreationTime:
          description: The property describes a creating time of the migration project.
          type: string
          minLength: 1
          maxLength: 40
        InstanceProfileIdentifier:
          description: The property describes an instance profile identifier for the migration project. For create
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileName:
          description: The property describes an instance profile name for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileArn:
          description: The property describes an instance profile arn for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        TransformationRules:
          description: The property describes transformation rules for the migration project.
          type: string
        Description:
          description: The optional description of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        SchemaConversionApplicationAttributes:
          description: The property describes schema conversion application attributes for the migration project.
          type: object
          additionalProperties: false
          properties:
            S3BucketPath:
              type: string
            S3BucketRoleArn:
              type: string
        SourceDataProviderDescriptors:
          description: The property describes source data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        TargetDataProviderDescriptors:
          description: The property describes target data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: migration_project
      x-stackql-primaryIdentifier:
        - MigrationProjectArn
      x-read-only-properties:
        - MigrationProjectArn
      x-required-permissions:
        create:
          - dms:CreateMigrationProject
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        read:
          - dms:DescribeMigrationProjects
          - dms:ListMigrationProjects
          - dms:ListTagsForResource
        update:
          - dms:UpdateMigrationProject
          - dms:ModifyMigrationProject
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        delete:
          - dms:DeleteMigrationProject
        list:
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:ListTagsForResource
    ComputeConfig:
      description: Configuration parameters for provisioning a AWS DMS Serverless replication
      type: object
      properties:
        AvailabilityZone:
          type: string
        DnsNameServers:
          type: string
        KmsKeyId:
          type: string
        MaxCapacityUnits:
          type: integer
        MinCapacityUnits:
          type: integer
        MultiAZ:
          type: boolean
        PreferredMaintenanceWindow:
          type: string
        ReplicationSubnetGroupId:
          type: string
        VpcSecurityGroupIds:
          type: array
          items:
            type: string
      required:
        - MaxCapacityUnits
      additionalProperties: false
    ReplicationConfig:
      type: object
      properties:
        ReplicationConfigIdentifier:
          description: A unique identifier of replication configuration
          type: string
        ReplicationConfigArn:
          description: The Amazon Resource Name (ARN) of the Replication Config
          type: string
        SourceEndpointArn:
          description: The Amazon Resource Name (ARN) of the source endpoint for this AWS DMS Serverless replication configuration
          type: string
        TargetEndpointArn:
          description: The Amazon Resource Name (ARN) of the target endpoint for this AWS DMS Serverless replication configuration
          type: string
        ReplicationType:
          description: The type of AWS DMS Serverless replication to provision using this replication configuration
          type: string
          enum:
            - full-load
            - full-load-and-cdc
            - cdc
        ComputeConfig:
          $ref: '#/components/schemas/ComputeConfig'
        ReplicationSettings:
          description: JSON settings for Servereless replications that are provisioned using this replication configuration
          type: object
        SupplementalSettings:
          description: JSON settings for specifying supplemental data
          type: object
        ResourceIdentifier:
          description: A unique value or name that you get set for a given resource that can be used to construct an Amazon Resource Name (ARN) for that resource
          type: string
        TableMappings:
          description: JSON table mappings for AWS DMS Serverless replications that are provisioned using this replication configuration
          type: object
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
      x-stackql-resource-name: replication_config
      x-stackql-primaryIdentifier:
        - ReplicationConfigArn
      x-create-only-properties:
        - ResourceIdentifier
      x-read-only-properties:
        - /Properties/ReplicationConfigArn
      x-required-permissions:
        create:
          - dms:CreateReplicationConfig
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        read:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        update:
          - dms:ModifyReplicationConfig
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        list:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        delete:
          - dms:DescribeReplicationConfigs
          - dms:DeleteReplicationConfig
          - dms:ListTagsForResource
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
  x-stackQL-resources:
    data_providers:
      name: data_providers
      id: awscc.dms.data_providers
      x-cfn-schema-name: DataProvider
      x-type: list
      x-identifiers:
        - DataProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProviderArn') as data_provider_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
                AND region = 'us-east-1'
    data_provider:
      name: data_provider
      id: awscc.dms.data_provider
      x-cfn-schema-name: DataProvider
      x-type: get
      x-identifiers:
        - DataProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProviderName') as data_provider_name,
              JSON_EXTRACT(Properties, '$.DataProviderIdentifier') as data_provider_identifier,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_arn,
              JSON_EXTRACT(Properties, '$.DataProviderCreationTime') as data_provider_creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Engine') as engine,
              JSON_EXTRACT(Properties, '$.ExactSettings') as exact_settings,
              JSON_EXTRACT(Properties, '$.Settings') as settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
              AND data__Identifier = '<DataProviderArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProviderName') as data_provider_name,
                json_extract_path_text(Properties, 'DataProviderIdentifier') as data_provider_identifier,
                json_extract_path_text(Properties, 'DataProviderArn') as data_provider_arn,
                json_extract_path_text(Properties, 'DataProviderCreationTime') as data_provider_creation_time,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Engine') as engine,
                json_extract_path_text(Properties, 'ExactSettings') as exact_settings,
                json_extract_path_text(Properties, 'Settings') as settings,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
                AND data__Identifier = '<DataProviderArn>'
                AND region = 'us-east-1'
    instance_profiles:
      name: instance_profiles
      id: awscc.dms.instance_profiles
      x-cfn-schema-name: InstanceProfile
      x-type: list
      x-identifiers:
        - InstanceProfileArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
                AND region = 'us-east-1'
    instance_profile:
      name: instance_profile
      id: awscc.dms.instance_profile
      x-cfn-schema-name: InstanceProfile
      x-type: get
      x-identifiers:
        - InstanceProfileArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileCreationTime') as instance_profile_creation_time,
              JSON_EXTRACT(Properties, '$.SubnetGroupIdentifier') as subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroups') as vpc_security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
              AND data__Identifier = '<InstanceProfileArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(Properties, 'AvailabilityZone') as availability_zone,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'PubliclyAccessible') as publicly_accessible,
                json_extract_path_text(Properties, 'NetworkType') as network_type,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(Properties, 'InstanceProfileCreationTime') as instance_profile_creation_time,
                json_extract_path_text(Properties, 'SubnetGroupIdentifier') as subnet_group_identifier,
                json_extract_path_text(Properties, 'VpcSecurityGroups') as vpc_security_groups,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
                AND data__Identifier = '<InstanceProfileArn>'
                AND region = 'us-east-1'
    migration_projects:
      name: migration_projects
      id: awscc.dms.migration_projects
      x-cfn-schema-name: MigrationProject
      x-type: list
      x-identifiers:
        - MigrationProjectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
                AND region = 'us-east-1'
    migration_project:
      name: migration_project
      id: awscc.dms.migration_project
      x-cfn-schema-name: MigrationProject
      x-type: get
      x-identifiers:
        - MigrationProjectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MigrationProjectName') as migration_project_name,
              JSON_EXTRACT(Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_arn,
              JSON_EXTRACT(Properties, '$.MigrationProjectCreationTime') as migration_project_creation_time,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.TransformationRules') as transformation_rules,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
              JSON_EXTRACT(Properties, '$.SourceDataProviderDescriptors') as source_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.TargetDataProviderDescriptors') as target_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
              AND data__Identifier = '<MigrationProjectArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MigrationProjectName') as migration_project_name,
                json_extract_path_text(Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_arn,
                json_extract_path_text(Properties, 'MigrationProjectCreationTime') as migration_project_creation_time,
                json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(Properties, 'TransformationRules') as transformation_rules,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                json_extract_path_text(Properties, 'SourceDataProviderDescriptors') as source_data_provider_descriptors,
                json_extract_path_text(Properties, 'TargetDataProviderDescriptors') as target_data_provider_descriptors,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
                AND data__Identifier = '<MigrationProjectArn>'
                AND region = 'us-east-1'
    replication_configs:
      name: replication_configs
      id: awscc.dms.replication_configs
      x-cfn-schema-name: ReplicationConfig
      x-type: list
      x-identifiers:
        - ReplicationConfigArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND region = 'us-east-1'
    replication_config:
      name: replication_config
      id: awscc.dms.replication_config
      x-cfn-schema-name: ReplicationConfig
      x-type: get
      x-identifiers:
        - ReplicationConfigArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationConfigIdentifier') as replication_config_identifier,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_arn,
              JSON_EXTRACT(Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(Properties, '$.ReplicationType') as replication_type,
              JSON_EXTRACT(Properties, '$.ComputeConfig') as compute_config,
              JSON_EXTRACT(Properties, '$.ReplicationSettings') as replication_settings,
              JSON_EXTRACT(Properties, '$.SupplementalSettings') as supplemental_settings,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.TableMappings') as table_mappings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND data__Identifier = '<ReplicationConfigArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationConfigIdentifier') as replication_config_identifier,
                json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_arn,
                json_extract_path_text(Properties, 'SourceEndpointArn') as source_endpoint_arn,
                json_extract_path_text(Properties, 'TargetEndpointArn') as target_endpoint_arn,
                json_extract_path_text(Properties, 'ReplicationType') as replication_type,
                json_extract_path_text(Properties, 'ComputeConfig') as compute_config,
                json_extract_path_text(Properties, 'ReplicationSettings') as replication_settings,
                json_extract_path_text(Properties, 'SupplementalSettings') as supplemental_settings,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(Properties, 'TableMappings') as table_mappings,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND data__Identifier = '<ReplicationConfigArn>'
                AND region = 'us-east-1'
