openapi: 3.0.0
info:
  title: WorkSpacesWeb
  version: 1.0.0
paths: {}
components:
  schemas:
    EncryptionContextMap:
      type: object
      x-patternProperties:
        ^[\s\S]*$:
          type: string
          maxLength: 131072
          minLength: 0
          pattern: ^[\s\S]*$
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
        Value:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      required:
        - Key
        - Value
      additionalProperties: false
    BrowserSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        BrowserPolicy:
          type: string
          maxLength: 131072
          minLength: 2
          pattern: \{[\S\s]*\}\s*
        BrowserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
      x-stackql-resource-name: browser_settings
      x-stackql-primaryIdentifier:
        - BrowserSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - BrowserSettingsArn
      x-required-permissions:
        create:
          - workspaces-web:CreateBrowserSettings
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        read:
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListBrowserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateBrowserSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListBrowserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetBrowserSettings
          - workspaces-web:DeleteBrowserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListBrowserSettings
    IdentityProviderDetails:
      type: object
      x-patternProperties:
        ^[\s\S]*$:
          type: string
          maxLength: 131072
          minLength: 0
          pattern: ^[\s\S]*$
      additionalProperties: false
    IdentityProviderType:
      type: string
      enum:
        - SAML
        - Facebook
        - Google
        - LoginWithAmazon
        - SignInWithApple
        - OIDC
    IdentityProvider:
      type: object
      properties:
        IdentityProviderArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36}){2,}$
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
        IdentityProviderName:
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
        PortalArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - IdentityProviderDetails
        - IdentityProviderName
        - IdentityProviderType
      x-stackql-resource-name: identity_provider
      x-stackql-primaryIdentifier:
        - IdentityProviderArn
      x-create-only-properties:
        - PortalArn
      x-read-only-properties:
        - IdentityProviderArn
      x-required-permissions:
        create:
          - workspaces-web:CreateIdentityProvider
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListIdentityProviders
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateIdentityProvider
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListIdentityProviders
          - workspaces-web:ListTagsForResource
        delete:
          - workspaces-web:GetIdentityProvider
          - workspaces-web:DeleteIdentityProvider
        list:
          - workspaces-web:ListIdentityProviders
    IpRule:
      type: object
      properties:
        IpRange:
          type: string
          pattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:/([0-9]|[12][0-9]|3[0-2])|)$
          description: A single IP address or an IP address range in CIDR notation
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^.+$
      required:
        - IpRange
      additionalProperties: false
    IpAccessSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CreationDate:
          type: string
          format: date-time
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^.+$
        DisplayName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^.+$
        IpAccessSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        IpRules:
          type: array
          items:
            $ref: '#/components/schemas/IpRule'
          maxItems: 100
          minItems: 1
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
      required:
        - IpRules
      x-stackql-resource-name: ip_access_settings
      x-stackql-primaryIdentifier:
        - IpAccessSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - CreationDate
        - IpAccessSettingsArn
      x-required-permissions:
        create:
          - workspaces-web:CreateIpAccessSettings
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        read:
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateIpAccessSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:DeleteIpAccessSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListIpAccessSettings
    NetworkSettings:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        NetworkSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        SecurityGroupIds:
          type: array
          items:
            type: string
            maxLength: 128
            minLength: 1
            pattern: ^[\w+\-]+$
          maxItems: 5
          minItems: 1
          x-insertionOrder: false
        SubnetIds:
          type: array
          items:
            type: string
            maxLength: 32
            minLength: 1
            pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
          maxItems: 3
          minItems: 2
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        VpcId:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^vpc-[0-9a-z]*$
      required:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-stackql-resource-name: network_settings
      x-stackql-primaryIdentifier:
        - NetworkSettingsArn
      x-read-only-properties:
        - AssociatedPortalArns
        - NetworkSettingsArn
      x-required-permissions:
        create:
          - workspaces-web:CreateNetworkSettings
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateNetworkSettings
          - workspaces-web:UpdateResource
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
        delete:
          - workspaces-web:GetNetworkSettings
          - workspaces-web:DeleteNetworkSettings
        list:
          - workspaces-web:ListNetworkSettings
    AuthenticationType:
      type: string
      enum:
        - Standard
        - IAM_Identity_Center
    BrowserType:
      type: string
      enum:
        - Chrome
    PortalStatus:
      type: string
      enum:
        - Incomplete
        - Pending
        - Active
    RendererType:
      type: string
      enum:
        - AppStream
    Portal:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
        BrowserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        BrowserType:
          $ref: '#/components/schemas/BrowserType'
        CreationDate:
          type: string
          format: date-time
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        DisplayName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^.+$
        IpAccessSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        NetworkSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        PortalArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        PortalEndpoint:
          type: string
          maxLength: 253
          minLength: 1
          pattern: ^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$
        PortalStatus:
          $ref: '#/components/schemas/PortalStatus'
        RendererType:
          $ref: '#/components/schemas/RendererType'
        ServiceProviderSamlMetadata:
          type: string
          maxLength: 204800
          minLength: 0
          pattern: ^.*$
        StatusReason:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: .*
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        TrustStoreArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        UserAccessLoggingSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        UserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      x-stackql-resource-name: portal
      x-stackql-primaryIdentifier:
        - PortalArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - BrowserType
        - CreationDate
        - PortalArn
        - PortalEndpoint
        - PortalStatus
        - RendererType
        - ServiceProviderSamlMetadata
        - StatusReason
      x-required-permissions:
        create:
          - workspaces-web:CreatePortal
          - workspaces-web:GetPortal
          - workspaces-web:GetPortalServiceProviderMetadata
          - workspaces-web:AssociateBrowserSettings
          - workspaces-web:AssociateIpAccessSettings
          - workspaces-web:AssociateNetworkSettings
          - workspaces-web:AssociateTrustStore
          - workspaces-web:AssociateUserAccessLoggingSettings
          - workspaces-web:AssociateUserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:CreateGrant
          - kms:GenerateDataKey
          - kms:Decrypt
          - ec2:CreateNetworkInterface
          - ec2:CreateNetworkInterfacePermission
          - ec2:DeleteNetworkInterface
          - ec2:DeleteNetworkInterfacePermission
          - ec2:ModifyNetworkInterfaceAttribute
          - kinesis:PutRecord
          - kinesis:PutRecords
          - kinesis:DescribeStreamSummary
          - sso:CreateManagedApplicationInstance
          - sso:DescribeRegisteredRegions
        read:
          - workspaces-web:GetPortal
          - workspaces-web:GetPortalServiceProviderMetadata
          - workspaces-web:ListTagsForResource
          - kms:Decrypt
        update:
          - workspaces-web:GetPortal
          - workspaces-web:GetPortalServiceProviderMetadata
          - workspaces-web:UpdatePortal
          - workspaces-web:AssociateBrowserSettings
          - workspaces-web:AssociateIpAccessSettings
          - workspaces-web:AssociateNetworkSettings
          - workspaces-web:AssociateTrustStore
          - workspaces-web:AssociateUserAccessLoggingSettings
          - workspaces-web:AssociateUserSettings
          - workspaces-web:DisassociateBrowserSettings
          - workspaces-web:DisassociateIpAccessSettings
          - workspaces-web:DisassociateNetworkSettings
          - workspaces-web:DisassociateTrustStore
          - workspaces-web:DisassociateUserAccessLoggingSettings
          - workspaces-web:DisassociateUserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - kms:CreateGrant
          - kms:Encrypt
          - kms:GenerateDataKey
          - kms:Decrypt
          - ec2:CreateNetworkInterface
          - ec2:CreateNetworkInterfacePermission
          - ec2:DeleteNetworkInterface
          - ec2:DeleteNetworkInterfacePermission
          - ec2:ModifyNetworkInterfaceAttribute
          - kinesis:PutRecord
          - kinesis:PutRecords
          - kinesis:DescribeStreamSummary
          - sso:CreateManagedApplicationInstance
          - sso:DeleteManagedApplicationInstance
          - sso:DescribeRegisteredRegions
          - sso:GetApplicationInstance
          - sso:ListApplicationInstances
        delete:
          - workspaces-web:GetPortal
          - workspaces-web:DeletePortal
          - workspaces-web:DisassociateBrowserSettings
          - workspaces-web:DisassociateIpAccessSettings
          - workspaces-web:DisassociateNetworkSettings
          - workspaces-web:DisassociateTrustStore
          - workspaces-web:DisassociateUserAccessLoggingSettings
          - workspaces-web:DisassociateUserSettings
          - kms:Decrypt
          - sso:DeleteManagedApplicationInstance
        list:
          - workspaces-web:ListPortals
          - kms:Decrypt
    TrustStore:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CertificateList:
          type: array
          items:
            type: string
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        TrustStoreArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - CertificateList
      x-stackql-resource-name: trust_store
      x-stackql-primaryIdentifier:
        - TrustStoreArn
      x-read-only-properties:
        - AssociatedPortalArns
        - TrustStoreArn
      x-required-permissions:
        create:
          - workspaces-web:CreateTrustStore
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTrustStoreCertificates
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTagsForResource
          - workspaces-web:ListTrustStoreCertificates
        update:
          - workspaces-web:UpdateTrustStore
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTagsForResource
          - workspaces-web:ListTrustStoreCertificates
        delete:
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:DeleteTrustStore
        list:
          - workspaces-web:ListTrustStores
          - workspaces-web:ListTrustStoreCertificates
    UserAccessLoggingSettings:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        KinesisStreamArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+
          description: Kinesis stream ARN to which log events are published.
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        UserAccessLoggingSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - KinesisStreamArn
      x-stackql-resource-name: user_access_logging_settings
      x-stackql-primaryIdentifier:
        - UserAccessLoggingSettingsArn
      x-read-only-properties:
        - AssociatedPortalArns
        - UserAccessLoggingSettingsArn
      x-required-permissions:
        create:
          - workspaces-web:CreateUserAccessLoggingSettings
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateUserAccessLoggingSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
          - kinesis:PutRecord
          - kinesis:PutRecords
        delete:
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:DeleteUserAccessLoggingSettings
        list:
          - workspaces-web:ListUserAccessLoggingSettings
    CookieSpecification:
      type: object
      properties:
        Domain:
          type: string
          maxLength: 253
          minLength: 0
          pattern: ^(\.?)(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$
        Name:
          type: string
          maxLength: 4096
          minLength: 0
        Path:
          type: string
          maxLength: 2000
          minLength: 0
          pattern: ^/(\S)*$
      required:
        - Domain
      additionalProperties: false
    CookieSynchronizationConfiguration:
      type: object
      properties:
        Allowlist:
          type: array
          items:
            $ref: '#/components/schemas/CookieSpecification'
          maxItems: 10
          minItems: 0
          x-insertionOrder: false
        Blocklist:
          type: array
          items:
            $ref: '#/components/schemas/CookieSpecification'
          maxItems: 10
          minItems: 0
          x-insertionOrder: false
      required:
        - Allowlist
      additionalProperties: false
    EnabledType:
      type: string
      enum:
        - Disabled
        - Enabled
    UserSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CookieSynchronizationConfiguration:
          $ref: '#/components/schemas/CookieSynchronizationConfiguration'
        CopyAllowed:
          $ref: '#/components/schemas/EnabledType'
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        DisconnectTimeoutInMinutes:
          type: number
          default: null
          maximum: 600
          minimum: 1
        DownloadAllowed:
          $ref: '#/components/schemas/EnabledType'
        IdleDisconnectTimeoutInMinutes:
          type: number
          default: null
          maximum: 60
          minimum: 0
        PasteAllowed:
          $ref: '#/components/schemas/EnabledType'
        PrintAllowed:
          $ref: '#/components/schemas/EnabledType'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        UploadAllowed:
          $ref: '#/components/schemas/EnabledType'
        UserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - CopyAllowed
        - DownloadAllowed
        - PasteAllowed
        - PrintAllowed
        - UploadAllowed
      x-stackql-resource-name: user_settings
      x-stackql-primaryIdentifier:
        - UserSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - UserSettingsArn
      x-required-permissions:
        create:
          - workspaces-web:CreateUserSettings
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        read:
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateUserSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetUserSettings
          - workspaces-web:DeleteUserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListUserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
  x-stackQL-resources:
    browser_settings:
      name: browser_settings
      id: awscc.workspacesweb.browser_settings
      x-cfn-schema-name: BrowserSettings
      x-type: get
      x-identifiers:
        - BrowserSettingsArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.BrowserPolicy') as browser_policy,
              JSON_EXTRACT(Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
              AND data__Identifier = '<BrowserSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'BrowserPolicy') as browser_policy,
                json_extract_path_text(Properties, 'BrowserSettingsArn') as browser_settings_arn,
                json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND data__Identifier = '<BrowserSettingsArn>'
                AND region = 'us-east-1'
    identity_providers:
      name: identity_providers
      id: awscc.workspacesweb.identity_providers
      x-cfn-schema-name: IdentityProvider
      x-type: list
      x-identifiers:
        - IdentityProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityProviderArn') as identity_provider_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdentityProviderArn') as identity_provider_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND region = 'us-east-1'
    identity_provider:
      name: identity_provider
      id: awscc.workspacesweb.identity_provider
      x-cfn-schema-name: IdentityProvider
      x-type: get
      x-identifiers:
        - IdentityProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityProviderArn') as identity_provider_arn,
              JSON_EXTRACT(Properties, '$.IdentityProviderDetails') as identity_provider_details,
              JSON_EXTRACT(Properties, '$.IdentityProviderName') as identity_provider_name,
              JSON_EXTRACT(Properties, '$.IdentityProviderType') as identity_provider_type,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND data__Identifier = '<IdentityProviderArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdentityProviderArn') as identity_provider_arn,
                json_extract_path_text(Properties, 'IdentityProviderDetails') as identity_provider_details,
                json_extract_path_text(Properties, 'IdentityProviderName') as identity_provider_name,
                json_extract_path_text(Properties, 'IdentityProviderType') as identity_provider_type,
                json_extract_path_text(Properties, 'PortalArn') as portal_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND data__Identifier = '<IdentityProviderArn>'
                AND region = 'us-east-1'
    ip_access_settings:
      name: ip_access_settings
      id: awscc.workspacesweb.ip_access_settings
      x-cfn-schema-name: IpAccessSettings
      x-type: get
      x-identifiers:
        - IpAccessSettingsArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(Properties, '$.IpRules') as ip_rules,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
              AND data__Identifier = '<IpAccessSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'CreationDate') as creation_date,
                json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                json_extract_path_text(Properties, 'IpRules') as ip_rules,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND data__Identifier = '<IpAccessSettingsArn>'
                AND region = 'us-east-1'
    network_settings:
      name: network_settings
      id: awscc.workspacesweb.network_settings
      x-cfn-schema-name: NetworkSettings
      x-type: get
      x-identifiers:
        - NetworkSettingsArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
              AND data__Identifier = '<NetworkSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'NetworkSettingsArn') as network_settings_arn,
                json_extract_path_text(Properties, 'SecurityGroupIds') as security_group_ids,
                json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'VpcId') as vpc_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND data__Identifier = '<NetworkSettingsArn>'
                AND region = 'us-east-1'
    portals:
      name: portals
      id: awscc.workspacesweb.portals
      x-cfn-schema-name: Portal
      x-type: list
      x-identifiers:
        - PortalArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PortalArn') as portal_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND region = 'us-east-1'
    portal:
      name: portal
      id: awscc.workspacesweb.portal
      x-cfn-schema-name: Portal
      x-type: get
      x-identifiers:
        - PortalArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AuthenticationType') as authentication_type,
              JSON_EXTRACT(Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(Properties, '$.BrowserType') as browser_type,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn,
              JSON_EXTRACT(Properties, '$.PortalEndpoint') as portal_endpoint,
              JSON_EXTRACT(Properties, '$.PortalStatus') as portal_status,
              JSON_EXTRACT(Properties, '$.RendererType') as renderer_type,
              JSON_EXTRACT(Properties, '$.ServiceProviderSamlMetadata') as service_provider_saml_metadata,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn,
              JSON_EXTRACT(Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
              JSON_EXTRACT(Properties, '$.UserSettingsArn') as user_settings_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND data__Identifier = '<PortalArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(Properties, 'AuthenticationType') as authentication_type,
                json_extract_path_text(Properties, 'BrowserSettingsArn') as browser_settings_arn,
                json_extract_path_text(Properties, 'BrowserType') as browser_type,
                json_extract_path_text(Properties, 'CreationDate') as creation_date,
                json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                json_extract_path_text(Properties, 'NetworkSettingsArn') as network_settings_arn,
                json_extract_path_text(Properties, 'PortalArn') as portal_arn,
                json_extract_path_text(Properties, 'PortalEndpoint') as portal_endpoint,
                json_extract_path_text(Properties, 'PortalStatus') as portal_status,
                json_extract_path_text(Properties, 'RendererType') as renderer_type,
                json_extract_path_text(Properties, 'ServiceProviderSamlMetadata') as service_provider_saml_metadata,
                json_extract_path_text(Properties, 'StatusReason') as status_reason,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn,
                json_extract_path_text(Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
                json_extract_path_text(Properties, 'UserSettingsArn') as user_settings_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND data__Identifier = '<PortalArn>'
                AND region = 'us-east-1'
    trust_stores:
      name: trust_stores
      id: awscc.workspacesweb.trust_stores
      x-cfn-schema-name: TrustStore
      x-type: list
      x-identifiers:
        - TrustStoreArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND region = 'us-east-1'
    trust_store:
      name: trust_store
      id: awscc.workspacesweb.trust_store
      x-cfn-schema-name: TrustStore
      x-type: get
      x-identifiers:
        - TrustStoreArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CertificateList') as certificate_list,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND data__Identifier = '<TrustStoreArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'CertificateList') as certificate_list,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND data__Identifier = '<TrustStoreArn>'
                AND region = 'us-east-1'
    user_access_logging_settings:
      name: user_access_logging_settings
      id: awscc.workspacesweb.user_access_logging_settings
      x-cfn-schema-name: UserAccessLoggingSettings
      x-type: get
      x-identifiers:
        - UserAccessLoggingSettingsArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.KinesisStreamArn') as kinesis_stream_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
              AND data__Identifier = '<UserAccessLoggingSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'KinesisStreamArn') as kinesis_stream_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND data__Identifier = '<UserAccessLoggingSettingsArn>'
                AND region = 'us-east-1'
    user_settings:
      name: user_settings
      id: awscc.workspacesweb.user_settings
      x-cfn-schema-name: UserSettings
      x-type: get
      x-identifiers:
        - UserSettingsArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
              JSON_EXTRACT(Properties, '$.CopyAllowed') as copy_allowed,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
              JSON_EXTRACT(Properties, '$.DownloadAllowed') as download_allowed,
              JSON_EXTRACT(Properties, '$.IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
              JSON_EXTRACT(Properties, '$.PasteAllowed') as paste_allowed,
              JSON_EXTRACT(Properties, '$.PrintAllowed') as print_allowed,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UploadAllowed') as upload_allowed,
              JSON_EXTRACT(Properties, '$.UserSettingsArn') as user_settings_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
              AND data__Identifier = '<UserSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(Properties, 'CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
                json_extract_path_text(Properties, 'CopyAllowed') as copy_allowed,
                json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(Properties, 'DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
                json_extract_path_text(Properties, 'DownloadAllowed') as download_allowed,
                json_extract_path_text(Properties, 'IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
                json_extract_path_text(Properties, 'PasteAllowed') as paste_allowed,
                json_extract_path_text(Properties, 'PrintAllowed') as print_allowed,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'UploadAllowed') as upload_allowed,
                json_extract_path_text(Properties, 'UserSettingsArn') as user_settings_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND data__Identifier = '<UserSettingsArn>'
                AND region = 'us-east-1'
