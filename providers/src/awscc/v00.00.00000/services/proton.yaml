openapi: 3.0.0
info:
  title: Proton
  version: 1.0.0
paths: {}
components:
  schemas:
    Status:
      type: string
      enum:
        - PENDING
        - CONNECTED
        - REJECTED
    Tag:
      type: object
      description: <p>A description of a resource tag.</p>
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The key of the resource tag.</p>
        Value:
          type: string
          maxLength: 256
          minLength: 0
          description: <p>The value of the resource tag.</p>
      required:
        - Key
        - Value
      additionalProperties: false
    EnvironmentAccountConnection:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the environment account connection.
          type: string
        CodebuildRoleArn:
          description: The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::\d{12}:role/([\w+=,.@-]{1,512}[/:])*([\w+=,.@-]{1,64})$
        ComponentRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::\d{12}:role/([\w+=,.@-]{1,512}[/:])*([\w+=,.@-]{1,64})$
        EnvironmentAccountId:
          description: The environment account that's connected to the environment account connection.
          type: string
          pattern: ^\d{12}$
        EnvironmentName:
          description: The name of the AWS Proton environment that's created in the associated management account.
          type: string
          pattern: ^[0-9A-Za-z]+[0-9A-Za-z_\-]*$
          minLength: 1
          maxLength: 100
        Id:
          description: The ID of the environment account connection.
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        ManagementAccountId:
          description: The ID of the management account that accepts or rejects the environment account connection. You create an manage the AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
          type: string
          pattern: ^\d{12}$
        RoleArn:
          description: The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this role to provision infrastructure resources in the associated environment account.
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::\d{12}:role/([\w+=,.@-]{1,512}[/:])*([\w+=,.@-]{1,64})$
        Status:
          description: The status of the environment account connection.
          $ref: '#/components/schemas/Status'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          x-insertionOrder: false
          description: |-
            <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.</p>
                     <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
                    <i>Proton User Guide</i>.</p>
      x-stackql-resource-name: environment_account_connection
      x-stackql-primaryIdentifier:
        - Arn
      x-read-only-properties:
        - Arn
        - Id
        - Status
      x-required-permissions:
        create:
          - proton:CreateEnvironmentAccountConnection
          - proton:TagResource
          - iam:PassRole
          - proton:ListTagsForResource
          - proton:GetEnvironmentAccountConnection
        read:
          - proton:GetEnvironmentAccountConnection
          - proton:ListTagsForResource
          - iam:PassRole
          - proton:GetEnvironmentAccountConnection
        update:
          - proton:CreateEnvironmentAccountConnection
          - proton:ListTagsForResource
          - proton:TagResource
          - proton:UntagResource
          - proton:UpdateEnvironmentAccountConnection
          - iam:PassRole
          - proton:GetEnvironmentAccountConnection
        delete:
          - proton:DeleteEnvironmentAccountConnection
          - proton:UntagResource
          - iam:PassRole
          - proton:ListTagsForResource
          - proton:GetEnvironmentAccountConnection
        list:
          - proton:ListEnvironmentAccountConnections
    Provisioning:
      type: string
      enum:
        - CUSTOMER_MANAGED
    EnvironmentTemplate:
      type: object
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the environment template.</p>
        Description:
          type: string
          maxLength: 500
          minLength: 0
          description: <p>A description of the environment template.</p>
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
          description: <p>The environment template name as displayed in the developer interface.</p>
        EncryptionKey:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^arn:(aws|aws-cn|aws-us-gov):[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:\d{12}:([\w+=,.@-]+[/:])*[\w+=,.@-]+$
          description: <p>A customer provided encryption key that Proton uses to encrypt data.</p>
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[0-9A-Za-z]+[0-9A-Za-z_\-]*$
        Provisioning:
          $ref: '#/components/schemas/Provisioning'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          uniqueItems: true
          description: |-
            <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
                     <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
                    <i>Proton User Guide</i>.</p>
      x-stackql-resource-name: environment_template
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - EncryptionKey
        - Name
        - Provisioning
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - proton:CreateEnvironmentTemplate
          - proton:TagResource
          - proton:GetEnvironmentTemplate
          - kms:*
        read:
          - proton:GetEnvironmentTemplate
          - proton:ListTagsForResource
          - kms:*
        update:
          - proton:CreateEnvironmentTemplate
          - proton:ListTagsForResource
          - proton:TagResource
          - proton:UntagResource
          - proton:UpdateEnvironmentTemplate
          - proton:GetEnvironmentTemplate
          - kms:*
        delete:
          - proton:DeleteEnvironmentTemplate
          - proton:GetEnvironmentTemplate
          - kms:*
        list:
          - proton:ListEnvironmentTemplates
    ServiceTemplate:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^arn:(aws|aws-cn|aws-us-gov):[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:\d{12}:([\w+=,.@-]+[/:])*[\w+=,.@-]+$
          description: <p>The Amazon Resource Name (ARN) of the service template.</p>
        Description:
          type: string
          maxLength: 500
          minLength: 0
          description: <p>A description of the service template.</p>
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
          description: <p>The name of the service template as displayed in the developer interface.</p>
        EncryptionKey:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^arn:(aws|aws-cn|aws-us-gov):[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:\d{12}:([\w+=,.@-]+[/:])*[\w+=,.@-]+$
          description: <p>A customer provided encryption key that's used to encrypt data.</p>
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[0-9A-Za-z]+[0-9A-Za-z_\-]*$
        PipelineProvisioning:
          $ref: '#/components/schemas/Provisioning'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          uniqueItems: true
          description: |-
            <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p>
                     <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
                    <i>Proton User Guide</i>.</p>
      x-stackql-resource-name: service_template
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - EncryptionKey
        - Name
        - PipelineProvisioning
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - proton:CreateServiceTemplate
          - proton:TagResource
          - kms:*
          - proton:GetServiceTemplate
        read:
          - proton:GetServiceTemplate
          - proton:ListTagsForResource
          - kms:*
        update:
          - proton:GetServiceTemplate
          - proton:CreateServiceTemplate
          - proton:ListTagsForResource
          - proton:TagResource
          - proton:UntagResource
          - proton:UpdateServiceTemplate
          - kms:*
        delete:
          - proton:DeleteServiceTemplate
          - proton:UntagResource
          - kms:*
          - proton:GetServiceTemplate
        list:
          - proton:ListServiceTemplates
  x-stackQL-resources:
    environment_account_connections:
      name: environment_account_connections
      id: awscc.proton.environment_account_connections
      x-cfn-schema-name: EnvironmentAccountConnection
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::EnvironmentAccountConnection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::EnvironmentAccountConnection'
                AND region = 'us-east-1'
    environment_account_connection:
      name: environment_account_connection
      id: awscc.proton.environment_account_connection
      x-cfn-schema-name: EnvironmentAccountConnection
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CodebuildRoleArn') as codebuild_role_arn,
              JSON_EXTRACT(Properties, '$.ComponentRoleArn') as component_role_arn,
              JSON_EXTRACT(Properties, '$.EnvironmentAccountId') as environment_account_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ManagementAccountId') as management_account_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::EnvironmentAccountConnection'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CodebuildRoleArn') as codebuild_role_arn,
                json_extract_path_text(Properties, 'ComponentRoleArn') as component_role_arn,
                json_extract_path_text(Properties, 'EnvironmentAccountId') as environment_account_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ManagementAccountId') as management_account_id,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::EnvironmentAccountConnection'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    environment_templates:
      name: environment_templates
      id: awscc.proton.environment_templates
      x-cfn-schema-name: EnvironmentTemplate
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::EnvironmentTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::EnvironmentTemplate'
                AND region = 'us-east-1'
    environment_template:
      name: environment_template
      id: awscc.proton.environment_template
      x-cfn-schema-name: EnvironmentTemplate
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Provisioning') as provisioning,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::EnvironmentTemplate'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'EncryptionKey') as encryption_key,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Provisioning') as provisioning,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::EnvironmentTemplate'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    service_templates:
      name: service_templates
      id: awscc.proton.service_templates
      x-cfn-schema-name: ServiceTemplate
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::ServiceTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Proton::ServiceTemplate'
                AND region = 'us-east-1'
    service_template:
      name: service_template
      id: awscc.proton.service_template
      x-cfn-schema-name: ServiceTemplate
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PipelineProvisioning') as pipeline_provisioning,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::ServiceTemplate'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'EncryptionKey') as encryption_key,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'PipelineProvisioning') as pipeline_provisioning,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Proton::ServiceTemplate'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
