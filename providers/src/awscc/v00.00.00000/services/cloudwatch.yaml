openapi: 3.0.0
info:
  title: CloudWatch
  version: 1.0.0
paths: {}
components:
  schemas:
    MetricStat:
      description: This structure defines the metric to be returned, along with the statistics, period, and units.
      type: object
      additionalProperties: false
      properties:
        Period:
          description: The granularity, in seconds, of the returned data points.
          type: integer
        Metric:
          description: The metric to return, including the metric name, namespace, and dimensions.
          $ref: '#/components/schemas/Metric'
        Stat:
          description: The statistic to return.
          type: string
        Unit:
          description: The unit to use for the returned data points.
          type: string
      required:
        - Stat
        - Period
        - Metric
    Metric:
      description: The Metric property type represents a specific metric.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric.
          type: string
        Dimensions:
          description: The dimensions for the metric.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Dimension'
        Namespace:
          description: The namespace of the metric.
          type: string
    Dimension:
      description: Dimensions are arbitrary name/value pairs that can be associated with a CloudWatch metric.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The value for the dimension.
          type: string
        Name:
          description: The name of the dimension.
          type: string
      required:
        - Value
        - Name
    MetricDataQuery:
      description: This property type specifies the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data.
      type: object
      additionalProperties: false
      properties:
        Label:
          description: A human-readable label for this metric or expression.
          type: string
        MetricStat:
          description: The metric to be returned, along with statistics, period, and units.
          $ref: '#/components/schemas/MetricStat'
        Id:
          description: A short name used to tie this object to the results in the response.
          type: string
        ReturnData:
          description: This option indicates whether to return the timestamps and raw data values of this metric.
          type: boolean
        Expression:
          description: The math expression to be performed on the returned data.
          type: string
        Period:
          description: The period in seconds, over which the statistic is applied.
          type: integer
        AccountId:
          description: The ID of the account where the metrics are located, if this is a cross-account alarm.
          type: string
      required:
        - Id
    Alarm:
      type: object
      properties:
        ThresholdMetricId:
          description: In an alarm based on an anomaly detection model, this is the ID of the ANOMALY_DETECTION_BAND function used as the threshold for the alarm.
          type: string
        EvaluateLowSampleCountPercentile:
          description: Used only for alarms based on percentiles.
          type: string
        ExtendedStatistic:
          description: The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
          type: string
        ComparisonOperator:
          description: The arithmetic operation to use when comparing the specified statistic and threshold.
          type: string
        TreatMissingData:
          description: Sets how this alarm is to handle missing data points. Valid values are breaching, notBreaching, ignore, and missing.
          type: string
        Dimensions:
          description: The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify Dimensions. Instead, you use Metrics.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Dimension'
        Period:
          description: The period in seconds, over which the statistic is applied.
          type: integer
        EvaluationPeriods:
          description: The number of periods over which data is compared to the specified threshold.
          type: integer
        Unit:
          description: The unit of the metric associated with the alarm.
          type: string
        Namespace:
          description: The namespace of the metric associated with the alarm.
          type: string
        OKActions:
          description: The actions to execute when this alarm transitions to the OK state from any other state.
          type: array
          uniqueItems: false
          items:
            type: string
        AlarmActions:
          description: The list of actions to execute when this alarm transitions into an ALARM state from any other state.
          type: array
          uniqueItems: false
          items:
            type: string
        MetricName:
          description: The name of the metric associated with the alarm.
          type: string
        ActionsEnabled:
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
          type: boolean
          default: true
        Metrics:
          description: An array that enables you to create an alarm based on the result of a metric math expression.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDataQuery'
        AlarmDescription:
          description: The description of the alarm.
          type: string
        AlarmName:
          description: The name of the alarm.
          type: string
        Statistic:
          description: The statistic for the metric associated with the alarm, other than percentile.
          type: string
        InsufficientDataActions:
          description: The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state.
          type: array
          uniqueItems: false
          items:
            type: string
        Arn:
          description: Amazon Resource Name is a unique name for each resource.
          type: string
        DatapointsToAlarm:
          description: The number of datapoints that must be breaching to trigger the alarm.
          type: integer
        Threshold:
          description: In an alarm based on an anomaly detection model, this is the ID of the ANOMALY_DETECTION_BAND function used as the threshold for the alarm.
          type: number
      required:
        - ComparisonOperator
        - EvaluationPeriods
      x-stackql-resource-name: alarm
      x-stackql-primaryIdentifier:
        - AlarmName
      x-create-only-properties:
        - AlarmName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DescribeAlarms
        update:
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DescribeAlarms
        delete:
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
        list:
          - cloudwatch:DescribeAlarms
        read:
          - cloudwatch:DescribeAlarms
    CompositeAlarm:
      type: object
      properties:
        Arn:
          type: string
          description: Amazon Resource Name (ARN) of the alarm
          minLength: 1
          maxLength: 1600
        AlarmName:
          description: The name of the Composite Alarm
          type: string
          minLength: 1
          maxLength: 255
        AlarmRule:
          type: string
          description: Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
          minLength: 1
          maxLength: 10240
        AlarmDescription:
          type: string
          description: The description of the alarm
          minLength: 0
          maxLength: 1024
        ActionsEnabled:
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
          type: boolean
        OKActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        AlarmActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
          maxItems: 5
        InsufficientDataActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        ActionsSuppressor:
          description: 'Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm. '
          type: string
          minLength: 1
          maxLength: 1600
        ActionsSuppressorWaitPeriod:
          description: Actions will be suppressed if ExtensionPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
        ActionsSuppressorExtensionPeriod:
          description: Actions will be suppressed if WaitPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
      required:
        - AlarmRule
      x-stackql-resource-name: composite_alarm
      x-stackql-primaryIdentifier:
        - AlarmName
      x-create-only-properties:
        - AlarmName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - cloudwatch:DescribeAlarms
          - cloudwatch:PutCompositeAlarm
        read:
          - cloudwatch:DescribeAlarms
        update:
          - cloudwatch:DescribeAlarms
          - cloudwatch:PutCompositeAlarm
        delete:
          - cloudwatch:DescribeAlarms
          - cloudwatch:DeleteAlarms
        list:
          - cloudwatch:DescribeAlarms
    MetricStreamFilter:
      description: This structure defines the metrics that will be streamed.
      type: object
      additionalProperties: false
      properties:
        Namespace:
          description: Only metrics with Namespace matching this value will be streamed.
          type: string
          minLength: 1
          maxLength: 255
        MetricNames:
          description: Only metrics with MetricNames matching these values will be streamed. Must be set together with Namespace.
          type: array
          maxItems: 999
          items:
            type: string
            minLength: 1
            maxLength: 255
      required:
        - Namespace
    MetricStreamStatisticsConfiguration:
      description: This structure specifies a list of additional statistics to stream, and the metrics to stream those additional statistics for. All metrics that match the combination of metric name and namespace will be streamed with the extended statistics, no matter their dimensions.
      type: object
      additionalProperties: false
      properties:
        AdditionalStatistics:
          description: The additional statistics to stream for the metrics listed in IncludeMetrics.
          type: array
          maxItems: 20
          uniqueItems: true
          items:
            type: string
        IncludeMetrics:
          description: An array that defines the metrics that are to have additional statistics streamed.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsMetric'
      required:
        - AdditionalStatistics
        - IncludeMetrics
    MetricStreamStatisticsMetric:
      description: A structure that specifies the metric name and namespace for one metric that is going to have additional statistics included in the stream.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric.
          type: string
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace of the metric.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - MetricName
        - Namespace
    Tag:
      description: Metadata that you can assign to a Metric Stream, consisting of a key-value pair.
      type: object
      additionalProperties: false
      properties:
        Key:
          description: A unique identifier for the tag.
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: String which you can use to describe or define the tag.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Key
        - Value
    MetricStream:
      type: object
      properties:
        Arn:
          description: Amazon Resource Name of the metric stream.
          type: string
          minLength: 20
          maxLength: 2048
        CreationDate:
          description: The date of creation of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        ExcludeFilters:
          description: Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        FirehoseArn:
          description: The ARN of the Kinesis Firehose where to stream the data.
          type: string
          minLength: 20
          maxLength: 2048
        IncludeFilters:
          description: Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        LastUpdateDate:
          description: The date of the last update of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        Name:
          description: Name of the metric stream.
          type: string
          minLength: 1
          maxLength: 255
        RoleArn:
          description: The ARN of the role that provides access to the Kinesis Firehose.
          type: string
          minLength: 20
          maxLength: 2048
        State:
          description: Displays the state of the Metric Stream.
          type: string
          minLength: 1
          maxLength: 255
        OutputFormat:
          description: The output format of the data streamed to the Kinesis Firehose.
          type: string
          minLength: 1
          maxLength: 255
        StatisticsConfigurations:
          description: By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsConfiguration'
        Tags:
          description: A set of tags to assign to the delivery stream.
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        IncludeLinkedAccountsMetrics:
          description: If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false.
          type: boolean
      required:
        - FirehoseArn
        - RoleArn
        - OutputFormat
      x-stackql-resource-name: metric_stream
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreationDate
        - LastUpdateDate
        - State
      x-required-permissions:
        create:
          - cloudwatch:PutMetricStream
          - cloudwatch:GetMetricStream
          - cloudwatch:TagResource
          - iam:PassRole
        update:
          - cloudwatch:PutMetricStream
          - cloudwatch:GetMetricStream
          - cloudwatch:TagResource
          - cloudwatch:UntagResource
          - iam:PassRole
        delete:
          - cloudwatch:DeleteMetricStream
          - cloudwatch:GetMetricStream
        list:
          - cloudwatch:ListMetricStreams
        read:
          - cloudwatch:GetMetricStream
  x-stackQL-resources:
    alarms:
      name: alarms
      id: awscc.cloudwatch.alarms
      x-cfn-schema-name: Alarm
      x-type: list
      x-identifiers:
        - AlarmName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
                AND region = 'us-east-1'
    alarm:
      name: alarm
      id: awscc.cloudwatch.alarm
      x-cfn-schema-name: Alarm
      x-type: get
      x-identifiers:
        - AlarmName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ThresholdMetricId') as threshold_metric_id,
              JSON_EXTRACT(Properties, '$.EvaluateLowSampleCountPercentile') as evaluate_low_sample_count_percentile,
              JSON_EXTRACT(Properties, '$.ExtendedStatistic') as extended_statistic,
              JSON_EXTRACT(Properties, '$.ComparisonOperator') as comparison_operator,
              JSON_EXTRACT(Properties, '$.TreatMissingData') as treat_missing_data,
              JSON_EXTRACT(Properties, '$.Dimensions') as dimensions,
              JSON_EXTRACT(Properties, '$.Period') as period,
              JSON_EXTRACT(Properties, '$.EvaluationPeriods') as evaluation_periods,
              JSON_EXTRACT(Properties, '$.Unit') as unit,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.OKActions') as o_kactions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.Metrics') as metrics,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.Statistic') as statistic,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DatapointsToAlarm') as datapoints_to_alarm,
              JSON_EXTRACT(Properties, '$.Threshold') as threshold
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
              AND data__Identifier = '<AlarmName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ThresholdMetricId') as threshold_metric_id,
                json_extract_path_text(Properties, 'EvaluateLowSampleCountPercentile') as evaluate_low_sample_count_percentile,
                json_extract_path_text(Properties, 'ExtendedStatistic') as extended_statistic,
                json_extract_path_text(Properties, 'ComparisonOperator') as comparison_operator,
                json_extract_path_text(Properties, 'TreatMissingData') as treat_missing_data,
                json_extract_path_text(Properties, 'Dimensions') as dimensions,
                json_extract_path_text(Properties, 'Period') as period,
                json_extract_path_text(Properties, 'EvaluationPeriods') as evaluation_periods,
                json_extract_path_text(Properties, 'Unit') as unit,
                json_extract_path_text(Properties, 'Namespace') as namespace,
                json_extract_path_text(Properties, 'OKActions') as o_kactions,
                json_extract_path_text(Properties, 'AlarmActions') as alarm_actions,
                json_extract_path_text(Properties, 'MetricName') as metric_name,
                json_extract_path_text(Properties, 'ActionsEnabled') as actions_enabled,
                json_extract_path_text(Properties, 'Metrics') as metrics,
                json_extract_path_text(Properties, 'AlarmDescription') as alarm_description,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name,
                json_extract_path_text(Properties, 'Statistic') as statistic,
                json_extract_path_text(Properties, 'InsufficientDataActions') as insufficient_data_actions,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DatapointsToAlarm') as datapoints_to_alarm,
                json_extract_path_text(Properties, 'Threshold') as threshold
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
                AND data__Identifier = '<AlarmName>'
                AND region = 'us-east-1'
    composite_alarms:
      name: composite_alarms
      id: awscc.cloudwatch.composite_alarms
      x-cfn-schema-name: CompositeAlarm
      x-type: list
      x-identifiers:
        - AlarmName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
                AND region = 'us-east-1'
    composite_alarm:
      name: composite_alarm
      id: awscc.cloudwatch.composite_alarm
      x-cfn-schema-name: CompositeAlarm
      x-type: get
      x-identifiers:
        - AlarmName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.AlarmRule') as alarm_rule,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.OKActions') as o_kactions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.ActionsSuppressor') as actions_suppressor,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorWaitPeriod') as actions_suppressor_wait_period,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorExtensionPeriod') as actions_suppressor_extension_period
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
              AND data__Identifier = '<AlarmName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name,
                json_extract_path_text(Properties, 'AlarmRule') as alarm_rule,
                json_extract_path_text(Properties, 'AlarmDescription') as alarm_description,
                json_extract_path_text(Properties, 'ActionsEnabled') as actions_enabled,
                json_extract_path_text(Properties, 'OKActions') as o_kactions,
                json_extract_path_text(Properties, 'AlarmActions') as alarm_actions,
                json_extract_path_text(Properties, 'InsufficientDataActions') as insufficient_data_actions,
                json_extract_path_text(Properties, 'ActionsSuppressor') as actions_suppressor,
                json_extract_path_text(Properties, 'ActionsSuppressorWaitPeriod') as actions_suppressor_wait_period,
                json_extract_path_text(Properties, 'ActionsSuppressorExtensionPeriod') as actions_suppressor_extension_period
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
                AND data__Identifier = '<AlarmName>'
                AND region = 'us-east-1'
    metric_streams:
      name: metric_streams
      id: awscc.cloudwatch.metric_streams
      x-cfn-schema-name: MetricStream
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
                AND region = 'us-east-1'
    metric_stream:
      name: metric_stream
      id: awscc.cloudwatch.metric_stream
      x-cfn-schema-name: MetricStream
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.ExcludeFilters') as exclude_filters,
              JSON_EXTRACT(Properties, '$.FirehoseArn') as firehose_arn,
              JSON_EXTRACT(Properties, '$.IncludeFilters') as include_filters,
              JSON_EXTRACT(Properties, '$.LastUpdateDate') as last_update_date,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.OutputFormat') as output_format,
              JSON_EXTRACT(Properties, '$.StatisticsConfigurations') as statistics_configurations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IncludeLinkedAccountsMetrics') as include_linked_accounts_metrics
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreationDate') as creation_date,
                json_extract_path_text(Properties, 'ExcludeFilters') as exclude_filters,
                json_extract_path_text(Properties, 'FirehoseArn') as firehose_arn,
                json_extract_path_text(Properties, 'IncludeFilters') as include_filters,
                json_extract_path_text(Properties, 'LastUpdateDate') as last_update_date,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'OutputFormat') as output_format,
                json_extract_path_text(Properties, 'StatisticsConfigurations') as statistics_configurations,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'IncludeLinkedAccountsMetrics') as include_linked_accounts_metrics
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
