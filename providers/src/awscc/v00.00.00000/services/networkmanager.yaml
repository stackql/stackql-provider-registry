openapi: 3.0.0
info:
  title: NetworkManager
  version: 1.0.0
paths: {}
components:
  schemas:
    ProposedSegmentChange:
      description: The attachment to move from one segment to another.
      type: object
      properties:
        Tags:
          description: The key-value tags that changed for the segment.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AttachmentPolicyRuleNumber:
          description: The rule number in the policy document that applies to this change.
          type: integer
        SegmentName:
          description: The name of the segment to change.
          type: string
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
      required:
        - Key
        - Value
      additionalProperties: false
    ConnectAttachmentOptions:
      description: Connect attachment options for protocol
      type: object
      properties:
        Protocol:
          type: string
          description: Tunnel protocol for connect attachment
      additionalProperties: false
    ConnectAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: ID of the CoreNetwork that the attachment will be attached to.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: The ID of the attachment account owner.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: State of the attachment.
          type: string
        EdgeLocation:
          description: Edge location of the attachment.
          type: string
        ResourceArn:
          description: The attachment resource ARN.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment attachment.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        TransportAttachmentId:
          description: Id of transport attachment
          type: string
        Options:
          description: Protocol options for connect attachment
          $ref: '#/components/schemas/ConnectAttachmentOptions'
      required:
        - CoreNetworkId
        - EdgeLocation
        - TransportAttachmentId
        - Options
      x-stackql-resource-name: connect_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
      x-create-only-properties:
        - CoreNetworkId
        - EdgeLocation
        - TransportAttachmentId
        - Options
      x-read-only-properties:
        - CoreNetworkArn
        - CreatedAt
        - UpdatedAt
        - AttachmentType
        - State
        - ResourceArn
        - AttachmentId
        - OwnerAccountId
        - AttachmentPolicyRuleNumber
        - SegmentName
      x-required-permissions:
        create:
          - networkmanager:GetConnectAttachment
          - networkmanager:CreateConnectAttachment
          - networkmanager:TagResource
          - ec2:DescribeRegions
        read:
          - networkmanager:GetConnectAttachment
        update:
          - networkmanager:GetConnectAttachment
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:GetConnectAttachment
          - networkmanager:DeleteAttachment
          - ec2:DescribeRegions
        list:
          - networkmanager:ListAttachments
    ConnectPeerConfiguration:
      type: object
      properties:
        CoreNetworkAddress:
          description: The IP address of a core network.
          type: string
        PeerAddress:
          description: The IP address of the Connect peer.
          type: string
        InsideCidrBlocks:
          description: The inside IP addresses used for a Connect peer configuration.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Protocol:
          $ref: '#/components/schemas/TunnelProtocol'
        BgpConfigurations:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConnectPeerBgpConfiguration'
      additionalProperties: false
    TunnelProtocol:
      description: The protocol used for a Connect peer configuration.
      type: string
    BgpOptions:
      description: Bgp options
      type: object
      properties:
        PeerAsn:
          type: number
      additionalProperties: false
    ConnectPeerBgpConfiguration:
      description: Bgp configuration for connect peer
      type: object
      properties:
        CoreNetworkAsn:
          description: The ASN of the Coret Network.
          type: number
        PeerAsn:
          description: The ASN of the Connect peer.
          type: number
        CoreNetworkAddress:
          description: The address of a core network.
          type: string
        PeerAddress:
          description: The address of a core network Connect peer.
          type: string
      additionalProperties: false
    ConnectPeer:
      type: object
      properties:
        PeerAddress:
          description: The IP address of the Connect peer.
          type: string
        CoreNetworkAddress:
          description: The IP address of a core network.
          type: string
        BgpOptions:
          description: Bgp options for connect peer.
          $ref: '#/components/schemas/BgpOptions'
        InsideCidrBlocks:
          description: The inside IP addresses used for a Connect peer configuration.
          type: array
          x-insertionOrder: false
          items:
            type: string
        CoreNetworkId:
          description: The ID of the core network.
          type: string
        ConnectAttachmentId:
          description: The ID of the attachment to connect.
          type: string
        ConnectPeerId:
          description: The ID of the Connect peer.
          type: string
        EdgeLocation:
          description: The Connect peer Regions where edges are located.
          type: string
        State:
          description: State of the connect peer.
          type: string
        CreatedAt:
          description: Connect peer creation time.
          type: string
        Configuration:
          description: Configuration of the connect peer.
          $ref: '#/components/schemas/ConnectPeerConfiguration'
        SubnetArn:
          description: The subnet ARN for the connect peer.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ConnectAttachmentId
        - PeerAddress
      x-stackql-resource-name: connect_peer
      x-stackql-primaryIdentifier:
        - ConnectPeerId
      x-create-only-properties:
        - PeerAddress
        - CoreNetworkAddress
        - BgpOptions
        - InsideCidrBlocks
        - ConnectAttachmentId
        - SubnetArn
      x-read-only-properties:
        - ConnectPeerId
        - State
        - CreatedAt
        - Configuration
        - CoreNetworkId
        - EdgeLocation
      x-required-permissions:
        create:
          - networkmanager:GetConnectPeer
          - networkmanager:CreateConnectPeer
          - networkmanager:TagResource
          - ec2:DescribeRegions
        read:
          - networkmanager:GetConnectPeer
        update:
          - networkmanager:GetConnectPeer
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:GetConnectPeer
          - networkmanager:DeleteConnectPeer
          - ec2:DescribeRegions
        list:
          - networkmanager:ListConnectPeers
    CoreNetworkSegment:
      type: object
      properties:
        Name:
          type: string
          description: Name of segment
        EdgeLocations:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The Regions where the edges are located.
        SharedSegments:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The shared segments of a core network.
      additionalProperties: false
    CoreNetworkEdge:
      type: object
      properties:
        EdgeLocation:
          type: string
          description: The Region where a core network edge is located.
        Asn:
          type: number
          description: The ASN of a core network edge.
        InsideCidrBlocks:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The inside IP addresses used for core network edges.
      additionalProperties: false
    CoreNetwork:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network that your core network is a part of.
          type: string
        CoreNetworkId:
          description: The Id of core network
          type: string
        CoreNetworkArn:
          description: The ARN (Amazon resource name) of core network
          type: string
        PolicyDocument:
          description: Live policy document for the core network, you must provide PolicyDocument in Json Format
          type: object
        Description:
          description: The description of core network
          type: string
        CreatedAt:
          description: The creation time of core network
          type: string
        State:
          description: The state of core network
          type: string
        Segments:
          description: The segments within a core network.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoreNetworkSegment'
        Edges:
          description: The edges within a core network.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoreNetworkEdge'
        OwnerAccount:
          description: Owner of the core network
          type: string
        Tags:
          description: The tags for the global network.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - GlobalNetworkId
      x-stackql-resource-name: core_network
      x-stackql-primaryIdentifier:
        - CoreNetworkId
      x-create-only-properties:
        - GlobalNetworkId
      x-read-only-properties:
        - OwnerAccount
        - CoreNetworkId
        - CoreNetworkArn
        - CreatedAt
        - State
        - Segments
        - Edges
      x-required-permissions:
        create:
          - networkmanager:CreateCoreNetwork
          - networkmanager:GetCoreNetwork
          - networkmanager:GetCoreNetworkPolicy
          - networkmanager:TagResource
          - ec2:DescribeRegions
        read:
          - networkmanager:GetCoreNetwork
          - networkmanager:GetCoreNetworkPolicy
        update:
          - networkmanager:UpdateCoreNetwork
          - networkmanager:GetCoreNetwork
          - networkmanager:ListTagsForResource
          - networkmanager:PutCoreNetworkPolicy
          - networkmanager:GetCoreNetworkPolicy
          - networkmanager:ExecuteCoreNetworkChangeSet
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:DeleteCoreNetwork
          - networkmanager:UntagResource
          - networkmanager:GetCoreNetwork
          - networkmanager:GetCoreNetworkPolicy
          - ec2:DescribeRegions
        list:
          - networkmanager:ListCoreNetworks
    CustomerGatewayAssociation:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        CustomerGatewayArn:
          description: The Amazon Resource Name (ARN) of the customer gateway.
          type: string
        DeviceId:
          description: The ID of the device
          type: string
        LinkId:
          description: The ID of the link
          type: string
      required:
        - GlobalNetworkId
        - CustomerGatewayArn
        - DeviceId
      x-stackql-resource-name: customer_gateway_association
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - CustomerGatewayArn
      x-create-only-properties:
        - GlobalNetworkId
        - CustomerGatewayArn
        - DeviceId
        - LinkId
      x-required-permissions:
        create:
          - networkmanager:GetCustomerGatewayAssociations
          - networkmanager:AssociateCustomerGateway
        read:
          - networkmanager:GetCustomerGatewayAssociations
        list:
          - networkmanager:GetCustomerGatewayAssociations
        delete:
          - networkmanager:DisassociateCustomerGateway
    Location:
      description: The location of the site
      type: object
      properties:
        Address:
          description: The physical address.
          type: string
        Latitude:
          description: The latitude.
          type: string
        Longitude:
          description: The longitude.
          type: string
      additionalProperties: false
    AWSLocation:
      description: The Amazon Web Services location of the device, if applicable.
      type: object
      properties:
        Zone:
          description: The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
          type: string
        SubnetArn:
          description: The Amazon Resource Name (ARN) of the subnet that the device is located in.
          type: string
      additionalProperties: false
    Device:
      type: object
      properties:
        DeviceArn:
          description: The Amazon Resource Name (ARN) of the device.
          type: string
        DeviceId:
          description: The ID of the device.
          type: string
        Description:
          description: The description of the device.
          type: string
        Tags:
          description: The tags for the device.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        AWSLocation:
          description: The Amazon Web Services location of the device, if applicable.
          $ref: '#/components/schemas/AWSLocation'
        Location:
          description: The site location.
          $ref: '#/components/schemas/Location'
        Model:
          description: The device model
          type: string
        SerialNumber:
          description: The device serial number.
          type: string
        SiteId:
          description: The site ID.
          type: string
        Type:
          description: The device type.
          type: string
        Vendor:
          description: The device vendor.
          type: string
        CreatedAt:
          description: The date and time that the device was created.
          type: string
        State:
          description: The state of the device.
          type: string
      required:
        - GlobalNetworkId
      x-stackql-resource-name: device
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - DeviceId
      x-create-only-properties:
        - GlobalNetworkId
      x-read-only-properties:
        - DeviceId
        - DeviceArn
        - State
        - CreatedAt
      x-required-permissions:
        create:
          - networkmanager:CreateDevice
          - networkmanager:GetDevices
          - networkmanager:TagResource
        read:
          - networkmanager:GetDevices
        update:
          - networkmanager:UpdateDevice
          - networkmanager:ListTagsForResource
          - networkmanager:GetDevices
          - networkmanager:TagResource
          - networkmanager:UntagResource
        delete:
          - networkmanager:GetDevices
          - networkmanager:DeleteDevice
        list:
          - networkmanager:GetDevices
    GlobalNetwork:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the global network.
          type: string
        Id:
          description: The ID of the global network.
          type: string
        Description:
          description: The description of the global network.
          type: string
        Tags:
          description: The tags for the global network.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: The date and time that the global network was created.
          type: string
        State:
          description: The state of the global network.
          type: string
      x-stackql-resource-name: global_network
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - networkmanager:CreateGlobalNetwork
          - networkmanager:DescribeGlobalNetworks
          - networkmanager:TagResource
          - iam:CreateServiceLinkedRole
        read:
          - networkmanager:DescribeGlobalNetworks
        update:
          - networkmanager:UpdateGlobalNetwork
          - networkmanager:DescribeGlobalNetworks
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - networkmanager:ListTagsForResource
        delete:
          - networkmanager:DeleteGlobalNetwork
          - networkmanager:DescribeGlobalNetworks
        list:
          - networkmanager:DescribeGlobalNetworks
    Bandwidth:
      description: The bandwidth for the link.
      type: object
      properties:
        DownloadSpeed:
          description: Download speed in Mbps.
          type: integer
        UploadSpeed:
          description: Upload speed in Mbps.
          type: integer
      additionalProperties: false
    Link:
      type: object
      properties:
        LinkArn:
          description: The Amazon Resource Name (ARN) of the link.
          type: string
        LinkId:
          description: The ID of the link.
          type: string
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        SiteId:
          description: The ID of the site
          type: string
        Bandwidth:
          description: The Bandwidth for the link.
          $ref: '#/components/schemas/Bandwidth'
        Provider:
          description: The provider of the link.
          type: string
        Description:
          description: The description of the link.
          type: string
        Tags:
          description: The tags for the link.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          description: The type of the link.
          type: string
        CreatedAt:
          description: The date and time that the device was created.
          type: string
        State:
          description: The state of the link.
          type: string
      required:
        - GlobalNetworkId
        - SiteId
        - Bandwidth
      x-stackql-resource-name: link
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - LinkId
      x-create-only-properties:
        - GlobalNetworkId
        - SiteId
      x-read-only-properties:
        - LinkId
        - LinkArn
        - CreatedAt
        - State
      x-required-permissions:
        create:
          - networkmanager:CreateLink
          - networkmanager:GetLinks
          - networkmanager:TagResource
        read:
          - networkmanager:GetLinks
        update:
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:GetLinks
          - networkmanager:UntagResource
          - networkmanager:UpdateLink
        delete:
          - networkmanager:GetLinks
          - networkmanager:DeleteLink
        list:
          - networkmanager:GetLinks
    LinkAssociation:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        DeviceId:
          description: The ID of the device
          type: string
        LinkId:
          description: The ID of the link
          type: string
      required:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      x-stackql-resource-name: link_association
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      x-create-only-properties:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      x-required-permissions:
        create:
          - networkmanager:GetLinkAssociations
          - networkmanager:AssociateLink
        read:
          - networkmanager:GetLinkAssociations
        list:
          - networkmanager:GetLinkAssociations
        delete:
          - networkmanager:DisassociateLink
    Site:
      type: object
      properties:
        SiteArn:
          description: The Amazon Resource Name (ARN) of the site.
          type: string
        SiteId:
          description: The ID of the site.
          type: string
        Description:
          description: The description of the site.
          type: string
        Tags:
          description: The tags for the site.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        Location:
          description: The location of the site.
          $ref: '#/components/schemas/Location'
        CreatedAt:
          description: The date and time that the device was created.
          type: string
        State:
          description: The state of the site.
          type: string
      required:
        - GlobalNetworkId
      x-stackql-resource-name: site
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - SiteId
      x-create-only-properties:
        - GlobalNetworkId
      x-read-only-properties:
        - SiteId
        - SiteArn
        - State
        - CreatedAt
      x-required-permissions:
        create:
          - networkmanager:CreateSite
          - networkmanager:GetSites
          - networkmanager:TagResource
        read:
          - networkmanager:GetSites
        update:
          - networkmanager:GetSites
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - networkmanager:UpdateSite
        delete:
          - networkmanager:GetSites
          - networkmanager:DeleteSite
        list:
          - networkmanager:GetSites
    SiteToSiteVpnAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: The ID of a core network where you're creating a site-to-site VPN attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: The state of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment that attachment is in.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        VpnConnectionArn:
          description: The ARN of the site-to-site VPN attachment.
          type: string
      required:
        - CoreNetworkId
        - VpnConnectionArn
      x-stackql-resource-name: site_to_site_vpn_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
      x-create-only-properties:
        - CoreNetworkId
        - VpnConnectionArn
      x-read-only-properties:
        - CoreNetworkArn
        - CreatedAt
        - UpdatedAt
        - AttachmentType
        - State
        - ResourceArn
        - AttachmentId
        - OwnerAccountId
        - EdgeLocation
        - AttachmentPolicyRuleNumber
        - SegmentName
      x-required-permissions:
        create:
          - networkmanager:GetSiteToSiteVpnAttachment
          - networkmanager:CreateSiteToSiteVpnAttachment
          - ec2:DescribeRegions
          - networkmanager:TagResource
        read:
          - networkmanager:GetSiteToSiteVpnAttachment
        update:
          - networkmanager:GetSiteToSiteVpnAttachment
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:GetSiteToSiteVpnAttachment
          - networkmanager:DeleteAttachment
          - ec2:DescribeRegions
        list:
          - networkmanager:ListAttachments
    TransitGatewayPeering:
      type: object
      properties:
        CoreNetworkId:
          description: The Id of the core network that you want to peer a transit gateway to.
          type: string
        CoreNetworkArn:
          description: The ARN (Amazon Resource Name) of the core network that you want to peer a transit gateway to.
          type: string
        TransitGatewayArn:
          description: The ARN (Amazon Resource Name) of the transit gateway that you will peer to a core network
          type: string
        TransitGatewayPeeringAttachmentId:
          description: The ID of the TransitGatewayPeeringAttachment
          type: string
        PeeringId:
          description: The Id of the transit gateway peering
          type: string
        State:
          description: The state of the transit gateway peering
          type: string
        EdgeLocation:
          description: The location of the transit gateway peering
          type: string
        ResourceArn:
          description: The ARN (Amazon Resource Name) of the resource that you will peer to a core network
          type: string
        OwnerAccountId:
          description: Peering owner account Id
          type: string
        PeeringType:
          description: Peering type (TransitGatewayPeering)
          type: string
        CreatedAt:
          description: The creation time of the transit gateway peering
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - CoreNetworkId
        - TransitGatewayArn
      x-stackql-resource-name: transit_gateway_peering
      x-stackql-primaryIdentifier:
        - PeeringId
      x-create-only-properties:
        - CoreNetworkId
        - TransitGatewayArn
      x-read-only-properties:
        - CoreNetworkArn
        - PeeringId
        - State
        - PeeringType
        - OwnerAccountId
        - EdgeLocation
        - ResourceArn
        - CreatedAt
        - TransitGatewayPeeringAttachmentId
      x-required-permissions:
        create:
          - networkmanager:CreateTransitGatewayPeering
          - networkmanager:TagResource
          - networkmanager:GetTransitGatewayPeering
          - iam:CreateServiceLinkedRole
          - ec2:CreateTransitGatewayPeeringAttachment
          - ec2:AcceptTransitGatewayPeeringAttachment
          - ec2:DescribeRegions
        read:
          - networkmanager:GetTransitGatewayPeering
          - networkmanager:TagResource
        update:
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - networkmanager:ListTagsForResource
          - networkmanager:GetTransitGatewayPeering
          - ec2:DescribeRegions
        delete:
          - networkmanager:DeletePeering
          - networkmanager:GetTransitGatewayPeering
          - ec2:DescribeRegions
        list:
          - networkmanager:ListPeerings
    TransitGatewayRegistration:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        TransitGatewayArn:
          description: The Amazon Resource Name (ARN) of the transit gateway.
          type: string
      required:
        - GlobalNetworkId
        - TransitGatewayArn
      x-stackql-resource-name: transit_gateway_registration
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - TransitGatewayArn
      x-create-only-properties:
        - GlobalNetworkId
        - TransitGatewayArn
      x-required-permissions:
        create:
          - networkmanager:RegisterTransitGateway
          - networkmanager:GetTransitGatewayRegistrations
        read:
          - networkmanager:GetTransitGatewayRegistrations
        list:
          - networkmanager:GetTransitGatewayRegistrations
        delete:
          - networkmanager:DeregisterTransitGateway
          - networkmanager:GetTransitGatewayRegistrations
    TransitGatewayRouteTableAttachment:
      type: object
      properties:
        PeeringId:
          description: The Id of peering between transit gateway and core network.
          type: string
        TransitGatewayRouteTableArn:
          description: The Arn of transit gateway route table.
          type: string
        CoreNetworkId:
          description: The ID of a core network where you're creating a site-to-site VPN attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: The state of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment that attachment is in.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - PeeringId
        - TransitGatewayRouteTableArn
      x-stackql-resource-name: transit_gateway_route_table_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
      x-create-only-properties:
        - PeeringId
        - TransitGatewayRouteTableArn
      x-read-only-properties:
        - CoreNetworkArn
        - CoreNetworkId
        - CreatedAt
        - UpdatedAt
        - AttachmentType
        - State
        - ResourceArn
        - AttachmentId
        - OwnerAccountId
        - EdgeLocation
        - AttachmentPolicyRuleNumber
        - SegmentName
      x-required-permissions:
        create:
          - networkmanager:CreateTransitGatewayRouteTableAttachment
          - networkmanager:GetTransitGatewayRouteTableAttachment
          - networkmanager:TagResource
          - iam:CreateServiceLinkedRole
          - ec2:DescribeRegions
        read:
          - networkmanager:GetTransitGatewayRouteTableAttachment
        update:
          - networkmanager:GetTransitGatewayRouteTableAttachment
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:GetTransitGatewayRouteTableAttachment
          - networkmanager:DeleteAttachment
          - ec2:DescribeRegions
        list:
          - networkmanager:ListAttachments
    VpcOptions:
      description: Vpc options of the attachment.
      type: object
      properties:
        Ipv6Support:
          description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
          type: boolean
          default: false
        ApplianceModeSupport:
          description: 'Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false'
          type: boolean
          default: false
      additionalProperties: false
    VpcAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: The ID of a core network for the VPC attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: Id of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: Attachment type.
          type: string
        State:
          description: State of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        VpcArn:
          description: The ARN of the VPC.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment attachment..
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        SubnetArns:
          description: Subnet Arn list
          type: array
          x-insertionOrder: false
          items:
            type: string
        Options:
          description: Vpc options of the attachment.
          $ref: '#/components/schemas/VpcOptions'
      required:
        - CoreNetworkId
        - VpcArn
        - SubnetArns
      x-stackql-resource-name: vpc_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
      x-create-only-properties:
        - CoreNetworkId
        - VpcArn
      x-read-only-properties:
        - CoreNetworkArn
        - CreatedAt
        - UpdatedAt
        - AttachmentType
        - State
        - AttachmentId
        - OwnerAccountId
        - EdgeLocation
        - AttachmentPolicyRuleNumber
        - SegmentName
        - ResourceArn
      x-required-permissions:
        create:
          - networkmanager:CreateVpcAttachment
          - networkmanager:GetVpcAttachment
          - networkmanager:TagResource
          - ec2:DescribeRegions
          - iam:CreateServiceLinkedRole
        read:
          - networkmanager:GetVpcAttachment
        update:
          - networkmanager:UpdateVpcAttachment
          - networkmanager:GetVpcAttachment
          - networkmanager:ListTagsForResource
          - networkmanager:TagResource
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        delete:
          - networkmanager:DeleteAttachment
          - networkmanager:GetVpcAttachment
          - networkmanager:UntagResource
          - ec2:DescribeRegions
        list:
          - networkmanager:ListAttachments
  x-stackQL-resources:
    connect_attachments:
      name: connect_attachments
      id: awscc.networkmanager.connect_attachments
      x-cfn-schema-name: ConnectAttachment
      x-type: list
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
                AND region = 'us-east-1'
    connect_attachment:
      name: connect_attachment
      id: awscc.networkmanager.connect_attachment
      x-cfn-schema-name: ConnectAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange') as proposed_segment_change,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.TransportAttachmentId') as transport_attachment_id,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
              AND data__Identifier = '<AttachmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'AttachmentType') as attachment_type,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
                json_extract_path_text(Properties, 'SegmentName') as segment_name,
                json_extract_path_text(Properties, 'ProposedSegmentChange') as proposed_segment_change,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'TransportAttachmentId') as transport_attachment_id,
                json_extract_path_text(Properties, 'Options') as options
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
                AND data__Identifier = '<AttachmentId>'
                AND region = 'us-east-1'
    connect_peers:
      name: connect_peers
      id: awscc.networkmanager.connect_peers
      x-cfn-schema-name: ConnectPeer
      x-type: list
      x-identifiers:
        - ConnectPeerId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectPeerId') as connect_peer_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectPeerId') as connect_peer_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
                AND region = 'us-east-1'
    connect_peer:
      name: connect_peer
      id: awscc.networkmanager.connect_peer
      x-cfn-schema-name: ConnectPeer
      x-type: get
      x-identifiers:
        - ConnectPeerId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PeerAddress') as peer_address,
              JSON_EXTRACT(Properties, '$.CoreNetworkAddress') as core_network_address,
              JSON_EXTRACT(Properties, '$.BgpOptions') as bgp_options,
              JSON_EXTRACT(Properties, '$.InsideCidrBlocks') as inside_cidr_blocks,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.ConnectAttachmentId') as connect_attachment_id,
              JSON_EXTRACT(Properties, '$.ConnectPeerId') as connect_peer_id,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.SubnetArn') as subnet_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
              AND data__Identifier = '<ConnectPeerId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PeerAddress') as peer_address,
                json_extract_path_text(Properties, 'CoreNetworkAddress') as core_network_address,
                json_extract_path_text(Properties, 'BgpOptions') as bgp_options,
                json_extract_path_text(Properties, 'InsideCidrBlocks') as inside_cidr_blocks,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'ConnectAttachmentId') as connect_attachment_id,
                json_extract_path_text(Properties, 'ConnectPeerId') as connect_peer_id,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'Configuration') as configuration,
                json_extract_path_text(Properties, 'SubnetArn') as subnet_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
                AND data__Identifier = '<ConnectPeerId>'
                AND region = 'us-east-1'
    core_networks:
      name: core_networks
      id: awscc.networkmanager.core_networks
      x-cfn-schema-name: CoreNetwork
      x-type: list
      x-identifiers:
        - CoreNetworkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
                AND region = 'us-east-1'
    core_network:
      name: core_network
      id: awscc.networkmanager.core_network
      x-cfn-schema-name: CoreNetwork
      x-type: get
      x-identifiers:
        - CoreNetworkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Segments') as segments,
              JSON_EXTRACT(Properties, '$.Edges') as edges,
              JSON_EXTRACT(Properties, '$.OwnerAccount') as owner_account,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
              AND data__Identifier = '<CoreNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'Segments') as segments,
                json_extract_path_text(Properties, 'Edges') as edges,
                json_extract_path_text(Properties, 'OwnerAccount') as owner_account,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
                AND data__Identifier = '<CoreNetworkId>'
                AND region = 'us-east-1'
    customer_gateway_associations:
      name: customer_gateway_associations
      id: awscc.networkmanager.customer_gateway_associations
      x-cfn-schema-name: CustomerGatewayAssociation
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - CustomerGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CustomerGatewayArn') as customer_gateway_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'CustomerGatewayArn') as customer_gateway_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
                AND region = 'us-east-1'
    customer_gateway_association:
      name: customer_gateway_association
      id: awscc.networkmanager.customer_gateway_association
      x-cfn-schema-name: CustomerGatewayAssociation
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - CustomerGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CustomerGatewayArn') as customer_gateway_arn,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'CustomerGatewayArn') as customer_gateway_arn,
                json_extract_path_text(Properties, 'DeviceId') as device_id,
                json_extract_path_text(Properties, 'LinkId') as link_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    devices:
      name: devices
      id: awscc.networkmanager.devices
      x-cfn-schema-name: Device
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Device'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'DeviceId') as device_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Device'
                AND region = 'us-east-1'
    device:
      name: device
      id: awscc.networkmanager.device
      x-cfn-schema-name: Device
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DeviceArn') as device_arn,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.AWSLocation') as aws_location,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Model') as model,
              JSON_EXTRACT(Properties, '$.SerialNumber') as serial_number,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Vendor') as vendor,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Device'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DeviceArn') as device_arn,
                json_extract_path_text(Properties, 'DeviceId') as device_id,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'AWSLocation') as aws_location,
                json_extract_path_text(Properties, 'Location') as location,
                json_extract_path_text(Properties, 'Model') as model,
                json_extract_path_text(Properties, 'SerialNumber') as serial_number,
                json_extract_path_text(Properties, 'SiteId') as site_id,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Vendor') as vendor,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'State') as state
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Device'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    global_networks:
      name: global_networks
      id: awscc.networkmanager.global_networks
      x-cfn-schema-name: GlobalNetwork
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
                AND region = 'us-east-1'
    global_network:
      name: global_network
      id: awscc.networkmanager.global_network
      x-cfn-schema-name: GlobalNetwork
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'State') as state
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    links:
      name: links
      id: awscc.networkmanager.links
      x-cfn-schema-name: Link
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Link'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'LinkId') as link_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Link'
                AND region = 'us-east-1'
    link:
      name: link
      id: awscc.networkmanager.link
      x-cfn-schema-name: Link
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LinkArn') as link_arn,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Bandwidth') as bandwidth,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Link'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'LinkArn') as link_arn,
                json_extract_path_text(Properties, 'LinkId') as link_id,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'SiteId') as site_id,
                json_extract_path_text(Properties, 'Bandwidth') as bandwidth,
                json_extract_path_text(Properties, 'Provider') as provider,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'State') as state
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Link'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    link_associations:
      name: link_associations
      id: awscc.networkmanager.link_associations
      x-cfn-schema-name: LinkAssociation
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'DeviceId') as device_id,
                json_extract_path_text(Properties, 'LinkId') as link_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
                AND region = 'us-east-1'
    link_association:
      name: link_association
      id: awscc.networkmanager.link_association
      x-cfn-schema-name: LinkAssociation
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'DeviceId') as device_id,
                json_extract_path_text(Properties, 'LinkId') as link_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    sites:
      name: sites
      id: awscc.networkmanager.sites
      x-cfn-schema-name: Site
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - SiteId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Site'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'SiteId') as site_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Site'
                AND region = 'us-east-1'
    site:
      name: site
      id: awscc.networkmanager.site
      x-cfn-schema-name: Site
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - SiteId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SiteArn') as site_arn,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Site'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'SiteArn') as site_arn,
                json_extract_path_text(Properties, 'SiteId') as site_id,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'Location') as location,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'State') as state
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Site'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    site_to_site_vpn_attachments:
      name: site_to_site_vpn_attachments
      id: awscc.networkmanager.site_to_site_vpn_attachments
      x-cfn-schema-name: SiteToSiteVpnAttachment
      x-type: list
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
                AND region = 'us-east-1'
    site_to_site_vpn_attachment:
      name: site_to_site_vpn_attachment
      id: awscc.networkmanager.site_to_site_vpn_attachment
      x-cfn-schema-name: SiteToSiteVpnAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange') as proposed_segment_change,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.VpnConnectionArn') as vpn_connection_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
              AND data__Identifier = '<AttachmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'AttachmentType') as attachment_type,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
                json_extract_path_text(Properties, 'SegmentName') as segment_name,
                json_extract_path_text(Properties, 'ProposedSegmentChange') as proposed_segment_change,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'VpnConnectionArn') as vpn_connection_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
                AND data__Identifier = '<AttachmentId>'
                AND region = 'us-east-1'
    transit_gateway_peerings:
      name: transit_gateway_peerings
      id: awscc.networkmanager.transit_gateway_peerings
      x-cfn-schema-name: TransitGatewayPeering
      x-type: list
      x-identifiers:
        - PeeringId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PeeringId') as peering_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
                AND region = 'us-east-1'
    transit_gateway_peering:
      name: transit_gateway_peering
      id: awscc.networkmanager.transit_gateway_peering
      x-cfn-schema-name: TransitGatewayPeering
      x-type: get
      x-identifiers:
        - PeeringId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayPeeringAttachmentId') as transit_gateway_peering_attachment_id,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.PeeringType') as peering_type,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
              AND data__Identifier = '<PeeringId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'TransitGatewayArn') as transit_gateway_arn,
                json_extract_path_text(Properties, 'TransitGatewayPeeringAttachmentId') as transit_gateway_peering_attachment_id,
                json_extract_path_text(Properties, 'PeeringId') as peering_id,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'PeeringType') as peering_type,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
                AND data__Identifier = '<PeeringId>'
                AND region = 'us-east-1'
    transit_gateway_registrations:
      name: transit_gateway_registrations
      id: awscc.networkmanager.transit_gateway_registrations
      x-cfn-schema-name: TransitGatewayRegistration
      x-type: list
      x-identifiers:
        - GlobalNetworkId
        - TransitGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'TransitGatewayArn') as transit_gateway_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
                AND region = 'us-east-1'
    transit_gateway_registration:
      name: transit_gateway_registration
      id: awscc.networkmanager.transit_gateway_registration
      x-cfn-schema-name: TransitGatewayRegistration
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - TransitGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
              AND data__Identifier = '<GlobalNetworkId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'GlobalNetworkId') as global_network_id,
                json_extract_path_text(Properties, 'TransitGatewayArn') as transit_gateway_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
                AND data__Identifier = '<GlobalNetworkId>'
                AND region = 'us-east-1'
    transit_gateway_route_table_attachments:
      name: transit_gateway_route_table_attachments
      id: awscc.networkmanager.transit_gateway_route_table_attachments
      x-cfn-schema-name: TransitGatewayRouteTableAttachment
      x-type: list
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
                AND region = 'us-east-1'
    transit_gateway_route_table_attachment:
      name: transit_gateway_route_table_attachment
      id: awscc.networkmanager.transit_gateway_route_table_attachment
      x-cfn-schema-name: TransitGatewayRouteTableAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayRouteTableArn') as transit_gateway_route_table_arn,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange') as proposed_segment_change,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
              AND data__Identifier = '<AttachmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PeeringId') as peering_id,
                json_extract_path_text(Properties, 'TransitGatewayRouteTableArn') as transit_gateway_route_table_arn,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'AttachmentType') as attachment_type,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
                json_extract_path_text(Properties, 'SegmentName') as segment_name,
                json_extract_path_text(Properties, 'ProposedSegmentChange') as proposed_segment_change,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
                AND data__Identifier = '<AttachmentId>'
                AND region = 'us-east-1'
    vpc_attachments:
      name: vpc_attachments
      id: awscc.networkmanager.vpc_attachments
      x-cfn-schema-name: VpcAttachment
      x-type: list
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
                AND region = 'us-east-1'
    vpc_attachment:
      name: vpc_attachment
      id: awscc.networkmanager.vpc_attachment
      x-cfn-schema-name: VpcAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.VpcArn') as vpc_arn,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange') as proposed_segment_change,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.SubnetArns') as subnet_arns,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
              AND data__Identifier = '<AttachmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CoreNetworkId') as core_network_id,
                json_extract_path_text(Properties, 'CoreNetworkArn') as core_network_arn,
                json_extract_path_text(Properties, 'AttachmentId') as attachment_id,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'AttachmentType') as attachment_type,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'EdgeLocation') as edge_location,
                json_extract_path_text(Properties, 'VpcArn') as vpc_arn,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
                json_extract_path_text(Properties, 'SegmentName') as segment_name,
                json_extract_path_text(Properties, 'ProposedSegmentChange') as proposed_segment_change,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'SubnetArns') as subnet_arns,
                json_extract_path_text(Properties, 'Options') as options
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
                AND data__Identifier = '<AttachmentId>'
                AND region = 'us-east-1'
