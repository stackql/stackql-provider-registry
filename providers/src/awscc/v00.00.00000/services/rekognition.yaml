openapi: 3.0.0
info:
  title: Rekognition
  version: 1.0.0
paths: {}
components:
  schemas:
    Arn:
      description: The ARN of the stream processor
      type: string
      maxLength: 2048
    CollectionId:
      description: The name of the collection
      type: string
      maxLength: 255
      pattern: \A[a-zA-Z0-9_\.\-]+$
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
          pattern: \A(?!aws:)[a-zA-Z0-9+\-=\._\:\/@]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
          pattern: \A[a-zA-Z0-9+\-=\._\:\/@]+$
      required:
        - Key
        - Value
      additionalProperties: false
    Collection:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        CollectionId:
          $ref: '#/components/schemas/CollectionId'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - CollectionId
      x-stackql-resource-name: collection
      x-stackql-primaryIdentifier:
        - CollectionId
      x-create-only-properties:
        - CollectionId
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - rekognition:CreateCollection
          - rekognition:DescribeCollection
          - rekognition:ListTagsForResource
          - rekognition:TagResource
        read:
          - rekognition:DescribeCollection
          - rekognition:ListTagsForResource
        update:
          - rekognition:TagResource
          - rekognition:UntagResource
          - rekognition:DescribeCollection
          - rekognition:ListTagsForResource
        delete:
          - rekognition:DeleteCollection
        list:
          - rekognition:ListCollections
    ProjectName:
      description: The name of the project
      type: string
      minLength: 1
      maxLength: 255
      pattern: '[a-zA-Z0-9][a-zA-Z0-9_\-]*'
    Project:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
      required:
        - ProjectName
      x-stackql-resource-name: project
      x-stackql-primaryIdentifier:
        - ProjectName
      x-create-only-properties:
        - ProjectName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - rekognition:CreateProject
        read:
          - rekognition:DescribeProjects
        update: []
        delete:
          - rekognition:DescribeProjects
          - rekognition:DeleteProject
        list:
          - rekognition:DescribeProjects
    KinesisVideoStream:
      description: The Kinesis Video Stream that streams the source video.
      type: object
      properties:
        Arn:
          description: ARN of the Kinesis Video Stream that streams the source video.
          type: string
          maxLength: 2048
          pattern: (^arn:([a-z\d-]+):kinesisvideo:([a-z\d-]+):\d{12}:.+$)
      required:
        - Arn
      additionalProperties: false
    S3Destination:
      description: The S3 location in customer's account where inference output & artifacts are stored, as part of connected home feature.
      type: object
      properties:
        BucketName:
          description: Name of the S3 bucket.
          type: string
          maxLength: 63
        ObjectKeyPrefix:
          description: The object key prefix path where the results will be stored. Default is no prefix path
          type: string
          maxLength: 256
      required:
        - BucketName
      additionalProperties: false
    KinesisDataStream:
      description: The Amazon Kinesis Data Stream stream to which the Amazon Rekognition stream processor streams the analysis results, as part of face search feature.
      type: object
      properties:
        Arn:
          description: ARN of the Kinesis Data Stream stream.
          type: string
          maxLength: 2048
          pattern: (^arn:([a-z\d-]+):kinesis:([a-z\d-]+):\d{12}:.+$)
      required:
        - Arn
      additionalProperties: false
    Labels:
      description: List of labels that need to be detected in the video stream. Current supported values are PERSON, PET, PACKAGE, ALL.
      type: array
      uniqueItems: true
      x-insertionOrder: false
      minItems: 1
      items:
        type: string
        minLength: 1
        maxLength: 128
    ConnectedHomeSettings:
      description: Connected home settings to use on a streaming video. Note that either ConnectedHomeSettings or FaceSearchSettings should be set. Not both
      type: object
      properties:
        Labels:
          $ref: '#/components/schemas/Labels'
        MinConfidence:
          description: Minimum object class match confidence score that must be met to return a result for a recognized object.
          type: number
          minimum: 0
          maximum: 100
      required:
        - Labels
      additionalProperties: false
    FaceSearchSettings:
      description: Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
      type: object
      properties:
        CollectionId:
          description: The ID of a collection that contains faces that you want to search for.
          type: string
          maxLength: 255
          pattern: \A[a-zA-Z0-9_\.\-]+$
        FaceMatchThreshold:
          description: Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
          type: number
          minimum: 0
          maximum: 100
      required:
        - CollectionId
      additionalProperties: false
    NotificationChannel:
      description: The ARN of the SNS notification channel where events of interests are published, as part of connected home feature.
      type: object
      properties:
        Arn:
          description: ARN of the SNS topic.
          type: string
          maxLength: 2048
      required:
        - Arn
      additionalProperties: false
    Point:
      description: An (X, Y) cartesian coordinate denoting a point on the frame
      type: object
      properties:
        X:
          description: The X coordinate of the point.
          type: number
        'Y':
          description: The Y coordinate of the point.
          type: number
      required:
        - X
        - 'Y'
      additionalProperties: false
    Polygon:
      description: A polygon showing a region of interest. Note that the ordering of the Point entries matter in defining the polygon
      type: array
      uniqueItems: true
      x-insertionOrder: true
      minItems: 3
      items:
        $ref: '#/components/schemas/Point'
    BoundingBox:
      description: A bounding box denoting a region of interest in the frame to be analyzed.
      type: object
      properties:
        Height:
          type: number
          minimum: 0
          maximum: 100
        Width:
          type: number
          minimum: 0
          maximum: 100
        Left:
          type: number
          minimum: 0
          maximum: 100
        Top:
          type: number
          minimum: 0
          maximum: 100
      required:
        - Height
        - Width
        - Left
        - Top
      additionalProperties: false
    DataSharingPreference:
      description: Indicates whether Rekognition is allowed to store the video stream data for model-training.
      properties:
        OptIn:
          description: Flag to enable data-sharing
          type: boolean
      required:
        - OptIn
      type: object
      additionalProperties: false
    StreamProcessor:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Name:
          description: Name of the stream processor. It's an identifier you assign to the stream processor. You can use it to manage the stream processor.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z0-9_.\-]+'
        KmsKeyId:
          description: The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer's S3 bucket.
          type: string
        RoleArn:
          description: ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
          type: string
          maxLength: 2048
          pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
        KinesisVideoStream:
          $ref: '#/components/schemas/KinesisVideoStream'
        FaceSearchSettings:
          $ref: '#/components/schemas/FaceSearchSettings'
        ConnectedHomeSettings:
          $ref: '#/components/schemas/ConnectedHomeSettings'
        KinesisDataStream:
          $ref: '#/components/schemas/KinesisDataStream'
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        NotificationChannel:
          $ref: '#/components/schemas/NotificationChannel'
        DataSharingPreference:
          $ref: '#/components/schemas/DataSharingPreference'
        PolygonRegionsOfInterest:
          description: The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          items:
            $ref: '#/components/schemas/Polygon'
        BoundingBoxRegionsOfInterest:
          description: The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          items:
            $ref: '#/components/schemas/BoundingBox'
        Status:
          description: Current status of the stream processor.
          type: string
        StatusMessage:
          description: Detailed status message about the stream processor.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RoleArn
        - KinesisVideoStream
      x-stackql-resource-name: stream_processor
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
        - KmsKeyId
        - RoleArn
        - KinesisVideoStream
        - ConnectedHomeSettings
        - FaceSearchSettings
        - KinesisDataStream
        - S3Destination
        - NotificationChannel
        - BoundingBoxRegionsOfInterest
        - PolygonRegionsOfInterest
        - DataSharingPreference
      x-read-only-properties:
        - Arn
        - Status
        - StatusMessage
      x-required-permissions:
        create:
          - rekognition:CreateStreamProcessor
          - iam:PassRole
          - rekognition:DescribeStreamProcessor
          - rekognition:ListTagsForResource
          - rekognition:TagResource
        read:
          - rekognition:DescribeStreamProcessor
          - rekognition:ListTagsForResource
        update:
          - rekognition:TagResource
          - rekognition:UntagResource
          - rekognition:ListTagsForResource
          - rekognition:DescribeStreamProcessor
        delete:
          - rekognition:DeleteStreamProcessor
        list:
          - rekognition:ListStreamProcessors
  x-stackQL-resources:
    collections:
      name: collections
      id: awscc.rekognition.collections
      x-cfn-schema-name: Collection
      x-type: list
      x-identifiers:
        - CollectionId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CollectionId') as collection_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::Collection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CollectionId') as collection_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::Collection'
                AND region = 'us-east-1'
    collection:
      name: collection
      id: awscc.rekognition.collection
      x-cfn-schema-name: Collection
      x-type: get
      x-identifiers:
        - CollectionId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CollectionId') as collection_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::Collection'
              AND data__Identifier = '<CollectionId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CollectionId') as collection_id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::Collection'
                AND data__Identifier = '<CollectionId>'
                AND region = 'us-east-1'
    projects:
      name: projects
      id: awscc.rekognition.projects
      x-cfn-schema-name: Project
      x-type: list
      x-identifiers:
        - ProjectName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::Project'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProjectName') as project_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::Project'
                AND region = 'us-east-1'
    project:
      name: project
      id: awscc.rekognition.project
      x-cfn-schema-name: Project
      x-type: get
      x-identifiers:
        - ProjectName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::Project'
              AND data__Identifier = '<ProjectName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ProjectName') as project_name
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::Project'
                AND data__Identifier = '<ProjectName>'
                AND region = 'us-east-1'
    stream_processors:
      name: stream_processors
      id: awscc.rekognition.stream_processors
      x-cfn-schema-name: StreamProcessor
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::StreamProcessor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Rekognition::StreamProcessor'
                AND region = 'us-east-1'
    stream_processor:
      name: stream_processor
      id: awscc.rekognition.stream_processor
      x-cfn-schema-name: StreamProcessor
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.KinesisVideoStream') as kinesis_video_stream,
              JSON_EXTRACT(Properties, '$.FaceSearchSettings') as face_search_settings,
              JSON_EXTRACT(Properties, '$.ConnectedHomeSettings') as connected_home_settings,
              JSON_EXTRACT(Properties, '$.KinesisDataStream') as kinesis_data_stream,
              JSON_EXTRACT(Properties, '$.S3Destination') as s3_destination,
              JSON_EXTRACT(Properties, '$.NotificationChannel') as notification_channel,
              JSON_EXTRACT(Properties, '$.DataSharingPreference') as data_sharing_preference,
              JSON_EXTRACT(Properties, '$.PolygonRegionsOfInterest') as polygon_regions_of_interest,
              JSON_EXTRACT(Properties, '$.BoundingBoxRegionsOfInterest') as bounding_box_regions_of_interest,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::StreamProcessor'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'KinesisVideoStream') as kinesis_video_stream,
                json_extract_path_text(Properties, 'FaceSearchSettings') as face_search_settings,
                json_extract_path_text(Properties, 'ConnectedHomeSettings') as connected_home_settings,
                json_extract_path_text(Properties, 'KinesisDataStream') as kinesis_data_stream,
                json_extract_path_text(Properties, 'S3Destination') as s3_destination,
                json_extract_path_text(Properties, 'NotificationChannel') as notification_channel,
                json_extract_path_text(Properties, 'DataSharingPreference') as data_sharing_preference,
                json_extract_path_text(Properties, 'PolygonRegionsOfInterest') as polygon_regions_of_interest,
                json_extract_path_text(Properties, 'BoundingBoxRegionsOfInterest') as bounding_box_regions_of_interest,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'StatusMessage') as status_message,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Rekognition::StreamProcessor'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
