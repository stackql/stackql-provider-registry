openapi: 3.0.0
info:
  title: DocDBElastic
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    Cluster:
      type: object
      properties:
        ClusterName:
          type: string
          pattern: '[a-zA-z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*'
          maxLength: 50
          minLength: 1
        ClusterArn:
          type: string
        ClusterEndpoint:
          type: string
        AdminUserName:
          type: string
        AdminUserPassword:
          type: string
        ShardCapacity:
          type: integer
        ShardCount:
          type: integer
        VpcSecurityGroupIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        PreferredMaintenanceWindow:
          type: string
        KmsKeyId:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
        AuthType:
          type: string
      required:
        - ClusterName
        - AdminUserName
        - ShardCapacity
        - ShardCount
        - AuthType
      x-stackql-resource-name: cluster
      x-stackql-primaryIdentifier:
        - ClusterArn
      x-create-only-properties:
        - AdminUserName
        - AuthType
        - ClusterName
        - KmsKeyId
      x-read-only-properties:
        - ClusterArn
        - ClusterEndpoint
      x-required-permissions:
        create:
          - docdb-elastic:CreateCluster
          - ec2:CreateVpcEndpoint
          - ec2:DescribeVpcEndpoints
          - ec2:DeleteVpcEndpoints
          - ec2:ModifyVpcEndpoint
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DescribeAvailabilityZones
          - secretsmanager:ListSecrets
          - secretsmanager:ListSecretVersionIds
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:GetResourcePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:GenerateDataKey
          - kms:Decrypt
          - iam:CreateServiceLinkedRole
        read:
          - docdb-elastic:GetCluster
          - docdb-elastic:ListTagsForResource
        update:
          - docdb-elastic:UpdateCluster
          - docdb-elastic:TagResource
          - docdb-elastic:UntagResource
          - ec2:CreateVpcEndpoint
          - ec2:DescribeVpcEndpoints
          - ec2:DeleteVpcEndpoints
          - ec2:ModifyVpcEndpoint
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DescribeAvailabilityZones
          - secretsmanager:ListSecrets
          - secretsmanager:ListSecretVersionIds
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:GetResourcePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - docdb-elastic:DeleteCluster
          - ec2:DescribeVpcEndpoints
          - ec2:DeleteVpcEndpoints
          - ec2:ModifyVpcEndpoint
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DescribeAvailabilityZones
        list:
          - docdb-elastic:ListClusters
  x-stackQL-resources:
    clusters:
      name: clusters
      id: awscc.docdbelastic.clusters
      x-cfn-schema-name: Cluster
      x-type: list
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DocDBElastic::Cluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::DocDBElastic::Cluster'
                AND region = 'us-east-1'
    cluster:
      name: cluster
      id: awscc.docdbelastic.cluster
      x-cfn-schema-name: Cluster
      x-type: get
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.ClusterEndpoint') as cluster_endpoint,
              JSON_EXTRACT(Properties, '$.AdminUserName') as admin_user_name,
              JSON_EXTRACT(Properties, '$.AdminUserPassword') as admin_user_password,
              JSON_EXTRACT(Properties, '$.ShardCapacity') as shard_capacity,
              JSON_EXTRACT(Properties, '$.ShardCount') as shard_count,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AuthType') as auth_type
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DocDBElastic::Cluster'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(Properties, 'ClusterEndpoint') as cluster_endpoint,
                json_extract_path_text(Properties, 'AdminUserName') as admin_user_name,
                json_extract_path_text(Properties, 'AdminUserPassword') as admin_user_password,
                json_extract_path_text(Properties, 'ShardCapacity') as shard_capacity,
                json_extract_path_text(Properties, 'ShardCount') as shard_count,
                json_extract_path_text(Properties, 'VpcSecurityGroupIds') as vpc_security_group_ids,
                json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AuthType') as auth_type
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::DocDBElastic::Cluster'
                AND data__Identifier = '<ClusterArn>'
                AND region = 'us-east-1'
