openapi: 3.0.0
info:
  title: AmplifyUIBuilder
  version: 1.0.0
paths: {}
components:
  schemas:
    ActionParameters:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ComponentProperty'
        Url:
          $ref: '#/components/schemas/ComponentProperty'
        Anchor:
          $ref: '#/components/schemas/ComponentProperty'
        Target:
          $ref: '#/components/schemas/ComponentProperty'
        Global:
          $ref: '#/components/schemas/ComponentProperty'
        Model:
          type: string
        Id:
          $ref: '#/components/schemas/ComponentProperty'
        Fields:
          $ref: '#/components/schemas/ComponentProperties'
        State:
          $ref: '#/components/schemas/MutationActionSetStateParameter'
      additionalProperties: false
    ComponentBindingProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentBindingPropertiesValue'
      additionalProperties: false
    ComponentBindingPropertiesValue:
      type: object
      properties:
        Type:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentBindingPropertiesValueProperties'
        DefaultValue:
          type: string
      additionalProperties: false
    ComponentBindingPropertiesValueProperties:
      type: object
      properties:
        Model:
          type: string
        Field:
          type: string
        Predicates:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        UserAttribute:
          type: string
        Bucket:
          type: string
        Key:
          type: string
        DefaultValue:
          type: string
        SlotName:
          type: string
      additionalProperties: false
    ComponentChild:
      type: object
      properties:
        ComponentType:
          type: string
        Name:
          type: string
        Properties:
          $ref: '#/components/schemas/ComponentProperties'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ComponentChild'
        Events:
          $ref: '#/components/schemas/ComponentEvents'
        SourceId:
          type: string
      required:
        - ComponentType
        - Name
        - Properties
      additionalProperties: false
    ComponentCollectionProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentDataConfiguration'
      additionalProperties: false
    ComponentConditionProperty:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
        Operator:
          type: string
        Operand:
          type: string
        Then:
          $ref: '#/components/schemas/ComponentProperty'
        Else:
          $ref: '#/components/schemas/ComponentProperty'
        OperandType:
          type: string
      additionalProperties: false
    ComponentDataConfiguration:
      type: object
      properties:
        Model:
          type: string
        Sort:
          type: array
          items:
            $ref: '#/components/schemas/SortProperty'
        Predicate:
          $ref: '#/components/schemas/Predicate'
        Identifiers:
          type: array
          items:
            type: string
      required:
        - Model
      additionalProperties: false
    ComponentEvent:
      type: object
      properties:
        Action:
          type: string
        Parameters:
          $ref: '#/components/schemas/ActionParameters'
        BindingEvent:
          type: string
      additionalProperties: false
    ComponentEvents:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentEvent'
      additionalProperties: false
    ComponentOverrides:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentOverridesValue'
      additionalProperties: false
    ComponentOverridesValue:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    ComponentProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentProperty'
      additionalProperties: false
    ComponentProperty:
      type: object
      properties:
        Value:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentPropertyBindingProperties'
        CollectionBindingProperties:
          $ref: '#/components/schemas/ComponentPropertyBindingProperties'
        DefaultValue:
          type: string
        Model:
          type: string
        Bindings:
          $ref: '#/components/schemas/FormBindings'
        Event:
          type: string
        UserAttribute:
          type: string
        Concat:
          type: array
          items:
            $ref: '#/components/schemas/ComponentProperty'
        Condition:
          $ref: '#/components/schemas/ComponentConditionProperty'
        Configured:
          type: boolean
        Type:
          type: string
        ImportedValue:
          type: string
        ComponentName:
          type: string
        Property:
          type: string
      additionalProperties: false
    ComponentPropertyBindingProperties:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
      required:
        - Property
      additionalProperties: false
    ComponentVariant:
      type: object
      properties:
        VariantValues:
          $ref: '#/components/schemas/ComponentVariantValues'
        Overrides:
          $ref: '#/components/schemas/ComponentOverrides'
      additionalProperties: false
    ComponentVariantValues:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    FormBindingElement:
      type: object
      properties:
        Element:
          type: string
        Property:
          type: string
      required:
        - Element
        - Property
      additionalProperties: false
    FormBindings:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FormBindingElement'
      additionalProperties: false
    MutationActionSetStateParameter:
      type: object
      properties:
        ComponentName:
          type: string
        Property:
          type: string
        Set:
          $ref: '#/components/schemas/ComponentProperty'
      required:
        - ComponentName
        - Property
        - Set
      additionalProperties: false
    Predicate:
      type: object
      properties:
        Or:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        And:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        Field:
          type: string
        Operator:
          type: string
        Operand:
          type: string
        OperandType:
          type: string
          pattern: ^boolean|string|number$
      additionalProperties: false
    SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    SortProperty:
      type: object
      properties:
        Field:
          type: string
        Direction:
          $ref: '#/components/schemas/SortDirection'
      required:
        - Direction
        - Field
      additionalProperties: false
    Tags:
      type: object
      x-patternProperties:
        ^(?!aws:)[a-zA-Z+-=._:/]+$:
          type: string
          maxLength: 256
          minLength: 1
      additionalProperties: false
    Component:
      type: object
      properties:
        AppId:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentBindingProperties'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ComponentChild'
        CollectionProperties:
          $ref: '#/components/schemas/ComponentCollectionProperties'
        ComponentType:
          type: string
          maxLength: 255
          minLength: 1
        CreatedAt:
          type: string
          format: date-time
        EnvironmentName:
          type: string
        Events:
          $ref: '#/components/schemas/ComponentEvents'
        Id:
          type: string
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 255
          minLength: 1
        Overrides:
          $ref: '#/components/schemas/ComponentOverrides'
        Properties:
          $ref: '#/components/schemas/ComponentProperties'
        SchemaVersion:
          type: string
        SourceId:
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
        Variants:
          type: array
          items:
            $ref: '#/components/schemas/ComponentVariant'
      x-stackql-resource-name: component
      x-stackql-primaryIdentifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - CreatedAt
        - Id
        - ModifiedAt
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateComponent
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:TagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetComponent
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateComponent
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteComponent
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListComponents
    FieldConfig:
      type: object
      properties:
        Label:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
        Excluded:
          type: boolean
        InputType:
          $ref: '#/components/schemas/FieldInputConfig'
        Validations:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationConfiguration'
      additionalProperties: false
    FieldInputConfig:
      type: object
      properties:
        Type:
          type: string
        Required:
          type: boolean
        ReadOnly:
          type: boolean
        Placeholder:
          type: string
        DefaultValue:
          type: string
        DescriptiveText:
          type: string
        DefaultChecked:
          type: boolean
        DefaultCountryCode:
          type: string
        ValueMappings:
          $ref: '#/components/schemas/ValueMappings'
        Name:
          type: string
        MinValue:
          type: number
        MaxValue:
          type: number
        Step:
          type: number
        Value:
          type: string
        IsArray:
          type: boolean
        FileUploaderConfig:
          $ref: '#/components/schemas/FileUploaderFieldConfig'
      required:
        - Type
      additionalProperties: false
    FieldPosition:
      oneOf:
        - type: object
          title: Fixed
          properties:
            Fixed:
              $ref: '#/components/schemas/FixedPosition'
          required:
            - Fixed
          additionalProperties: false
        - type: object
          title: RightOf
          properties:
            RightOf:
              type: string
          required:
            - RightOf
          additionalProperties: false
        - type: object
          title: Below
          properties:
            Below:
              type: string
          required:
            - Below
          additionalProperties: false
    FieldValidationConfiguration:
      type: object
      properties:
        Type:
          type: string
        StrValues:
          type: array
          items:
            type: string
        NumValues:
          type: array
          items:
            type: number
        ValidationMessage:
          type: string
      required:
        - Type
      additionalProperties: false
    FieldsMap:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FieldConfig'
      additionalProperties: false
    FileUploaderFieldConfig:
      type: object
      properties:
        AccessLevel:
          $ref: '#/components/schemas/StorageAccessLevel'
        AcceptedFileTypes:
          type: array
          items:
            type: string
        ShowThumbnails:
          type: boolean
        IsResumable:
          type: boolean
        MaxFileCount:
          type: number
        MaxSize:
          type: number
      required:
        - AcceptedFileTypes
        - AccessLevel
      additionalProperties: false
    FixedPosition:
      type: string
      enum:
        - first
    FormActionType:
      type: string
      enum:
        - create
        - update
    FormButton:
      type: object
      properties:
        Excluded:
          type: boolean
        Children:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
      additionalProperties: false
    FormButtonsPosition:
      type: string
      enum:
        - top
        - bottom
        - top_and_bottom
    FormCTA:
      type: object
      properties:
        Position:
          $ref: '#/components/schemas/FormButtonsPosition'
        Clear:
          $ref: '#/components/schemas/FormButton'
        Cancel:
          $ref: '#/components/schemas/FormButton'
        Submit:
          $ref: '#/components/schemas/FormButton'
      additionalProperties: false
    FormDataSourceType:
      type: string
      enum:
        - DataStore
        - Custom
    FormDataTypeConfig:
      type: object
      properties:
        DataSourceType:
          $ref: '#/components/schemas/FormDataSourceType'
        DataTypeName:
          type: string
      required:
        - DataSourceType
        - DataTypeName
      additionalProperties: false
    FormInputBindingProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FormInputBindingPropertiesValue'
      additionalProperties: false
    FormInputBindingPropertiesValue:
      type: object
      properties:
        Type:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/FormInputBindingPropertiesValueProperties'
      additionalProperties: false
    FormInputBindingPropertiesValueProperties:
      type: object
      properties:
        Model:
          type: string
      additionalProperties: false
    FormInputValueProperty:
      type: object
      properties:
        Value:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/FormInputValuePropertyBindingProperties'
        Concat:
          type: array
          items:
            $ref: '#/components/schemas/FormInputValueProperty'
      additionalProperties: false
    FormInputValuePropertyBindingProperties:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
      required:
        - Property
      additionalProperties: false
    FormStyle:
      type: object
      properties:
        HorizontalGap:
          $ref: '#/components/schemas/FormStyleConfig'
        VerticalGap:
          $ref: '#/components/schemas/FormStyleConfig'
        OuterPadding:
          $ref: '#/components/schemas/FormStyleConfig'
      additionalProperties: false
    FormStyleConfig:
      oneOf:
        - type: object
          title: TokenReference
          properties:
            TokenReference:
              type: string
          required:
            - TokenReference
          additionalProperties: false
        - type: object
          title: Value
          properties:
            Value:
              type: string
          required:
            - Value
          additionalProperties: false
    LabelDecorator:
      type: string
      enum:
        - required
        - optional
        - none
    SectionalElement:
      type: object
      properties:
        Type:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
        Text:
          type: string
        Level:
          type: number
        Orientation:
          type: string
        Excluded:
          type: boolean
      required:
        - Type
      additionalProperties: false
    SectionalElementMap:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/SectionalElement'
      additionalProperties: false
    StorageAccessLevel:
      type: string
      enum:
        - public
        - protected
        - private
    ValueMapping:
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/FormInputValueProperty'
        Value:
          $ref: '#/components/schemas/FormInputValueProperty'
      required:
        - Value
      additionalProperties: false
    ValueMappings:
      type: object
      properties:
        Values:
          type: array
          items:
            $ref: '#/components/schemas/ValueMapping'
        BindingProperties:
          $ref: '#/components/schemas/FormInputBindingProperties'
      required:
        - Values
      additionalProperties: false
    Form:
      type: object
      properties:
        AppId:
          type: string
        Cta:
          $ref: '#/components/schemas/FormCTA'
        DataType:
          $ref: '#/components/schemas/FormDataTypeConfig'
        EnvironmentName:
          type: string
        Fields:
          $ref: '#/components/schemas/FieldsMap'
        FormActionType:
          $ref: '#/components/schemas/FormActionType'
        Id:
          type: string
        LabelDecorator:
          $ref: '#/components/schemas/LabelDecorator'
        Name:
          type: string
          maxLength: 255
          minLength: 1
        SchemaVersion:
          type: string
        SectionalElements:
          $ref: '#/components/schemas/SectionalElementMap'
        Style:
          $ref: '#/components/schemas/FormStyle'
        Tags:
          $ref: '#/components/schemas/Tags'
      x-stackql-resource-name: form
      x-stackql-primaryIdentifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateForm
          - amplifyuibuilder:GetForm
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetForm
          - amplifyuibuilder:TagResource
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetForm
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateForm
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteForm
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListForms
    ThemeValue:
      type: object
      properties:
        Value:
          type: string
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
      additionalProperties: false
    ThemeValues:
      type: object
      properties:
        Key:
          type: string
        Value:
          $ref: '#/components/schemas/ThemeValue'
      additionalProperties: false
    Theme:
      type: object
      properties:
        AppId:
          type: string
        CreatedAt:
          type: string
          format: date-time
        EnvironmentName:
          type: string
        Id:
          type: string
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 255
          minLength: 1
        Overrides:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
        Tags:
          $ref: '#/components/schemas/Tags'
        Values:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
      x-stackql-resource-name: theme
      x-stackql-primaryIdentifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - CreatedAt
        - Id
        - ModifiedAt
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateTheme
          - amplifyuibuilder:GetTheme
          - amplifyuibuilder:TagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetTheme
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetTheme
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateTheme
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteTheme
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListThemes
  x-stackQL-resources:
    components:
      name: components
      id: awscc.amplifyuibuilder.components
      x-cfn-schema-name: Component
      x-type: list
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND region = 'us-east-1'
    component:
      name: component
      id: awscc.amplifyuibuilder.component
      x-cfn-schema-name: Component
      x-type: get
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.BindingProperties') as binding_properties,
              JSON_EXTRACT(Properties, '$.Children') as children,
              JSON_EXTRACT(Properties, '$.CollectionProperties') as collection_properties,
              JSON_EXTRACT(Properties, '$.ComponentType') as component_type,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Events') as events,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(Properties, '$.Properties') as properties,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.SourceId') as source_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Variants') as variants
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND data__Identifier = '<AppId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'BindingProperties') as binding_properties,
                json_extract_path_text(Properties, 'Children') as children,
                json_extract_path_text(Properties, 'CollectionProperties') as collection_properties,
                json_extract_path_text(Properties, 'ComponentType') as component_type,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Events') as events,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Overrides') as overrides,
                json_extract_path_text(Properties, 'Properties') as properties,
                json_extract_path_text(Properties, 'SchemaVersion') as schema_version,
                json_extract_path_text(Properties, 'SourceId') as source_id,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Variants') as variants
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND data__Identifier = '<AppId>'
                AND region = 'us-east-1'
    forms:
      name: forms
      id: awscc.amplifyuibuilder.forms
      x-cfn-schema-name: Form
      x-type: list
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND region = 'us-east-1'
    form:
      name: form
      id: awscc.amplifyuibuilder.form
      x-cfn-schema-name: Form
      x-type: get
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Cta') as cta,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.FormActionType') as form_action_type,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LabelDecorator') as label_decorator,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.SectionalElements') as sectional_elements,
              JSON_EXTRACT(Properties, '$.Style') as style,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND data__Identifier = '<AppId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'Cta') as cta,
                json_extract_path_text(Properties, 'DataType') as data_type,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Fields') as fields,
                json_extract_path_text(Properties, 'FormActionType') as form_action_type,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'LabelDecorator') as label_decorator,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'SchemaVersion') as schema_version,
                json_extract_path_text(Properties, 'SectionalElements') as sectional_elements,
                json_extract_path_text(Properties, 'Style') as style,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND data__Identifier = '<AppId>'
                AND region = 'us-east-1'
    themes:
      name: themes
      id: awscc.amplifyuibuilder.themes
      x-cfn-schema-name: Theme
      x-type: list
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND region = 'us-east-1'
    theme:
      name: theme
      id: awscc.amplifyuibuilder.theme
      x-cfn-schema-name: Theme
      x-type: get
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Values') as _values
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND data__Identifier = '<AppId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Overrides') as overrides,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Values') as _values
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND data__Identifier = '<AppId>'
                AND region = 'us-east-1'
