openapi: 3.0.0
info:
  title: FMS
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceArn:
      description: A resource ARN.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    NotificationChannel:
      type: object
      properties:
        SnsRoleName:
          $ref: '#/components/schemas/ResourceArn'
        SnsTopicArn:
          $ref: '#/components/schemas/ResourceArn'
      required:
        - SnsRoleName
        - SnsTopicArn
      x-stackql-resource-name: notification_channel
      x-stackql-primaryIdentifier:
        - SnsTopicArn
      x-required-permissions:
        create:
          - fms:PutNotificationChannel
          - iam:PassRole
        update:
          - fms:PutNotificationChannel
          - iam:PassRole
        read:
          - fms:GetNotificationChannel
        delete:
          - fms:DeleteNotificationChannel
        list:
          - fms:GetNotificationChannel
    AccountId:
      description: An AWS account ID.
      type: string
      pattern: ^([0-9]*)$
      minLength: 12
      maxLength: 12
    Base62Id:
      description: A Base62 ID
      type: string
      pattern: ^([a-z0-9A-Z]*)$
      minLength: 22
      maxLength: 22
    OrganizationalUnitId:
      description: An Organizational Unit ID.
      type: string
      pattern: ^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
      minLength: 16
      maxLength: 68
    IEMap:
      description: An FMS includeMap or excludeMap.
      type: object
      properties:
        ACCOUNT:
          type: array
          items:
            $ref: '#/components/schemas/AccountId'
          x-insertionOrder: true
        ORGUNIT:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationalUnitId'
          x-insertionOrder: true
      additionalProperties: false
    PolicyTag:
      description: A policy tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    ResourceTag:
      description: A resource tag.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      additionalProperties: false
      required:
        - Key
    ResourceType:
      description: An AWS resource type
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 128
    SecurityServicePolicyData:
      description: Firewall security service policy data.
      type: object
      properties:
        ManagedServiceData:
          $ref: '#/components/schemas/ManagedServiceData'
        Type:
          $ref: '#/components/schemas/PolicyType'
        PolicyOption:
          $ref: '#/components/schemas/PolicyOption'
      additionalProperties: false
      required:
        - Type
    FirewallDeploymentModel:
      description: Firewall deployment mode.
      type: string
      enum:
        - DISTRIBUTED
        - CENTRALIZED
    ManagedServiceData:
      description: Firewall managed service data.
      type: string
      minLength: 1
      maxLength: 8192
    PolicyType:
      description: Firewall policy type.
      type: string
      enum:
        - WAF
        - WAFV2
        - SHIELD_ADVANCED
        - SECURITY_GROUPS_COMMON
        - SECURITY_GROUPS_CONTENT_AUDIT
        - SECURITY_GROUPS_USAGE_AUDIT
        - NETWORK_FIREWALL
        - THIRD_PARTY_FIREWALL
        - DNS_FIREWALL
        - IMPORT_NETWORK_FIREWALL
    NetworkFirewallPolicy:
      description: Network firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    ThirdPartyFirewallPolicy:
      description: Third party firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    PolicyOption:
      description: Firewall policy option.
      type: object
      properties:
        NetworkFirewallPolicy:
          $ref: '#/components/schemas/NetworkFirewallPolicy'
        ThirdPartyFirewallPolicy:
          $ref: '#/components/schemas/ThirdPartyFirewallPolicy'
      additionalProperties: false
      oneOf:
        - required:
            - NetworkFirewallPolicy
        - required:
            - ThirdPartyFirewallPolicy
    Policy:
      type: object
      properties:
        ExcludeMap:
          $ref: '#/components/schemas/IEMap'
        ExcludeResourceTags:
          type: boolean
        IncludeMap:
          $ref: '#/components/schemas/IEMap'
        Id:
          type: string
          pattern: ^[a-z0-9A-Z-]{36}$
          minLength: 36
          maxLength: 36
        PolicyName:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 1024
        PolicyDescription:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          maxLength: 256
        RemediationEnabled:
          type: boolean
        ResourceTags:
          type: array
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 8
          x-insertionOrder: true
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
        ResourceSetIds:
          type: array
          items:
            $ref: '#/components/schemas/Base62Id'
          x-insertionOrder: true
          uniqueItems: true
        SecurityServicePolicyData:
          $ref: '#/components/schemas/SecurityServicePolicyData'
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        DeleteAllPolicyResources:
          type: boolean
        ResourcesCleanUp:
          type: boolean
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/PolicyTag'
          x-insertionOrder: true
      required:
        - ExcludeResourceTags
        - PolicyName
        - RemediationEnabled
        - SecurityServicePolicyData
      x-stackql-resource-name: policy
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Arn
        - Id
      x-required-permissions:
        create:
          - fms:PutPolicy
          - fms:TagResource
          - waf-regional:ListRuleGroups
          - wafv2:CheckCapacity
          - wafv2:ListRuleGroups
          - wafv2:ListAvailableManagedRuleGroups
          - wafv2:ListAvailableManagedRuleGroupVersions
          - network-firewall:DescribeRuleGroup
          - network-firewall:DescribeRuleGroupMetadata
          - route53resolver:ListFirewallRuleGroups
          - ec2:DescribeAvailabilityZones
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
        update:
          - fms:PutPolicy
          - fms:GetPolicy
          - fms:TagResource
          - fms:UntagResource
          - fms:ListTagsForResource
          - waf-regional:ListRuleGroups
          - wafv2:CheckCapacity
          - wafv2:ListRuleGroups
          - wafv2:ListAvailableManagedRuleGroups
          - wafv2:ListAvailableManagedRuleGroupVersions
          - network-firewall:DescribeRuleGroup
          - network-firewall:DescribeRuleGroupMetadata
          - route53resolver:ListFirewallRuleGroups
          - ec2:DescribeAvailabilityZones
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
        read:
          - fms:GetPolicy
          - fms:ListTagsForResource
        delete:
          - fms:DeletePolicy
        list:
          - fms:ListPolicies
          - fms:ListTagsForResource
    Tag:
      description: A tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Resource:
      description: A resource ARN or URI.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    ResourceSet:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Base62Id'
        Name:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 128
        Description:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]*)$
          maxLength: 256
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
          uniqueItems: true
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          x-insertionOrder: false
          uniqueItems: true
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: true
          uniqueItems: true
      required:
        - Name
        - ResourceTypeList
      x-stackql-resource-name: resource_set
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - fms:PutResourceSet
          - fms:BatchAssociateResource
          - fms:ListResourceSetResources
          - fms:TagResource
        update:
          - fms:PutResourceSet
          - fms:BatchAssociateResource
          - fms:BatchDisassociateResource
          - fms:GetResourceSet
          - fms:ListResourceSetResources
          - fms:TagResource
          - fms:UntagResource
          - fms:ListTagsForResource
        read:
          - fms:GetResourceSet
          - fms:ListResourceSetResources
          - fms:ListTagsForResource
        delete:
          - fms:DeleteResourceSet
        list:
          - fms:ListResourceSets
  x-stackQL-resources:
    notification_channels:
      name: notification_channels
      id: awscc.fms.notification_channels
      x-cfn-schema-name: NotificationChannel
      x-type: list
      x-identifiers:
        - SnsTopicArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
                AND region = 'us-east-1'
    notification_channel:
      name: notification_channel
      id: awscc.fms.notification_channel
      x-cfn-schema-name: NotificationChannel
      x-type: get
      x-identifiers:
        - SnsTopicArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SnsRoleName') as sns_role_name,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
              AND data__Identifier = '<SnsTopicArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'SnsRoleName') as sns_role_name,
                json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
                AND data__Identifier = '<SnsTopicArn>'
                AND region = 'us-east-1'
    policies:
      name: policies
      id: awscc.fms.policies
      x-cfn-schema-name: Policy
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::Policy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::Policy'
                AND region = 'us-east-1'
    policy:
      name: policy
      id: awscc.fms.policy
      x-cfn-schema-name: Policy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ExcludeMap') as exclude_map,
              JSON_EXTRACT(Properties, '$.ExcludeResourceTags') as exclude_resource_tags,
              JSON_EXTRACT(Properties, '$.IncludeMap') as include_map,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyDescription') as policy_description,
              JSON_EXTRACT(Properties, '$.RemediationEnabled') as remediation_enabled,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(Properties, '$.ResourceSetIds') as resource_set_ids,
              JSON_EXTRACT(Properties, '$.SecurityServicePolicyData') as security_service_policy_data,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DeleteAllPolicyResources') as delete_all_policy_resources,
              JSON_EXTRACT(Properties, '$.ResourcesCleanUp') as resources_clean_up,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::Policy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ExcludeMap') as exclude_map,
                json_extract_path_text(Properties, 'ExcludeResourceTags') as exclude_resource_tags,
                json_extract_path_text(Properties, 'IncludeMap') as include_map,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'PolicyName') as policy_name,
                json_extract_path_text(Properties, 'PolicyDescription') as policy_description,
                json_extract_path_text(Properties, 'RemediationEnabled') as remediation_enabled,
                json_extract_path_text(Properties, 'ResourceTags') as resource_tags,
                json_extract_path_text(Properties, 'ResourceType') as resource_type,
                json_extract_path_text(Properties, 'ResourceTypeList') as resource_type_list,
                json_extract_path_text(Properties, 'ResourceSetIds') as resource_set_ids,
                json_extract_path_text(Properties, 'SecurityServicePolicyData') as security_service_policy_data,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DeleteAllPolicyResources') as delete_all_policy_resources,
                json_extract_path_text(Properties, 'ResourcesCleanUp') as resources_clean_up,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::Policy'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    resource_sets:
      name: resource_sets
      id: awscc.fms.resource_sets
      x-cfn-schema-name: ResourceSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::ResourceSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::ResourceSet'
                AND region = 'us-east-1'
    resource_set:
      name: resource_set
      id: awscc.fms.resource_set
      x-cfn-schema-name: ResourceSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::ResourceSet'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ResourceTypeList') as resource_type_list,
                json_extract_path_text(Properties, 'Resources') as resources,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::ResourceSet'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
