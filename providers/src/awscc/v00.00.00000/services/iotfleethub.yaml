openapi: 3.0.0
info:
  title: IoTFleetHub
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Application:
      type: object
      properties:
        ApplicationId:
          description: The ID of the application.
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          minLength: 36
          maxLength: 36
        ApplicationArn:
          description: The ARN of the application.
          type: string
          pattern: ^arn:[!-~]+$
          minLength: 1
          maxLength: 1600
        ApplicationName:
          description: Application Name, should be between 1 and 256 characters.
          type: string
          pattern: ^[ -~]*$
          minLength: 1
          maxLength: 256
        ApplicationDescription:
          description: Application Description, should be between 1 and 2048 characters.
          type: string
          pattern: ^[ -~]*$
          minLength: 1
          maxLength: 2048
        ApplicationUrl:
          description: The URL of the application.
          type: string
        ApplicationState:
          description: The current state of the application.
          type: string
        ApplicationCreationDate:
          description: When the Application was created
          type: integer
        ApplicationLastUpdateDate:
          description: When the Application was last updated
          type: integer
        RoleArn:
          description: The ARN of the role that the web application assumes when it interacts with AWS IoT Core. For more info on configuring this attribute, see https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax
          type: string
          pattern: ^arn:[!-~]+$
          minLength: 1
          maxLength: 1600
        SsoClientId:
          description: The AWS SSO application generated client ID (used with AWS SSO APIs).
          type: string
        ErrorMessage:
          description: A message indicating why Create or Delete Application failed.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the application.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required:
        - ApplicationName
        - RoleArn
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - ApplicationId
      x-read-only-properties:
        - ApplicationArn
        - ApplicationId
        - ApplicationUrl
        - ApplicationState
        - ApplicationCreationDate
        - ApplicationLastUpdateDate
        - SsoClientId
        - ErrorMessage
      x-required-permissions:
        create:
          - iotfleethub:CreateApplication
          - iotfleethub:TagResource
          - iam:PassRole
          - sso:CreateManagedApplicationInstance
          - sso:DescribeRegisteredRegions
        read:
          - iotfleethub:DescribeApplication
        update:
          - iotfleethub:UpdateApplication
          - iotfleethub:DescribeApplication
          - iotfleethub:TagResource
          - iotfleethub:UntagResource
        delete:
          - iotfleethub:DeleteApplication
          - iotfleethub:DescribeApplication
          - sso:DeleteManagedApplicationInstance
        list:
          - iotfleethub:ListApplications
  x-stackQL-resources:
    applications:
      name: applications
      id: awscc.iotfleethub.applications
      x-cfn-schema-name: Application
      x-type: list
      x-identifiers:
        - ApplicationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetHub::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetHub::Application'
                AND region = 'us-east-1'
    application:
      name: application
      id: awscc.iotfleethub.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - ApplicationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name,
              JSON_EXTRACT(Properties, '$.ApplicationDescription') as application_description,
              JSON_EXTRACT(Properties, '$.ApplicationUrl') as application_url,
              JSON_EXTRACT(Properties, '$.ApplicationState') as application_state,
              JSON_EXTRACT(Properties, '$.ApplicationCreationDate') as application_creation_date,
              JSON_EXTRACT(Properties, '$.ApplicationLastUpdateDate') as application_last_update_date,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.SsoClientId') as sso_client_id,
              JSON_EXTRACT(Properties, '$.ErrorMessage') as error_message,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetHub::Application'
              AND data__Identifier = '<ApplicationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'ApplicationName') as application_name,
                json_extract_path_text(Properties, 'ApplicationDescription') as application_description,
                json_extract_path_text(Properties, 'ApplicationUrl') as application_url,
                json_extract_path_text(Properties, 'ApplicationState') as application_state,
                json_extract_path_text(Properties, 'ApplicationCreationDate') as application_creation_date,
                json_extract_path_text(Properties, 'ApplicationLastUpdateDate') as application_last_update_date,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'SsoClientId') as sso_client_id,
                json_extract_path_text(Properties, 'ErrorMessage') as error_message,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetHub::Application'
                AND data__Identifier = '<ApplicationId>'
                AND region = 'us-east-1'
