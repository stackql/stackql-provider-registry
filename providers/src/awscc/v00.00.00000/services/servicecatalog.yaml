openapi: 3.0.0
info:
  title: ServiceCatalog
  version: 1.0.0
paths: {}
components:
  schemas:
    ProvisioningPreferences:
      type: object
      properties:
        StackSetAccounts:
          type: array
          uniqueItems: true
          items:
            type: string
            pattern: ^[0-9]{12}$
        StackSetFailureToleranceCount:
          type: integer
          minimum: 0
        StackSetFailureTolerancePercentage:
          type: integer
          minimum: 0
          maximum: 100
        StackSetMaxConcurrencyCount:
          type: integer
          minimum: 1
        StackSetMaxConcurrencyPercentage:
          type: integer
          minimum: 1
          maximum: 100
        StackSetOperationType:
          type: string
          enum:
            - CREATE
            - UPDATE
            - DELETE
        StackSetRegions:
          type: array
          uniqueItems: true
          items:
            type: string
            pattern: ^[a-z]{2}-([a-z]+-)+[1-9]
      additionalProperties: false
    ProvisioningParameter:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1000
        Value:
          type: string
          maxLength: 4096
      additionalProperties: false
      required:
        - Key
        - Value
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
        Value:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      additionalProperties: false
      required:
        - Key
        - Value
    OutputType:
      type: string
    CloudFormationProvisionedProduct:
      type: object
      properties:
        AcceptLanguage:
          type: string
          enum:
            - en
            - jp
            - zh
        NotificationArns:
          type: array
          uniqueItems: true
          items:
            type: string
          maxItems: 5
        PathId:
          type: string
          minLength: 1
          maxLength: 100
        PathName:
          type: string
          minLength: 1
          maxLength: 100
        ProductId:
          type: string
          minLength: 1
          maxLength: 100
        ProductName:
          type: string
          minLength: 1
          maxLength: 128
        ProvisionedProductName:
          type: string
          minLength: 1
          maxLength: 128
        ProvisioningArtifactId:
          type: string
          minLength: 1
          maxLength: 100
        ProvisioningArtifactName:
          type: string
        ProvisioningParameters:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningParameter'
        ProvisioningPreferences:
          $ref: '#/components/schemas/ProvisioningPreferences'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        ProvisionedProductId:
          type: string
          minLength: 1
          maxLength: 50
        RecordId:
          type: string
          minLength: 1
          maxLength: 50
        CloudformationStackArn:
          type: string
          minLength: 1
          maxLength: 256
        Outputs:
          description: List of key-value pair outputs.
          type: object
          x-patternProperties:
            ^[A-Za-z0-9]{1,64}$:
              $ref: '#/components/schemas/OutputType'
          additionalProperties: false
          maxProperties: 100
      x-stackql-resource-name: cloud_formation_provisioned_product
      x-stackql-primaryIdentifier:
        - ProvisionedProductId
      x-create-only-properties:
        - NotificationArns
        - ProvisionedProductName
      x-read-only-properties:
        - RecordId
        - CloudformationStackArn
        - Outputs
        - ProvisionedProductId
      x-required-permissions:
        create:
          - '*'
        read:
          - '*'
        update:
          - '*'
        delete:
          - '*'
    DefinitionParameter:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1000
        Value:
          type: string
          maxLength: 4096
      additionalProperties: false
      required:
        - Key
        - Value
    ServiceAction:
      type: object
      properties:
        AcceptLanguage:
          type: string
          enum:
            - en
            - jp
            - zh
        Name:
          type: string
          minLength: 1
          maxLength: 256
        DefinitionType:
          type: string
          enum:
            - SSM_AUTOMATION
        Definition:
          type: array
          items:
            $ref: '#/components/schemas/DefinitionParameter'
        Description:
          type: string
          maxLength: 1024
        Id:
          type: string
          minLength: 1
          maxLength: 100
      required:
        - Name
        - DefinitionType
        - Definition
      x-stackql-resource-name: service_action
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - servicecatalog:CreateServiceAction
          - ssm:DescribeDocument
          - iam:GetRole
        read:
          - servicecatalog:DescribeServiceAction
        update:
          - servicecatalog:UpdateServiceAction
          - iam:GetRole
          - ssm:DescribeDocument
        delete:
          - servicecatalog:DeleteServiceAction
        list:
          - servicecatalog:ListServiceActions
    ServiceActionAssociation:
      type: object
      properties:
        ProductId:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]{1,99}\Z
          minLength: 1
          maxLength: 100
        ProvisioningArtifactId:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]{1,99}\Z
          minLength: 1
          maxLength: 100
        ServiceActionId:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]{1,99}\Z
          minLength: 1
          maxLength: 100
      required:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      x-stackql-resource-name: service_action_association
      x-stackql-primaryIdentifier:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      x-create-only-properties:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      x-required-permissions:
        create:
          - servicecatalog:AssociateServiceActionWithProvisioningArtifact
          - servicecatalog:ListServiceActionsForProvisioningArtifact
        read:
          - servicecatalog:ListServiceActionsForProvisioningArtifact
        delete:
          - servicecatalog:DisassociateServiceActionFromProvisioningArtifact
          - servicecatalog:ListServiceActionsForProvisioningArtifact
        list:
          - servicecatalog:ListServiceActionsForProvisioningArtifact
  x-stackQL-resources:
    cloud_formation_provisioned_product:
      name: cloud_formation_provisioned_product
      id: awscc.servicecatalog.cloud_formation_provisioned_product
      x-cfn-schema-name: CloudFormationProvisionedProduct
      x-type: get
      x-identifiers:
        - ProvisionedProductId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AcceptLanguage') as accept_language,
              JSON_EXTRACT(Properties, '$.NotificationArns') as notification_arns,
              JSON_EXTRACT(Properties, '$.PathId') as path_id,
              JSON_EXTRACT(Properties, '$.PathName') as path_name,
              JSON_EXTRACT(Properties, '$.ProductId') as product_id,
              JSON_EXTRACT(Properties, '$.ProductName') as product_name,
              JSON_EXTRACT(Properties, '$.ProvisionedProductName') as provisioned_product_name,
              JSON_EXTRACT(Properties, '$.ProvisioningArtifactId') as provisioning_artifact_id,
              JSON_EXTRACT(Properties, '$.ProvisioningArtifactName') as provisioning_artifact_name,
              JSON_EXTRACT(Properties, '$.ProvisioningParameters') as provisioning_parameters,
              JSON_EXTRACT(Properties, '$.ProvisioningPreferences') as provisioning_preferences,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ProvisionedProductId') as provisioned_product_id,
              JSON_EXTRACT(Properties, '$.RecordId') as record_id,
              JSON_EXTRACT(Properties, '$.CloudformationStackArn') as cloudformation_stack_arn,
              JSON_EXTRACT(Properties, '$.Outputs') as outputs
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::CloudFormationProvisionedProduct'
              AND data__Identifier = '<ProvisionedProductId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AcceptLanguage') as accept_language,
                json_extract_path_text(Properties, 'NotificationArns') as notification_arns,
                json_extract_path_text(Properties, 'PathId') as path_id,
                json_extract_path_text(Properties, 'PathName') as path_name,
                json_extract_path_text(Properties, 'ProductId') as product_id,
                json_extract_path_text(Properties, 'ProductName') as product_name,
                json_extract_path_text(Properties, 'ProvisionedProductName') as provisioned_product_name,
                json_extract_path_text(Properties, 'ProvisioningArtifactId') as provisioning_artifact_id,
                json_extract_path_text(Properties, 'ProvisioningArtifactName') as provisioning_artifact_name,
                json_extract_path_text(Properties, 'ProvisioningParameters') as provisioning_parameters,
                json_extract_path_text(Properties, 'ProvisioningPreferences') as provisioning_preferences,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ProvisionedProductId') as provisioned_product_id,
                json_extract_path_text(Properties, 'RecordId') as record_id,
                json_extract_path_text(Properties, 'CloudformationStackArn') as cloudformation_stack_arn,
                json_extract_path_text(Properties, 'Outputs') as outputs
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::CloudFormationProvisionedProduct'
                AND data__Identifier = '<ProvisionedProductId>'
                AND region = 'us-east-1'
    service_actions:
      name: service_actions
      id: awscc.servicecatalog.service_actions
      x-cfn-schema-name: ServiceAction
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceAction'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceAction'
                AND region = 'us-east-1'
    service_action:
      name: service_action
      id: awscc.servicecatalog.service_action
      x-cfn-schema-name: ServiceAction
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AcceptLanguage') as accept_language,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DefinitionType') as definition_type,
              JSON_EXTRACT(Properties, '$.Definition') as definition,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceAction'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AcceptLanguage') as accept_language,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'DefinitionType') as definition_type,
                json_extract_path_text(Properties, 'Definition') as definition,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceAction'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    service_action_associations:
      name: service_action_associations
      id: awscc.servicecatalog.service_action_associations
      x-cfn-schema-name: ServiceActionAssociation
      x-type: list
      x-identifiers:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProductId') as product_id,
              JSON_EXTRACT(Properties, '$.ProvisioningArtifactId') as provisioning_artifact_id,
              JSON_EXTRACT(Properties, '$.ServiceActionId') as service_action_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceActionAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProductId') as product_id,
                json_extract_path_text(Properties, 'ProvisioningArtifactId') as provisioning_artifact_id,
                json_extract_path_text(Properties, 'ServiceActionId') as service_action_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceActionAssociation'
                AND region = 'us-east-1'
    service_action_association:
      name: service_action_association
      id: awscc.servicecatalog.service_action_association
      x-cfn-schema-name: ServiceActionAssociation
      x-type: get
      x-identifiers:
        - ProductId
        - ProvisioningArtifactId
        - ServiceActionId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ProductId') as product_id,
              JSON_EXTRACT(Properties, '$.ProvisioningArtifactId') as provisioning_artifact_id,
              JSON_EXTRACT(Properties, '$.ServiceActionId') as service_action_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceActionAssociation'
              AND data__Identifier = '<ProductId>|<ProvisioningArtifactId>|<ServiceActionId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ProductId') as product_id,
                json_extract_path_text(Properties, 'ProvisioningArtifactId') as provisioning_artifact_id,
                json_extract_path_text(Properties, 'ServiceActionId') as service_action_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalog::ServiceActionAssociation'
                AND data__Identifier = '<ProductId>|<ProvisioningArtifactId>|<ServiceActionId>'
                AND region = 'us-east-1'
