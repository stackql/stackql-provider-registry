openapi: 3.0.0
info:
  title: GlobalAccelerator
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: Tag is a key-value pair associated with accelerator.
      type: object
      properties:
        Key:
          description: Key of the tag. Value can be 1 to 127 characters.
          type: string
          minLength: 1
          maxLength: 127
        Value:
          description: Value for the tag. Value can be 1 to 255 characters.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - Value
        - Key
      additionalProperties: false
    IpAddress:
      pattern: ^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$
      description: An IPV4 address
      type: string
    Accelerator:
      type: object
      properties:
        Name:
          description: Name of accelerator.
          type: string
          pattern: ^[a-zA-Z0-9_-]{0,64}$
          minLength: 1
          maxLength: 64
        IpAddressType:
          description: IP Address type.
          type: string
          default: IPV4
          enum:
            - IPV4
            - DUAL_STACK
        IpAddresses:
          description: The IP addresses from BYOIP Prefix pool.
          default: null
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
        Enabled:
          description: Indicates whether an accelerator is enabled. The value is true or false.
          default: true
          type: boolean
        DnsName:
          description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 addresses.
          type: string
        Ipv4Addresses:
          description: The IPv4 addresses assigned to the accelerator.
          x-insertionOrder: true
          type: array
          items:
            type: string
        Ipv6Addresses:
          description: The IPv6 addresses assigned if the accelerator is dualstack
          default: null
          x-insertionOrder: true
          type: array
          items:
            type: string
        DualStackDnsName:
          description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 and IPv6 addresses.
          type: string
        AcceleratorArn:
          description: The Amazon Resource Name (ARN) of the accelerator.
          type: string
        Tags:
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: accelerator
      x-stackql-primaryIdentifier:
        - AcceleratorArn
      x-read-only-properties:
        - AcceleratorArn
        - DnsName
        - Ipv4Addresses
        - Ipv6Addresses
        - DualStackDnsName
      x-required-permissions:
        create:
          - globalaccelerator:CreateAccelerator
          - globalaccelerator:DescribeAccelerator
          - globalaccelerator:TagResource
        read:
          - globalaccelerator:DescribeAccelerator
        update:
          - globalaccelerator:UpdateAccelerator
          - globalaccelerator:TagResource
          - globalaccelerator:UntagResource
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:UpdateAccelerator
          - globalaccelerator:DeleteAccelerator
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListAccelerators
    EndpointConfiguration:
      description: The configuration for a given endpoint
      type: object
      properties:
        EndpointId:
          description: Id of the endpoint. For Network/Application Load Balancer this value is the ARN.  For EIP, this value is the allocation ID.  For EC2 instances, this is the EC2 instance ID
          type: string
        AttachmentArn:
          description: Attachment ARN that provides access control to the cross account endpoint. Not required for resources hosted in the same account as the endpoint group.
          type: string
        Weight:
          description: The weight for the endpoint.
          type: integer
          minimum: 0
          maximum: 255
          default: 100
        ClientIPPreservationEnabled:
          description: true if client ip should be preserved
          type: boolean
          default: true
      required:
        - EndpointId
      additionalProperties: false
    Port:
      description: A network port number
      type: integer
      minimum: 0
      maximum: 65535
    PortOverride:
      description: listener to endpoint port mapping.
      type: object
      properties:
        ListenerPort:
          $ref: '#/components/schemas/Port'
        EndpointPort:
          $ref: '#/components/schemas/Port'
      required:
        - ListenerPort
        - EndpointPort
      additionalProperties: false
    EndpointGroup:
      type: object
      properties:
        ListenerArn:
          description: The Amazon Resource Name (ARN) of the listener
          type: string
        EndpointGroupRegion:
          description: The name of the AWS Region where the endpoint group is located
          type: string
        EndpointConfigurations:
          description: The list of endpoint objects.
          type: array
          items:
            $ref: '#/components/schemas/EndpointConfiguration'
        TrafficDialPercentage:
          description: The percentage of traffic to sent to an AWS Region
          type: number
          minimum: 0
          maximum: 100
          default: 100
        HealthCheckPort:
          description: The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
          type: integer
          minimum: -1
          maximum: 65535
          default: -1
        HealthCheckProtocol:
          description: The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
          type: string
          default: TCP
          enum:
            - TCP
            - HTTP
            - HTTPS
        HealthCheckPath:
          description: ''
          type: string
          default: /
        HealthCheckIntervalSeconds:
          description: The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
          type: integer
          default: 30
        ThresholdCount:
          description: The number of consecutive health checks required to set the state of the endpoint to unhealthy.
          type: integer
          default: 3
        EndpointGroupArn:
          description: The Amazon Resource Name (ARN) of the endpoint group
          type: string
        PortOverrides:
          type: array
          items:
            $ref: '#/components/schemas/PortOverride'
      required:
        - ListenerArn
        - EndpointGroupRegion
      x-stackql-resource-name: endpoint_group
      x-stackql-primaryIdentifier:
        - EndpointGroupArn
      x-create-only-properties:
        - EndpointGroupRegion
        - ListenerArn
      x-read-only-properties:
        - EndpointGroupArn
      x-required-permissions:
        create:
          - globalaccelerator:CreateEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeAccelerator
          - globalaccelerator:DescribeListener
          - globalaccelerator:ListAccelerators
          - globalaccelerator:ListListeners
        read:
          - globalaccelerator:DescribeEndpointGroup
        update:
          - globalaccelerator:UpdateEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:DeleteEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListEndpointGroups
    PortRange:
      description: A port range to support for connections from  clients to your accelerator.
      type: object
      properties:
        FromPort:
          $ref: '#/components/schemas/Port'
        ToPort:
          $ref: '#/components/schemas/Port'
      required:
        - FromPort
        - ToPort
      additionalProperties: false
    Listener:
      type: object
      properties:
        ListenerArn:
          description: The Amazon Resource Name (ARN) of the listener.
          type: string
        AcceleratorArn:
          description: The Amazon Resource Name (ARN) of the accelerator.
          type: string
        PortRanges:
          type: array
          items:
            $ref: '#/components/schemas/PortRange'
        Protocol:
          description: The protocol for the listener.
          type: string
          default: TCP
          enum:
            - TCP
            - UDP
        ClientAffinity:
          description: Client affinity lets you direct all requests from a user to the same endpoint.
          type: string
          default: NONE
          enum:
            - NONE
            - SOURCE_IP
      required:
        - AcceleratorArn
        - PortRanges
        - Protocol
      x-stackql-resource-name: listener
      x-stackql-primaryIdentifier:
        - ListenerArn
      x-create-only-properties:
        - AcceleratorArn
      x-read-only-properties:
        - ListenerArn
      x-required-permissions:
        create:
          - globalaccelerator:CreateListener
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        read:
          - globalaccelerator:DescribeListener
        update:
          - globalaccelerator:UpdateListener
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:DescribeListener
          - globalaccelerator:DeleteListener
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListListeners
  x-stackQL-resources:
    accelerators:
      name: accelerators
      id: awscc.globalaccelerator.accelerators
      x-cfn-schema-name: Accelerator
      x-type: list
      x-identifiers:
        - AcceleratorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND region = 'us-east-1'
    accelerator:
      name: accelerator
      id: awscc.globalaccelerator.accelerator
      x-cfn-schema-name: Accelerator
      x-type: get
      x-identifiers:
        - AcceleratorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.IpAddressType') as ip_address_type,
              JSON_EXTRACT(Properties, '$.IpAddresses') as ip_addresses,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DnsName') as dns_name,
              JSON_EXTRACT(Properties, '$.Ipv4Addresses') as ipv4_addresses,
              JSON_EXTRACT(Properties, '$.Ipv6Addresses') as ipv6_addresses,
              JSON_EXTRACT(Properties, '$.DualStackDnsName') as dual_stack_dns_name,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND data__Identifier = '<AcceleratorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'IpAddressType') as ip_address_type,
                json_extract_path_text(Properties, 'IpAddresses') as ip_addresses,
                json_extract_path_text(Properties, 'Enabled') as enabled,
                json_extract_path_text(Properties, 'DnsName') as dns_name,
                json_extract_path_text(Properties, 'Ipv4Addresses') as ipv4_addresses,
                json_extract_path_text(Properties, 'Ipv6Addresses') as ipv6_addresses,
                json_extract_path_text(Properties, 'DualStackDnsName') as dual_stack_dns_name,
                json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND data__Identifier = '<AcceleratorArn>'
                AND region = 'us-east-1'
    endpoint_groups:
      name: endpoint_groups
      id: awscc.globalaccelerator.endpoint_groups
      x-cfn-schema-name: EndpointGroup
      x-type: list
      x-identifiers:
        - EndpointGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EndpointGroupArn') as endpoint_group_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EndpointGroupArn') as endpoint_group_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                AND region = 'us-east-1'
    endpoint_group:
      name: endpoint_group
      id: awscc.globalaccelerator.endpoint_group
      x-cfn-schema-name: EndpointGroup
      x-type: get
      x-identifiers:
        - EndpointGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn,
              JSON_EXTRACT(Properties, '$.EndpointGroupRegion') as endpoint_group_region,
              JSON_EXTRACT(Properties, '$.EndpointConfigurations') as endpoint_configurations,
              JSON_EXTRACT(Properties, '$.TrafficDialPercentage') as traffic_dial_percentage,
              JSON_EXTRACT(Properties, '$.HealthCheckPort') as health_check_port,
              JSON_EXTRACT(Properties, '$.HealthCheckProtocol') as health_check_protocol,
              JSON_EXTRACT(Properties, '$.HealthCheckPath') as health_check_path,
              JSON_EXTRACT(Properties, '$.HealthCheckIntervalSeconds') as health_check_interval_seconds,
              JSON_EXTRACT(Properties, '$.ThresholdCount') as threshold_count,
              JSON_EXTRACT(Properties, '$.EndpointGroupArn') as endpoint_group_arn,
              JSON_EXTRACT(Properties, '$.PortOverrides') as port_overrides
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
              AND data__Identifier = '<EndpointGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ListenerArn') as listener_arn,
                json_extract_path_text(Properties, 'EndpointGroupRegion') as endpoint_group_region,
                json_extract_path_text(Properties, 'EndpointConfigurations') as endpoint_configurations,
                json_extract_path_text(Properties, 'TrafficDialPercentage') as traffic_dial_percentage,
                json_extract_path_text(Properties, 'HealthCheckPort') as health_check_port,
                json_extract_path_text(Properties, 'HealthCheckProtocol') as health_check_protocol,
                json_extract_path_text(Properties, 'HealthCheckPath') as health_check_path,
                json_extract_path_text(Properties, 'HealthCheckIntervalSeconds') as health_check_interval_seconds,
                json_extract_path_text(Properties, 'ThresholdCount') as threshold_count,
                json_extract_path_text(Properties, 'EndpointGroupArn') as endpoint_group_arn,
                json_extract_path_text(Properties, 'PortOverrides') as port_overrides
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                AND data__Identifier = '<EndpointGroupArn>'
                AND region = 'us-east-1'
    listeners:
      name: listeners
      id: awscc.globalaccelerator.listeners
      x-cfn-schema-name: Listener
      x-type: list
      x-identifiers:
        - ListenerArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ListenerArn') as listener_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
                AND region = 'us-east-1'
    listener:
      name: listener
      id: awscc.globalaccelerator.listener
      x-cfn-schema-name: Listener
      x-type: get
      x-identifiers:
        - ListenerArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn,
              JSON_EXTRACT(Properties, '$.PortRanges') as port_ranges,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol,
              JSON_EXTRACT(Properties, '$.ClientAffinity') as client_affinity
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
              AND data__Identifier = '<ListenerArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ListenerArn') as listener_arn,
                json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn,
                json_extract_path_text(Properties, 'PortRanges') as port_ranges,
                json_extract_path_text(Properties, 'Protocol') as protocol,
                json_extract_path_text(Properties, 'ClientAffinity') as client_affinity
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
                AND data__Identifier = '<ListenerArn>'
                AND region = 'us-east-1'
