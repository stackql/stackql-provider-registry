openapi: 3.0.0
info:
  title: IVS
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    Channel:
      type: object
      properties:
        Arn:
          description: Channel ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Name:
          description: Channel
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
          default: '-'
        Authorized:
          description: Whether the channel is authorized.
          type: boolean
          default: false
        InsecureIngest:
          description: Whether the channel allows insecure ingest.
          type: boolean
          default: false
        LatencyMode:
          description: Channel latency mode.
          type: string
          enum:
            - NORMAL
            - LOW
          default: LOW
        Type:
          description: Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
          type: string
          enum:
            - STANDARD
            - BASIC
            - ADVANCED_SD
            - ADVANCED_HD
          default: STANDARD
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        PlaybackUrl:
          description: Channel Playback URL.
          type: string
        IngestEndpoint:
          description: Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
          type: string
        RecordingConfigurationArn:
          description: 'Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: "" (recording is disabled).'
          type: string
          default: ''
          pattern: ^$|arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Preset:
          description: Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
          type: string
          enum:
            - HIGHER_BANDWIDTH_DELIVERY
            - CONSTRAINED_BANDWIDTH_DELIVERY
      required: []
      x-stackql-resource-name: channel
      x-stackql-primaryIdentifier:
        - Arn
      x-read-only-properties:
        - Arn
        - PlaybackUrl
        - IngestEndpoint
      x-required-permissions:
        create:
          - ivs:CreateChannel
          - ivs:TagResource
        read:
          - ivs:GetChannel
          - ivs:ListTagsForResource
        update:
          - ivs:GetChannel
          - ivs:UpdateChannel
          - ivs:TagResource
          - ivs:UnTagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteChannel
          - ivs:UnTagResource
        list:
          - ivs:ListChannels
          - ivs:ListTagsForResource
    PlaybackKeyPair:
      type: object
      properties:
        Name:
          description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.
          type: string
          pattern: ^[a-zA-Z0-9-_]*$
          minLength: 0
          maxLength: 128
        PublicKeyMaterial:
          description: The public portion of a customer-generated key pair.
          type: string
        Fingerprint:
          description: Key-pair identifier.
          type: string
        Arn:
          description: Key-pair identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: playback_key_pair
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - PublicKeyMaterial
        - Name
      x-read-only-properties:
        - Arn
        - Fingerprint
      x-required-permissions:
        create:
          - ivs:ImportPlaybackKeyPair
          - ivs:TagResource
        read:
          - ivs:GetPlaybackKeyPair
        update:
          - ivs:GetPlaybackKeyPair
          - ivs:ListTagsForResource
          - ivs:UntagResource
          - ivs:TagResource
        delete:
          - ivs:DeletePlaybackKeyPair
          - ivs:UntagResource
        list:
          - ivs:ListPlaybackKeyPairs
          - ivs:ListTagsForResource
    DestinationConfiguration:
      description: Recording Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3DestinationConfiguration'
      required: []
    S3DestinationConfiguration:
      description: Recording S3 Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        BucketName:
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9-.]+$
      required:
        - BucketName
    ThumbnailConfiguration:
      description: Recording Thumbnail Configuration.
      type: object
      additionalProperties: false
      properties:
        RecordingMode:
          description: Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
          type: string
          enum:
            - INTERVAL
            - DISABLED
          default: INTERVAL
        TargetIntervalSeconds:
          description: Target Interval Seconds defines the interval at which thumbnails are recorded. This field is required if RecordingMode is INTERVAL.
          type: integer
          minimum: 1
          maximum: 60
          default: 60
        Resolution:
          description: Resolution indicates the desired resolution of recorded thumbnails.
          type: string
          enum:
            - FULL_HD
            - HD
            - SD
            - LOWEST_RESOLUTION
        Storage:
          description: Storage indicates the format in which thumbnails are recorded.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 2
          items:
            type: string
            enum:
              - SEQUENTIAL
              - LATEST
      required: []
    RenditionConfiguration:
      description: Rendition Configuration describes which renditions should be recorded for a stream.
      type: object
      additionalProperties: false
      properties:
        RenditionSelection:
          description: Resolution Selection indicates which set of renditions are recorded for a stream.
          type: string
          enum:
            - ALL
            - NONE
            - CUSTOM
          default: ALL
        Renditions:
          description: Renditions indicates which renditions are recorded for a stream.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 4
          items:
            type: string
            enum:
              - FULL_HD
              - HD
              - SD
              - LOWEST_RESOLUTION
      required: []
    RecordingConfiguration:
      type: object
      properties:
        Arn:
          description: Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Name:
          description: Recording Configuration Name.
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        State:
          description: Recording Configuration State.
          type: string
          enum:
            - CREATING
            - CREATE_FAILED
            - ACTIVE
        RecordingReconnectWindowSeconds:
          description: Recording Reconnect Window Seconds. (0 means disabled)
          type: integer
          default: 0
          minimum: 0
          maximum: 300
        DestinationConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        ThumbnailConfiguration:
          $ref: '#/components/schemas/ThumbnailConfiguration'
        RenditionConfiguration:
          $ref: '#/components/schemas/RenditionConfiguration'
      required:
        - DestinationConfiguration
      x-stackql-resource-name: recording_configuration
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
        - DestinationConfiguration
        - DestinationConfiguration/S3
        - DestinationConfiguration/S3/BucketName
        - RecordingReconnectWindowSeconds
        - ThumbnailConfiguration
        - ThumbnailConfiguration/RecordingMode
        - ThumbnailConfiguration/TargetIntervalSeconds
        - ThumbnailConfiguration/Storage
        - ThumbnailConfiguration/Resolution
        - RenditionConfiguration
        - RenditionConfiguration/RenditionSelection
        - RenditionConfiguration/Renditions
      x-read-only-properties:
        - Arn
        - State
      x-required-permissions:
        create:
          - ivs:CreateRecordingConfiguration
          - ivs:GetRecordingConfiguration
          - ivs:TagResource
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - iam:AttachRolePolicy
          - s3:ListBucket
          - s3:GetBucketLocation
          - cloudformation:ListExports
        read:
          - ivs:GetRecordingConfiguration
          - s3:GetBucketLocation
          - ivs:ListTagsForResource
        update:
          - ivs:GetRecordingConfiguration
          - sts:AssumeRole
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - iam:AttachRolePolicy
          - s3:ListBucket
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteRecordingConfiguration
          - ivs:UntagResource
          - iam:CreateServiceLinkedRole
        list:
          - ivs:ListRecordingConfigurations
          - s3:GetBucketLocation
          - ivs:ListTagsForResource
    Stage:
      type: object
      properties:
        Arn:
          description: Stage ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Name:
          description: Stage name
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        ActiveSessionId:
          description: ID of the active session within the stage.
          type: string
          default: ''
          minLength: 0
          maxLength: 128
      x-stackql-resource-name: stage
      x-stackql-primaryIdentifier:
        - Arn
      x-read-only-properties:
        - Arn
        - ActiveSessionId
      x-required-permissions:
        create:
          - ivs:CreateStage
          - ivs:GetStage
          - ivs:TagResource
          - ivs:ListTagsForResource
        read:
          - ivs:GetStage
          - ivs:ListTagsForResource
        update:
          - ivs:GetStage
          - ivs:UpdateStage
          - ivs:TagResource
          - ivs:UnTagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteStage
          - ivs:UnTagResource
        list:
          - ivs:ListStages
          - ivs:ListTagsForResource
    StreamKey:
      type: object
      properties:
        Arn:
          description: Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        ChannelArn:
          description: Channel ARN for the stream.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        Value:
          description: Stream-key value.
          type: string
      required:
        - ChannelArn
      x-stackql-resource-name: stream_key
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - ChannelArn
      x-read-only-properties:
        - Arn
        - Value
      x-required-permissions:
        create:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:CreateStreamKey
        read:
          - ivs:GetStreamKey
          - ivs:ListTagsForResource
        update:
          - ivs:GetStreamKey
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteStreamKey
          - ivs:UntagResource
        list:
          - ivs:ListStreamKeys
          - ivs:ListTagsForResource
  x-stackQL-resources:
    channels:
      name: channels
      id: awscc.ivs.channels
      x-cfn-schema-name: Channel
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Channel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Channel'
                AND region = 'us-east-1'
    channel:
      name: channel
      id: awscc.ivs.channel
      x-cfn-schema-name: Channel
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Authorized') as authorized,
              JSON_EXTRACT(Properties, '$.InsecureIngest') as insecure_ingest,
              JSON_EXTRACT(Properties, '$.LatencyMode') as latency_mode,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.PlaybackUrl') as playback_url,
              JSON_EXTRACT(Properties, '$.IngestEndpoint') as ingest_endpoint,
              JSON_EXTRACT(Properties, '$.RecordingConfigurationArn') as recording_configuration_arn,
              JSON_EXTRACT(Properties, '$.Preset') as preset
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Channel'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Authorized') as authorized,
                json_extract_path_text(Properties, 'InsecureIngest') as insecure_ingest,
                json_extract_path_text(Properties, 'LatencyMode') as latency_mode,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'PlaybackUrl') as playback_url,
                json_extract_path_text(Properties, 'IngestEndpoint') as ingest_endpoint,
                json_extract_path_text(Properties, 'RecordingConfigurationArn') as recording_configuration_arn,
                json_extract_path_text(Properties, 'Preset') as preset
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Channel'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    playback_key_pairs:
      name: playback_key_pairs
      id: awscc.ivs.playback_key_pairs
      x-cfn-schema-name: PlaybackKeyPair
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND region = 'us-east-1'
    playback_key_pair:
      name: playback_key_pair
      id: awscc.ivs.playback_key_pair
      x-cfn-schema-name: PlaybackKeyPair
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'PublicKeyMaterial') as public_key_material,
                json_extract_path_text(Properties, 'Fingerprint') as fingerprint,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    recording_configurations:
      name: recording_configurations
      id: awscc.ivs.recording_configurations
      x-cfn-schema-name: RecordingConfiguration
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND region = 'us-east-1'
    recording_configuration:
      name: recording_configuration
      id: awscc.ivs.recording_configuration
      x-cfn-schema-name: RecordingConfiguration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
              JSON_EXTRACT(Properties, '$.DestinationConfiguration') as destination_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ThumbnailConfiguration') as thumbnail_configuration,
              JSON_EXTRACT(Properties, '$.RenditionConfiguration') as rendition_configuration
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
                json_extract_path_text(Properties, 'DestinationConfiguration') as destination_configuration,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ThumbnailConfiguration') as thumbnail_configuration,
                json_extract_path_text(Properties, 'RenditionConfiguration') as rendition_configuration
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    stages:
      name: stages
      id: awscc.ivs.stages
      x-cfn-schema-name: Stage
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Stage'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Stage'
                AND region = 'us-east-1'
    stage:
      name: stage
      id: awscc.ivs.stage
      x-cfn-schema-name: Stage
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ActiveSessionId') as active_session_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Stage'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ActiveSessionId') as active_session_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Stage'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    stream_keys:
      name: stream_keys
      id: awscc.ivs.stream_keys
      x-cfn-schema-name: StreamKey
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StreamKey'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StreamKey'
                AND region = 'us-east-1'
    stream_key:
      name: stream_key
      id: awscc.ivs.stream_key
      x-cfn-schema-name: StreamKey
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ChannelArn') as channel_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Value') as value
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StreamKey'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ChannelArn') as channel_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Value') as value
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StreamKey'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
