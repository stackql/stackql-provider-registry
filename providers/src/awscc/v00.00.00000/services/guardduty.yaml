openapi: 3.0.0
info:
  title: GuardDuty
  version: 1.0.0
paths: {}
components:
  schemas:
    TagItem:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
    CFNS3LogsConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enable:
          type: boolean
      required:
        - Enable
    CFNKubernetesAuditLogsConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enable:
          type: boolean
      required:
        - Enable
    CFNKubernetesConfiguration:
      type: object
      additionalProperties: false
      properties:
        AuditLogs:
          $ref: '#/components/schemas/CFNKubernetesAuditLogsConfiguration'
      required:
        - AuditLogs
    CFNDataSourceConfigurations:
      type: object
      additionalProperties: false
      properties:
        S3Logs:
          $ref: '#/components/schemas/CFNS3LogsConfiguration'
        Kubernetes:
          $ref: '#/components/schemas/CFNKubernetesConfiguration'
        MalwareProtection:
          $ref: '#/components/schemas/CFNMalwareProtectionConfiguration'
    CFNMalwareProtectionConfiguration:
      type: object
      additionalProperties: false
      properties:
        ScanEc2InstanceWithFindings:
          $ref: '#/components/schemas/CFNScanEc2InstanceWithFindingsConfiguration'
    CFNScanEc2InstanceWithFindingsConfiguration:
      type: object
      additionalProperties: false
      properties:
        EbsVolumes:
          type: boolean
    CFNFeatureConfiguration:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          maxLength: 128
        Status:
          type: string
          enum:
            - ENABLED
            - DISABLED
        AdditionalConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/CFNFeatureAdditionalConfiguration'
      required:
        - Name
        - Status
    CFNFeatureAdditionalConfiguration:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          minLength: 1
          maxLength: 256
        Status:
          type: string
          minLength: 1
          maxLength: 128
    Detector:
      type: object
      properties:
        FindingPublishingFrequency:
          type: string
        Enable:
          type: boolean
        DataSources:
          $ref: '#/components/schemas/CFNDataSourceConfigurations'
        Features:
          type: array
          items:
            $ref: '#/components/schemas/CFNFeatureConfiguration'
        Id:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Enable
      x-stackql-resource-name: detector
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - guardduty:CreateDetector
          - guardduty:GetDetector
          - guardduty:TagResource
          - iam:CreateServiceLinkedRole
          - iam:GetRole
        read:
          - guardduty:GetDetector
        delete:
          - guardduty:ListDetectors
          - guardduty:DeleteDetector
          - guardduty:GetDetector
        update:
          - guardduty:UpdateDetector
          - guardduty:GetDetector
          - guardduty:ListDetectors
          - iam:CreateServiceLinkedRole
          - iam:GetRole
        list:
          - guardduty:ListDetectors
    Condition:
      type: object
      additionalProperties: false
      properties:
        Lt:
          type: integer
        Gt:
          type: integer
        Gte:
          type: integer
        Neq:
          type: array
          uniqueItems: false
          items:
            type: string
        Eq:
          type: array
          uniqueItems: false
          items:
            type: string
        Lte:
          type: integer
        Equals:
          type: array
          uniqueItems: false
          items:
            type: string
        GreaterThan:
          type: integer
          format: int64
        GreaterThanOrEqual:
          type: integer
          format: int64
        LessThan:
          type: integer
          format: int64
        LessThanOrEqual:
          type: integer
          format: int64
        NotEquals:
          type: array
          uniqueItems: false
          items:
            type: string
    FindingCriteria:
      type: object
      additionalProperties: false
      properties:
        Criterion:
          type: object
          x-patternProperties:
            ^.+$:
              $ref: '#/components/schemas/Condition'
          additionalProperties: false
    Filter:
      type: object
      properties:
        Action:
          type: string
        Description:
          type: string
        DetectorId:
          type: string
          minLength: 1
          maxLength: 300
        FindingCriteria:
          $ref: '#/components/schemas/FindingCriteria'
        Rank:
          type: integer
          minimum: 1
          maximum: 100
        Name:
          type: string
          minLength: 1
          maxLength: 64
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - FindingCriteria
      x-stackql-resource-name: filter
      x-stackql-primaryIdentifier:
        - DetectorId
        - Name
      x-create-only-properties:
        - DetectorId
        - Name
      x-required-permissions:
        create:
          - guardduty:CreateFilter
          - guardduty:GetFilter
          - guardduty:TagResource
        read:
          - guardduty:GetFilter
        delete:
          - guardduty:ListDetectors
          - guardduty:ListFilters
          - guardduty:GetFilter
          - guardduty:DeleteFilter
        update:
          - guardduty:UpdateFilter
          - guardduty:GetFilter
          - guardduty:ListFilters
        list:
          - guardduty:ListFilters
    IPSet:
      type: object
      properties:
        Id:
          type: string
        Format:
          type: string
        Activate:
          type: boolean
        DetectorId:
          type: string
          minLength: 1
          maxLength: 300
        Name:
          type: string
          minLength: 1
          maxLength: 300
        Location:
          type: string
          minLength: 1
          maxLength: 300
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Format
        - Location
      x-stackql-resource-name: ip_set
      x-stackql-primaryIdentifier:
        - Id
        - DetectorId
      x-create-only-properties:
        - Format
        - DetectorId
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - guardduty:CreateIPSet
          - guardduty:GetIPSet
          - guardduty:TagResource
          - iam:PutRolePolicy
        read:
          - guardduty:GetIPSet
        delete:
          - guardduty:GetDetector
          - guardduty:ListDetectors
          - guardduty:ListIPSets
          - guardduty:GetIPSet
          - guardduty:DeleteIPSet
          - iam:DeleteRolePolicy
        update:
          - guardduty:UpdateIPSet
          - guardduty:GetIPSet
          - guardduty:ListIPSets
          - iam:PutRolePolicy
        list:
          - guardduty:ListIPSets
    Master:
      type: object
      properties:
        MasterId:
          description: ID of the account used as the master account.
          type: string
        InvitationId:
          description: Value used to validate the master account to the member account.
          type: string
        DetectorId:
          description: Unique ID of the detector of the GuardDuty member account.
          type: string
      required:
        - MasterId
        - DetectorId
      x-stackql-resource-name: master
      x-stackql-primaryIdentifier:
        - DetectorId
        - MasterId
      x-create-only-properties:
        - MasterId
        - InvitationId
        - DetectorId
      x-required-permissions:
        create:
          - guardduty:ListInvitations
          - guardduty:AcceptInvitation
          - guardduty:GetMasterAccount
        read:
          - guardduty:GetMasterAccount
        delete:
          - guardduty:DisassociateFromMasterAccount
        list:
          - guardduty:GetMasterAccount
    Member:
      type: object
      properties:
        Status:
          type: string
        MemberId:
          type: string
        Email:
          type: string
        Message:
          type: string
        DisableEmailNotification:
          type: boolean
        DetectorId:
          type: string
      required:
        - Email
      x-stackql-resource-name: member
      x-stackql-primaryIdentifier:
        - DetectorId
        - MemberId
      x-create-only-properties:
        - DetectorId
        - MemberId
      x-required-permissions:
        create:
          - guardduty:CreateMembers
          - guardduty:GetMembers
        read:
          - guardduty:GetMembers
        delete:
          - guardduty:GetMembers
          - guardduty:DisassociateMembers
          - guardduty:DeleteMembers
        update:
          - guardduty:GetMembers
          - guardduty:CreateMembers
          - guardduty:DisassociateMembers
          - guardduty:StartMonitoringMembers
          - guardduty:StopMonitoringMembers
          - guardduty:InviteMembers
        list:
          - guardduty:ListMembers
    ThreatIntelSet:
      type: object
      properties:
        Id:
          type: string
        Format:
          type: string
          minLength: 1
          maxLength: 300
        Activate:
          type: boolean
        DetectorId:
          type: string
          minLength: 1
          maxLength: 32
        Name:
          type: string
        Location:
          type: string
          minLength: 1
          maxLength: 300
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Format
        - Location
      x-stackql-resource-name: threat_intel_set
      x-stackql-primaryIdentifier:
        - Id
        - DetectorId
      x-create-only-properties:
        - Format
        - DetectorId
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - guardduty:CreateThreatIntelSet
          - guardduty:GetThreatIntelSet
          - guardduty:TagResource
          - iam:PutRolePolicy
        read:
          - guardduty:GetThreatIntelSet
        delete:
          - guardduty:ListDetectors
          - guardduty:ListThreatIntelSets
          - guardduty:DeleteThreatIntelSet
          - guardduty:GetThreatIntelSet
          - iam:DeleteRolePolicy
        update:
          - guardduty:UpdateThreatIntelSet
          - guardduty:GetThreatIntelSet
          - guardduty:ListThreatIntelSets
          - iam:PutRolePolicy
        list:
          - guardduty:ListThreatIntelSets
  x-stackQL-resources:
    detectors:
      name: detectors
      id: awscc.guardduty.detectors
      x-cfn-schema-name: Detector
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Detector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Detector'
                AND region = 'us-east-1'
    detector:
      name: detector
      id: awscc.guardduty.detector
      x-cfn-schema-name: Detector
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FindingPublishingFrequency') as finding_publishing_frequency,
              JSON_EXTRACT(Properties, '$.Enable') as enable,
              JSON_EXTRACT(Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(Properties, '$.Features') as features,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Detector'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'FindingPublishingFrequency') as finding_publishing_frequency,
                json_extract_path_text(Properties, 'Enable') as enable,
                json_extract_path_text(Properties, 'DataSources') as data_sources,
                json_extract_path_text(Properties, 'Features') as features,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Detector'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    filters:
      name: filters
      id: awscc.guardduty.filters
      x-cfn-schema-name: Filter
      x-type: list
      x-identifiers:
        - DetectorId
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Filter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Filter'
                AND region = 'us-east-1'
    filter:
      name: filter
      id: awscc.guardduty.filter
      x-cfn-schema-name: Filter
      x-type: get
      x-identifiers:
        - DetectorId
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Action') as action,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.FindingCriteria') as finding_criteria,
              JSON_EXTRACT(Properties, '$.Rank') as rank,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Filter'
              AND data__Identifier = '<DetectorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Action') as action,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'FindingCriteria') as finding_criteria,
                json_extract_path_text(Properties, 'Rank') as rank,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Filter'
                AND data__Identifier = '<DetectorId>'
                AND region = 'us-east-1'
    ip_sets:
      name: ip_sets
      id: awscc.guardduty.ip_sets
      x-cfn-schema-name: IPSet
      x-type: list
      x-identifiers:
        - Id
        - DetectorId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
                AND region = 'us-east-1'
    ip_set:
      name: ip_set
      id: awscc.guardduty.ip_set
      x-cfn-schema-name: IPSet
      x-type: get
      x-identifiers:
        - Id
        - DetectorId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Format') as _format,
              JSON_EXTRACT(Properties, '$.Activate') as activate,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Format') as _format,
                json_extract_path_text(Properties, 'Activate') as activate,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Location') as location,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    masters:
      name: masters
      id: awscc.guardduty.masters
      x-cfn-schema-name: Master
      x-type: list
      x-identifiers:
        - DetectorId
        - MasterId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.MasterId') as master_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Master'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'MasterId') as master_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Master'
                AND region = 'us-east-1'
    master:
      name: master
      id: awscc.guardduty.master
      x-cfn-schema-name: Master
      x-type: get
      x-identifiers:
        - DetectorId
        - MasterId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MasterId') as master_id,
              JSON_EXTRACT(Properties, '$.InvitationId') as invitation_id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Master'
              AND data__Identifier = '<DetectorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'MasterId') as master_id,
                json_extract_path_text(Properties, 'InvitationId') as invitation_id,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Master'
                AND data__Identifier = '<DetectorId>'
                AND region = 'us-east-1'
    members:
      name: members
      id: awscc.guardduty.members
      x-cfn-schema-name: Member
      x-type: list
      x-identifiers:
        - DetectorId
        - MemberId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Member'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'MemberId') as member_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Member'
                AND region = 'us-east-1'
    member:
      name: member
      id: awscc.guardduty.member
      x-cfn-schema-name: Member
      x-type: get
      x-identifiers:
        - DetectorId
        - MemberId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id,
              JSON_EXTRACT(Properties, '$.Email') as email,
              JSON_EXTRACT(Properties, '$.Message') as message,
              JSON_EXTRACT(Properties, '$.DisableEmailNotification') as disable_email_notification,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Member'
              AND data__Identifier = '<DetectorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'MemberId') as member_id,
                json_extract_path_text(Properties, 'Email') as email,
                json_extract_path_text(Properties, 'Message') as message,
                json_extract_path_text(Properties, 'DisableEmailNotification') as disable_email_notification,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Member'
                AND data__Identifier = '<DetectorId>'
                AND region = 'us-east-1'
    threat_intel_sets:
      name: threat_intel_sets
      id: awscc.guardduty.threat_intel_sets
      x-cfn-schema-name: ThreatIntelSet
      x-type: list
      x-identifiers:
        - Id
        - DetectorId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND region = 'us-east-1'
    threat_intel_set:
      name: threat_intel_set
      id: awscc.guardduty.threat_intel_set
      x-cfn-schema-name: ThreatIntelSet
      x-type: get
      x-identifiers:
        - Id
        - DetectorId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Format') as _format,
              JSON_EXTRACT(Properties, '$.Activate') as activate,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Format') as _format,
                json_extract_path_text(Properties, 'Activate') as activate,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Location') as location,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
