openapi: 3.0.0
info:
  title: IdentityStore
  version: 1.0.0
paths: {}
components:
  schemas:
    Group:
      type: object
      properties:
        Description:
          description: A string containing the description of the group.
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^[\p{L}\p{M}\p{S}\p{N}\p{P}\t\n\r  ã€€]+$
        DisplayName:
          description: A string containing the name of the group. This value is commonly displayed when the group is referenced.
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^[\p{L}\p{M}\p{S}\p{N}\p{P}\t\n\r  ]+$
        GroupId:
          description: The unique identifier for a group in the identity store.
          type: string
          maxLength: 47
          minLength: 1
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
        IdentityStoreId:
          description: The globally unique identifier for the identity store.
          type: string
          maxLength: 36
          minLength: 1
          pattern: ^d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - IdentityStoreId
        - DisplayName
      x-stackql-resource-name: group
      x-stackql-primaryIdentifier:
        - GroupId
        - IdentityStoreId
      x-create-only-properties:
        - IdentityStoreId
      x-read-only-properties:
        - GroupId
      x-required-permissions:
        create:
          - identitystore:CreateGroup
          - identitystore:DescribeGroup
        read:
          - identitystore:DescribeGroup
        update:
          - identitystore:DescribeGroup
          - identitystore:UpdateGroup
        delete:
          - identitystore:DescribeGroup
          - identitystore:DeleteGroup
        list:
          - identitystore:ListGroups
    MemberId:
      description: An object containing the identifier of a group member.
      type: object
      x-title: UserId
      properties:
        UserId:
          description: The identifier for a user in the identity store.
          type: string
          maxLength: 47
          minLength: 1
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
      required:
        - UserId
      additionalProperties: false
    GroupMembership:
      type: object
      properties:
        GroupId:
          description: The unique identifier for a group in the identity store.
          type: string
          maxLength: 47
          minLength: 1
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
        IdentityStoreId:
          description: The globally unique identifier for the identity store.
          type: string
          maxLength: 36
          minLength: 1
          pattern: ^d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        MemberId:
          description: An object containing the identifier of a group member.
          $ref: '#/components/schemas/MemberId'
        MembershipId:
          description: The identifier for a GroupMembership in the identity store.
          type: string
          maxLength: 47
          minLength: 1
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
      required:
        - IdentityStoreId
        - GroupId
        - MemberId
      x-stackql-resource-name: group_membership
      x-stackql-primaryIdentifier:
        - MembershipId
        - IdentityStoreId
      x-create-only-properties:
        - IdentityStoreId
        - GroupId
        - MemberId
      x-read-only-properties:
        - MembershipId
      x-required-permissions:
        create:
          - identitystore:CreateGroupMembership
          - identitystore:DescribeGroupMembership
        read:
          - identitystore:DescribeGroupMembership
        delete:
          - identitystore:DeleteGroupMembership
          - identitystore:DescribeGroupMembership
        list:
          - identitystore:ListGroupMemberships
  x-stackQL-resources:
    groups:
      name: groups
      id: awscc.identitystore.groups
      x-cfn-schema-name: Group
      x-type: list
      x-identifiers:
        - GroupId
        - IdentityStoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id,
              JSON_EXTRACT(Properties, '$.IdentityStoreId') as identity_store_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IdentityStore::Group'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GroupId') as group_id,
                json_extract_path_text(Properties, 'IdentityStoreId') as identity_store_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IdentityStore::Group'
                AND region = 'us-east-1'
    group:
      name: group
      id: awscc.identitystore.group
      x-cfn-schema-name: Group
      x-type: get
      x-identifiers:
        - GroupId
        - IdentityStoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id,
              JSON_EXTRACT(Properties, '$.IdentityStoreId') as identity_store_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IdentityStore::Group'
              AND data__Identifier = '<GroupId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'GroupId') as group_id,
                json_extract_path_text(Properties, 'IdentityStoreId') as identity_store_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IdentityStore::Group'
                AND data__Identifier = '<GroupId>'
                AND region = 'us-east-1'
    group_memberships:
      name: group_memberships
      id: awscc.identitystore.group_memberships
      x-cfn-schema-name: GroupMembership
      x-type: list
      x-identifiers:
        - MembershipId
        - IdentityStoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MembershipId') as membership_id,
              JSON_EXTRACT(Properties, '$.IdentityStoreId') as identity_store_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IdentityStore::GroupMembership'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MembershipId') as membership_id,
                json_extract_path_text(Properties, 'IdentityStoreId') as identity_store_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IdentityStore::GroupMembership'
                AND region = 'us-east-1'
    group_membership:
      name: group_membership
      id: awscc.identitystore.group_membership
      x-cfn-schema-name: GroupMembership
      x-type: get
      x-identifiers:
        - MembershipId
        - IdentityStoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id,
              JSON_EXTRACT(Properties, '$.IdentityStoreId') as identity_store_id,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id,
              JSON_EXTRACT(Properties, '$.MembershipId') as membership_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IdentityStore::GroupMembership'
              AND data__Identifier = '<MembershipId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'GroupId') as group_id,
                json_extract_path_text(Properties, 'IdentityStoreId') as identity_store_id,
                json_extract_path_text(Properties, 'MemberId') as member_id,
                json_extract_path_text(Properties, 'MembershipId') as membership_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IdentityStore::GroupMembership'
                AND data__Identifier = '<MembershipId>'
                AND region = 'us-east-1'
