openapi: 3.0.0
info:
  title: EMRServerless
  version: 1.0.0
paths: {}
components:
  schemas:
    Architecture:
      description: The cpu architecture of an application.
      enum:
        - ARM64
        - X86_64
      type: string
    ImageConfigurationInput:
      type: object
      description: The image configuration.
      properties:
        ImageUri:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$
          description: The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
      additionalProperties: false
    ConfigurationList:
      type: array
      description: Runtime configuration for batch and interactive JobRun.
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/ConfigurationObject'
    MonitoringConfiguration:
      type: object
      description: Monitoring configuration for batch and interactive JobRun.
      additionalProperties: false
      properties:
        S3MonitoringConfiguration:
          description: S3 monitoring configurations for a JobRun.
          $ref: '#/components/schemas/S3MonitoringConfiguration'
        ManagedPersistenceMonitoringConfiguration:
          description: Managed log persistence configurations for a JobRun.
          $ref: '#/components/schemas/ManagedPersistenceMonitoringConfiguration'
        CloudWatchLoggingConfiguration:
          description: CloudWatch logging configurations for a JobRun.
          $ref: '#/components/schemas/CloudWatchLoggingConfiguration'
    S3MonitoringConfiguration:
      additionalProperties: false
      properties:
        LogUri:
          $ref: '#/components/schemas/UriString'
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in given s3
          $ref: '#/components/schemas/EncryptionKeyArn'
    ManagedPersistenceMonitoringConfiguration:
      additionalProperties: false
      properties:
        Enabled:
          description: If set to false, managed logging will be turned off. Defaults to true.
          type: boolean
          default: true
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in managed persistence
          $ref: '#/components/schemas/EncryptionKeyArn'
    CloudWatchLoggingConfiguration:
      additionalProperties: false
      properties:
        Enabled:
          description: If set to false, CloudWatch logging will be turned off. Defaults to false.
          type: boolean
          default: false
        LogGroupName:
          description: Log-group name to produce log-streams on CloudWatch. If undefined, logs will be produced in a default log-group /aws/emr-serverless
          $ref: '#/components/schemas/LogGroupName'
        LogStreamNamePrefix:
          description: Log-stream name prefix by which log-stream names will start in the CloudWatch Log-group.
          $ref: '#/components/schemas/LogStreamNamePrefix'
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in given CloudWatch log-group.
          $ref: '#/components/schemas/EncryptionKeyArn'
        LogTypeMap:
          description: The specific log-streams which need to be uploaded to CloudWatch.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LogTypeMapKeyValuePair'
    LogTypeMapKeyValuePair:
      type: object
      additionalProperties: false
      properties:
        Key:
          $ref: '#/components/schemas/WorkerTypeString'
        Value:
          $ref: '#/components/schemas/LogTypeList'
      required:
        - Key
        - Value
    LogTypeList:
      description: 'List of Applicable values: [STDOUT, STDERR, HIVE_LOG, TEZ_AM, SYSTEM_LOGS]'
      type: array
      x-insertionOrder: false
      uniqueItems: true
      minItems: 1
      maxItems: 5
      items:
        $ref: '#/components/schemas/LogTypeString'
    InitialCapacityConfigMap:
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/InitialCapacityConfigKeyValuePair'
    InitialCapacityConfigKeyValuePair:
      type: object
      additionalProperties: false
      properties:
        Key:
          description: Worker type for an analytics framework.
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
        Value:
          $ref: '#/components/schemas/InitialCapacityConfig'
      required:
        - Key
        - Value
    InitialCapacityConfig:
      type: object
      additionalProperties: false
      properties:
        WorkerCount:
          description: Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
          type: integer
          format: int64
          minimum: 1
          maximum: 1000000
        WorkerConfiguration:
          $ref: '#/components/schemas/WorkerConfiguration'
      required:
        - WorkerCount
        - WorkerConfiguration
    WorkerConfiguration:
      type: object
      additionalProperties: false
      properties:
        Cpu:
          description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
          $ref: '#/components/schemas/CpuSize'
        Memory:
          description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
          $ref: '#/components/schemas/MemorySize'
        Disk:
          description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
          $ref: '#/components/schemas/DiskSize'
      required:
        - Cpu
        - Memory
    MaximumAllowedResources:
      type: object
      additionalProperties: false
      properties:
        Cpu:
          description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
          $ref: '#/components/schemas/CpuSize'
        Memory:
          description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
          $ref: '#/components/schemas/MemorySize'
        Disk:
          description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
          $ref: '#/components/schemas/DiskSize'
      required:
        - Cpu
        - Memory
    AutoStartConfiguration:
      description: Configuration for Auto Start of Application
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: If set to true, the Application will automatically start. Defaults to true.
          type: boolean
          default: true
      required: []
    AutoStopConfiguration:
      description: Configuration for Auto Stop of Application
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: If set to true, the Application will automatically stop after being idle. Defaults to true.
          type: boolean
          default: true
        IdleTimeoutMinutes:
          type: integer
          description: The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
      required: []
    NetworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        SubnetIds:
          description: The ID of the subnets in the VPC to which you want to connect your job or application.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 16
          items:
            $ref: '#/components/schemas/SubnetId'
        SecurityGroupIds:
          description: The ID of the security groups in the VPC to which you want to connect your job or application.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/SecurityGroupId'
      required: []
    SubnetId:
      description: Identifier of a subnet
      type: string
      minLength: 1
      maxLength: 32
      pattern: ^[-0-9a-zA-Z]+
    SecurityGroupId:
      description: Identifier of a security group
      type: string
      minLength: 1
      maxLength: 32
      pattern: ^[-0-9a-zA-Z]+
    UriString:
      type: string
      maxLength: 10280
      minLength: 1
      pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\r\n\t]*'
    EncryptionKeyArn:
      type: string
      maxLength: 2048
      minLength: 20
      pattern: ^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:(\d{12})?:key\/[a-zA-Z0-9-]+$
    Classification:
      type: string
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
    LogGroupName:
      type: string
      maxLength: 512
      minLength: 1
      pattern: ^[\.\-_/#A-Za-z0-9]+$
    LogStreamNamePrefix:
      type: string
      maxLength: 512
      minLength: 1
      pattern: ^[^:*]*$
    LogTypeString:
      type: string
      maxLength: 50
      minLength: 1
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
    WorkerTypeString:
      type: string
      maxLength: 50
      minLength: 1
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 128 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
          pattern: ^[A-Za-z0-9 /_.:=+@-]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
          pattern: ^[A-Za-z0-9 /_.:=+@-]*$
      required:
        - Key
        - Value
    ConfigurationObject:
      type: object
      description: Configuration for a JobRun.
      additionalProperties: false
      properties:
        Classification:
          description: String with a maximum length of 1024.
          $ref: '#/components/schemas/Classification'
        Properties:
          type: object
          additionalProperties: false
          x-patternProperties:
            ^[a-zA-Z]+[-a-zA-Z0-9_.]*$:
              $ref: '#/components/schemas/SensitivePropertiesMap'
        Configurations:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConfigurationObject'
      required:
        - Classification
    SensitivePropertiesMap:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: .*\S.*
    SensitivePropertiesKeyValuePair:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: .*\S.*
    CpuSize:
      description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(vCPU|vcpu|VCPU)?$
    MemorySize:
      description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)?$
    DiskSize:
      description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)$
    WorkerTypeSpecificationInput:
      type: object
      description: The specifications for a worker type.
      properties:
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfigurationInput'
      additionalProperties: false
    WorkerTypeSpecificationInputMap:
      type: object
      x-patternProperties:
        ^[a-zA-Z]+[-_]*[a-zA-Z]+$:
          $ref: '#/components/schemas/WorkerTypeSpecificationInput'
      additionalProperties: false
    Application:
      type: object
      properties:
        Architecture:
          $ref: '#/components/schemas/Architecture'
        Name:
          description: User friendly Application name.
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9._\/#-]+$
        ReleaseLabel:
          description: EMR release label.
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9._/-]+$
        Type:
          description: The type of the application
          type: string
        InitialCapacity:
          description: Initial capacity initialized when an Application is started.
          $ref: '#/components/schemas/InitialCapacityConfigMap'
        MaximumCapacity:
          description: Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
          $ref: '#/components/schemas/MaximumAllowedResources'
        Tags:
          description: Tag map with key and value
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AutoStartConfiguration:
          description: Configuration for Auto Start of Application.
          $ref: '#/components/schemas/AutoStartConfiguration'
        AutoStopConfiguration:
          description: Configuration for Auto Stop of Application.
          $ref: '#/components/schemas/AutoStopConfiguration'
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfigurationInput'
        MonitoringConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration'
        RuntimeConfiguration:
          $ref: '#/components/schemas/ConfigurationList'
        NetworkConfiguration:
          description: Network Configuration for customer VPC connectivity.
          $ref: '#/components/schemas/NetworkConfiguration'
        Arn:
          description: The Amazon Resource Name (ARN) of the EMR Serverless Application.
          type: string
        ApplicationId:
          description: The ID of the EMR Serverless Application.
          type: string
          minLength: 1
          maxLength: 64
        WorkerTypeSpecifications:
          description: The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
          $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
      required:
        - ReleaseLabel
        - Type
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - ApplicationId
      x-create-only-properties:
        - Name
        - Type
      x-read-only-properties:
        - Arn
        - ApplicationId
      x-required-permissions:
        create:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          - kms:GenerateDataKey
          - kms:TagResource
          - kms:UntagResource
          - kms:Decrypt
          - emr-serverless:CreateApplication
          - emr-serverless:TagResource
          - emr-serverless:GetApplication
          - iam:CreateServiceLinkedRole
          - ec2:CreateNetworkInterface
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:GetDownloadUrlForLayer
        read:
          - emr-serverless:GetApplication
        update:
          - emr-serverless:UpdateApplication
          - emr-serverless:TagResource
          - emr-serverless:UntagResource
          - emr-serverless:GetApplication
          - ec2:CreateNetworkInterface
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:GetDownloadUrlForLayer
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          - kms:GenerateDataKey
          - kms:TagResource
          - kms:UntagResource
          - kms:Decrypt
        delete:
          - emr-serverless:DeleteApplication
          - emr-serverless:GetApplication
        list:
          - emr-serverless:ListApplications
  x-stackQL-resources:
    applications:
      name: applications
      id: awscc.emrserverless.applications
      x-cfn-schema-name: Application
      x-type: list
      x-identifiers:
        - ApplicationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::EMRServerless::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::EMRServerless::Application'
                AND region = 'us-east-1'
    application:
      name: application
      id: awscc.emrserverless.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - ApplicationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ReleaseLabel') as release_label,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.InitialCapacity') as initial_capacity,
              JSON_EXTRACT(Properties, '$.MaximumCapacity') as maximum_capacity,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AutoStartConfiguration') as auto_start_configuration,
              JSON_EXTRACT(Properties, '$.AutoStopConfiguration') as auto_stop_configuration,
              JSON_EXTRACT(Properties, '$.ImageConfiguration') as image_configuration,
              JSON_EXTRACT(Properties, '$.MonitoringConfiguration') as monitoring_configuration,
              JSON_EXTRACT(Properties, '$.RuntimeConfiguration') as runtime_configuration,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration') as network_configuration,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.WorkerTypeSpecifications') as worker_type_specifications
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::EMRServerless::Application'
              AND data__Identifier = '<ApplicationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Architecture') as architecture,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ReleaseLabel') as release_label,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'InitialCapacity') as initial_capacity,
                json_extract_path_text(Properties, 'MaximumCapacity') as maximum_capacity,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AutoStartConfiguration') as auto_start_configuration,
                json_extract_path_text(Properties, 'AutoStopConfiguration') as auto_stop_configuration,
                json_extract_path_text(Properties, 'ImageConfiguration') as image_configuration,
                json_extract_path_text(Properties, 'MonitoringConfiguration') as monitoring_configuration,
                json_extract_path_text(Properties, 'RuntimeConfiguration') as runtime_configuration,
                json_extract_path_text(Properties, 'NetworkConfiguration') as network_configuration,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'WorkerTypeSpecifications') as worker_type_specifications
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::EMRServerless::Application'
                AND data__Identifier = '<ApplicationId>'
                AND region = 'us-east-1'
