openapi: 3.0.0
info:
  title: ResourceGroups
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceQuery:
      type: object
      properties:
        Type:
          type: string
          enum:
            - TAG_FILTERS_1_0
            - CLOUDFORMATION_STACK_1_0
        Query:
          $ref: '#/components/schemas/Query'
      additionalProperties: false
    Query:
      type: object
      properties:
        ResourceTypeFilters:
          type: array
          items:
            type: string
        StackIdentifier:
          type: string
        TagFilters:
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
      additionalProperties: false
    TagFilter:
      type: object
      properties:
        Key:
          type: string
        Values:
          type: array
          items:
            type: string
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:).+
        Value:
          type: string
      additionalProperties: false
    Configuration:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationItem'
    ConfigurationItem:
      type: object
      properties:
        Type:
          type: string
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter'
      additionalProperties: false
    ConfigurationParameter:
      type: object
      properties:
        Name:
          type: string
        Values:
          type: array
          items:
            type: string
      additionalProperties: false
    Group:
      type: object
      properties:
        Name:
          description: The name of the resource group
          type: string
          maxLength: 128
        Description:
          description: The description of the resource group
          type: string
          maxLength: 512
        ResourceQuery:
          $ref: '#/components/schemas/ResourceQuery'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The Resource Group ARN.
          type: string
        Configuration:
          $ref: '#/components/schemas/Configuration'
        Resources:
          type: array
          items:
            type: string
      required:
        - Name
      x-stackql-resource-name: group
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - resource-groups:CreateGroup
          - resource-groups:Tag
          - cloudformation:DescribeStacks
          - cloudformation:ListStackResources
          - resource-groups:ListGroupResources
          - resource-groups:GroupResources
        read:
          - resource-groups:GetGroup
          - resource-groups:GetGroupQuery
          - resource-groups:GetTags
          - resource-groups:GetGroupConfiguration
          - resource-groups:ListGroupResources
        update:
          - resource-groups:UpdateGroup
          - resource-groups:GetTags
          - resource-groups:GetGroupQuery
          - resource-groups:UpdateGroupQuery
          - resource-groups:Tag
          - resource-groups:Untag
          - resource-groups:PutGroupConfiguration
          - resource-groups:GetGroupConfiguration
          - resource-groups:ListGroupResources
          - resource-groups:GroupResources
          - resource-groups:UnGroupResources
        delete:
          - resource-groups:DeleteGroup
          - resource-groups:UnGroupResources
        list:
          - resource-groups:ListGroups
  x-stackQL-resources:
    groups:
      name: groups
      id: awscc.resourcegroups.groups
      x-cfn-schema-name: Group
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ResourceGroups::Group'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ResourceGroups::Group'
                AND region = 'us-east-1'
    group:
      name: group
      id: awscc.resourcegroups.group
      x-cfn-schema-name: Group
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ResourceQuery') as resource_query,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.Resources') as resources
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ResourceGroups::Group'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ResourceQuery') as resource_query,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Configuration') as configuration,
                json_extract_path_text(Properties, 'Resources') as resources
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ResourceGroups::Group'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
