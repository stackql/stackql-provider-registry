openapi: 3.0.0
info:
  title: CodeStarConnections
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, , ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, , ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Connection:
      type: object
      properties:
        ConnectionArn:
          description: The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
          type: string
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+
        ConnectionName:
          description: The name of the connection. Connection names must be unique in an AWS user account.
          type: string
          minLength: 1
          maxLength: 32
        ConnectionStatus:
          description: The current status of the connection.
          type: string
        OwnerAccountId:
          description: The name of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.
          type: string
          minLength: 12
          maxLength: 12
          pattern: '[0-9]{12}'
        ProviderType:
          description: The name of the external provider where your third-party code repository is configured. You must specify either a ProviderType or a HostArn.
          type: string
        HostArn:
          description: The host arn configured to represent the infrastructure where your third-party provider is installed. You must specify either a ProviderType or a HostArn.
          type: string
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+
        Tags:
          description: Specifies the tags applied to a connection.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      required:
        - ConnectionName
      x-stackql-resource-name: connection
      x-stackql-primaryIdentifier:
        - ConnectionArn
      x-create-only-properties:
        - ConnectionName
        - ProviderType
        - HostArn
      x-read-only-properties:
        - ConnectionArn
        - ConnectionStatus
        - OwnerAccountId
      x-required-permissions:
        create:
          - codestar-connections:CreateConnection
          - codestar-connections:TagResource
        read:
          - codestar-connections:GetConnection
          - codestar-connections:ListTagsForResource
        update:
          - codestar-connections:ListTagsForResource
          - codestar-connections:TagResource
          - codestar-connections:UntagResource
        delete:
          - codestar-connections:DeleteConnection
        list:
          - codestar-connections:ListConnections
          - codestar-connections:ListTagsForResource
    RepositoryLink:
      type: object
      properties:
        ConnectionArn:
          description: The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):.+:.+:[0-9]{12}:.+
        ProviderType:
          description: The name of the external provider where your third-party code repository is configured.
          type: string
          pattern: ^(GitHub|Bitbucket|GitHubEnterprise|GitLab)$
        OwnerId:
          description: the ID of the entity that owns the repository.
          type: string
          pattern: '[a-za-z0-9_\.-]+'
        RepositoryName:
          description: The repository for which the link is being created.
          type: string
          pattern: '[a-za-z0-9_\.-]+'
        EncryptionKeyArn:
          description: The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):.+:.+:[0-9]{12}:.+
        RepositoryLinkId:
          description: A UUID that uniquely identifies the RepositoryLink.
          type: string
          pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
        RepositoryLinkArn:
          description: A unique Amazon Resource Name (ARN) to designate the repository link.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):.+:.+:[0-9]{12}:.+
        Tags:
          description: Specifies the tags applied to a RepositoryLink.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RepositoryName
        - ConnectionArn
        - OwnerId
      x-stackql-resource-name: repository_link
      x-stackql-primaryIdentifier:
        - RepositoryLinkArn
      x-create-only-properties:
        - RepositoryName
        - OwnerId
      x-read-only-properties:
        - RepositoryLinkArn
        - RepositoryLinkId
        - ProviderType
      x-required-permissions:
        update:
          - codestar-connections:GetConnection
          - codestar-connections:ListTagsForResource
          - codestar-connections:PassConnection
          - codestar-connections:UseConnection
          - codestar-connections:TagResource
          - codestar-connections:UntagResource
          - codestar-connections:UpdateRepositoryLink
        create:
          - codestar-connections:CreateRepositoryLink
          - codestar-connections:TagResource
          - codestar-connections:UseConnection
          - codestar-connections:PassConnection
          - codestar-connections:GetConnection
          - iam:CreateServiceLinkedRole
        read:
          - codestar-connections:GetRepositoryLink
          - codestar-connections:ListTagsForResource
          - codestar-connections:GetConnection
        delete:
          - codestar-connections:GetRepositoryLink
          - codestar-connections:DeleteRepositoryLink
          - codestar-connections:GetConnection
        list:
          - codestar-connections:ListRepositoryLinks
          - codestar-connections:ListTagsForResource
    SyncConfiguration:
      type: object
      properties:
        OwnerId:
          description: the ID of the entity that owns the repository.
          type: string
          pattern: '[a-za-z0-9_\.-]+'
        ResourceName:
          description: The name of the resource that is being synchronized to the repository.
          type: string
          pattern: '[a-za-z0-9_\.-]+'
        RepositoryName:
          description: The name of the repository that is being synced to.
          type: string
          pattern: '[a-za-z0-9_\.-]+'
        ProviderType:
          description: The name of the external provider where your third-party code repository is configured.
          type: string
          pattern: ^(GitHub|Bitbucket|GitHubEnterprise|GitLab)$
        Branch:
          description: The name of the branch of the repository from which resources are to be synchronized,
          type: string
        ConfigFile:
          description: The source provider repository path of the sync configuration file of the respective SyncType.
          type: string
        SyncType:
          description: The type of resource synchronization service that is to be configured, for example, CFN_STACK_SYNC.
          type: string
        RoleArn:
          description: The IAM Role that allows AWS to update CloudFormation stacks based on content in the specified repository.
          type: string
        RepositoryLinkId:
          description: A UUID that uniquely identifies the RepositoryLink that the SyncConfig is associated with.
          type: string
          pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
      required:
        - Branch
        - ConfigFile
        - RepositoryLinkId
        - ResourceName
        - SyncType
        - RoleArn
      x-stackql-resource-name: sync_configuration
      x-stackql-primaryIdentifier:
        - ResourceName
        - SyncType
      x-create-only-properties:
        - SyncType
        - ResourceName
      x-read-only-properties:
        - ProviderType
        - OwnerId
        - RepositoryName
      x-required-permissions:
        create:
          - codestar-connections:CreateSyncConfiguration
          - codestar-connections:PassRepository
          - iam:PassRole
        read:
          - codestar-connections:GetSyncConfiguration
        update:
          - codestar-connections:UpdateSyncConfiguration
          - codestar-connections:PassRepository
          - iam:PassRole
        delete:
          - codestar-connections:DeleteSyncConfiguration
          - codestar-connections:GetSyncConfiguration
        list:
          - codestar-connections:ListSyncConfigurations
          - codestar-connections:ListRepositoryLinks
  x-stackQL-resources:
    connections:
      name: connections
      id: awscc.codestarconnections.connections
      x-cfn-schema-name: Connection
      x-type: list
      x-identifiers:
        - ConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::Connection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectionArn') as connection_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::Connection'
                AND region = 'us-east-1'
    connection:
      name: connection
      id: awscc.codestarconnections.connection
      x-cfn-schema-name: Connection
      x-type: get
      x-identifiers:
        - ConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,
              JSON_EXTRACT(Properties, '$.ConnectionName') as connection_name,
              JSON_EXTRACT(Properties, '$.ConnectionStatus') as connection_status,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.HostArn') as host_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::Connection'
              AND data__Identifier = '<ConnectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectionArn') as connection_arn,
                json_extract_path_text(Properties, 'ConnectionName') as connection_name,
                json_extract_path_text(Properties, 'ConnectionStatus') as connection_status,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'ProviderType') as provider_type,
                json_extract_path_text(Properties, 'HostArn') as host_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::Connection'
                AND data__Identifier = '<ConnectionArn>'
                AND region = 'us-east-1'
    repository_links:
      name: repository_links
      id: awscc.codestarconnections.repository_links
      x-cfn-schema-name: RepositoryLink
      x-type: list
      x-identifiers:
        - RepositoryLinkArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RepositoryLinkArn') as repository_link_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::RepositoryLink'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RepositoryLinkArn') as repository_link_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::RepositoryLink'
                AND region = 'us-east-1'
    repository_link:
      name: repository_link
      id: awscc.codestarconnections.repository_link
      x-cfn-schema-name: RepositoryLink
      x-type: get
      x-identifiers:
        - RepositoryLinkArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.RepositoryName') as repository_name,
              JSON_EXTRACT(Properties, '$.EncryptionKeyArn') as encryption_key_arn,
              JSON_EXTRACT(Properties, '$.RepositoryLinkId') as repository_link_id,
              JSON_EXTRACT(Properties, '$.RepositoryLinkArn') as repository_link_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::RepositoryLink'
              AND data__Identifier = '<RepositoryLinkArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectionArn') as connection_arn,
                json_extract_path_text(Properties, 'ProviderType') as provider_type,
                json_extract_path_text(Properties, 'OwnerId') as owner_id,
                json_extract_path_text(Properties, 'RepositoryName') as repository_name,
                json_extract_path_text(Properties, 'EncryptionKeyArn') as encryption_key_arn,
                json_extract_path_text(Properties, 'RepositoryLinkId') as repository_link_id,
                json_extract_path_text(Properties, 'RepositoryLinkArn') as repository_link_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::RepositoryLink'
                AND data__Identifier = '<RepositoryLinkArn>'
                AND region = 'us-east-1'
    sync_configurations:
      name: sync_configurations
      id: awscc.codestarconnections.sync_configurations
      x-cfn-schema-name: SyncConfiguration
      x-type: list
      x-identifiers:
        - ResourceName
        - SyncType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceName') as resource_name,
              JSON_EXTRACT(Properties, '$.SyncType') as sync_type
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::SyncConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceName') as resource_name,
                json_extract_path_text(Properties, 'SyncType') as sync_type
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::CodeStarConnections::SyncConfiguration'
                AND region = 'us-east-1'
    sync_configuration:
      name: sync_configuration
      id: awscc.codestarconnections.sync_configuration
      x-cfn-schema-name: SyncConfiguration
      x-type: get
      x-identifiers:
        - ResourceName
        - SyncType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.ResourceName') as resource_name,
              JSON_EXTRACT(Properties, '$.RepositoryName') as repository_name,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.Branch') as branch,
              JSON_EXTRACT(Properties, '$.ConfigFile') as config_file,
              JSON_EXTRACT(Properties, '$.SyncType') as sync_type,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.RepositoryLinkId') as repository_link_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::SyncConfiguration'
              AND data__Identifier = '<ResourceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'OwnerId') as owner_id,
                json_extract_path_text(Properties, 'ResourceName') as resource_name,
                json_extract_path_text(Properties, 'RepositoryName') as repository_name,
                json_extract_path_text(Properties, 'ProviderType') as provider_type,
                json_extract_path_text(Properties, 'Branch') as branch,
                json_extract_path_text(Properties, 'ConfigFile') as config_file,
                json_extract_path_text(Properties, 'SyncType') as sync_type,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'RepositoryLinkId') as repository_link_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::CodeStarConnections::SyncConfiguration'
                AND data__Identifier = '<ResourceName>'
                AND region = 'us-east-1'
