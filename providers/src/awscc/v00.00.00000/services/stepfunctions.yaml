openapi: 3.0.0
info:
  title: StepFunctions
  version: 1.0.0
paths: {}
components:
  schemas:
    TagsEntry:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Activity:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 80
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - Name
      x-stackql-resource-name: activity
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - states:CreateActivity
        read:
          - states:DescribeActivity
          - states:ListTagsForResource
        update:
          - states:ListTagsForResource
          - states:TagResource
          - states:UntagResource
        delete:
          - states:DeleteActivity
    CloudWatchLogsLogGroup:
      type: object
      additionalProperties: false
      properties:
        LogGroupArn:
          type: string
          minLength: 1
          maxLength: 256
    LogDestination:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogsLogGroup:
          $ref: '#/components/schemas/CloudWatchLogsLogGroup'
    LoggingConfiguration:
      type: object
      additionalProperties: false
      properties:
        Level:
          type: string
          enum:
            - ALL
            - ERROR
            - FATAL
            - 'OFF'
        IncludeExecutionData:
          type: boolean
        Destinations:
          type: array
          minItems: 1
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LogDestination'
    TracingConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    S3Location:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          type: string
        Key:
          type: string
        Version:
          type: string
      required:
        - Bucket
        - Key
    DefinitionSubstitutions:
      type: object
      additionalProperties: false
      x-patternProperties:
        .*:
          anyOf:
            - type: string
            - type: integer
            - type: boolean
      minProperties: 1
    Definition:
      type: object
      minProperties: 1
    StateMachine:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 80
        DefinitionString:
          type: string
          minLength: 1
          maxLength: 1048576
        RoleArn:
          type: string
          minLength: 1
          maxLength: 256
        StateMachineName:
          type: string
          minLength: 1
          maxLength: 80
        StateMachineType:
          type: string
          enum:
            - STANDARD
            - EXPRESS
        StateMachineRevisionId:
          type: string
          minLength: 1
          maxLength: 256
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        TracingConfiguration:
          $ref: '#/components/schemas/TracingConfiguration'
        DefinitionS3Location:
          $ref: '#/components/schemas/S3Location'
        DefinitionSubstitutions:
          $ref: '#/components/schemas/DefinitionSubstitutions'
        Definition:
          $ref: '#/components/schemas/Definition'
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - RoleArn
      x-stackql-resource-name: state_machine
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - StateMachineName
        - StateMachineType
      x-read-only-properties:
        - Arn
        - Name
        - StateMachineRevisionId
      x-required-permissions:
        create:
          - states:CreateStateMachine
          - states:DescribeStateMachine
          - states:TagResource
          - iam:PassRole
          - s3:GetObject
        read:
          - states:DescribeStateMachine
          - states:ListTagsForResource
        update:
          - states:UpdateStateMachine
          - states:TagResource
          - states:UntagResource
          - states:ListTagsForResource
          - iam:PassRole
        delete:
          - states:DeleteStateMachine
          - states:DescribeStateMachine
        list:
          - states:ListStateMachines
    RoutingConfigurationVersion:
      type: object
      properties:
        StateMachineVersionArn:
          type: string
          description: The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.
          minLength: 1
          maxLength: 2048
        Weight:
          type: integer
          description: The percentage of traffic you want to route to the state machine version. The sum of the weights in the routing configuration must be equal to 100.
          minimum: 0
          maximum: 100
      required:
        - StateMachineVersionArn
        - Weight
      additionalProperties: false
    RoutingConfiguration:
      type: array
      description: The routing configuration of the alias. One or two versions can be mapped to an alias to split StartExecution requests of the same state machine.
      minItems: 1
      maxItems: 2
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/RoutingConfigurationVersion'
    DeploymentPreference:
      type: object
      description: The settings to enable gradual state machine deployments.
      properties:
        StateMachineVersionArn:
          type: string
          minLength: 1
          maxLength: 2048
        Type:
          type: string
          description: The type of deployment to perform.
          enum:
            - LINEAR
            - ALL_AT_ONCE
            - CANARY
        Percentage:
          type: integer
          description: The percentage of traffic to shift to the new version in each increment.
          minimum: 1
          maximum: 99
        Interval:
          type: integer
          description: The time in minutes between each traffic shifting increment.
          minimum: 1
          maximum: 2100
        Alarms:
          type: array
          description: A list of CloudWatch alarm names that will be monitored during the deployment. The deployment will fail and rollback if any alarms go into ALARM state.
          minItems: 1
          maxItems: 100
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            minLength: 1
            maxLength: 256
      required:
        - StateMachineVersionArn
        - Type
      additionalProperties: false
    StateMachineAlias:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
          description: The ARN of the alias.
        Name:
          type: string
          description: The alias name.
          minLength: 1
          maxLength: 80
        Description:
          type: string
          description: An optional description of the alias.
          minLength: 1
          maxLength: 256
        RoutingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
        DeploymentPreference:
          $ref: '#/components/schemas/DeploymentPreference'
      x-stackql-resource-name: state_machine_alias
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - states:CreateStateMachineAlias
          - states:DescribeStateMachineAlias
        read:
          - states:DescribeStateMachineAlias
        update:
          - cloudwatch:DescribeAlarms
          - states:UpdateStateMachineAlias
          - states:DescribeStateMachineAlias
        delete:
          - states:DescribeStateMachineAlias
          - states:DeleteStateMachineAlias
        list:
          - states:ListStateMachineAliases
    StateMachineVersion:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
        StateMachineArn:
          type: string
          minLength: 1
          maxLength: 2048
        StateMachineRevisionId:
          type: string
          minLength: 1
          maxLength: 2048
        Description:
          type: string
          minLength: 1
          maxLength: 2048
      required:
        - StateMachineArn
      x-stackql-resource-name: state_machine_version
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - StateMachineArn
        - StateMachineRevisionId
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - states:PublishStateMachineVersion
          - states:ListStateMachineVersions
          - states:DescribeStateMachine
        read:
          - states:DescribeStateMachine
        delete:
          - states:DeleteStateMachineVersion
          - states:DescribeStateMachine
        list:
          - states:ListStateMachineVersions
  x-stackQL-resources:
    activity:
      name: activity
      id: awscc.stepfunctions.activity
      x-cfn-schema-name: Activity
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::Activity'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::Activity'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    state_machines:
      name: state_machines
      id: awscc.stepfunctions.state_machines
      x-cfn-schema-name: StateMachine
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
                AND region = 'us-east-1'
    state_machine:
      name: state_machine
      id: awscc.stepfunctions.state_machine
      x-cfn-schema-name: StateMachine
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DefinitionString') as definition_string,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StateMachineName') as state_machine_name,
              JSON_EXTRACT(Properties, '$.StateMachineType') as state_machine_type,
              JSON_EXTRACT(Properties, '$.StateMachineRevisionId') as state_machine_revision_id,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration') as logging_configuration,
              JSON_EXTRACT(Properties, '$.TracingConfiguration') as tracing_configuration,
              JSON_EXTRACT(Properties, '$.DefinitionS3Location') as definition_s3_location,
              JSON_EXTRACT(Properties, '$.DefinitionSubstitutions') as definition_substitutions,
              JSON_EXTRACT(Properties, '$.Definition') as definition,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'DefinitionString') as definition_string,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'StateMachineName') as state_machine_name,
                json_extract_path_text(Properties, 'StateMachineType') as state_machine_type,
                json_extract_path_text(Properties, 'StateMachineRevisionId') as state_machine_revision_id,
                json_extract_path_text(Properties, 'LoggingConfiguration') as logging_configuration,
                json_extract_path_text(Properties, 'TracingConfiguration') as tracing_configuration,
                json_extract_path_text(Properties, 'DefinitionS3Location') as definition_s3_location,
                json_extract_path_text(Properties, 'DefinitionSubstitutions') as definition_substitutions,
                json_extract_path_text(Properties, 'Definition') as definition,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    state_machine_aliases:
      name: state_machine_aliases
      id: awscc.stepfunctions.state_machine_aliases
      x-cfn-schema-name: StateMachineAlias
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachineAlias'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachineAlias'
                AND region = 'us-east-1'
    state_machine_alias:
      name: state_machine_alias
      id: awscc.stepfunctions.state_machine_alias
      x-cfn-schema-name: StateMachineAlias
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RoutingConfiguration') as routing_configuration,
              JSON_EXTRACT(Properties, '$.DeploymentPreference') as deployment_preference
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachineAlias'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'RoutingConfiguration') as routing_configuration,
                json_extract_path_text(Properties, 'DeploymentPreference') as deployment_preference
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachineAlias'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    state_machine_versions:
      name: state_machine_versions
      id: awscc.stepfunctions.state_machine_versions
      x-cfn-schema-name: StateMachineVersion
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachineVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachineVersion'
                AND region = 'us-east-1'
    state_machine_version:
      name: state_machine_version
      id: awscc.stepfunctions.state_machine_version
      x-cfn-schema-name: StateMachineVersion
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.StateMachineArn') as state_machine_arn,
              JSON_EXTRACT(Properties, '$.StateMachineRevisionId') as state_machine_revision_id,
              JSON_EXTRACT(Properties, '$.Description') as description
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachineVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'StateMachineArn') as state_machine_arn,
                json_extract_path_text(Properties, 'StateMachineRevisionId') as state_machine_revision_id,
                json_extract_path_text(Properties, 'Description') as description
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachineVersion'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
