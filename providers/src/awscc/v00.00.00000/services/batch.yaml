openapi: 3.0.0
info:
  title: Batch
  version: 1.0.0
paths: {}
components:
  schemas:
    ComputeResources:
      type: object
      additionalProperties: false
      properties:
        AllocationStrategy:
          type: string
        BidPercentage:
          type: integer
        DesiredvCpus:
          type: integer
        Ec2Configuration:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Ec2ConfigurationObject'
        Ec2KeyPair:
          type: string
        ImageId:
          type: string
        InstanceRole:
          type: string
        InstanceTypes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        LaunchTemplate:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        MaxvCpus:
          type: integer
        MinvCpus:
          type: integer
        PlacementGroup:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        SpotIamFleetRole:
          type: string
        Subnets:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
        Type:
          type: string
        UpdateToLatestImageVersion:
          type: boolean
          default: false
      required:
        - Subnets
        - Type
        - MaxvCpus
    Ec2ConfigurationObject:
      type: object
      additionalProperties: false
      properties:
        ImageIdOverride:
          type: string
        ImageType:
          type: string
        ImageKubernetesVersion:
          type: string
      required:
        - ImageType
    LaunchTemplateSpecification:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateId:
          type: string
        LaunchTemplateName:
          type: string
        Version:
          type: string
    UpdatePolicy:
      type: object
      additionalProperties: false
      properties:
        TerminateJobsOnUpdate:
          type: boolean
          default: false
        JobExecutionTimeoutMinutes:
          type: integer
          default: 30
    EksConfiguration:
      type: object
      additionalProperties: false
      properties:
        EksClusterArn:
          type: string
          default: false
        KubernetesNamespace:
          type: string
          default: false
      required:
        - EksClusterArn
        - KubernetesNamespace
    ComputeEnvironment:
      type: object
      properties:
        ComputeEnvironmentArn:
          type: string
        ComputeEnvironmentName:
          type: string
        ComputeResources:
          $ref: '#/components/schemas/ComputeResources'
        ReplaceComputeEnvironment:
          type: boolean
          default: true
        ServiceRole:
          type: string
        State:
          type: string
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
        Type:
          type: string
        UpdatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
        UnmanagedvCpus:
          type: integer
        EksConfiguration:
          $ref: '#/components/schemas/EksConfiguration'
      required:
        - Type
      x-stackql-resource-name: compute_environment
      x-stackql-primaryIdentifier:
        - ComputeEnvironmentArn
      x-create-only-properties:
        - ComputeResources/SpotIamFleetRole
        - ComputeEnvironmentName
        - Tags
        - Type
        - EksConfiguration
      x-read-only-properties:
        - ComputeEnvironmentArn
      x-required-permissions:
        create:
          - Batch:CreateComputeEnvironment
          - Batch:TagResource
          - Batch:DescribeComputeEnvironments
          - iam:CreateServiceLinkedRole
          - Iam:PassRole
          - Eks:DescribeCluster
        read:
          - Batch:DescribeComputeEnvironments
        update:
          - Batch:UpdateComputeEnvironment
          - Batch:DescribeComputeEnvironments
          - Batch:TagResource
          - Batch:UnTagResource
          - Iam:PassRole
          - Eks:DescribeCluster
        delete:
          - Batch:DeleteComputeEnvironment
          - Batch:DescribeComputeEnvironments
          - Batch:UpdateComputeEnvironment
          - Iam:PassRole
          - Eks:DescribeCluster
        list:
          - Batch:DescribeComputeEnvironments
    ResourceArn:
      description: ARN of the Scheduling Policy.
      type: string
    ComputeEnvironmentOrder:
      type: object
      additionalProperties: false
      properties:
        ComputeEnvironment:
          type: string
        Order:
          type: integer
      required:
        - ComputeEnvironment
        - Order
    JobQueue:
      type: object
      properties:
        JobQueueName:
          type: string
          minLength: 1
          maxLength: 128
        JobQueueArn:
          $ref: '#/components/schemas/ResourceArn'
        ComputeEnvironmentOrder:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ComputeEnvironmentOrder'
        Priority:
          type: integer
          minimum: 0
          maximum: 1000
        State:
          type: string
          enum:
            - DISABLED
            - ENABLED
        SchedulingPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
      required:
        - ComputeEnvironmentOrder
        - Priority
      x-stackql-resource-name: job_queue
      x-stackql-primaryIdentifier:
        - JobQueueArn
      x-create-only-properties:
        - Tags
        - JobQueueName
      x-read-only-properties:
        - JobQueueArn
      x-required-permissions:
        create:
          - Batch:CreateJobQueue
          - Batch:TagResource
          - Batch:DescribeJobQueues
        read:
          - Batch:DescribeJobQueues
        update:
          - Batch:DescribeJobQueues
          - Batch:UpdateJobQueue
          - Batch:TagResource
          - Batch:UnTagResource
        delete:
          - Batch:UpdateJobQueue
          - Batch:DescribeJobQueues
          - Batch:DeleteJobQueue
        list:
          - Batch:DescribeJobQueues
    FairsharePolicy:
      description: Fair Share Policy for the Job Queue.
      type: object
      properties:
        ShareDecaySeconds:
          type: number
          minimum: 0
          maximum: 604800
        ComputeReservation:
          type: number
          minimum: 0
          maximum: 99
        ShareDistribution:
          description: List of Share Attributes
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ShareAttributes'
      required: []
      additionalProperties: false
    ShareAttributes:
      type: object
      properties:
        ShareIdentifier:
          type: string
        WeightFactor:
          type: number
          minimum: 0
          maximum: 1000
      required: []
      additionalProperties: false
    SchedulingPolicy:
      type: object
      properties:
        Name:
          description: Name of Scheduling Policy.
          type: string
          pattern: ''
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        FairsharePolicy:
          $ref: '#/components/schemas/FairsharePolicy'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
      x-stackql-resource-name: scheduling_policy
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
        - Tags
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - Batch:CreateSchedulingPolicy
          - Batch:TagResource
        read:
          - Batch:DescribeSchedulingPolicies
        update:
          - Batch:UpdateSchedulingPolicy
          - Batch:TagResource
          - Batch:UnTagResource
        delete:
          - Batch:DescribeSchedulingPolicies
          - Batch:DeleteSchedulingPolicy
        list:
          - Batch:ListSchedulingPolicies
          - Batch:DescribeSchedulingPolicies
  x-stackQL-resources:
    compute_environments:
      name: compute_environments
      id: awscc.batch.compute_environments
      x-cfn-schema-name: ComputeEnvironment
      x-type: list
      x-identifiers:
        - ComputeEnvironmentArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentArn') as compute_environment_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ComputeEnvironmentArn') as compute_environment_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
                AND region = 'us-east-1'
    compute_environment:
      name: compute_environment
      id: awscc.batch.compute_environment
      x-cfn-schema-name: ComputeEnvironment
      x-type: get
      x-identifiers:
        - ComputeEnvironmentArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentArn') as compute_environment_arn,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentName') as compute_environment_name,
              JSON_EXTRACT(Properties, '$.ComputeResources') as compute_resources,
              JSON_EXTRACT(Properties, '$.ReplaceComputeEnvironment') as replace_compute_environment,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatePolicy') as update_policy,
              JSON_EXTRACT(Properties, '$.UnmanagedvCpus') as unmanagedv_cpus,
              JSON_EXTRACT(Properties, '$.EksConfiguration') as eks_configuration
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
              AND data__Identifier = '<ComputeEnvironmentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ComputeEnvironmentArn') as compute_environment_arn,
                json_extract_path_text(Properties, 'ComputeEnvironmentName') as compute_environment_name,
                json_extract_path_text(Properties, 'ComputeResources') as compute_resources,
                json_extract_path_text(Properties, 'ReplaceComputeEnvironment') as replace_compute_environment,
                json_extract_path_text(Properties, 'ServiceRole') as service_role,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'UpdatePolicy') as update_policy,
                json_extract_path_text(Properties, 'UnmanagedvCpus') as unmanagedv_cpus,
                json_extract_path_text(Properties, 'EksConfiguration') as eks_configuration
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
                AND data__Identifier = '<ComputeEnvironmentArn>'
                AND region = 'us-east-1'
    job_queues:
      name: job_queues
      id: awscc.batch.job_queues
      x-cfn-schema-name: JobQueue
      x-type: list
      x-identifiers:
        - JobQueueArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobQueueArn') as job_queue_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::JobQueue'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobQueueArn') as job_queue_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::JobQueue'
                AND region = 'us-east-1'
    job_queue:
      name: job_queue
      id: awscc.batch.job_queue
      x-cfn-schema-name: JobQueue
      x-type: get
      x-identifiers:
        - JobQueueArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobQueueName') as job_queue_name,
              JSON_EXTRACT(Properties, '$.JobQueueArn') as job_queue_arn,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentOrder') as compute_environment_order,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.SchedulingPolicyArn') as scheduling_policy_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::JobQueue'
              AND data__Identifier = '<JobQueueArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobQueueName') as job_queue_name,
                json_extract_path_text(Properties, 'JobQueueArn') as job_queue_arn,
                json_extract_path_text(Properties, 'ComputeEnvironmentOrder') as compute_environment_order,
                json_extract_path_text(Properties, 'Priority') as priority,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'SchedulingPolicyArn') as scheduling_policy_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::JobQueue'
                AND data__Identifier = '<JobQueueArn>'
                AND region = 'us-east-1'
    scheduling_policies:
      name: scheduling_policies
      id: awscc.batch.scheduling_policies
      x-cfn-schema-name: SchedulingPolicy
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
                AND region = 'us-east-1'
    scheduling_policy:
      name: scheduling_policy
      id: awscc.batch.scheduling_policy
      x-cfn-schema-name: SchedulingPolicy
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.FairsharePolicy') as fairshare_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'FairsharePolicy') as fairshare_policy,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
