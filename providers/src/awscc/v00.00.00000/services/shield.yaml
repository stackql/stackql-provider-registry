openapi: 3.0.0
info:
  title: Shield
  version: 1.0.0
paths: {}
components:
  schemas:
    DRTAccess:
      type: object
      properties:
        AccountId:
          type: string
        LogBucketList:
          description: Authorizes the Shield Response Team (SRT) to access the specified Amazon S3 bucket containing log data such as Application Load Balancer access logs, CloudFront logs, or logs from third party sources. You can associate up to 10 Amazon S3 buckets with your subscription.
          type: array
          x-insertionOrder: false
          minItems: 0
          maxItems: 10
          items:
            type: string
            minLength: 3
            maxLength: 63
        RoleArn:
          description: Authorizes the Shield Response Team (SRT) using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks. This enables the SRT to inspect your AWS WAF configuration and create or update AWS WAF rules and web ACLs.
          type: string
          maxLength: 2048
      required:
        - RoleArn
      x-stackql-resource-name: drt_access
      x-stackql-primaryIdentifier:
        - AccountId
      x-read-only-properties:
        - AccountId
      x-required-permissions:
        create:
          - shield:DescribeDRTAccess
          - shield:AssociateDRTLogBucket
          - shield:AssociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
        delete:
          - shield:DescribeDRTAccess
          - shield:DisassociateDRTLogBucket
          - shield:DisassociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:DeleteBucketPolicy
        read:
          - shield:DescribeDRTAccess
        update:
          - shield:DescribeDRTAccess
          - shield:AssociateDRTLogBucket
          - shield:AssociateDRTRole
          - shield:DisassociateDRTLogBucket
          - shield:DisassociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:DeleteBucketPolicy
        list: []
    EmergencyContact:
      description: An emergency contact is used by Shield Response Team (SRT) to contact you for escalations to the SRT and to initiate proactive customer support. An emergency contact requires an email address.
      type: object
      additionalProperties: false
      required:
        - EmailAddress
      properties:
        ContactNotes:
          description: Additional notes regarding the contact.
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^[\w\s\.\-,:/()+@]*$
        EmailAddress:
          description: The email address for the contact.
          type: string
          minLength: 1
          maxLength: 150
          pattern: ^\S+@\S+\.\S+$
        PhoneNumber:
          description: The phone number for the contact
          type: string
          minLength: 1
          maxLength: 16
          pattern: ^\+[1-9]\d{1,14}$
    ProactiveEngagement:
      type: object
      properties:
        AccountId:
          type: string
        ProactiveEngagementStatus:
          description: |-
            If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
            If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
          type: string
          enum:
            - ENABLED
            - DISABLED
        EmergencyContactList:
          description: |-
            A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
            To enable proactive engagement, the contact list must include at least one phone number.
          type: array
          x-insertionOrder: false
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/EmergencyContact'
      required:
        - ProactiveEngagementStatus
        - EmergencyContactList
      x-stackql-resource-name: proactive_engagement
      x-stackql-primaryIdentifier:
        - AccountId
      x-read-only-properties:
        - AccountId
      x-required-permissions:
        create:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:AssociateProactiveEngagementDetails
          - shield:UpdateEmergencyContactSettings
          - shield:EnableProactiveEngagement
        delete:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:UpdateEmergencyContactSettings
          - shield:DisableProactiveEngagement
        read:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
        update:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:UpdateEmergencyContactSettings
          - shield:EnableProactiveEngagement
          - shield:DisableProactiveEngagement
        list:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
    Tag:
      description: >-
        A tag associated with an AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing or other management. Typically, the tag key represents a category, such as "environment", and the tag value represents a specific value within that category, such as "test," "development," or "production". Or you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS
        resource, up to 50 tags for a resource.
      type: object
      additionalProperties: false
      required:
        - Key
        - Value
      properties:
        Key:
          description: Part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as "customer." Tag keys are case-sensitive.
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: Part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as "companyA" or "companyB." Tag values are case-sensitive.
          type: string
          minLength: 0
          maxLength: 256
    ApplicationLayerAutomaticResponseConfiguration:
      description: The automatic application layer DDoS mitigation settings for a Protection. This configuration determines whether Shield Advanced automatically manages rules in the web ACL in order to respond to application layer events that Shield Advanced determines to be DDoS attacks.
      type: object
      additionalProperties: false
      required:
        - Action
        - Status
      properties:
        Action:
          type: object
          description: Specifies the action setting that Shield Advanced should use in the AWS WAF rules that it creates on behalf of the protected resource in response to DDoS attacks. You specify this as part of the configuration for the automatic application layer DDoS mitigation feature, when you enable or update automatic mitigation. Shield Advanced creates the AWS WAF rules in a Shield Advanced-managed rule group, inside the web ACL that you have associated with the resource.
          oneOf:
            - type: object
              additionalProperties: false
              properties:
                Count:
                  description: |-
                    Specifies that Shield Advanced should configure its AWS WAF rules with the AWS WAF `Count` action.
                    You must specify exactly one action, either `Block` or `Count`.
                  type: object
                  additionalProperties: false
            - type: object
              additionalProperties: false
              properties:
                Block:
                  description: |-
                    Specifies that Shield Advanced should configure its AWS WAF rules with the AWS WAF `Block` action.
                    You must specify exactly one action, either `Block` or `Count`.
                  type: object
                  additionalProperties: false
        Status:
          description: Indicates whether automatic application layer DDoS mitigation is enabled for the protection.
          type: string
          enum:
            - ENABLED
            - DISABLED
    Protection:
      type: object
      properties:
        ProtectionId:
          description: The unique identifier (ID) of the protection.
          type: string
        ProtectionArn:
          description: The ARN (Amazon Resource Name) of the protection.
          type: string
        Name:
          description: Friendly name for the Protection.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[ a-zA-Z0-9_\.\-]*'
        ResourceArn:
          description: The ARN (Amazon Resource Name) of the resource to be protected.
          type: string
          minLength: 1
          maxLength: 2048
        HealthCheckArns:
          description: The Amazon Resource Names (ARNs) of the health check to associate with the protection.
          type: array
          x-insertionOrder: false
          maxItems: 1
          items:
            type: string
            minLength: 1
            maxLength: 2048
        ApplicationLayerAutomaticResponseConfiguration:
          $ref: '#/components/schemas/ApplicationLayerAutomaticResponseConfiguration'
        Tags:
          description: One or more tag key-value pairs for the Protection object.
          type: array
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ResourceArn
      x-stackql-resource-name: protection
      x-stackql-primaryIdentifier:
        - ProtectionArn
      x-create-only-properties:
        - Name
        - ResourceArn
      x-read-only-properties:
        - ProtectionId
        - ProtectionArn
      x-required-permissions:
        create:
          - shield:CreateProtection
          - shield:DeleteProtection
          - shield:DescribeProtection
          - shield:ListProtections
          - shield:EnableApplicationLayerAutomaticResponse
          - shield:AssociateHealthCheck
          - shield:TagResource
          - ec2:DescribeAddresses
          - elasticloadbalancing:DescribeLoadBalancers
          - route53:GetHealthCheck
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
        delete:
          - shield:DeleteProtection
          - shield:UntagResource
        read:
          - shield:DescribeProtection
          - shield:ListTagsForResource
        update:
          - shield:DescribeProtection
          - shield:AssociateHealthCheck
          - shield:DisassociateHealthCheck
          - shield:EnableApplicationLayerAutomaticResponse
          - shield:UpdateApplicationLayerAutomaticResponse
          - shield:DisableApplicationLayerAutomaticResponse
          - shield:ListTagsForResource
          - shield:TagResource
          - shield:UntagResource
          - route53:GetHealthCheck
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
        list:
          - shield:ListProtections
    ProtectionGroup:
      type: object
      properties:
        ProtectionGroupId:
          description: The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
          type: string
          pattern: '[a-zA-Z0-9\-]*'
          minLength: 1
          maxLength: 36
        ProtectionGroupArn:
          description: The ARN (Amazon Resource Name) of the protection group.
          type: string
        Aggregation:
          description: |-
            Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
            * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
            * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
            * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
          type: string
          enum:
            - SUM
            - MEAN
            - MAX
        Pattern:
          description: The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
          type: string
          enum:
            - ALL
            - ARBITRARY
            - BY_RESOURCE_TYPE
        Members:
          description: The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
          type: array
          x-insertionOrder: false
          maxItems: 10000
          items:
            type: string
            minLength: 1
            maxLength: 2048
        ResourceType:
          description: The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
          type: string
          enum:
            - CLOUDFRONT_DISTRIBUTION
            - ROUTE_53_HOSTED_ZONE
            - ELASTIC_IP_ALLOCATION
            - CLASSIC_LOAD_BALANCER
            - APPLICATION_LOAD_BALANCER
            - GLOBAL_ACCELERATOR
        Tags:
          description: One or more tag key-value pairs for the Protection object.
          type: array
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Aggregation
        - Pattern
        - ProtectionGroupId
      x-stackql-resource-name: protection_group
      x-stackql-primaryIdentifier:
        - ProtectionGroupArn
      x-create-only-properties:
        - ProtectionGroupId
      x-read-only-properties:
        - ProtectionGroupArn
      x-required-permissions:
        create:
          - shield:CreateProtectionGroup
          - shield:TagResource
        delete:
          - shield:DeleteProtectionGroup
          - shield:UntagResource
        read:
          - shield:DescribeProtectionGroup
          - shield:ListTagsForResource
        update:
          - shield:UpdateProtectionGroup
          - shield:ListTagsForResource
          - shield:TagResource
          - shield:UntagResource
        list:
          - shield:ListProtectionGroups
  x-stackQL-resources:
    drt_accesses:
      name: drt_accesses
      id: awscc.shield.drt_accesses
      x-cfn-schema-name: DRTAccess
      x-type: list
      x-identifiers:
        - AccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::DRTAccess'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::DRTAccess'
                AND region = 'us-east-1'
    drt_access:
      name: drt_access
      id: awscc.shield.drt_access
      x-cfn-schema-name: DRTAccess
      x-type: get
      x-identifiers:
        - AccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.LogBucketList') as log_bucket_list,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::DRTAccess'
              AND data__Identifier = '<AccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id,
                json_extract_path_text(Properties, 'LogBucketList') as log_bucket_list,
                json_extract_path_text(Properties, 'RoleArn') as role_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::DRTAccess'
                AND data__Identifier = '<AccountId>'
                AND region = 'us-east-1'
    proactive_engagements:
      name: proactive_engagements
      id: awscc.shield.proactive_engagements
      x-cfn-schema-name: ProactiveEngagement
      x-type: list
      x-identifiers:
        - AccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
                AND region = 'us-east-1'
    proactive_engagement:
      name: proactive_engagement
      id: awscc.shield.proactive_engagement
      x-cfn-schema-name: ProactiveEngagement
      x-type: get
      x-identifiers:
        - AccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.ProactiveEngagementStatus') as proactive_engagement_status,
              JSON_EXTRACT(Properties, '$.EmergencyContactList') as emergency_contact_list
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
              AND data__Identifier = '<AccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id,
                json_extract_path_text(Properties, 'ProactiveEngagementStatus') as proactive_engagement_status,
                json_extract_path_text(Properties, 'EmergencyContactList') as emergency_contact_list
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
                AND data__Identifier = '<AccountId>'
                AND region = 'us-east-1'
    protections:
      name: protections
      id: awscc.shield.protections
      x-cfn-schema-name: Protection
      x-type: list
      x-identifiers:
        - ProtectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionArn') as protection_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::Protection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionArn') as protection_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::Protection'
                AND region = 'us-east-1'
    protection:
      name: protection
      id: awscc.shield.protection
      x-cfn-schema-name: Protection
      x-type: get
      x-identifiers:
        - ProtectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionId') as protection_id,
              JSON_EXTRACT(Properties, '$.ProtectionArn') as protection_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.HealthCheckArns') as health_check_arns,
              JSON_EXTRACT(Properties, '$.ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::Protection'
              AND data__Identifier = '<ProtectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionId') as protection_id,
                json_extract_path_text(Properties, 'ProtectionArn') as protection_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'HealthCheckArns') as health_check_arns,
                json_extract_path_text(Properties, 'ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::Protection'
                AND data__Identifier = '<ProtectionArn>'
                AND region = 'us-east-1'
    protection_groups:
      name: protection_groups
      id: awscc.shield.protection_groups
      x-cfn-schema-name: ProtectionGroup
      x-type: list
      x-identifiers:
        - ProtectionGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionGroupArn') as protection_group_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionGroupArn') as protection_group_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND region = 'us-east-1'
    protection_group:
      name: protection_group
      id: awscc.shield.protection_group
      x-cfn-schema-name: ProtectionGroup
      x-type: get
      x-identifiers:
        - ProtectionGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionGroupId') as protection_group_id,
              JSON_EXTRACT(Properties, '$.ProtectionGroupArn') as protection_group_arn,
              JSON_EXTRACT(Properties, '$.Aggregation') as aggregation,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.Members') as members,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND data__Identifier = '<ProtectionGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionGroupId') as protection_group_id,
                json_extract_path_text(Properties, 'ProtectionGroupArn') as protection_group_arn,
                json_extract_path_text(Properties, 'Aggregation') as aggregation,
                json_extract_path_text(Properties, 'Pattern') as pattern,
                json_extract_path_text(Properties, 'Members') as members,
                json_extract_path_text(Properties, 'ResourceType') as resource_type,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND data__Identifier = '<ProtectionGroupArn>'
                AND region = 'us-east-1'
