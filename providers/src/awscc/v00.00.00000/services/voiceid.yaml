openapi: 3.0.0
info:
  title: VoiceID
  version: 1.0.0
paths: {}
components:
  schemas:
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          type: string
          maxLength: 2048
          minLength: 1
      required:
        - KmsKeyId
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
        Value:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      required:
        - Key
        - Value
      additionalProperties: false
    Domain:
      type: object
      properties:
        Description:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
        DomainId:
          type: string
          maxLength: 22
          minLength: 22
          pattern: ^[a-zA-Z0-9]{22}$
        Name:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
      required:
        - Name
        - ServerSideEncryptionConfiguration
      x-stackql-resource-name: domain
      x-stackql-primaryIdentifier:
        - DomainId
      x-read-only-properties:
        - DomainId
      x-required-permissions:
        create:
          - voiceid:CreateDomain
          - voiceid:DescribeDomain
          - voiceid:TagResource
          - voiceid:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:Decrypt
        read:
          - voiceid:DescribeDomain
          - voiceid:ListTagsForResource
          - kms:Decrypt
        update:
          - voiceid:DescribeDomain
          - voiceid:UpdateDomain
          - voiceid:TagResource
          - voiceid:UntagResource
          - voiceid:ListTagsForResource
          - kms:CreateGrant
          - kms:Decrypt
          - kms:DescribeKey
        delete:
          - voiceid:DeleteDomain
          - voiceid:DescribeDomain
          - kms:Decrypt
        list:
          - voiceid:ListDomains
          - kms:Decrypt
  x-stackQL-resources:
    domains:
      name: domains
      id: awscc.voiceid.domains
      x-cfn-schema-name: Domain
      x-type: list
      x-identifiers:
        - DomainId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::VoiceID::Domain'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::VoiceID::Domain'
                AND region = 'us-east-1'
    domain:
      name: domain
      id: awscc.voiceid.domain
      x-cfn-schema-name: Domain
      x-type: get
      x-identifiers:
        - DomainId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::VoiceID::Domain'
              AND data__Identifier = '<DomainId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::VoiceID::Domain'
                AND data__Identifier = '<DomainId>'
                AND region = 'us-east-1'
