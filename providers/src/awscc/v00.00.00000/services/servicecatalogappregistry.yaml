openapi: 3.0.0
info:
  title: ServiceCatalogAppRegistry
  version: 1.0.0
paths: {}
components:
  schemas:
    Tags:
      type: object
      x-patternProperties:
        ^[a-zA-Z+-=._:/]+$:
          type: string
          maxLength: 256
      maxProperties: 50
      additionalProperties: false
    Application:
      type: object
      properties:
        Id:
          type: string
          pattern: '[a-z0-9]{26}'
        Arn:
          type: string
          pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
        Name:
          type: string
          description: 'The name of the application. '
          minLength: 1
          maxLength: 256
          pattern: \w+
        Description:
          type: string
          description: 'The description of the application. '
          maxLength: 1024
        Tags:
          $ref: '#/components/schemas/Tags'
        ApplicationTagKey:
          type: string
          description: The key of the AWS application tag, which is awsApplication. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
          maxLength: 128
          pattern: \w+
        ApplicationTagValue:
          type: string
          description: 'The value of the AWS application tag, which is the identifier of an associated resource. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value. '
          maxLength: 256
          pattern: \[a-zA-Z0-9_-:/]+
        ApplicationName:
          type: string
          description: 'The name of the application. '
          minLength: 1
          maxLength: 256
          pattern: \w+
      required:
        - Name
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
        - ApplicationName
        - ApplicationTagKey
        - ApplicationTagValue
      x-required-permissions:
        create:
          - servicecatalog:CreateApplication
          - servicecatalog:TagResource
          - iam:CreateServiceLinkedRole
        read:
          - servicecatalog:GetApplication
        update:
          - servicecatalog:GetApplication
          - servicecatalog:ListTagsForResource
          - servicecatalog:TagResource
          - servicecatalog:UntagResource
          - servicecatalog:UpdateApplication
          - iam:CreateServiceLinkedRole
        delete:
          - servicecatalog:DeleteApplication
        list:
          - servicecatalog:ListApplications
    AttributeGroup:
      type: object
      properties:
        Id:
          type: string
          pattern: '[a-z0-9]{12}'
        Arn:
          type: string
          pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/attribute-groups/[a-z0-9]+
        Name:
          type: string
          description: 'The name of the attribute group. '
          minLength: 1
          maxLength: 256
          pattern: \w+
        Description:
          type: string
          description: 'The description of the attribute group. '
          maxLength: 1024
        Attributes:
          type: object
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - Name
        - Attributes
      x-stackql-resource-name: attribute_group
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - servicecatalog:CreateAttributeGroup
          - servicecatalog:TagResource
        read:
          - servicecatalog:GetAttributeGroup
        update:
          - servicecatalog:GetAttributeGroup
          - servicecatalog:UpdateAttributeGroup
          - servicecatalog:ListTagsForResource
          - servicecatalog:TagResource
          - servicecatalog:UntagResource
        delete:
          - servicecatalog:DeleteAttributeGroup
        list:
          - servicecatalog:ListAttributeGroups
    AttributeGroupAssociation:
      type: object
      properties:
        Application:
          type: string
          description: The name or the Id of the Application.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
        AttributeGroup:
          type: string
          description: The name or the Id of the AttributeGroup.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
        ApplicationArn:
          type: string
          pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
        AttributeGroupArn:
          type: string
          pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/attribute-groups/[a-z0-9]+
      required:
        - Application
        - AttributeGroup
      x-stackql-resource-name: attribute_group_association
      x-stackql-primaryIdentifier:
        - ApplicationArn
        - AttributeGroupArn
      x-create-only-properties:
        - Application
        - AttributeGroup
      x-read-only-properties:
        - ApplicationArn
        - AttributeGroupArn
      x-required-permissions:
        create:
          - servicecatalog:AssociateAttributeGroup
        read:
          - servicecatalog:ListAttributeGroupsForApplication
        delete:
          - servicecatalog:DisassociateAttributeGroup
        list:
          - servicecatalog:ListAttributeGroupsForApplication
    ResourceAssociation:
      type: object
      properties:
        Application:
          type: string
          description: The name or the Id of the Application.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
        Resource:
          type: string
          description: The name or the Id of the Resource.
          pattern: \w+|arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}
        ResourceType:
          type: string
          description: The type of the CFN Resource for now it's enum CFN_STACK.
          enum:
            - CFN_STACK
        ApplicationArn:
          type: string
          pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
        ResourceArn:
          type: string
          pattern: arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}
      required:
        - Application
        - Resource
        - ResourceType
      x-stackql-resource-name: resource_association
      x-stackql-primaryIdentifier:
        - ApplicationArn
        - ResourceArn
        - ResourceType
      x-create-only-properties:
        - Application
        - Resource
        - ResourceType
      x-read-only-properties:
        - ApplicationArn
        - ResourceArn
      x-required-permissions:
        create:
          - servicecatalog:AssociateResource
          - cloudformation:DescribeStacks
        read:
          - servicecatalog:ListAssociatedResources
        delete:
          - servicecatalog:DisassociateResource
        list:
          - servicecatalog:ListAssociatedResources
  x-stackQL-resources:
    applications:
      name: applications
      id: awscc.servicecatalogappregistry.applications
      x-cfn-schema-name: Application
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::Application'
                AND region = 'us-east-1'
    application:
      name: application
      id: awscc.servicecatalogappregistry.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ApplicationTagKey') as application_tag_key,
              JSON_EXTRACT(Properties, '$.ApplicationTagValue') as application_tag_value,
              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::Application'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ApplicationTagKey') as application_tag_key,
                json_extract_path_text(Properties, 'ApplicationTagValue') as application_tag_value,
                json_extract_path_text(Properties, 'ApplicationName') as application_name
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::Application'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    attribute_groups:
      name: attribute_groups
      id: awscc.servicecatalogappregistry.attribute_groups
      x-cfn-schema-name: AttributeGroup
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroup'
                AND region = 'us-east-1'
    attribute_group:
      name: attribute_group
      id: awscc.servicecatalogappregistry.attribute_group
      x-cfn-schema-name: AttributeGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroup'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Attributes') as attributes,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroup'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    attribute_group_associations:
      name: attribute_group_associations
      id: awscc.servicecatalogappregistry.attribute_group_associations
      x-cfn-schema-name: AttributeGroupAssociation
      x-type: list
      x-identifiers:
        - ApplicationArn
        - AttributeGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.AttributeGroupArn') as attribute_group_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'AttributeGroupArn') as attribute_group_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation'
                AND region = 'us-east-1'
    attribute_group_association:
      name: attribute_group_association
      id: awscc.servicecatalogappregistry.attribute_group_association
      x-cfn-schema-name: AttributeGroupAssociation
      x-type: get
      x-identifiers:
        - ApplicationArn
        - AttributeGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Application') as application,
              JSON_EXTRACT(Properties, '$.AttributeGroup') as attribute_group,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.AttributeGroupArn') as attribute_group_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation'
              AND data__Identifier = '<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Application') as application,
                json_extract_path_text(Properties, 'AttributeGroup') as attribute_group,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'AttributeGroupArn') as attribute_group_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation'
                AND data__Identifier = '<ApplicationArn>'
                AND region = 'us-east-1'
    resource_associations:
      name: resource_associations
      id: awscc.servicecatalogappregistry.resource_associations
      x-cfn-schema-name: ResourceAssociation
      x-type: list
      x-identifiers:
        - ApplicationArn
        - ResourceArn
        - ResourceType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::ResourceAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'ResourceType') as resource_type
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::ResourceAssociation'
                AND region = 'us-east-1'
    resource_association:
      name: resource_association
      id: awscc.servicecatalogappregistry.resource_association
      x-cfn-schema-name: ResourceAssociation
      x-type: get
      x-identifiers:
        - ApplicationArn
        - ResourceArn
        - ResourceType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Application') as application,
              JSON_EXTRACT(Properties, '$.Resource') as resource,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::ResourceAssociation'
              AND data__Identifier = '<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Application') as application,
                json_extract_path_text(Properties, 'Resource') as resource,
                json_extract_path_text(Properties, 'ResourceType') as resource_type,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceCatalogAppRegistry::ResourceAssociation'
                AND data__Identifier = '<ApplicationArn>'
                AND region = 'us-east-1'
