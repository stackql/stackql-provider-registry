openapi: 3.0.0
info:
  title: HealthImaging
  version: 1.0.0
paths: {}
components:
  schemas:
    DatastoreArn:
      type: string
      maxLength: 127
      minLength: 1
      pattern: ^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?$
      description: The Datastore's ARN.
    DatastoreName:
      type: string
      maxLength: 256
      minLength: 1
      pattern: ^[A-Za-z0-9._/#-]+$
      description: User friendly name for Datastore.
    DatastoreId:
      type: string
      maxLength: 32
      minLength: 0
      pattern: ^[0-9a-z]{32}$
    DatastoreStatus:
      type: string
      maxLength: 127
      minLength: 1
      description: A string to denote the Datastore's state.
      enum:
        - CREATING
        - CREATE_FAILED
        - ACTIVE
        - DELETING
        - DELETED
    KmsKeyArn:
      type: string
      maxLength: 512
      minLength: 1
      description: ARN referencing a KMS key or KMS key alias.
    CreatedAt:
      type: string
      description: The timestamp when the data store was created.
    UpdatedAt:
      type: string
      description: The timestamp when the data store was created.
    Tags:
      type: object
      description: A Map of key value pairs for Tags.
      x-patternProperties:
        ^.+$:
          type: string
          description: The string value for the tag.
          maxLength: 256
          minLength: 0
      additionalProperties: false
    Datastore:
      type: object
      properties:
        DatastoreArn:
          $ref: '#/components/schemas/DatastoreArn'
        DatastoreName:
          $ref: '#/components/schemas/DatastoreName'
        DatastoreId:
          $ref: '#/components/schemas/DatastoreId'
        DatastoreStatus:
          $ref: '#/components/schemas/DatastoreStatus'
        KmsKeyArn:
          $ref: '#/components/schemas/KmsKeyArn'
        CreatedAt:
          $ref: '#/components/schemas/CreatedAt'
        UpdatedAt:
          $ref: '#/components/schemas/UpdatedAt'
        Tags:
          $ref: '#/components/schemas/Tags'
      required: []
      x-stackql-resource-name: datastore
      x-stackql-primaryIdentifier:
        - DatastoreId
      x-create-only-properties:
        - DatastoreName
        - Tags
        - KmsKeyArn
      x-read-only-properties:
        - DatastoreArn
        - CreatedAt
        - UpdatedAt
        - DatastoreId
        - DatastoreStatus
      x-required-permissions:
        create:
          - medical-imaging:CreateDatastore
          - medical-imaging:GetDatastore
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:RetireGrant
          - kms:GenerateDataKey
          - kms:Decrypt
          - lambda:InvokeFunction
          - medical-imaging:TagResource
          - medical-imaging:UntagResource
          - medical-imaging:ListTagsForResource
        read:
          - medical-imaging:GetDatastore
          - medical-imaging:ListTagsForResource
        delete:
          - medical-imaging:DeleteDatastore
          - medical-imaging:GetDatastore
          - medical-imaging:UntagResource
          - kms:DescribeKey
          - kms:RetireGrant
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - medical-imaging:ListDatastores
  x-stackQL-resources:
    datastores:
      name: datastores
      id: awscc.healthimaging.datastores
      x-cfn-schema-name: Datastore
      x-type: list
      x-identifiers:
        - DatastoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DatastoreId') as datastore_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::HealthImaging::Datastore'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DatastoreId') as datastore_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::HealthImaging::Datastore'
                AND region = 'us-east-1'
    datastore:
      name: datastore
      id: awscc.healthimaging.datastore
      x-cfn-schema-name: Datastore
      x-type: get
      x-identifiers:
        - DatastoreId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DatastoreArn') as datastore_arn,
              JSON_EXTRACT(Properties, '$.DatastoreName') as datastore_name,
              JSON_EXTRACT(Properties, '$.DatastoreId') as datastore_id,
              JSON_EXTRACT(Properties, '$.DatastoreStatus') as datastore_status,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::HealthImaging::Datastore'
              AND data__Identifier = '<DatastoreId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DatastoreArn') as datastore_arn,
                json_extract_path_text(Properties, 'DatastoreName') as datastore_name,
                json_extract_path_text(Properties, 'DatastoreId') as datastore_id,
                json_extract_path_text(Properties, 'DatastoreStatus') as datastore_status,
                json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::HealthImaging::Datastore'
                AND data__Identifier = '<DatastoreId>'
                AND region = 'us-east-1'
