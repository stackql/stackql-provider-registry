openapi: 3.0.0
info:
  title: Pipes
  version: 1.0.0
paths: {}
components:
  schemas:
    AssignPublicIp:
      type: string
      enum:
        - ENABLED
        - DISABLED
    AwsVpcConfiguration:
      type: object
      properties:
        Subnets:
          type: array
          items:
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^subnet-[0-9a-z]*|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
          maxItems: 16
          minItems: 0
        SecurityGroups:
          type: array
          items:
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^sg-[0-9a-zA-Z]*|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
          maxItems: 5
          minItems: 0
        AssignPublicIp:
          $ref: '#/components/schemas/AssignPublicIp'
      required:
        - Subnets
      additionalProperties: false
    BatchArrayProperties:
      type: object
      properties:
        Size:
          type: integer
          default: 0
          maximum: 10000
          minimum: 2
      additionalProperties: false
    BatchContainerOverrides:
      type: object
      properties:
        Command:
          type: array
          items:
            type: string
        Environment:
          type: array
          items:
            $ref: '#/components/schemas/BatchEnvironmentVariable'
        InstanceType:
          type: string
        ResourceRequirements:
          type: array
          items:
            $ref: '#/components/schemas/BatchResourceRequirement'
      additionalProperties: false
    BatchEnvironmentVariable:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
    BatchJobDependency:
      type: object
      properties:
        JobId:
          type: string
        Type:
          $ref: '#/components/schemas/BatchJobDependencyType'
      additionalProperties: false
    BatchJobDependencyType:
      type: string
      enum:
        - N_TO_N
        - SEQUENTIAL
    BatchParametersMap:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    BatchResourceRequirement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/BatchResourceRequirementType'
        Value:
          type: string
      required:
        - Type
        - Value
      additionalProperties: false
    BatchResourceRequirementType:
      type: string
      enum:
        - GPU
        - MEMORY
        - VCPU
    BatchRetryStrategy:
      type: object
      properties:
        Attempts:
          type: integer
          default: 0
          maximum: 10
          minimum: 1
      additionalProperties: false
    CapacityProviderStrategyItem:
      type: object
      properties:
        CapacityProvider:
          type: string
          maxLength: 255
          minLength: 1
        Weight:
          type: integer
          default: 0
          maximum: 1000
          minimum: 0
        Base:
          type: integer
          default: 0
          maximum: 100000
          minimum: 0
      required:
        - CapacityProvider
      additionalProperties: false
    CloudwatchLogsLogDestination:
      type: object
      properties:
        LogGroupArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^(^arn:aws([a-z]|\-)*:logs:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):log-group:.+)$
      additionalProperties: false
    DeadLetterConfig:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)$
      additionalProperties: false
    DynamoDBStreamStartPosition:
      type: string
      enum:
        - TRIM_HORIZON
        - LATEST
    EcsContainerOverride:
      type: object
      properties:
        Command:
          type: array
          items:
            type: string
        Cpu:
          type: integer
        Environment:
          type: array
          items:
            $ref: '#/components/schemas/EcsEnvironmentVariable'
        EnvironmentFiles:
          type: array
          items:
            $ref: '#/components/schemas/EcsEnvironmentFile'
        Memory:
          type: integer
        MemoryReservation:
          type: integer
        Name:
          type: string
        ResourceRequirements:
          type: array
          items:
            $ref: '#/components/schemas/EcsResourceRequirement'
      additionalProperties: false
    EcsEnvironmentFile:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/EcsEnvironmentFileType'
        Value:
          type: string
      required:
        - Type
        - Value
      additionalProperties: false
    EcsEnvironmentFileType:
      type: string
      enum:
        - s3
    EcsEnvironmentVariable:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
    EcsEphemeralStorage:
      type: object
      properties:
        SizeInGiB:
          type: integer
          default: 0
          maximum: 200
          minimum: 21
      required:
        - SizeInGiB
      additionalProperties: false
    EcsInferenceAcceleratorOverride:
      type: object
      properties:
        DeviceName:
          type: string
        DeviceType:
          type: string
      additionalProperties: false
    EcsResourceRequirement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/EcsResourceRequirementType'
        Value:
          type: string
      required:
        - Type
        - Value
      additionalProperties: false
    EcsResourceRequirementType:
      type: string
      enum:
        - GPU
        - InferenceAccelerator
    EcsTaskOverride:
      type: object
      properties:
        ContainerOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EcsContainerOverride'
        Cpu:
          type: string
        EphemeralStorage:
          $ref: '#/components/schemas/EcsEphemeralStorage'
        ExecutionRoleArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
        InferenceAcceleratorOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EcsInferenceAcceleratorOverride'
        Memory:
          type: string
        TaskRoleArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
      additionalProperties: false
    Filter:
      type: object
      properties:
        Pattern:
          type: string
          maxLength: 4096
          minLength: 0
      additionalProperties: false
    FilterCriteria:
      type: object
      properties:
        Filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 5
          minItems: 0
      additionalProperties: false
    FirehoseLogDestination:
      type: object
      properties:
        DeliveryStreamArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^(^arn:aws([a-z]|\-)*:firehose:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):deliverystream/.+)$
      additionalProperties: false
    HeaderParametersMap:
      type: object
      x-patternProperties:
        ^[!#$%&'*+-.^_`|~0-9a-zA-Z]+|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$:
          type: string
          maxLength: 512
          minLength: 0
          pattern: ^[ \t]*[\x20-\x7E]+([ \t]+[\x20-\x7E]+)*[ \t]*|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
      additionalProperties: false
    IncludeExecutionDataOption:
      type: string
      enum:
        - ALL
    KinesisStreamStartPosition:
      type: string
      enum:
        - TRIM_HORIZON
        - LATEST
        - AT_TIMESTAMP
    LaunchType:
      type: string
      enum:
        - EC2
        - FARGATE
        - EXTERNAL
    LogLevel:
      type: string
      enum:
        - 'OFF'
        - ERROR
        - INFO
        - TRACE
    MQBrokerAccessCredentials:
      oneOf:
        - type: object
          title: BasicAuth
          properties:
            BasicAuth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - BasicAuth
          additionalProperties: false
    MSKAccessCredentials:
      oneOf:
        - type: object
          title: SaslScram512Auth
          properties:
            SaslScram512Auth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - SaslScram512Auth
          additionalProperties: false
        - type: object
          title: ClientCertificateTlsAuth
          properties:
            ClientCertificateTlsAuth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - ClientCertificateTlsAuth
          additionalProperties: false
    MSKStartPosition:
      type: string
      enum:
        - TRIM_HORIZON
        - LATEST
    NetworkConfiguration:
      type: object
      properties:
        AwsvpcConfiguration:
          $ref: '#/components/schemas/AwsVpcConfiguration'
      additionalProperties: false
    OnPartialBatchItemFailureStreams:
      type: string
      enum:
        - AUTOMATIC_BISECT
    PipeEnrichmentHttpParameters:
      type: object
      properties:
        PathParameterValues:
          type: array
          items:
            type: string
            pattern: ^(?!\s*$).+|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
        HeaderParameters:
          $ref: '#/components/schemas/HeaderParametersMap'
        QueryStringParameters:
          $ref: '#/components/schemas/QueryStringParametersMap'
      additionalProperties: false
    PipeEnrichmentParameters:
      type: object
      properties:
        InputTemplate:
          type: string
          maxLength: 8192
          minLength: 0
        HttpParameters:
          $ref: '#/components/schemas/PipeEnrichmentHttpParameters'
      additionalProperties: false
    PipeLogConfiguration:
      type: object
      properties:
        S3LogDestination:
          $ref: '#/components/schemas/S3LogDestination'
        FirehoseLogDestination:
          $ref: '#/components/schemas/FirehoseLogDestination'
        CloudwatchLogsLogDestination:
          $ref: '#/components/schemas/CloudwatchLogsLogDestination'
        Level:
          $ref: '#/components/schemas/LogLevel'
        IncludeExecutionData:
          type: array
          items:
            $ref: '#/components/schemas/IncludeExecutionDataOption'
          uniqueItems: true
      additionalProperties: false
    PipeSourceActiveMQBrokerParameters:
      type: object
      properties:
        Credentials:
          $ref: '#/components/schemas/MQBrokerAccessCredentials'
        QueueName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[\s\S]*$
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
      required:
        - Credentials
        - QueueName
      additionalProperties: false
    PipeSourceDynamoDBStreamParameters:
      type: object
      properties:
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        DeadLetterConfig:
          $ref: '#/components/schemas/DeadLetterConfig'
        OnPartialBatchItemFailure:
          $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
        MaximumRecordAgeInSeconds:
          type: integer
          maximum: 604800
          minimum: -1
        MaximumRetryAttempts:
          type: integer
          maximum: 10000
          minimum: -1
        ParallelizationFactor:
          type: integer
          maximum: 10
          minimum: 1
        StartingPosition:
          $ref: '#/components/schemas/DynamoDBStreamStartPosition'
      required:
        - StartingPosition
      additionalProperties: false
    PipeSourceKinesisStreamParameters:
      type: object
      properties:
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        DeadLetterConfig:
          $ref: '#/components/schemas/DeadLetterConfig'
        OnPartialBatchItemFailure:
          $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
        MaximumRecordAgeInSeconds:
          type: integer
          maximum: 604800
          minimum: -1
        MaximumRetryAttempts:
          type: integer
          maximum: 10000
          minimum: -1
        ParallelizationFactor:
          type: integer
          maximum: 10
          minimum: 1
        StartingPosition:
          $ref: '#/components/schemas/KinesisStreamStartPosition'
        StartingPositionTimestamp:
          type: string
          format: date-time
      required:
        - StartingPosition
      additionalProperties: false
    PipeSourceManagedStreamingKafkaParameters:
      type: object
      properties:
        TopicName:
          type: string
          maxLength: 249
          minLength: 1
          pattern: ^[^.]([a-zA-Z0-9\-_.]+)$
        StartingPosition:
          $ref: '#/components/schemas/MSKStartPosition'
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
        ConsumerGroupID:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9-\/*:_+=.@-]*$
        Credentials:
          $ref: '#/components/schemas/MSKAccessCredentials'
      required:
        - TopicName
      additionalProperties: false
    PipeSourceParameters:
      type: object
      properties:
        FilterCriteria:
          $ref: '#/components/schemas/FilterCriteria'
        KinesisStreamParameters:
          $ref: '#/components/schemas/PipeSourceKinesisStreamParameters'
        DynamoDBStreamParameters:
          $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/PipeSourceSqsQueueParameters'
        ActiveMQBrokerParameters:
          $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters'
        RabbitMQBrokerParameters:
          $ref: '#/components/schemas/PipeSourceRabbitMQBrokerParameters'
        ManagedStreamingKafkaParameters:
          $ref: '#/components/schemas/PipeSourceManagedStreamingKafkaParameters'
        SelfManagedKafkaParameters:
          $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters'
      additionalProperties: false
    PipeSourceRabbitMQBrokerParameters:
      type: object
      properties:
        Credentials:
          $ref: '#/components/schemas/MQBrokerAccessCredentials'
        QueueName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[\s\S]*$
        VirtualHost:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9-\/*:_+=.@-]*$
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
      required:
        - Credentials
        - QueueName
      additionalProperties: false
    PipeSourceSelfManagedKafkaParameters:
      type: object
      properties:
        TopicName:
          type: string
          maxLength: 249
          minLength: 1
          pattern: ^[^.]([a-zA-Z0-9\-_.]+)$
        StartingPosition:
          $ref: '#/components/schemas/SelfManagedKafkaStartPosition'
        AdditionalBootstrapServers:
          type: array
          items:
            type: string
            maxLength: 300
            minLength: 1
            pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]):[0-9]{1,5}$
          maxItems: 2
          minItems: 0
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
        ConsumerGroupID:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9-\/*:_+=.@-]*$
        Credentials:
          $ref: '#/components/schemas/SelfManagedKafkaAccessConfigurationCredentials'
        ServerRootCaCertificate:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
          description: Optional SecretManager ARN which stores the database credentials
        Vpc:
          $ref: '#/components/schemas/SelfManagedKafkaAccessConfigurationVpc'
      required:
        - TopicName
      additionalProperties: false
    PipeSourceSqsQueueParameters:
      type: object
      properties:
        BatchSize:
          type: integer
          maximum: 10000
          minimum: 1
        MaximumBatchingWindowInSeconds:
          type: integer
          maximum: 300
          minimum: 0
      additionalProperties: false
    PipeState:
      type: string
      enum:
        - RUNNING
        - STOPPED
        - CREATING
        - UPDATING
        - DELETING
        - STARTING
        - STOPPING
        - CREATE_FAILED
        - UPDATE_FAILED
        - START_FAILED
        - STOP_FAILED
        - DELETE_FAILED
        - CREATE_ROLLBACK_FAILED
        - DELETE_ROLLBACK_FAILED
        - UPDATE_ROLLBACK_FAILED
    PipeTargetBatchJobParameters:
      type: object
      properties:
        JobDefinition:
          type: string
        JobName:
          type: string
        ArrayProperties:
          $ref: '#/components/schemas/BatchArrayProperties'
        RetryStrategy:
          $ref: '#/components/schemas/BatchRetryStrategy'
        ContainerOverrides:
          $ref: '#/components/schemas/BatchContainerOverrides'
        DependsOn:
          type: array
          items:
            $ref: '#/components/schemas/BatchJobDependency'
          maxItems: 20
          minItems: 0
        Parameters:
          $ref: '#/components/schemas/BatchParametersMap'
      required:
        - JobDefinition
        - JobName
      additionalProperties: false
    PipeTargetCloudWatchLogsParameters:
      type: object
      properties:
        LogStreamName:
          type: string
          maxLength: 256
          minLength: 1
        Timestamp:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^\$(\.[\w_-]+(\[(\d+|\*)\])*)*$
      additionalProperties: false
    PipeTargetEcsTaskParameters:
      type: object
      properties:
        TaskDefinitionArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
        TaskCount:
          type: integer
          minimum: 1
        LaunchType:
          $ref: '#/components/schemas/LaunchType'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        PlatformVersion:
          type: string
        Group:
          type: string
        CapacityProviderStrategy:
          type: array
          items:
            $ref: '#/components/schemas/CapacityProviderStrategyItem'
          maxItems: 6
          minItems: 0
        EnableECSManagedTags:
          type: boolean
          default: false
        EnableExecuteCommand:
          type: boolean
          default: false
        PlacementConstraints:
          type: array
          items:
            $ref: '#/components/schemas/PlacementConstraint'
          maxItems: 10
          minItems: 0
        PlacementStrategy:
          type: array
          items:
            $ref: '#/components/schemas/PlacementStrategy'
          maxItems: 5
          minItems: 0
        PropagateTags:
          $ref: '#/components/schemas/PropagateTags'
        ReferenceId:
          type: string
          maxLength: 1024
          minLength: 0
        Overrides:
          $ref: '#/components/schemas/EcsTaskOverride'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TaskDefinitionArn
      additionalProperties: false
    PipeTargetEventBridgeEventBusParameters:
      type: object
      properties:
        EndpointId:
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[A-Za-z0-9\-]+[\.][A-Za-z0-9\-]+$
        DetailType:
          type: string
          maxLength: 128
          minLength: 1
        Source:
          type: string
          maxLength: 256
          minLength: 1
          pattern: (?=[/\.\-_A-Za-z0-9]+)((?!aws\.).*)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)
        Resources:
          type: array
          items:
            type: string
            maxLength: 1600
            minLength: 1
            pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
          maxItems: 10
          minItems: 0
        Time:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^\$(\.[\w/_-]+(\[(\d+|\*)\])*)*$
      additionalProperties: false
    PipeTargetHttpParameters:
      type: object
      properties:
        PathParameterValues:
          type: array
          items:
            type: string
            pattern: ^(?!\s*$).+|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
        HeaderParameters:
          $ref: '#/components/schemas/HeaderParametersMap'
        QueryStringParameters:
          $ref: '#/components/schemas/QueryStringParametersMap'
      additionalProperties: false
    PipeTargetInvocationType:
      type: string
      enum:
        - REQUEST_RESPONSE
        - FIRE_AND_FORGET
    PipeTargetKinesisStreamParameters:
      type: object
      properties:
        PartitionKey:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - PartitionKey
      additionalProperties: false
    PipeTargetLambdaFunctionParameters:
      type: object
      properties:
        InvocationType:
          $ref: '#/components/schemas/PipeTargetInvocationType'
      additionalProperties: false
    PipeTargetParameters:
      type: object
      properties:
        InputTemplate:
          type: string
          maxLength: 8192
          minLength: 0
        LambdaFunctionParameters:
          $ref: '#/components/schemas/PipeTargetLambdaFunctionParameters'
        StepFunctionStateMachineParameters:
          $ref: '#/components/schemas/PipeTargetStateMachineParameters'
        KinesisStreamParameters:
          $ref: '#/components/schemas/PipeTargetKinesisStreamParameters'
        EcsTaskParameters:
          $ref: '#/components/schemas/PipeTargetEcsTaskParameters'
        BatchJobParameters:
          $ref: '#/components/schemas/PipeTargetBatchJobParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/PipeTargetSqsQueueParameters'
        HttpParameters:
          $ref: '#/components/schemas/PipeTargetHttpParameters'
        RedshiftDataParameters:
          $ref: '#/components/schemas/PipeTargetRedshiftDataParameters'
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/PipeTargetSageMakerPipelineParameters'
        EventBridgeEventBusParameters:
          $ref: '#/components/schemas/PipeTargetEventBridgeEventBusParameters'
        CloudWatchLogsParameters:
          $ref: '#/components/schemas/PipeTargetCloudWatchLogsParameters'
      additionalProperties: false
    PipeTargetRedshiftDataParameters:
      type: object
      properties:
        SecretManagerArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
          description: Optional SecretManager ARN which stores the database credentials
        Database:
          type: string
          maxLength: 64
          minLength: 1
          description: Redshift Database
        DbUser:
          type: string
          maxLength: 128
          minLength: 1
          description: Database user name
        StatementName:
          type: string
          maxLength: 500
          minLength: 1
          description: A name for Redshift DataAPI statement which can be used as filter of ListStatement.
        WithEvent:
          type: boolean
          default: false
        Sqls:
          type: array
          items:
            type: string
            maxLength: 100000
            minLength: 1
            description: A single Redshift SQL
          maxItems: 40
          minItems: 1
          description: A list of SQLs.
      required:
        - Database
        - Sqls
      additionalProperties: false
    PipeTargetSageMakerPipelineParameters:
      type: object
      properties:
        PipelineParameterList:
          type: array
          items:
            $ref: '#/components/schemas/SageMakerPipelineParameter'
          maxItems: 200
          minItems: 0
      additionalProperties: false
    PipeTargetSqsQueueParameters:
      type: object
      properties:
        MessageGroupId:
          type: string
          maxLength: 100
          minLength: 0
        MessageDeduplicationId:
          type: string
          maxLength: 100
          minLength: 0
      additionalProperties: false
    PipeTargetStateMachineParameters:
      type: object
      properties:
        InvocationType:
          $ref: '#/components/schemas/PipeTargetInvocationType'
      additionalProperties: false
    PlacementConstraint:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/PlacementConstraintType'
        Expression:
          type: string
          maxLength: 2000
          minLength: 0
      additionalProperties: false
    PlacementConstraintType:
      type: string
      enum:
        - distinctInstance
        - memberOf
    PlacementStrategy:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/PlacementStrategyType'
        Field:
          type: string
          maxLength: 255
          minLength: 0
      additionalProperties: false
    PlacementStrategyType:
      type: string
      enum:
        - random
        - spread
        - binpack
    PropagateTags:
      type: string
      enum:
        - TASK_DEFINITION
    QueryStringParametersMap:
      type: object
      x-patternProperties:
        ^[^\x00-\x1F\x7F]+|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$:
          type: string
          maxLength: 512
          minLength: 0
          pattern: ^[^\x00-\x09\x0B\x0C\x0E-\x1F\x7F]+|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
      additionalProperties: false
    RequestedPipeState:
      type: string
      enum:
        - RUNNING
        - STOPPED
    S3LogDestination:
      type: object
      properties:
        BucketName:
          type: string
        Prefix:
          type: string
        BucketOwner:
          type: string
        OutputFormat:
          $ref: '#/components/schemas/S3OutputFormat'
      additionalProperties: false
    S3OutputFormat:
      type: string
      enum:
        - json
        - plain
        - w3c
    SageMakerPipelineParameter:
      type: object
      properties:
        Name:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*|(\$(\.[\w/_-]+(\[(\d+|\*)\])*)*)$
        Value:
          type: string
          maxLength: 1024
          minLength: 0
      required:
        - Name
        - Value
      additionalProperties: false
    SelfManagedKafkaAccessConfigurationCredentials:
      oneOf:
        - type: object
          title: BasicAuth
          properties:
            BasicAuth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - BasicAuth
          additionalProperties: false
        - type: object
          title: SaslScram512Auth
          properties:
            SaslScram512Auth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - SaslScram512Auth
          additionalProperties: false
        - type: object
          title: SaslScram256Auth
          properties:
            SaslScram256Auth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - SaslScram256Auth
          additionalProperties: false
        - type: object
          title: ClientCertificateTlsAuth
          properties:
            ClientCertificateTlsAuth:
              type: string
              maxLength: 1600
              minLength: 1
              pattern: ^(^arn:aws([a-z]|\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}):(\d{12}):secret:.+)$
              description: Optional SecretManager ARN which stores the database credentials
          required:
            - ClientCertificateTlsAuth
          additionalProperties: false
    SelfManagedKafkaAccessConfigurationVpc:
      type: object
      properties:
        Subnets:
          type: array
          items:
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^subnet-[0-9a-z]*$
          maxItems: 16
          minItems: 0
          description: List of SubnetId.
        SecurityGroup:
          type: array
          items:
            type: string
            maxLength: 1024
            minLength: 1
            pattern: ^sg-[0-9a-zA-Z]*$
          maxItems: 5
          minItems: 0
          description: List of SecurityGroupId.
      additionalProperties: false
    SelfManagedKafkaStartPosition:
      type: string
      enum:
        - TRIM_HORIZON
        - LATEST
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    TagMap:
      type: object
      maxProperties: 50
      minProperties: 1
      x-patternProperties:
        .+:
          type: string
          maxLength: 256
          minLength: 0
      additionalProperties: false
    Pipe:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:aws([a-z]|\-)*:([a-zA-Z0-9\-]+):([a-z]|\d|\-)*:([0-9]{12})?:(.+)$
        CreationTime:
          type: string
          format: date-time
        CurrentState:
          $ref: '#/components/schemas/PipeState'
        Description:
          type: string
          maxLength: 512
          minLength: 0
          pattern: ^.*$
        DesiredState:
          $ref: '#/components/schemas/RequestedPipeState'
        Enrichment:
          type: string
          maxLength: 1600
          minLength: 0
          pattern: ^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)$
        EnrichmentParameters:
          $ref: '#/components/schemas/PipeEnrichmentParameters'
        LastModifiedTime:
          type: string
          format: date-time
        LogConfiguration:
          $ref: '#/components/schemas/PipeLogConfiguration'
        Name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[\.\-_A-Za-z0-9]+$
        RoleArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z0-9+=,.@\-_/]+$
        Source:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^smk://(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]):[0-9]{1,5}|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)$
        SourceParameters:
          $ref: '#/components/schemas/PipeSourceParameters'
        StateReason:
          type: string
          maxLength: 512
          minLength: 0
          pattern: ^.*$
        Tags:
          $ref: '#/components/schemas/TagMap'
        Target:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1})?:(\d{12})?:(.+)$
        TargetParameters:
          $ref: '#/components/schemas/PipeTargetParameters'
      required:
        - RoleArn
        - Source
        - Target
      x-stackql-resource-name: pipe
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
        - Source
        - SourceParameters/DynamoDBStreamParameters/StartingPosition
        - SourceParameters/KinesisStreamParameters/StartingPosition
        - SourceParameters/KinesisStreamParameters/StartingPositionTimestamp
        - SourceParameters/ActiveMQBrokerParameters/QueueName
        - SourceParameters/RabbitMQBrokerParameters/QueueName
        - SourceParameters/RabbitMQBrokerParameters/VirtualHost
        - SourceParameters/ManagedStreamingKafkaParameters/TopicName
        - SourceParameters/ManagedStreamingKafkaParameters/StartingPosition
        - SourceParameters/ManagedStreamingKafkaParameters/ConsumerGroupID
        - SourceParameters/SelfManagedApacheKafkaParameters/TopicName
        - SourceParameters/SelfManagedApacheKafkaParameters/StartingPosition
        - SourceParameters/SelfManagedApacheKafkaParameters/AdditionalBootstrapServers
        - SourceParameters/SelfManagedApacheKafkaParameters/ConsumerGroupID
      x-read-only-properties:
        - Arn
        - CreationTime
        - CurrentState
        - LastModifiedTime
        - StateReason
      x-required-permissions:
        create:
          - pipes:CreatePipe
          - pipes:DescribePipe
          - pipes:TagResource
          - iam:PassRole
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - iam:CreateServiceLinkedRole
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - firehose:TagDeliveryStream
        read:
          - pipes:DescribePipe
        update:
          - pipes:UpdatePipe
          - pipes:TagResource
          - pipes:UntagResource
          - pipes:DescribePipe
          - iam:PassRole
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - iam:CreateServiceLinkedRole
          - logs:CreateLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - firehose:TagDeliveryStream
        delete:
          - pipes:DeletePipe
          - pipes:DescribePipe
          - logs:CreateLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
        list:
          - pipes:ListPipes
  x-stackQL-resources:
    pipes:
      name: pipes
      id: awscc.pipes.pipes
      x-cfn-schema-name: Pipe
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Pipes::Pipe'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Pipes::Pipe'
                AND region = 'us-east-1'
    pipe:
      name: pipe
      id: awscc.pipes.pipe
      x-cfn-schema-name: Pipe
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.CurrentState') as current_state,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DesiredState') as desired_state,
              JSON_EXTRACT(Properties, '$.Enrichment') as enrichment,
              JSON_EXTRACT(Properties, '$.EnrichmentParameters') as enrichment_parameters,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.LogConfiguration') as log_configuration,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.SourceParameters') as source_parameters,
              JSON_EXTRACT(Properties, '$.StateReason') as state_reason,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Target') as target,
              JSON_EXTRACT(Properties, '$.TargetParameters') as target_parameters
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Pipes::Pipe'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreationTime') as creation_time,
                json_extract_path_text(Properties, 'CurrentState') as current_state,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DesiredState') as desired_state,
                json_extract_path_text(Properties, 'Enrichment') as enrichment,
                json_extract_path_text(Properties, 'EnrichmentParameters') as enrichment_parameters,
                json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                json_extract_path_text(Properties, 'LogConfiguration') as log_configuration,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Source') as source,
                json_extract_path_text(Properties, 'SourceParameters') as source_parameters,
                json_extract_path_text(Properties, 'StateReason') as state_reason,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Target') as target,
                json_extract_path_text(Properties, 'TargetParameters') as target_parameters
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Pipes::Pipe'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
