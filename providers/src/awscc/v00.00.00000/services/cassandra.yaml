openapi: 3.0.0
info:
  title: Cassandra
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to apply to the resource
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    ReplicationSpecification:
      type: object
      additionalProperties: false
      properties:
        ReplicationStrategy:
          type: string
          enum:
            - SINGLE_REGION
            - MULTI_REGION
        RegionList:
          $ref: '#/components/schemas/RegionList'
      default:
        properties:
          ReplicationStrategy:
            type: string
            x-const: SINGLE_REGION
      x-dependencies:
        RegionList:
          - ReplicationStrategy
    RegionList:
      type: array
      items:
        type: string
        enum:
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
      uniqueItems: true
      x-insertionOrder: false
      minItems: 2
      maxItems: 6
    Keyspace:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        Tags:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        ReplicationSpecification:
          $ref: '#/components/schemas/ReplicationSpecification'
      required: []
      x-stackql-resource-name: keyspace
      x-stackql-primaryIdentifier:
        - KeyspaceName
      x-create-only-properties:
        - ReplicationSpecification
        - KeyspaceName
      x-required-permissions:
        create:
          - cassandra:Create
          - cassandra:CreateMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - iam:CreateServiceLinkedRole
        read:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
        update:
          - cassandra:Alter
          - cassandra:AlterMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
        delete:
          - cassandra:Drop
          - cassandra:DropMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
        list:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
    Column:
      type: object
      properties:
        ColumnName:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        ColumnType:
          type: string
      required:
        - ColumnName
        - ColumnType
      additionalProperties: false
    ClusteringKeyColumn:
      type: object
      properties:
        Column:
          $ref: '#/components/schemas/Column'
        OrderBy:
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
      additionalProperties: false
      required:
        - Column
    ProvisionedThroughput:
      description: Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
      type: object
      properties:
        ReadCapacityUnits:
          type: integer
          minimum: 1
        WriteCapacityUnits:
          type: integer
          minimum: 1
      additionalProperties: false
      required:
        - ReadCapacityUnits
        - WriteCapacityUnits
    Mode:
      description: Capacity mode for the specified table
      type: string
      enum:
        - PROVISIONED
        - ON_DEMAND
      default: ON_DEMAND
    BillingMode:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/Mode'
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
      required:
        - Mode
      additionalProperties: false
    EncryptionSpecification:
      description: Represents the settings used to enable server-side encryption
      type: object
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
        KmsKeyIdentifier:
          $ref: '#/components/schemas/KmsKeyIdentifier'
      required:
        - EncryptionType
      additionalProperties: false
    EncryptionType:
      description: Server-side encryption type
      type: string
      enum:
        - AWS_OWNED_KMS_KEY
        - CUSTOMER_MANAGED_KMS_KEY
      default: AWS_OWNED_KMS_KEY
    KmsKeyIdentifier:
      description: 'The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. '
      type: string
    AutoScalingSpecification:
      description: Represents the read and write settings used for AutoScaling.
      type: object
      properties:
        WriteCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
        ReadCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
      additionalProperties: false
    AutoScalingSetting:
      description: Represents configuration for auto scaling.
      type: object
      properties:
        AutoScalingDisabled:
          type: boolean
          default: false
        MinimumUnits:
          type: integer
          minimum: 1
        MaximumUnits:
          type: integer
          minimum: 1
        ScalingPolicy:
          $ref: '#/components/schemas/ScalingPolicy'
      additionalProperties: false
    ScalingPolicy:
      description: Represents scaling policy.
      type: object
      properties:
        TargetTrackingScalingPolicyConfiguration:
          $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
      additionalProperties: false
    TargetTrackingScalingPolicyConfiguration:
      description: Represents configuration for target tracking scaling policy.
      type: object
      properties:
        DisableScaleIn:
          type: boolean
          default: 'false'
        ScaleInCooldown:
          type: integer
          default: 0
        ScaleOutCooldown:
          type: integer
          default: 0
        TargetValue:
          type: integer
      required:
        - TargetValue
      additionalProperties: false
    ReplicaSpecification:
      description: Represents replica specifications.
      type: object
      properties:
        Region:
          type: string
          minLength: 2
          maxLength: 25
        ReadCapacityUnits:
          type: integer
        ReadCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
      required:
        - Region
      additionalProperties: false
    Table:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        TableName:
          description: Name for Cassandra table
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        RegularColumns:
          description: Non-key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Column'
        PartitionKeyColumns:
          description: Partition key columns of the table
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Column'
        ClusteringKeyColumns:
          description: Clustering key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ClusteringKeyColumn'
        BillingMode:
          $ref: '#/components/schemas/BillingMode'
        PointInTimeRecoveryEnabled:
          description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
          type: boolean
        ClientSideTimestampsEnabled:
          description: Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
          type: boolean
        Tags:
          description: An array of key-value pairs to apply to this resource
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        DefaultTimeToLive:
          description: Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
          type: integer
          minimum: 0
        EncryptionSpecification:
          $ref: '#/components/schemas/EncryptionSpecification'
        AutoScalingSpecifications:
          $ref: '#/components/schemas/AutoScalingSpecification'
        ReplicaSpecifications:
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ReplicaSpecification'
      required:
        - KeyspaceName
        - PartitionKeyColumns
      x-stackql-resource-name: table
      x-stackql-primaryIdentifier:
        - KeyspaceName
        - TableName
      x-create-only-properties:
        - KeyspaceName
        - TableName
        - PartitionKeyColumns
        - ClusteringKeyColumns
        - ClientSideTimestampsEnabled
      x-required-permissions:
        create:
          - cassandra:Create
          - cassandra:CreateMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        read:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        update:
          - cassandra:Alter
          - cassandra:AlterMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        delete:
          - cassandra:Drop
          - cassandra:DropMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        list:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
  x-stackQL-resources:
    keyspaces:
      name: keyspaces
      id: awscc.cassandra.keyspaces
      x-cfn-schema-name: Keyspace
      x-type: list
      x-identifiers:
        - KeyspaceName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
                AND region = 'us-east-1'
    keyspace:
      name: keyspace
      id: awscc.cassandra.keyspace
      x-cfn-schema-name: Keyspace
      x-type: get
      x-identifiers:
        - KeyspaceName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ReplicationSpecification') as replication_specification
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
              AND data__Identifier = '<KeyspaceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ReplicationSpecification') as replication_specification
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
                AND data__Identifier = '<KeyspaceName>'
                AND region = 'us-east-1'
    tables:
      name: tables
      id: awscc.cassandra.tables
      x-cfn-schema-name: Table
      x-type: list
      x-identifiers:
        - KeyspaceName
        - TableName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Table'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(Properties, 'TableName') as table_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Table'
                AND region = 'us-east-1'
    table:
      name: table
      id: awscc.cassandra.table
      x-cfn-schema-name: Table
      x-type: get
      x-identifiers:
        - KeyspaceName
        - TableName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name,
              JSON_EXTRACT(Properties, '$.RegularColumns') as regular_columns,
              JSON_EXTRACT(Properties, '$.PartitionKeyColumns') as partition_key_columns,
              JSON_EXTRACT(Properties, '$.ClusteringKeyColumns') as clustering_key_columns,
              JSON_EXTRACT(Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(Properties, '$.PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
              JSON_EXTRACT(Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.DefaultTimeToLive') as default_time_to_live,
              JSON_EXTRACT(Properties, '$.EncryptionSpecification') as encryption_specification,
              JSON_EXTRACT(Properties, '$.AutoScalingSpecifications') as auto_scaling_specifications,
              JSON_EXTRACT(Properties, '$.ReplicaSpecifications') as replica_specifications
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Table'
              AND data__Identifier = '<KeyspaceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(Properties, 'TableName') as table_name,
                json_extract_path_text(Properties, 'RegularColumns') as regular_columns,
                json_extract_path_text(Properties, 'PartitionKeyColumns') as partition_key_columns,
                json_extract_path_text(Properties, 'ClusteringKeyColumns') as clustering_key_columns,
                json_extract_path_text(Properties, 'BillingMode') as billing_mode,
                json_extract_path_text(Properties, 'PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
                json_extract_path_text(Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'DefaultTimeToLive') as default_time_to_live,
                json_extract_path_text(Properties, 'EncryptionSpecification') as encryption_specification,
                json_extract_path_text(Properties, 'AutoScalingSpecifications') as auto_scaling_specifications,
                json_extract_path_text(Properties, 'ReplicaSpecifications') as replica_specifications
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Table'
                AND data__Identifier = '<KeyspaceName>'
                AND region = 'us-east-1'
