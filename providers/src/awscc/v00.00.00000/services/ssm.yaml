openapi: 3.0.0
info:
  title: SSM
  version: 1.0.0
paths: {}
components:
  schemas:
    Target:
      type: object
      properties:
        Key:
          type: string
          pattern: ^[\p{L}\p{Z}\p{N}_.:/=+\-@]{1,128}$|resource-groups:Name
        Values:
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 50
      additionalProperties: false
      required:
        - Key
        - Values
    ParameterValues:
      type: array
      items:
        type: string
    S3Region:
      type: string
      minLength: 3
      maxLength: 20
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3KeyPrefix:
      type: string
      maxLength: 1024
    S3OutputLocation:
      type: object
      properties:
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      additionalProperties: false
    InstanceAssociationOutputLocation:
      type: object
      properties:
        S3Location:
          $ref: '#/components/schemas/S3OutputLocation'
      additionalProperties: false
    Association:
      type: object
      properties:
        AssociationId:
          description: Unique identifier of the association.
          type: string
          pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          x-examples:
            - 88df7b09-95e8-48c4-a3cb-08c2c20d5110
            - 203dd0ec-0055-4bf0-a872-707f72ef06aa
        AssociationName:
          description: The name of the association.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
        DocumentVersion:
          description: The version of the SSM document to associate with the target.
          type: string
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
        InstanceId:
          description: The ID of the instance that the SSM document is associated with.
          type: string
          pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
          x-examples:
            - i-0e60836d21cf313c4
            - mi-0532c22e49636ee13
        Name:
          description: The name of the SSM document.
          type: string
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          x-examples:
            - AWS-GatherSoftwareInventory
            - MyCustomSSMDocument
        Parameters:
          description: Parameter values that the SSM document uses at runtime.
          type: object
          x-patternProperties:
            .*{1,255}:
              $ref: '#/components/schemas/ParameterValues'
          additionalProperties: false
        ScheduleExpression:
          description: A Cron or Rate expression that specifies when the association is applied to the target.
          type: string
          minLength: 1
          maxLength: 256
          x-examples:
            - cron(0 0 */1 * * ? *)
            - cron(0 16 ? * TUE *)
            - rate(30 minutes)
            - rate(7 days)
        Targets:
          description: The targets that the SSM document sends commands to.
          type: array
          items:
            $ref: '#/components/schemas/Target'
          minItems: 0
          maxItems: 5
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
        AutomationTargetParameterName:
          type: string
          minLength: 1
          maxLength: 50
        MaxErrors:
          type: string
          pattern: ^([1-9][0-9]{0,6}|[0]|[1-9][0-9]%|[0-9]%|100%)$
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
        MaxConcurrency:
          type: string
          pattern: ^([1-9][0-9]{0,6}|[1-9][0-9]%|[1-9]%|100%)$
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
        ComplianceSeverity:
          type: string
          enum:
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - UNSPECIFIED
        SyncCompliance:
          type: string
          enum:
            - AUTO
            - MANUAL
        WaitForSuccessTimeoutSeconds:
          type: integer
          minimum: 15
          maximum: 172800
        ApplyOnlyAtCronInterval:
          type: boolean
        CalendarNames:
          type: array
          items:
            type: string
          x-examples:
            - - calendar1
              - calendar2
            - - calendar3
        ScheduleOffset:
          type: integer
          minimum: 1
          maximum: 6
      required:
        - Name
      x-stackql-resource-name: association
      x-stackql-primaryIdentifier:
        - AssociationId
      x-read-only-properties:
        - AssociationId
      x-required-permissions:
        create:
          - ec2:DescribeInstanceStatus
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - ssm:CreateAssociation
          - ssm:DescribeAssociation
          - ssm:GetCalendarState
        delete:
          - ssm:DeleteAssociation
        update:
          - iam:PassRole
          - ssm:UpdateAssociation
          - ssm:GetCalendarState
        read:
          - ssm:DescribeAssociation
          - resource-groups:GetGroupQuery
          - resource-groups:ListGroups
          - resource-groups:ListGroupResources
        list:
          - ssm:ListAssociations
    AttachmentsSource:
      type: object
      properties:
        Key:
          description: The key of a key-value pair that identifies the location of an attachment to a document.
          type: string
          enum:
            - SourceUrl
            - S3FileUrl
            - AttachmentReference
        Values:
          description: The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100000
          minItems: 1
          maxItems: 1
          x-insertionOrder: false
        Name:
          description: The name of the document attachment file.
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 1
          maxLength: 128
      additionalProperties: false
    Tag:
      description: Metadata that you assign to your AWS resources.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    DocumentRequires:
      type: object
      properties:
        Name:
          description: The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
          type: string
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          maxLength: 200
        Version:
          description: The document version required by the current document.
          type: string
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
          maxLength: 8
      additionalProperties: false
    Document:
      type: object
      properties:
        Content:
          description: The content for the Systems Manager document in JSON, YAML or String format.
          type: object
        Attachments:
          description: A list of key and value pairs that describe attachments to a version of a document.
          type: array
          items:
            $ref: '#/components/schemas/AttachmentsSource'
          minItems: 0
          maxItems: 20
          x-insertionOrder: false
        Name:
          description: A name for the Systems Manager document.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
        VersionName:
          description: An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{1,128}$
        DocumentType:
          description: The type of document to create.
          type: string
          enum:
            - ApplicationConfiguration
            - ApplicationConfigurationSchema
            - Automation
            - Automation.ChangeTemplate
            - ChangeCalendar
            - CloudFormation
            - Command
            - DeploymentStrategy
            - Package
            - Policy
            - ProblemAnalysis
            - ProblemAnalysisTemplate
            - Session
        DocumentFormat:
          description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
          type: string
          enum:
            - YAML
            - JSON
            - TEXT
          default: JSON
        TargetType:
          description: Specify a target type to define the kinds of resources the document can run on.
          type: string
          pattern: ^\/[\w\.\-\:\/]*$
        Tags:
          description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 1000
          x-insertionOrder: false
        Requires:
          description: A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
          type: array
          items:
            $ref: '#/components/schemas/DocumentRequires'
          minItems: 1
          x-insertionOrder: false
        UpdateMethod:
          description: Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
          type: string
          enum:
            - Replace
            - NewVersion
          default: Replace
      required:
        - Content
      x-stackql-resource-name: document
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
        - DocumentType
      x-required-permissions:
        create:
          - ssm:CreateDocument
          - ssm:GetDocument
          - ssm:AddTagsToResource
          - ssm:ListTagsForResource
          - s3:GetObject
          - iam:PassRole
        read:
          - ssm:GetDocument
          - ssm:ListTagsForResource
        update:
          - ssm:UpdateDocument
          - s3:GetObject
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - iam:PassRole
          - ssm:UpdateDocumentDefaultVersion
          - ssm:DescribeDocument
        delete:
          - ssm:DeleteDocument
          - ssm:GetDocument
        list:
          - ssm:ListDocuments
    Parameter:
      type: object
      properties:
        Type:
          type: string
          description: |-
            The type of parameter.
              Although ``SecureString`` is included in the list of valid values, CFNlong does *not* currently support creating a ``SecureString`` parameter type.
          enum:
            - String
            - StringList
        Value:
          type: string
          description: |-
            The parameter value.
              If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
        Description:
          type: string
          description: Information about the parameter.
        Policies:
          type: string
          description: |-
            Information about the policies assigned to a parameter.
              [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.
        AllowedPattern:
          type: string
          description: 'A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``'
        Tier:
          type: string
          description: The parameter tier.
          enum:
            - Standard
            - Advanced
            - Intelligent-Tiering
        Tags:
          type: object
          description: Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        DataType:
          type: string
          description: The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
          enum:
            - text
            - aws:ec2:image
        Name:
          type: string
          description: |-
            The name of the parameter.
             The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter ARN, is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
      required:
        - Value
        - Type
      x-stackql-resource-name: parameter
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
      x-required-permissions:
        create:
          - ssm:PutParameter
          - ssm:AddTagsToResource
          - ssm:GetParameters
        read:
          - ssm:GetParameters
        update:
          - ssm:PutParameter
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:GetParameters
        delete:
          - ssm:DeleteParameter
        list:
          - ssm:DescribeParameters
    PatchFilterGroup:
      description: The patch filter group that defines the criteria for the rule.
      type: object
      additionalProperties: false
      properties:
        PatchFilters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchFilter'
          minItems: 0
          maxItems: 5
    PatchSource:
      description: Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
      type: object
      additionalProperties: false
      properties:
        Products:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 128
          minItems: 0
          maxItems: 20
        Configuration:
          type: string
          minLength: 1
          maxLength: 1024
        Name:
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,50}$
    RuleGroup:
      description: A set of rules defining the approval rules for a patch baseline.
      type: object
      additionalProperties: false
      properties:
        PatchRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Rule'
          minItems: 0
          maxItems: 10
      x-insertionOrder: false
    Rule:
      description: Defines an approval rule for a patch baseline.
      type: object
      additionalProperties: false
      properties:
        ApproveUntilDate:
          type: string
          minLength: 0
          maxLength: 10
        EnableNonSecurity:
          type: boolean
          default: false
        PatchFilterGroup:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApproveAfterDays:
          type: integer
          minimum: 0
          maximum: 360
        ComplianceLevel:
          type: string
          enum:
            - CRITICAL
            - HIGH
            - INFORMATIONAL
            - LOW
            - MEDIUM
            - UNSPECIFIED
      x-insertionOrder: false
    PatchFilter:
      description: Defines which patches should be included in a patch baseline.
      type: object
      additionalProperties: false
      properties:
        Values:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 64
          minItems: 0
          maxItems: 20
        Key:
          type: string
          enum:
            - ADVISORY_ID
            - ARCH
            - BUGZILLA_ID
            - CLASSIFICATION
            - CVE_ID
            - EPOCH
            - MSRC_SEVERITY
            - NAME
            - PATCH_ID
            - PATCH_SET
            - PRIORITY
            - PRODUCT
            - PRODUCT_FAMILY
            - RELEASE
            - REPOSITORY
            - SECTION
            - SECURITY
            - SEVERITY
            - VERSION
    PatchBaseline:
      type: object
      properties:
        Id:
          description: The ID of the patch baseline.
          type: string
          pattern: ^[a-zA-Z0-9_\-:/]{20,128}$
          minLength: 20
          maxLength: 128
        DefaultBaseline:
          description: Set the baseline as default baseline. Only registering to default patch baseline is allowed.
          type: boolean
          default: false
        OperatingSystem:
          description: Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
          type: string
          default: WINDOWS
          enum:
            - WINDOWS
            - AMAZON_LINUX
            - AMAZON_LINUX_2
            - AMAZON_LINUX_2022
            - AMAZON_LINUX_2023
            - UBUNTU
            - REDHAT_ENTERPRISE_LINUX
            - SUSE
            - CENTOS
            - ORACLE_LINUX
            - DEBIAN
            - MACOS
            - RASPBIAN
            - ROCKY_LINUX
            - ALMA_LINUX
        Description:
          description: The description of the patch baseline.
          type: string
          minLength: 1
          maxLength: 1024
        ApprovalRules:
          $ref: '#/components/schemas/RuleGroup'
        Sources:
          description: Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchSource'
          minItems: 0
          maxItems: 20
        Name:
          description: The name of the patch baseline.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
          minLength: 3
          maxLength: 128
        RejectedPatches:
          description: A list of explicitly rejected patches for the baseline.
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 100
          minItems: 0
          maxItems: 50
          x-insertionOrder: false
        ApprovedPatches:
          description: A list of explicitly approved patches for the baseline.
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 100
          minItems: 0
          maxItems: 50
          x-insertionOrder: false
        RejectedPatchesAction:
          description: The action for Patch Manager to take on patches included in the RejectedPackages list.
          type: string
          default: ALLOW_AS_DEPENDENCY
          enum:
            - ALLOW_AS_DEPENDENCY
            - BLOCK
        PatchGroups:
          description: PatchGroups is used to associate instances with a specific patch baseline
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 256
        ApprovedPatchesComplianceLevel:
          description: Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.
          type: string
          default: UNSPECIFIED
          enum:
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - INFORMATIONAL
            - UNSPECIFIED
        ApprovedPatchesEnableNonSecurity:
          description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
          type: boolean
          default: false
        GlobalFilters:
          description: A set of global filters used to include patches in the baseline.
          $ref: '#/components/schemas/PatchFilterGroup'
        Tags:
          description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 1000
      required:
        - Name
      x-stackql-resource-name: patch_baseline
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - OperatingSystem
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - ssm:CreatePatchBaseline
          - ssm:RegisterPatchBaselineForPatchGroup
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - ssm:GetDefaultPatchBaseline
          - ssm:RegisterDefaultPatchBaseline
        delete:
          - ssm:DeletePatchBaseline
          - ssm:GetPatchBaseline
          - ssm:DeregisterPatchBaselineForPatchGroup
        list:
          - ssm:DescribePatchBaselines
          - ssm:GetDefaultPatchBaseline
          - ssm:GetPatchBaseline
          - ssm:ListTagsForResource
        read:
          - ssm:GetDefaultPatchBaseline
          - ssm:GetPatchBaseline
          - ssm:ListTagsForResource
        update:
          - ssm:UpdatePatchBaseline
          - ssm:DeregisterPatchBaselineForPatchGroup
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - ssm:GetDefaultPatchBaseline
          - ssm:RegisterDefaultPatchBaseline
    S3Destination:
      type: object
      additionalProperties: false
      properties:
        KMSKeyArn:
          type: string
          minLength: 1
          maxLength: 512
        BucketPrefix:
          type: string
          minLength: 1
          maxLength: 256
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 1
          maxLength: 1024
      required:
        - BucketName
        - BucketRegion
        - SyncFormat
    SyncSource:
      type: object
      additionalProperties: false
      properties:
        IncludeFutureRegions:
          type: boolean
        SourceRegions:
          type: array
          uniqueItems: false
          items:
            type: string
        SourceType:
          type: string
          minLength: 1
          maxLength: 64
        AwsOrganizationsSource:
          $ref: '#/components/schemas/AwsOrganizationsSource'
      required:
        - SourceType
        - SourceRegions
    AwsOrganizationsSource:
      type: object
      additionalProperties: false
      properties:
        OrganizationalUnits:
          type: array
          uniqueItems: false
          items:
            type: string
        OrganizationSourceType:
          type: string
          minLength: 1
          maxLength: 64
      required:
        - OrganizationSourceType
    ResourceDataSync:
      type: object
      properties:
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        KMSKeyArn:
          type: string
          minLength: 0
          maxLength: 512
        SyncSource:
          $ref: '#/components/schemas/SyncSource'
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 0
          maxLength: 1024
        SyncName:
          type: string
          minLength: 1
          maxLength: 64
        SyncType:
          type: string
          minLength: 1
          maxLength: 64
        BucketPrefix:
          type: string
          minLength: 0
          maxLength: 64
      required:
        - SyncName
      x-stackql-resource-name: resource_data_sync
      x-stackql-primaryIdentifier:
        - SyncName
      x-create-only-properties:
        - KMSKeyArn
        - SyncFormat
        - BucketPrefix
        - SyncName
        - BucketRegion
        - BucketName
        - S3Destination
        - SyncType
      x-read-only-properties:
        - SyncName
      x-required-permissions:
        create:
          - ssm:CreateResourceDataSync
          - ssm:ListResourceDataSync
        delete:
          - ssm:ListResourceDataSync
          - ssm:DeleteResourceDataSync
        update:
          - ssm:ListResourceDataSync
          - ssm:UpdateResourceDataSync
        list:
          - ssm:ListResourceDataSync
        read:
          - ssm:ListResourceDataSync
    ResourcePolicy:
      type: object
      properties:
        ResourceArn:
          type: string
          description: Arn of OpsItemGroup etc.
        Policy:
          type: object
          description: Actual policy statement.
        PolicyId:
          type: string
          description: 'An unique identifier within the policies of a resource. '
        PolicyHash:
          type: string
          description: A snapshot identifier for the policy over time.
      required:
        - ResourceArn
        - Policy
      x-stackql-resource-name: resource_policy
      x-stackql-primaryIdentifier:
        - PolicyId
        - ResourceArn
      x-create-only-properties:
        - ResourceArn
      x-read-only-properties:
        - PolicyId
        - PolicyHash
      x-required-permissions:
        create:
          - ssm:PutResourcePolicy
        read:
          - ssm:GetResourcePolicies
        update:
          - ssm:PutResourcePolicy
        delete:
          - ssm:DeleteResourcePolicy
        list:
          - ssm:GetResourcePolicies
  x-stackQL-resources:
    associations:
      name: associations
      id: awscc.ssm.associations
      x-cfn-schema-name: Association
      x-type: list
      x-identifiers:
        - AssociationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Association'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociationId') as association_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Association'
                AND region = 'us-east-1'
    association:
      name: association
      id: awscc.ssm.association
      x-cfn-schema-name: Association
      x-type: get
      x-identifiers:
        - AssociationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.AssociationName') as association_name,
              JSON_EXTRACT(Properties, '$.DocumentVersion') as document_version,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.ScheduleExpression') as schedule_expression,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.OutputLocation') as output_location,
              JSON_EXTRACT(Properties, '$.AutomationTargetParameterName') as automation_target_parameter_name,
              JSON_EXTRACT(Properties, '$.MaxErrors') as max_errors,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.ComplianceSeverity') as compliance_severity,
              JSON_EXTRACT(Properties, '$.SyncCompliance') as sync_compliance,
              JSON_EXTRACT(Properties, '$.WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
              JSON_EXTRACT(Properties, '$.ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
              JSON_EXTRACT(Properties, '$.CalendarNames') as calendar_names,
              JSON_EXTRACT(Properties, '$.ScheduleOffset') as schedule_offset
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Association'
              AND data__Identifier = '<AssociationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociationId') as association_id,
                json_extract_path_text(Properties, 'AssociationName') as association_name,
                json_extract_path_text(Properties, 'DocumentVersion') as document_version,
                json_extract_path_text(Properties, 'InstanceId') as instance_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Parameters') as parameters,
                json_extract_path_text(Properties, 'ScheduleExpression') as schedule_expression,
                json_extract_path_text(Properties, 'Targets') as targets,
                json_extract_path_text(Properties, 'OutputLocation') as output_location,
                json_extract_path_text(Properties, 'AutomationTargetParameterName') as automation_target_parameter_name,
                json_extract_path_text(Properties, 'MaxErrors') as max_errors,
                json_extract_path_text(Properties, 'MaxConcurrency') as max_concurrency,
                json_extract_path_text(Properties, 'ComplianceSeverity') as compliance_severity,
                json_extract_path_text(Properties, 'SyncCompliance') as sync_compliance,
                json_extract_path_text(Properties, 'WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
                json_extract_path_text(Properties, 'ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
                json_extract_path_text(Properties, 'CalendarNames') as calendar_names,
                json_extract_path_text(Properties, 'ScheduleOffset') as schedule_offset
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Association'
                AND data__Identifier = '<AssociationId>'
                AND region = 'us-east-1'
    documents:
      name: documents
      id: awscc.ssm.documents
      x-cfn-schema-name: Document
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Document'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Document'
                AND region = 'us-east-1'
    document:
      name: document
      id: awscc.ssm.document
      x-cfn-schema-name: Document
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Attachments') as attachments,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(Properties, '$.DocumentType') as document_type,
              JSON_EXTRACT(Properties, '$.DocumentFormat') as document_format,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Requires') as requires,
              JSON_EXTRACT(Properties, '$.UpdateMethod') as update_method
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Document'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Content') as content,
                json_extract_path_text(Properties, 'Attachments') as attachments,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'VersionName') as version_name,
                json_extract_path_text(Properties, 'DocumentType') as document_type,
                json_extract_path_text(Properties, 'DocumentFormat') as document_format,
                json_extract_path_text(Properties, 'TargetType') as target_type,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Requires') as requires,
                json_extract_path_text(Properties, 'UpdateMethod') as update_method
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Document'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    parameters:
      name: parameters
      id: awscc.ssm.parameters
      x-cfn-schema-name: Parameter
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Parameter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Parameter'
                AND region = 'us-east-1'
    parameter:
      name: parameter
      id: awscc.ssm.parameter
      x-cfn-schema-name: Parameter
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Value') as value,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.AllowedPattern') as allowed_pattern,
              JSON_EXTRACT(Properties, '$.Tier') as tier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Parameter'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Value') as value,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Policies') as policies,
                json_extract_path_text(Properties, 'AllowedPattern') as allowed_pattern,
                json_extract_path_text(Properties, 'Tier') as tier,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'DataType') as data_type,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Parameter'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    patch_baselines:
      name: patch_baselines
      id: awscc.ssm.patch_baselines
      x-cfn-schema-name: PatchBaseline
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
                AND region = 'us-east-1'
    patch_baseline:
      name: patch_baseline
      id: awscc.ssm.patch_baseline
      x-cfn-schema-name: PatchBaseline
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultBaseline') as default_baseline,
              JSON_EXTRACT(Properties, '$.OperatingSystem') as operating_system,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ApprovalRules') as approval_rules,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RejectedPatches') as rejected_patches,
              JSON_EXTRACT(Properties, '$.ApprovedPatches') as approved_patches,
              JSON_EXTRACT(Properties, '$.RejectedPatchesAction') as rejected_patches_action,
              JSON_EXTRACT(Properties, '$.PatchGroups') as patch_groups,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
              JSON_EXTRACT(Properties, '$.GlobalFilters') as global_filters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DefaultBaseline') as default_baseline,
                json_extract_path_text(Properties, 'OperatingSystem') as operating_system,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ApprovalRules') as approval_rules,
                json_extract_path_text(Properties, 'Sources') as sources,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RejectedPatches') as rejected_patches,
                json_extract_path_text(Properties, 'ApprovedPatches') as approved_patches,
                json_extract_path_text(Properties, 'RejectedPatchesAction') as rejected_patches_action,
                json_extract_path_text(Properties, 'PatchGroups') as patch_groups,
                json_extract_path_text(Properties, 'ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
                json_extract_path_text(Properties, 'ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
                json_extract_path_text(Properties, 'GlobalFilters') as global_filters,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    resource_data_syncs:
      name: resource_data_syncs
      id: awscc.ssm.resource_data_syncs
      x-cfn-schema-name: ResourceDataSync
      x-type: list
      x-identifiers:
        - SyncName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SyncName') as sync_name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SyncName') as sync_name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
                AND region = 'us-east-1'
    resource_data_sync:
      name: resource_data_sync
      id: awscc.ssm.resource_data_sync
      x-cfn-schema-name: ResourceDataSync
      x-type: get
      x-identifiers:
        - SyncName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.S3Destination') as s3_destination,
              JSON_EXTRACT(Properties, '$.KMSKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.BucketRegion') as bucket_region,
              JSON_EXTRACT(Properties, '$.SyncFormat') as sync_format,
              JSON_EXTRACT(Properties, '$.SyncName') as sync_name,
              JSON_EXTRACT(Properties, '$.SyncType') as sync_type,
              JSON_EXTRACT(Properties, '$.BucketPrefix') as bucket_prefix
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
              AND data__Identifier = '<SyncName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'S3Destination') as s3_destination,
                json_extract_path_text(Properties, 'KMSKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'SyncSource') as sync_source,
                json_extract_path_text(Properties, 'BucketName') as bucket_name,
                json_extract_path_text(Properties, 'BucketRegion') as bucket_region,
                json_extract_path_text(Properties, 'SyncFormat') as sync_format,
                json_extract_path_text(Properties, 'SyncName') as sync_name,
                json_extract_path_text(Properties, 'SyncType') as sync_type,
                json_extract_path_text(Properties, 'BucketPrefix') as bucket_prefix
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
                AND data__Identifier = '<SyncName>'
                AND region = 'us-east-1'
    resource_policies:
      name: resource_policies
      id: awscc.ssm.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-type: list
      x-identifiers:
        - PolicyId
        - ResourceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PolicyId') as policy_id,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
                AND region = 'us-east-1'
    resource_policy:
      name: resource_policy
      id: awscc.ssm.resource_policy
      x-cfn-schema-name: ResourcePolicy
      x-type: get
      x-identifiers:
        - PolicyId
        - ResourceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id,
              JSON_EXTRACT(Properties, '$.PolicyHash') as policy_hash
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
              AND data__Identifier = '<PolicyId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'Policy') as policy,
                json_extract_path_text(Properties, 'PolicyId') as policy_id,
                json_extract_path_text(Properties, 'PolicyHash') as policy_hash
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
                AND data__Identifier = '<PolicyId>'
                AND region = 'us-east-1'
