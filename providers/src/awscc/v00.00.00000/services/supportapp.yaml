openapi: 3.0.0
info:
  title: SupportApp
  version: 1.0.0
paths: {}
components:
  schemas:
    AccountAlias:
      type: object
      properties:
        AccountAlias:
          description: An account alias associated with a customer's account.
          type: string
          pattern: ^[\w\- ]+$
          minLength: 1
          maxLength: 30
        AccountAliasResourceId:
          description: Unique identifier representing an alias tied to an account
          type: string
          pattern: ^[\w\- ]+$
          minLength: 29
          maxLength: 29
      required:
        - AccountAlias
      x-stackql-resource-name: account_alias
      x-stackql-primaryIdentifier:
        - AccountAliasResourceId
      x-read-only-properties:
        - AccountAliasResourceId
      x-required-permissions:
        create:
          - supportapp:PutAccountAlias
          - supportapp:GetAccountAlias
        read:
          - supportapp:GetAccountAlias
        update:
          - supportapp:PutAccountAlias
          - supportapp:GetAccountAlias
        delete:
          - supportapp:DeleteAccountAlias
          - supportapp:GetAccountAlias
        list:
          - supportapp:GetAccountAlias
    SlackChannelConfiguration:
      type: object
      properties:
        TeamId:
          description: The team ID in Slack, which uniquely identifies a workspace.
          type: string
          pattern: ^\S+$
          minLength: 1
          maxLength: 256
        ChannelId:
          description: The channel ID in Slack, which identifies a channel within a workspace.
          type: string
          pattern: ^\S+$
          minLength: 1
          maxLength: 256
        ChannelName:
          description: The channel name in Slack.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 256
        NotifyOnCreateOrReopenCase:
          description: Whether to notify when a case is created or reopened.
          type: boolean
        NotifyOnAddCorrespondenceToCase:
          description: Whether to notify when a correspondence is added to a case.
          type: boolean
        NotifyOnResolveCase:
          description: Whether to notify when a case is resolved.
          type: boolean
        NotifyOnCaseSeverity:
          description: The severity level of a support case that a customer wants to get notified for.
          type: string
          enum:
            - none
            - all
            - high
        ChannelRoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS Support App access to perform operations for AWS services.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:iam::[0-9]{12}:role\/(.+)$
          minLength: 31
          maxLength: 2048
      required:
        - TeamId
        - ChannelId
        - NotifyOnCaseSeverity
        - ChannelRoleArn
      x-stackql-resource-name: slack_channel_configuration
      x-stackql-primaryIdentifier:
        - TeamId
        - ChannelId
      x-create-only-properties:
        - TeamId
        - ChannelId
      x-required-permissions:
        create:
          - supportapp:CreateSlackChannelConfiguration
          - supportapp:ListSlackChannelConfigurations
        read:
          - supportapp:ListSlackChannelConfigurations
        update:
          - supportapp:UpdateSlackChannelConfiguration
          - supportapp:ListSlackChannelConfigurations
        delete:
          - supportapp:DeleteSlackChannelConfiguration
          - supportapp:ListSlackChannelConfigurations
        list:
          - supportapp:ListSlackChannelConfigurations
    SlackWorkspaceConfiguration:
      type: object
      properties:
        TeamId:
          description: The team ID in Slack, which uniquely identifies a workspace.
          type: string
          pattern: ^\S+$
          minLength: 1
          maxLength: 256
        VersionId:
          description: An identifier used to update an existing Slack workspace configuration in AWS CloudFormation.
          type: string
          pattern: ^[0-9]+$
          minLength: 1
          maxLength: 256
      required:
        - TeamId
      x-stackql-resource-name: slack_workspace_configuration
      x-stackql-primaryIdentifier:
        - TeamId
      x-create-only-properties:
        - TeamId
      x-required-permissions:
        create:
          - supportapp:RegisterSlackWorkspaceForOrganization
          - supportapp:ListSlackWorkspaceConfigurations
        read:
          - supportapp:ListSlackWorkspaceConfigurations
        update:
          - supportapp:RegisterSlackWorkspaceForOrganization
          - supportapp:ListSlackWorkspaceConfigurations
        delete:
          - supportapp:ListSlackWorkspaceConfigurations
          - supportapp:DeleteSlackWorkspaceConfiguration
        list:
          - supportapp:ListSlackWorkspaceConfigurations
  x-stackQL-resources:
    account_aliases:
      name: account_aliases
      id: awscc.supportapp.account_aliases
      x-cfn-schema-name: AccountAlias
      x-type: list
      x-identifiers:
        - AccountAliasResourceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountAliasResourceId') as account_alias_resource_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::AccountAlias'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountAliasResourceId') as account_alias_resource_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::AccountAlias'
                AND region = 'us-east-1'
    account_alias:
      name: account_alias
      id: awscc.supportapp.account_alias
      x-cfn-schema-name: AccountAlias
      x-type: get
      x-identifiers:
        - AccountAliasResourceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountAlias') as account_alias,
              JSON_EXTRACT(Properties, '$.AccountAliasResourceId') as account_alias_resource_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::AccountAlias'
              AND data__Identifier = '<AccountAliasResourceId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountAlias') as account_alias,
                json_extract_path_text(Properties, 'AccountAliasResourceId') as account_alias_resource_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::AccountAlias'
                AND data__Identifier = '<AccountAliasResourceId>'
                AND region = 'us-east-1'
    slack_channel_configurations:
      name: slack_channel_configurations
      id: awscc.supportapp.slack_channel_configurations
      x-cfn-schema-name: SlackChannelConfiguration
      x-type: list
      x-identifiers:
        - TeamId
        - ChannelId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.ChannelId') as channel_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::SlackChannelConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TeamId') as team_id,
                json_extract_path_text(Properties, 'ChannelId') as channel_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::SlackChannelConfiguration'
                AND region = 'us-east-1'
    slack_channel_configuration:
      name: slack_channel_configuration
      id: awscc.supportapp.slack_channel_configuration
      x-cfn-schema-name: SlackChannelConfiguration
      x-type: get
      x-identifiers:
        - TeamId
        - ChannelId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.ChannelId') as channel_id,
              JSON_EXTRACT(Properties, '$.ChannelName') as channel_name,
              JSON_EXTRACT(Properties, '$.NotifyOnCreateOrReopenCase') as notify_on_create_or_reopen_case,
              JSON_EXTRACT(Properties, '$.NotifyOnAddCorrespondenceToCase') as notify_on_add_correspondence_to_case,
              JSON_EXTRACT(Properties, '$.NotifyOnResolveCase') as notify_on_resolve_case,
              JSON_EXTRACT(Properties, '$.NotifyOnCaseSeverity') as notify_on_case_severity,
              JSON_EXTRACT(Properties, '$.ChannelRoleArn') as channel_role_arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::SlackChannelConfiguration'
              AND data__Identifier = '<TeamId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TeamId') as team_id,
                json_extract_path_text(Properties, 'ChannelId') as channel_id,
                json_extract_path_text(Properties, 'ChannelName') as channel_name,
                json_extract_path_text(Properties, 'NotifyOnCreateOrReopenCase') as notify_on_create_or_reopen_case,
                json_extract_path_text(Properties, 'NotifyOnAddCorrespondenceToCase') as notify_on_add_correspondence_to_case,
                json_extract_path_text(Properties, 'NotifyOnResolveCase') as notify_on_resolve_case,
                json_extract_path_text(Properties, 'NotifyOnCaseSeverity') as notify_on_case_severity,
                json_extract_path_text(Properties, 'ChannelRoleArn') as channel_role_arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::SlackChannelConfiguration'
                AND data__Identifier = '<TeamId>'
                AND region = 'us-east-1'
    slack_workspace_configurations:
      name: slack_workspace_configurations
      id: awscc.supportapp.slack_workspace_configurations
      x-cfn-schema-name: SlackWorkspaceConfiguration
      x-type: list
      x-identifiers:
        - TeamId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::SlackWorkspaceConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TeamId') as team_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::SupportApp::SlackWorkspaceConfiguration'
                AND region = 'us-east-1'
    slack_workspace_configuration:
      name: slack_workspace_configuration
      id: awscc.supportapp.slack_workspace_configuration
      x-cfn-schema-name: SlackWorkspaceConfiguration
      x-type: get
      x-identifiers:
        - TeamId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::SlackWorkspaceConfiguration'
              AND data__Identifier = '<TeamId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TeamId') as team_id,
                json_extract_path_text(Properties, 'VersionId') as version_id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::SupportApp::SlackWorkspaceConfiguration'
                AND data__Identifier = '<TeamId>'
                AND region = 'us-east-1'
