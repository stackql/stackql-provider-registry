openapi: 3.0.0
info:
  title: IoTWireless
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
    Destination:
      type: object
      properties:
        Name:
          description: Unique name of destination
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          maxLength: 128
        Expression:
          description: Destination expression
          type: string
        ExpressionType:
          description: Must be RuleName
          type: string
          enum:
            - RuleName
            - MqttTopic
            - SnsTopic
        Description:
          description: Destination description
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        RoleArn:
          description: AWS role ARN that grants access
          type: string
          minLength: 20
          maxLength: 2048
        Arn:
          description: Destination arn. Returned after successful create.
          type: string
      required:
        - Name
        - Expression
        - ExpressionType
      x-stackql-resource-name: destination
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - iam:PassRole
          - iotwireless:CreateDestination
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetDestination
          - iotwireless:ListTagsForResource
        update:
          - iam:PassRole
          - iotwireless:UpdateDestination
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DeleteDestination
        list:
          - iotwireless:ListDestinations
          - iotwireless:ListTagsForResource
    LoRaWANDeviceProfile:
      type: object
      additionalProperties: false
      properties:
        SupportsClassB:
          type: boolean
        ClassBTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        PingSlotPeriod:
          type: integer
          minimum: 128
          maximum: 4096
        PingSlotDr:
          type: integer
          minimum: 0
          maximum: 15
        PingSlotFreq:
          type: integer
          minimum: 1000000
          maximum: 16700000
        SupportsClassC:
          type: boolean
        ClassCTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        MacVersion:
          type: string
          maxLength: 64
        RegParamsRevision:
          type: string
          maxLength: 64
        RxDelay1:
          type: integer
          minimum: 0
          maximum: 15
        RxDrOffset1:
          type: integer
          minimum: 0
          maximum: 7
        RxFreq2:
          type: integer
          minimum: 1000000
          maximum: 16700000
        RxDataRate2:
          type: integer
          minimum: 0
          maximum: 15
        FactoryPresetFreqsList:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/FactoryPresetFreq'
        MaxEirp:
          type: integer
          minimum: 0
          maximum: 15
        MaxDutyCycle:
          type: integer
          minimum: 0
          maximum: 100
        SupportsJoin:
          type: boolean
        RfRegion:
          type: string
          maxLength: 64
        Supports32BitFCnt:
          type: boolean
    FactoryPresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    DeviceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation
          $ref: '#/components/schemas/LoRaWANDeviceProfile'
        Tags:
          description: A list of key-value pairs that contain metadata for the device profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: device_profile
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Arn
        - Id
      x-required-permissions:
        create:
          - iotwireless:CreateDeviceProfile
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetDeviceProfile
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DeleteDeviceProfile
        list:
          - iotwireless:ListDeviceProfiles
          - iotwireless:ListTagsForResource
    LoRaWAN:
      type: object
      properties:
        RfRegion:
          description: Multicast group LoRaWAN RF region
          type: string
          minLength: 1
          maxLength: 64
        DlClass:
          description: Multicast group LoRaWAN DL Class
          type: string
          minLength: 1
          maxLength: 64
        NumberOfDevicesRequested:
          description: Multicast group number of devices requested. Returned after successful read.
          type: integer
        NumberOfDevicesInGroup:
          description: Multicast group number of devices in group. Returned after successful read.
          type: integer
      additionalProperties: false
      required:
        - RfRegion
        - DlClass
    FuotaTask:
      type: object
      properties:
        Name:
          description: Name of FUOTA task
          type: string
          maxLength: 256
        Description:
          description: FUOTA task description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: FUOTA task LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        FirmwareUpdateImage:
          description: FUOTA task firmware update image binary S3 link
          type: string
          minLength: 1
          maxLength: 2048
        FirmwareUpdateRole:
          description: FUOTA task firmware IAM role for reading S3
          type: string
          minLength: 1
          maxLength: 256
        Arn:
          description: FUOTA task arn. Returned after successful create.
          type: string
        Id:
          description: FUOTA task id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: A list of key-value pairs that contain metadata for the FUOTA task.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        FuotaTaskStatus:
          description: FUOTA task status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
        AssociateMulticastGroup:
          description: Multicast group to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateMulticastGroup:
          description: Multicast group to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
        - FirmwareUpdateImage
        - FirmwareUpdateRole
      x-stackql-resource-name: fuota_task
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Arn
        - Id
        - FuotaTaskStatus
        - LoRaWAN/StartTime
      x-required-permissions:
        create:
          - iotwireless:CreateFuotaTask
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
          - iam:GetRole
          - iam:PassRole
        read:
          - iotwireless:GetFuotaTask
          - iotwireless:ListTagsForResource
        update:
          - iam:PassRole
          - iotwireless:UpdateFuotaTask
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
          - iotwireless:AssociateMulticastGroupWithFuotaTask
          - iotwireless:DisassociateMulticastGroupFromFuotaTask
          - iotwireless:AssociateWirelessDeviceWithFuotaTask
          - iotwireless:DisassociateWirelessDeviceFromFuotaTask
        delete:
          - iotwireless:DeleteFuotaTask
        list:
          - iotwireless:ListFuotaTasks
          - iotwireless:ListTagsForResource
    MulticastGroup:
      type: object
      properties:
        Name:
          description: Name of Multicast group
          type: string
          maxLength: 256
        Description:
          description: Multicast group description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: Multicast group LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        Arn:
          description: Multicast group arn. Returned after successful create.
          type: string
        Id:
          description: Multicast group id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: A list of key-value pairs that contain metadata for the Multicast group.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Status:
          description: Multicast group status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
      x-stackql-resource-name: multicast_group
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Arn
        - Id
        - Status
        - LoRaWAN/NumberOfDevicesRequested
        - LoRaWAN/NumberOfDevicesInGroup
      x-required-permissions:
        create:
          - iotwireless:CreateMulticastGroup
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetMulticastGroup
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdateMulticastGroup
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
          - iotwireless:AssociateWirelessDeviceWithMulticastGroup
          - iotwireless:DisassociateWirelessDeviceFromMulticastGroup
        delete:
          - iotwireless:DeleteMulticastGroup
        list:
          - iotwireless:ListMulticastGroups
          - iotwireless:ListTagsForResource
    WirelessDeviceFrameInfo:
      type: string
      enum:
        - ENABLED
        - DISABLED
    LogLevel:
      type: string
      enum:
        - INFO
        - ERROR
        - DISABLED
    NetworkAnalyzerConfiguration:
      type: object
      properties:
        Name:
          description: Name of the network analyzer configuration
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
          maxLength: 1024
        Description:
          description: The description of the new resource
          type: string
          maxLength: 2048
        TraceContent:
          description: Trace content for your wireless gateway and wireless device resources
          type: object
          additionalProperties: false
          properties:
            WirelessDeviceFrameInfo:
              $ref: '#/components/schemas/WirelessDeviceFrameInfo'
            LogLevel:
              $ref: '#/components/schemas/LogLevel'
        WirelessDevices:
          description: List of wireless gateway resources that have been added to the network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        WirelessGateways:
          description: List of wireless gateway resources that have been added to the network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        Arn:
          description: Arn for network analyzer configuration, Returned upon successful create.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: network_analyzer_configuration
      x-stackql-primaryIdentifier:
        - Name
      x-create-only-properties:
        - Name
        - Tags
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - iotwireless:CreateNetworkAnalyzerConfiguration
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetNetworkAnalyzerConfiguration
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdateNetworkAnalyzerConfiguration
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DeleteNetworkAnalyzerConfiguration
        list:
          - iotwireless:ListNetworkAnalyzerConfigurations
          - iotwireless:ListTagsForResource
    SidewalkAccountInfo:
      type: object
      additionalProperties: false
      properties:
        AppServerPrivateKey:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 1
          maxLength: 4096
      required:
        - AppServerPrivateKey
    SidewalkAccountInfoWithFingerprint:
      type: object
      additionalProperties: false
      properties:
        AmazonId:
          type: string
          maxLength: 2048
        Fingerprint:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 64
          maxLength: 64
        Arn:
          type: string
    SidewalkUpdateAccount:
      type: object
      additionalProperties: false
      properties:
        AppServerPrivateKey:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 1
          maxLength: 4096
    PartnerAccount:
      type: object
      properties:
        Sidewalk:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkAccountInfo'
        PartnerAccountId:
          description: The partner account ID to disassociate from the AWS account
          type: string
          maxLength: 256
        PartnerType:
          description: The partner type
          type: string
          enum:
            - Sidewalk
        SidewalkResponse:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
        AccountLinked:
          description: Whether the partner account is linked to the AWS account.
          type: boolean
        SidewalkUpdate:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkUpdateAccount'
        Fingerprint:
          description: The fingerprint of the Sidewalk application server private key.
          type: string
        Arn:
          description: PartnerAccount arn. Returned after successful create.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: partner_account
      x-stackql-primaryIdentifier:
        - PartnerAccountId
      x-create-only-properties:
        - PartnerAccountId
      x-read-only-properties:
        - Arn
        - Fingerprint
      x-required-permissions:
        create:
          - iotwireless:AssociateAwsAccountWithPartnerAccount
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetPartnerAccount
          - iotwireless:ListTagsForResource
        list:
          - iotwireless:ListPartnerAccounts
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdatePartnerAccount
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DisassociateAwsAccountFromPartnerAccount
    LoRaWANServiceProfile:
      type: object
      additionalProperties: false
      properties:
        UlRate:
          type: integer
        UlBucketSize:
          type: integer
        UlRatePolicy:
          type: string
        DlRate:
          type: integer
        DlBucketSize:
          type: integer
        DlRatePolicy:
          type: string
        AddGwMetadata:
          type: boolean
        DevStatusReqFreq:
          type: integer
        ReportDevStatusBattery:
          type: boolean
        ReportDevStatusMargin:
          type: boolean
        DrMin:
          type: integer
        DrMax:
          type: integer
        ChannelMask:
          type: string
        PrAllowed:
          type: boolean
        HrAllowed:
          type: boolean
        RaAllowed:
          type: boolean
        NwkGeoLoc:
          type: boolean
        TargetPer:
          type: integer
        MinGwDiversity:
          type: integer
    ServiceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: LoRaWAN supports all LoRa specific attributes for service profile for CreateServiceProfile operation
          $ref: '#/components/schemas/LoRaWANServiceProfile'
        Tags:
          description: A list of key-value pairs that contain metadata for the service profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: service_profile
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
        - LoRaWAN/UlRate
        - LoRaWAN/UlBucketSize
        - LoRaWAN/UlRatePolicy
        - LoRaWAN/DlRate
        - LoRaWAN/DlBucketSize
        - LoRaWAN/DlRatePolicy
        - LoRaWAN/DevStatusReqFreq
        - LoRaWAN/ReportDevStatusBattery
        - LoRaWAN/ReportDevStatusMargin
        - LoRaWAN/DrMin
        - LoRaWAN/DrMax
        - LoRaWAN/ChannelMask
        - LoRaWAN/HrAllowed
        - LoRaWAN/NwkGeoLoc
        - LoRaWAN/TargetPer
        - LoRaWAN/MinGwDiversity
      x-required-permissions:
        create:
          - iotwireless:CreateServiceProfile
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetServiceProfile
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DeleteServiceProfile
        list:
          - iotwireless:ListServiceProfiles
          - iotwireless:ListTagsForResource
    LoRaWANGatewayVersion:
      type: object
      additionalProperties: false
      properties:
        PackageVersion:
          type: string
          minLength: 1
          maxLength: 32
        Model:
          type: string
          minLength: 1
          maxLength: 4096
        Station:
          type: string
          minLength: 1
          maxLength: 4096
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateSignature:
          type: string
          minLength: 1
          maxLength: 4096
        SigKeyCrc:
          type: integer
          format: int64
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    UpdateWirelessGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateDataSource:
          type: string
          minLength: 1
          maxLength: 4096
        UpdateDataRole:
          type: string
          minLength: 1
          maxLength: 2048
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      additionalProperties: false
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    TaskDefinition:
      type: object
      properties:
        Name:
          description: The name of the new resource.
          type: string
          minLength: 1
          maxLength: 256
        AutoCreateTasks:
          description: Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask.
          type: boolean
        Update:
          description: Information about the gateways to update.
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
        LoRaWANUpdateGatewayTaskEntry:
          description: The list of task definitions.
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
        Id:
          description: The ID of the new wireless gateway task definition
          type: string
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
        TaskDefinitionType:
          description: A filter to list only the wireless gateway task definitions that use this task definition type
          type: string
          enum:
            - UPDATE
        Arn:
          description: TaskDefinition arn. Returned after successful create.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AutoCreateTasks
      x-stackql-resource-name: task_definition
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - iotwireless:CreateWirelessGatewayTaskDefinition
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
          - iam:GetRole
          - iam:PassRole
        read:
          - iotwireless:GetWirelessGatewayTaskDefinition
          - iotwireless:ListTagsForResource
        delete:
          - iotwireless:DeleteWirelessGatewayTaskDefinition
        list:
          - iotwireless:ListWirelessGatewayTaskDefinitions
          - iotwireless:ListTagsForResource
    OtaaV10x:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - AppEui
    OtaaV11:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        JoinEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - NwkKey
        - JoinEui
    SessionKeysAbpV11:
      type: object
      additionalProperties: false
      properties:
        FNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        SNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkSEncKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - FNwkSIntKey
        - SNwkSIntKey
        - NwkSEncKey
        - AppSKey
    AbpV11:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV11'
      required:
        - DevAddr
        - SessionKeys
    SessionKeysAbpV10x:
      type: object
      additionalProperties: false
      properties:
        NwkSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - NwkSKey
        - AppSKey
    AbpV10x:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV10x'
      required:
        - DevAddr
        - SessionKeys
    FPorts:
      type: object
      additionalProperties: false
      properties:
        Applications:
          description: A list of optional LoRaWAN application information, which can be used for geolocation.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Application'
    LoRaWANDevice:
      type: object
      additionalProperties: false
      properties:
        DevEui:
          type: string
          pattern: '[a-f0-9]{16}'
        DeviceProfileId:
          type: string
          maxLength: 256
        ServiceProfileId:
          type: string
          maxLength: 256
        OtaaV11:
          $ref: '#/components/schemas/OtaaV11'
        OtaaV10x:
          $ref: '#/components/schemas/OtaaV10x'
        AbpV11:
          $ref: '#/components/schemas/AbpV11'
        AbpV10x:
          $ref: '#/components/schemas/AbpV10x'
        FPorts:
          $ref: '#/components/schemas/FPorts'
      oneOf:
        - required:
            - OtaaV11
        - required:
            - OtaaV10x
        - required:
            - AbpV11
        - required:
            - AbpV10x
    Application:
      description: LoRaWAN application configuration, which can be used to perform geolocation.
      type: object
      properties:
        DestinationName:
          description: The name of the position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          maxLength: 128
        FPort:
          description: The Fport value.
          type: integer
          minimum: 1
          maximum: 223
        Type:
          description: Application type, which can be specified to obtain real-time position information of your LoRaWAN device.
          type: string
          enum:
            - SemtechGeolocation
      additionalProperties: false
    WirelessDevice:
      type: object
      properties:
        Type:
          description: Wireless device type, currently only Sidewalk and LoRa
          type: string
          enum:
            - Sidewalk
            - LoRaWAN
        Name:
          description: Wireless device name
          type: string
          maxLength: 256
        Description:
          description: Wireless device description
          type: string
          maxLength: 2048
        DestinationName:
          description: Wireless device destination name
          type: string
          maxLength: 128
        LoRaWAN:
          description: The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
          $ref: '#/components/schemas/LoRaWANDevice'
        Tags:
          description: A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Wireless device arn. Returned after successful create.
          type: string
        Id:
          description: Wireless device Id. Returned after successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: Thing arn. Passed into update to associate Thing with Wireless device.
          type: string
        ThingName:
          description: Thing Arn. If there is a Thing created, this can be returned with a Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
        Positioning:
          description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
          type: string
          enum:
            - Enabled
            - Disabled
      required:
        - Type
        - DestinationName
      x-stackql-resource-name: wireless_device
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - ThingName
        - Id
        - Arn
      x-required-permissions:
        create:
          - iotwireless:CreateWirelessDevice
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetWirelessDevice
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdateWirelessDevice
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
          - iotwireless:AssociateWirelessDeviceWithThing
        delete:
          - iotwireless:DeleteWirelessDevice
          - iotwireless:DisassociateWirelessDeviceFromThing
        list:
          - iotwireless:ListWirelessDevices
          - iotwireless:ListTagsForResource
    DeviceCreationFileList:
      description: sidewalk create device's file path
      type: array
      items:
        type: string
        maxLength: 1024
    Role:
      description: sidewalk role
      type: string
      maxLength: 2048
    WirelessDeviceImportTask:
      type: object
      properties:
        Id:
          description: Id for Wireless Device Import Task, Returned upon successful start.
          type: string
          maxLength: 256
        Arn:
          description: Arn for Wireless Device Import Task, Returned upon successful start.
          type: string
          maxLength: 128
        DestinationName:
          description: Destination Name for import task
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          maxLength: 128
        CreationDate:
          description: CreationDate for import task
          type: string
        Sidewalk:
          description: sidewalk contain file for created device and role
          type: object
          additionalProperties: false
          properties:
            SidewalkManufacturingSn:
              type: string
              maxLength: 64
            DeviceCreationFile:
              type: string
              maxLength: 1024
            DeviceCreationFileList:
              $ref: '#/components/schemas/DeviceCreationFileList'
            Role:
              $ref: '#/components/schemas/Role'
          oneOf:
            - allOf:
                - required:
                    - DeviceCreationFile
                - required:
                    - Role
            - required:
                - SidewalkManufacturingSn
        Status:
          description: Status for import task
          type: string
          enum:
            - INITIALIZING
            - INITIALIZED
            - PENDING
            - COMPLETE
            - FAILED
            - DELETING
        StatusReason:
          description: StatusReason for import task
          type: string
        InitializedImportedDevicesCount:
          description: Initialized Imported Devices Count
          type: integer
        PendingImportedDevicesCount:
          description: Pending Imported Devices Count
          type: integer
        OnboardedImportedDevicesCount:
          description: Onboarded Imported Devices Count
          type: integer
        FailedImportedDevicesCount:
          description: Failed Imported Devices Count
          type: integer
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DestinationName
        - Sidewalk
      x-stackql-resource-name: wireless_device_import_task
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
        - CreationDate
        - Status
        - StatusReason
        - InitializedImportedDevicesCount
        - PendingImportedDevicesCount
        - OnboardedImportedDevicesCount
        - FailedImportedDevicesCount
        - Sidewalk/DeviceCreationFileList
      x-required-permissions:
        create:
          - iotwireless:StartWirelessDeviceImportTask
          - iotwireless:StartSingleWirelessDeviceImportTask
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
          - iam:PassRole
        read:
          - iotwireless:GetWirelessDeviceImportTask
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdateWirelessDeviceImportTask
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
          - iam:PassRole
        delete:
          - iotwireless:DeleteWirelessDeviceImportTask
        list:
          - iotwireless:ListWirelessDeviceImportTasks
          - iotwireless:ListTagsForResource
    LoRaWANGateway:
      type: object
      additionalProperties: false
      properties:
        GatewayEui:
          type: string
          pattern: ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
        RfRegion:
          type: string
          maxLength: 64
      required:
        - GatewayEui
        - RfRegion
    WirelessGateway:
      type: object
      properties:
        Name:
          description: Name of Wireless Gateway.
          type: string
          maxLength: 256
        Description:
          description: Description of Wireless Gateway.
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the gateway.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LoRaWAN:
          description: The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Gateway.
          $ref: '#/components/schemas/LoRaWANGateway'
        Arn:
          description: Arn for Wireless Gateway. Returned upon successful create.
          type: string
        Id:
          description: Id for Wireless Gateway. Returned upon successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: Thing Arn. Passed into Update to associate a Thing with the Wireless Gateway.
          type: string
        ThingName:
          description: Thing Name. If there is a Thing created, this can be returned with a Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
      required:
        - LoRaWAN
      x-stackql-resource-name: wireless_gateway
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - iotwireless:CreateWirelessGateway
          - iotwireless:TagResource
          - iotwireless:ListTagsForResource
        read:
          - iotwireless:GetWirelessGateway
          - iotwireless:ListTagsForResource
        update:
          - iotwireless:UpdateWirelessGateway
          - iotwireless:UntagResource
          - iotwireless:ListTagsForResource
          - iotwireless:AssociateWirelessGatewayWithThing
        delete:
          - iotwireless:DeleteWirelessGateway
          - iotwireless:DisassociateWirelessGatewayFromThing
        list:
          - iotwireless:ListWirelessGateways
          - iotwireless:ListTagsForResource
  x-stackQL-resources:
    destinations:
      name: destinations
      id: awscc.iotwireless.destinations
      x-cfn-schema-name: Destination
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::Destination'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::Destination'
                AND region = 'us-east-1'
    destination:
      name: destination
      id: awscc.iotwireless.destination
      x-cfn-schema-name: Destination
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Expression') as expression,
              JSON_EXTRACT(Properties, '$.ExpressionType') as expression_type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::Destination'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Expression') as expression,
                json_extract_path_text(Properties, 'ExpressionType') as expression_type,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::Destination'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    device_profiles:
      name: device_profiles
      id: awscc.iotwireless.device_profiles
      x-cfn-schema-name: DeviceProfile
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
                AND region = 'us-east-1'
    device_profile:
      name: device_profile
      id: awscc.iotwireless.device_profile
      x-cfn-schema-name: DeviceProfile
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    fuota_tasks:
      name: fuota_tasks
      id: awscc.iotwireless.fuota_tasks
      x-cfn-schema-name: FuotaTask
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
                AND region = 'us-east-1'
    fuota_task:
      name: fuota_task
      id: awscc.iotwireless.fuota_task
      x-cfn-schema-name: FuotaTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.FirmwareUpdateImage') as firmware_update_image,
              JSON_EXTRACT(Properties, '$.FirmwareUpdateRole') as firmware_update_role,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.FuotaTaskStatus') as fuota_task_status,
              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as associate_wireless_device,
              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as disassociate_wireless_device,
              JSON_EXTRACT(Properties, '$.AssociateMulticastGroup') as associate_multicast_group,
              JSON_EXTRACT(Properties, '$.DisassociateMulticastGroup') as disassociate_multicast_group
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'FirmwareUpdateImage') as firmware_update_image,
                json_extract_path_text(Properties, 'FirmwareUpdateRole') as firmware_update_role,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'FuotaTaskStatus') as fuota_task_status,
                json_extract_path_text(Properties, 'AssociateWirelessDevice') as associate_wireless_device,
                json_extract_path_text(Properties, 'DisassociateWirelessDevice') as disassociate_wireless_device,
                json_extract_path_text(Properties, 'AssociateMulticastGroup') as associate_multicast_group,
                json_extract_path_text(Properties, 'DisassociateMulticastGroup') as disassociate_multicast_group
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    multicast_groups:
      name: multicast_groups
      id: awscc.iotwireless.multicast_groups
      x-cfn-schema-name: MulticastGroup
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
                AND region = 'us-east-1'
    multicast_group:
      name: multicast_group
      id: awscc.iotwireless.multicast_group
      x-cfn-schema-name: MulticastGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as associate_wireless_device,
              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as disassociate_wireless_device
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'AssociateWirelessDevice') as associate_wireless_device,
                json_extract_path_text(Properties, 'DisassociateWirelessDevice') as disassociate_wireless_device
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    network_analyzer_configurations:
      name: network_analyzer_configurations
      id: awscc.iotwireless.network_analyzer_configurations
      x-cfn-schema-name: NetworkAnalyzerConfiguration
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
                AND region = 'us-east-1'
    network_analyzer_configuration:
      name: network_analyzer_configuration
      id: awscc.iotwireless.network_analyzer_configuration
      x-cfn-schema-name: NetworkAnalyzerConfiguration
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TraceContent') as trace_content,
              JSON_EXTRACT(Properties, '$.WirelessDevices') as wireless_devices,
              JSON_EXTRACT(Properties, '$.WirelessGateways') as wireless_gateways,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'TraceContent') as trace_content,
                json_extract_path_text(Properties, 'WirelessDevices') as wireless_devices,
                json_extract_path_text(Properties, 'WirelessGateways') as wireless_gateways,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    partner_accounts:
      name: partner_accounts
      id: awscc.iotwireless.partner_accounts
      x-cfn-schema-name: PartnerAccount
      x-type: list
      x-identifiers:
        - PartnerAccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PartnerAccountId') as partner_account_id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PartnerAccountId') as partner_account_id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
                AND region = 'us-east-1'
    partner_account:
      name: partner_account
      id: awscc.iotwireless.partner_account
      x-cfn-schema-name: PartnerAccount
      x-type: get
      x-identifiers:
        - PartnerAccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Sidewalk') as sidewalk,
              JSON_EXTRACT(Properties, '$.PartnerAccountId') as partner_account_id,
              JSON_EXTRACT(Properties, '$.PartnerType') as partner_type,
              JSON_EXTRACT(Properties, '$.SidewalkResponse') as sidewalk_response,
              JSON_EXTRACT(Properties, '$.AccountLinked') as account_linked,
              JSON_EXTRACT(Properties, '$.SidewalkUpdate') as sidewalk_update,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
              AND data__Identifier = '<PartnerAccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Sidewalk') as sidewalk,
                json_extract_path_text(Properties, 'PartnerAccountId') as partner_account_id,
                json_extract_path_text(Properties, 'PartnerType') as partner_type,
                json_extract_path_text(Properties, 'SidewalkResponse') as sidewalk_response,
                json_extract_path_text(Properties, 'AccountLinked') as account_linked,
                json_extract_path_text(Properties, 'SidewalkUpdate') as sidewalk_update,
                json_extract_path_text(Properties, 'Fingerprint') as fingerprint,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
                AND data__Identifier = '<PartnerAccountId>'
                AND region = 'us-east-1'
    service_profiles:
      name: service_profiles
      id: awscc.iotwireless.service_profiles
      x-cfn-schema-name: ServiceProfile
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
                AND region = 'us-east-1'
    service_profile:
      name: service_profile
      id: awscc.iotwireless.service_profile
      x-cfn-schema-name: ServiceProfile
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    task_definitions:
      name: task_definitions
      id: awscc.iotwireless.task_definitions
      x-cfn-schema-name: TaskDefinition
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
                AND region = 'us-east-1'
    task_definition:
      name: task_definition
      id: awscc.iotwireless.task_definition
      x-cfn-schema-name: TaskDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AutoCreateTasks') as auto_create_tasks,
              JSON_EXTRACT(Properties, '$.Update') as _update,
              JSON_EXTRACT(Properties, '$.LoRaWANUpdateGatewayTaskEntry') as lo_ra_wan_update_gateway_task_entry,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TaskDefinitionType') as task_definition_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'AutoCreateTasks') as auto_create_tasks,
                json_extract_path_text(Properties, 'Update') as _update,
                json_extract_path_text(Properties, 'LoRaWANUpdateGatewayTaskEntry') as lo_ra_wan_update_gateway_task_entry,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'TaskDefinitionType') as task_definition_type,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    wireless_devices:
      name: wireless_devices
      id: awscc.iotwireless.wireless_devices
      x-cfn-schema-name: WirelessDevice
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
                AND region = 'us-east-1'
    wireless_device:
      name: wireless_device
      id: awscc.iotwireless.wireless_device
      x-cfn-schema-name: WirelessDevice
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DestinationName') as destination_name,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,
              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,
              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as last_uplink_received_at,
              JSON_EXTRACT(Properties, '$.Positioning') as positioning
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DestinationName') as destination_name,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ThingArn') as thing_arn,
                json_extract_path_text(Properties, 'ThingName') as thing_name,
                json_extract_path_text(Properties, 'LastUplinkReceivedAt') as last_uplink_received_at,
                json_extract_path_text(Properties, 'Positioning') as positioning
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    wireless_device_import_tasks:
      name: wireless_device_import_tasks
      id: awscc.iotwireless.wireless_device_import_tasks
      x-cfn-schema-name: WirelessDeviceImportTask
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
                AND region = 'us-east-1'
    wireless_device_import_task:
      name: wireless_device_import_task
      id: awscc.iotwireless.wireless_device_import_task
      x-cfn-schema-name: WirelessDeviceImportTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DestinationName') as destination_name,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.Sidewalk') as sidewalk,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.InitializedImportedDevicesCount') as initialized_imported_devices_count,
              JSON_EXTRACT(Properties, '$.PendingImportedDevicesCount') as pending_imported_devices_count,
              JSON_EXTRACT(Properties, '$.OnboardedImportedDevicesCount') as onboarded_imported_devices_count,
              JSON_EXTRACT(Properties, '$.FailedImportedDevicesCount') as failed_imported_devices_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DestinationName') as destination_name,
                json_extract_path_text(Properties, 'CreationDate') as creation_date,
                json_extract_path_text(Properties, 'Sidewalk') as sidewalk,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'StatusReason') as status_reason,
                json_extract_path_text(Properties, 'InitializedImportedDevicesCount') as initialized_imported_devices_count,
                json_extract_path_text(Properties, 'PendingImportedDevicesCount') as pending_imported_devices_count,
                json_extract_path_text(Properties, 'OnboardedImportedDevicesCount') as onboarded_imported_devices_count,
                json_extract_path_text(Properties, 'FailedImportedDevicesCount') as failed_imported_devices_count,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    wireless_gateways:
      name: wireless_gateways
      id: awscc.iotwireless.wireless_gateways
      x-cfn-schema-name: WirelessGateway
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
                AND region = 'us-east-1'
    wireless_gateway:
      name: wireless_gateway
      id: awscc.iotwireless.wireless_gateway
      x-cfn-schema-name: WirelessGateway
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LoRaWAN') as lo_ra_wan,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,
              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,
              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as last_uplink_received_at
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'LoRaWAN') as lo_ra_wan,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ThingArn') as thing_arn,
                json_extract_path_text(Properties, 'ThingName') as thing_name,
                json_extract_path_text(Properties, 'LastUplinkReceivedAt') as last_uplink_received_at
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
