openapi: 3.0.0
info:
  title: QLDB
  version: 1.0.0
paths: {}
components:
  schemas:
    Arn:
      type: string
      pattern: arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]*:[\w+=,.@-]+(/[\w+=,.@-]+)*
    KinesisConfiguration:
      type: object
      properties:
        StreamArn:
          type: object
          $ref: '#/components/schemas/Arn'
        AggregationEnabled:
          type: boolean
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 127
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 255
      required:
        - Key
        - Value
      additionalProperties: false
    Stream:
      type: object
      properties:
        LedgerName:
          type: string
        StreamName:
          type: string
        RoleArn:
          $ref: '#/components/schemas/Arn'
        InclusiveStartTime:
          type: string
        ExclusiveEndTime:
          type: string
        KinesisConfiguration:
          $ref: '#/components/schemas/KinesisConfiguration'
        Tags:
          type: array
          maxItems: 50
          x-insertionOrder: false
          uniqueItems: true
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          $ref: '#/components/schemas/Arn'
        Id:
          type: string
      required:
        - LedgerName
        - StreamName
        - RoleArn
        - KinesisConfiguration
        - InclusiveStartTime
      x-stackql-resource-name: stream
      x-stackql-primaryIdentifier:
        - LedgerName
        - Id
      x-create-only-properties:
        - LedgerName
        - StreamName
        - RoleArn
        - KinesisConfiguration
        - InclusiveStartTime
        - ExclusiveEndTime
      x-read-only-properties:
        - Id
        - Arn
      x-required-permissions:
        create:
          - iam:PassRole
          - qldb:StreamJournalToKinesis
          - qldb:DescribeJournalKinesisStream
        delete:
          - qldb:CancelJournalKinesisStream
          - qldb:DescribeJournalKinesisStream
        read:
          - qldb:DescribeJournalKinesisStream
          - qldb:ListTagsForResource
        update:
          - qldb:DescribeJournalKinesisStream
          - qldb:UntagResource
          - qldb:TagResource
        list:
          - qldb:listJournalKinesisStreamsForLedger
  x-stackQL-resources:
    streams:
      name: streams
      id: awscc.qldb.streams
      x-cfn-schema-name: Stream
      x-type: list
      x-identifiers:
        - LedgerName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LedgerName') as ledger_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::QLDB::Stream'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LedgerName') as ledger_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resources WHERE data__TypeName = 'AWS::QLDB::Stream'
                AND region = 'us-east-1'
    qldb_stream:
      name: qldb_stream
      id: awscc.qldb.qldb_stream
      x-cfn-schema-name: Stream
      x-type: get
      x-identifiers:
        - LedgerName
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LedgerName') as ledger_name,
              JSON_EXTRACT(Properties, '$.StreamName') as stream_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.InclusiveStartTime') as inclusive_start_time,
              JSON_EXTRACT(Properties, '$.ExclusiveEndTime') as exclusive_end_time,
              JSON_EXTRACT(Properties, '$.KinesisConfiguration') as kinesis_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::QLDB::Stream'
              AND data__Identifier = '<LedgerName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LedgerName') as ledger_name,
                json_extract_path_text(Properties, 'StreamName') as stream_name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'InclusiveStartTime') as inclusive_start_time,
                json_extract_path_text(Properties, 'ExclusiveEndTime') as exclusive_end_time,
                json_extract_path_text(Properties, 'KinesisConfiguration') as kinesis_configuration,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id
                FROM awscc.cloud_control.resource WHERE data__TypeName = 'AWS::QLDB::Stream'
                AND data__Identifier = '<LedgerName>'
                AND region = 'us-east-1'
