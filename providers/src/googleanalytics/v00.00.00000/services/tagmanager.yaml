openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Tag Manager API
  description: This API allows clients to access and modify container and tag configuration.
  version: v2
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/tag-manager
servers:
  - url: https://tagmanager.googleapis.com
components:
  schemas:
    RevertTriggerResponse:
      type: object
      description: The result of reverting a trigger in a workspace.
      properties:
        trigger:
          description: Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.
          $ref: '#/components/schemas/Trigger'
      id: RevertTriggerResponse
    RevertVariableResponse:
      id: RevertVariableResponse
      properties:
        variable:
          description: Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version.
          $ref: '#/components/schemas/Variable'
      type: object
      description: The result of reverting a variable in a workspace.
    Variable:
      properties:
        scheduleStartMs:
          description: The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
          format: int64
          type: string
        name:
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.variables.create
              - tagmanager.accounts.containers.workspaces.variables.update
          description: Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
          type: string
        variableId:
          description: The Variable ID uniquely identifies the GTM Variable.
          type: string
        parentFolderId:
          description: Parent folder id.
          type: string
        fingerprint:
          description: The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
          type: string
        path:
          description: GTM Variable's API relative path.
          type: string
        notes:
          type: string
          description: User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
        workspaceId:
          description: GTM Workspace ID.
          type: string
        disablingTriggerId:
          items:
            type: string
          type: array
          description: 'For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update'
        tagManagerUrl:
          type: string
          description: Auto generated link to the tag manager UI
        formatValue:
          description: Option to convert a variable value to other value.
          $ref: '#/components/schemas/VariableFormatValue'
        enablingTriggerId:
          description: 'For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update'
          items:
            type: string
          type: array
        accountId:
          type: string
          description: GTM Account ID.
        parameter:
          description: The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        type:
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.variables.create
              - tagmanager.accounts.containers.workspaces.variables.update
          description: GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
          type: string
        scheduleEndMs:
          format: int64
          description: The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
          type: string
        containerId:
          type: string
          description: GTM Container ID.
      id: Variable
      description: Represents a Google Tag Manager Variable.
      type: object
    FolderEntities:
      description: Represents a Google Tag Manager Folder's contents.
      type: object
      properties:
        variable:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
          description: The list of variables inside the folder.
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        trigger:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          description: The list of triggers inside the folder.
        tag:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: The list of tags inside the folder.
      id: FolderEntities
    Tag:
      id: Tag
      properties:
        fingerprint:
          type: string
          description: The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.
        liveOnly:
          type: boolean
          description: If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
        blockingTriggerId:
          type: array
          description: Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          items:
            type: string
        firingTriggerId:
          type: array
          description: Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          items:
            type: string
        parentFolderId:
          type: string
          description: Parent folder id.
        accountId:
          description: GTM Account ID.
          type: string
        monitoringMetadataTagNameKey:
          type: string
          description: If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
        priority:
          description: User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          $ref: '#/components/schemas/Parameter'
        monitoringMetadata:
          $ref: '#/components/schemas/Parameter'
          description: 'A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update'
        blockingRuleId:
          items:
            type: string
          description: Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: array
        notes:
          description: User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: string
        name:
          type: string
          description: Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.tags.create
              - tagmanager.accounts.containers.workspaces.tags.update
        scheduleStartMs:
          type: string
          description: The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          format: int64
        teardownTag:
          description: The list of teardown tags. Currently we only allow one.
          type: array
          items:
            $ref: '#/components/schemas/TeardownTag'
        parameter:
          description: The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        type:
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.tags.create
              - tagmanager.accounts.containers.workspaces.tags.update
          description: GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: string
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        tagFiringOption:
          description: Option to fire this tag.
          enumDescriptions:
            - ''
            - Tag can be fired multiple times per event.
            - Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).
            - Tag can only be fired per load (e.g., app load or page load).
          type: string
          enum:
            - tagFiringOptionUnspecified
            - unlimited
            - oncePerEvent
            - oncePerLoad
        containerId:
          type: string
          description: GTM Container ID.
        paused:
          description: Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: boolean
        tagId:
          type: string
          description: The Tag ID uniquely identifies the GTM Tag.
        firingRuleId:
          items:
            type: string
          description: Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: array
        setupTag:
          type: array
          items:
            $ref: '#/components/schemas/SetupTag'
          description: The list of setup tags. Currently we only allow one.
        workspaceId:
          description: GTM Workspace ID.
          type: string
        path:
          description: GTM Tag's API relative path.
          type: string
        consentSettings:
          $ref: '#/components/schemas/TagConsentSetting'
          description: Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
        scheduleEndMs:
          type: string
          format: int64
          description: The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
      type: object
      description: Represents a Google Tag Manager Tag.
    SetupTag:
      properties:
        stopOnSetupFailure:
          type: boolean
          description: If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.
        tagName:
          type: string
          description: The name of the setup tag.
      description: Represents a reference to atag that fires before another tag in order to set up dependencies.
      id: SetupTag
      type: object
    MergeConflict:
      type: object
      description: Represents a merge conflict.
      properties:
        entityInWorkspace:
          description: The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.
          $ref: '#/components/schemas/Entity'
        entityInBaseVersion:
          description: The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version.
          $ref: '#/components/schemas/Entity'
      id: MergeConflict
    ListUserPermissionsResponse:
      description: List user permissions response.
      properties:
        userPermission:
          items:
            $ref: '#/components/schemas/UserPermission'
          description: All GTM UserPermissions of a GTM Account.
          type: array
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
      type: object
      id: ListUserPermissionsResponse
    ListAccountsResponse:
      description: List Accounts Response.
      type: object
      id: ListAccountsResponse
      properties:
        account:
          type: array
          items:
            $ref: '#/components/schemas/Account'
          description: List of GTM Accounts that a user has access to.
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
    ContainerAccess:
      id: ContainerAccess
      type: object
      description: Defines the Google Tag Manager Container access permissions.
      properties:
        permission:
          enum:
            - containerPermissionUnspecified
            - noAccess
            - read
            - edit
            - approve
            - publish
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
          type: string
        containerId:
          description: GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
          type: string
    ListGtagConfigResponse:
      type: object
      properties:
        gtagConfig:
          type: array
          description: All Google tag configs in a Container.
          items:
            $ref: '#/components/schemas/GtagConfig'
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
      id: ListGtagConfigResponse
    ListTriggersResponse:
      description: List triggers response.
      type: object
      properties:
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
        trigger:
          description: All GTM Triggers of a GTM Container.
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
      id: ListTriggersResponse
    ListContainersResponse:
      description: List Containers Response.
      type: object
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        container:
          type: array
          description: All Containers of a GTM Account.
          items:
            $ref: '#/components/schemas/Container'
      id: ListContainersResponse
    Parameter:
      description: Represents a Google Tag Manager Parameter.
      id: Parameter
      type: object
      properties:
        list:
          type: array
          description: This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          items:
            $ref: '#/components/schemas/Parameter'
        map:
          description: This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        type:
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.tags.create
              - tagmanager.accounts.containers.workspaces.tags.update
              - tagmanager.accounts.containers.workspaces.triggers.create
              - tagmanager.accounts.containers.workspaces.triggers.update
              - tagmanager.accounts.containers.workspaces.variables.create
              - tagmanager.accounts.containers.workspaces.variables.update
          enum:
            - typeUnspecified
            - template
            - integer
            - boolean
            - list
            - map
            - triggerReference
            - tagReference
          type: string
          description: 'The parameter type. Valid values are: - boolean: The value represents a boolean, represented as ''true'' or ''false'' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update'
          enumDescriptions:
            - ''
            - May include variable references (such as "{{myVariable}}").
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        value:
          description: A parameter's value (may contain variable references such as "{{myVariable}}") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: string
        key:
          description: The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
          type: string
    BuiltInVariable:
      type: object
      id: BuiltInVariable
      properties:
        name:
          type: string
          description: Name of the built-in variable to be used to refer to the built-in variable.
        workspaceId:
          type: string
          description: GTM Workspace ID.
        path:
          type: string
          description: GTM BuiltInVariable's API relative path.
        type:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - For web or mobile.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - For web or mobile.
            - ''
            - For web or mobile.
            - For web or mobile.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - builtInVariableTypeUnspecified
            - pageUrl
            - pageHostname
            - pagePath
            - referrer
            - event
            - clickElement
            - clickClasses
            - clickId
            - clickTarget
            - clickUrl
            - clickText
            - firstPartyServingUrl
            - formElement
            - formClasses
            - formId
            - formTarget
            - formUrl
            - formText
            - errorMessage
            - errorUrl
            - errorLine
            - newHistoryUrl
            - oldHistoryUrl
            - newHistoryFragment
            - oldHistoryFragment
            - newHistoryState
            - oldHistoryState
            - historySource
            - containerVersion
            - debugMode
            - randomNumber
            - containerId
            - appId
            - appName
            - appVersionCode
            - appVersionName
            - language
            - osVersion
            - platform
            - sdkVersion
            - deviceName
            - resolution
            - advertiserId
            - advertisingTrackingEnabled
            - htmlId
            - environmentName
            - ampBrowserLanguage
            - ampCanonicalPath
            - ampCanonicalUrl
            - ampCanonicalHost
            - ampReferrer
            - ampTitle
            - ampClientId
            - ampClientTimezone
            - ampClientTimestamp
            - ampClientScreenWidth
            - ampClientScreenHeight
            - ampClientScrollX
            - ampClientScrollY
            - ampClientMaxScrollX
            - ampClientMaxScrollY
            - ampTotalEngagedTime
            - ampPageViewId
            - ampPageLoadTime
            - ampPageDownloadTime
            - ampGtmEvent
            - eventName
            - firebaseEventParameterCampaign
            - firebaseEventParameterCampaignAclid
            - firebaseEventParameterCampaignAnid
            - firebaseEventParameterCampaignClickTimestamp
            - firebaseEventParameterCampaignContent
            - firebaseEventParameterCampaignCp1
            - firebaseEventParameterCampaignGclid
            - firebaseEventParameterCampaignSource
            - firebaseEventParameterCampaignTerm
            - firebaseEventParameterCurrency
            - firebaseEventParameterDynamicLinkAcceptTime
            - firebaseEventParameterDynamicLinkLinkid
            - firebaseEventParameterNotificationMessageDeviceTime
            - firebaseEventParameterNotificationMessageId
            - firebaseEventParameterNotificationMessageName
            - firebaseEventParameterNotificationMessageTime
            - firebaseEventParameterNotificationTopic
            - firebaseEventParameterPreviousAppVersion
            - firebaseEventParameterPreviousOsVersion
            - firebaseEventParameterPrice
            - firebaseEventParameterProductId
            - firebaseEventParameterQuantity
            - firebaseEventParameterValue
            - videoProvider
            - videoUrl
            - videoTitle
            - videoDuration
            - videoPercent
            - videoVisible
            - videoStatus
            - videoCurrentTime
            - scrollDepthThreshold
            - scrollDepthUnits
            - scrollDepthDirection
            - elementVisibilityRatio
            - elementVisibilityTime
            - elementVisibilityFirstTime
            - elementVisibilityRecentTime
            - requestPath
            - requestMethod
            - clientName
            - queryString
            - serverPageLocationUrl
            - serverPageLocationPath
            - serverPageLocationHostname
            - visitorRegion
          description: Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update
        containerId:
          type: string
          description: GTM Container ID.
        accountId:
          description: GTM Account ID.
          type: string
      description: Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.
    RevertBuiltInVariableResponse:
      description: The result of reverting a built-in variable in a workspace.
      type: object
      id: RevertBuiltInVariableResponse
      properties:
        enabled:
          description: Whether the built-in variable is enabled after reversion.
          type: boolean
    Account:
      properties:
        fingerprint:
          type: string
          description: The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.
        path:
          type: string
          description: GTM Account's API relative path.
        name:
          type: string
          description: Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        features:
          description: Read-only Account feature set
          $ref: '#/components/schemas/AccountFeatures'
        shareData:
          type: boolean
          description: Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update
        accountId:
          description: The Account ID uniquely identifies the GTM Account.
          type: string
      id: Account
      description: Represents a Google Tag Manager Account.
      type: object
    ListWorkspacesResponse:
      properties:
        workspace:
          type: array
          description: All Workspaces of a GTM Container.
          items:
            $ref: '#/components/schemas/Workspace'
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      description: A list of workspaces in a container.
      id: ListWorkspacesResponse
      type: object
    Folder:
      type: object
      id: Folder
      description: Represents a Google Tag Manager Folder.
      properties:
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        notes:
          description: User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update
          type: string
        folderId:
          description: The Folder ID uniquely identifies the GTM Folder.
          type: string
        path:
          description: GTM Folder's API relative path.
          type: string
        name:
          type: string
          description: Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.folders.create
              - tagmanager.accounts.containers.workspaces.folders.update
        accountId:
          description: GTM Account ID.
          type: string
        workspaceId:
          description: GTM Workspace ID.
          type: string
        fingerprint:
          description: The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.
          type: string
        containerId:
          type: string
          description: GTM Container ID.
    PublishContainerVersionResponse:
      properties:
        compilerError:
          type: boolean
          description: Compiler errors or not.
        containerVersion:
          $ref: '#/components/schemas/ContainerVersion'
          description: The container version created.
      description: Publish container version response.
      id: PublishContainerVersionResponse
      type: object
    VariableFormatValue:
      id: VariableFormatValue
      properties:
        convertFalseToValue:
          $ref: '#/components/schemas/Parameter'
          description: The value to convert if a variable value is false.
        convertNullToValue:
          description: The value to convert if a variable value is null.
          $ref: '#/components/schemas/Parameter'
        caseConversionType:
          enum:
            - none
            - lowercase
            - uppercase
          type: string
          description: The option to convert a string-type variable value to either lowercase or uppercase.
          enumDescriptions:
            - ''
            - The option to convert a variable value to lowercase.
            - The option to convert a variable value to uppercase.
        convertTrueToValue:
          $ref: '#/components/schemas/Parameter'
          description: The value to convert if a variable value is true.
        convertUndefinedToValue:
          $ref: '#/components/schemas/Parameter'
          description: The value to convert if a variable value is undefined.
      type: object
    Entity:
      type: object
      id: Entity
      description: A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
      properties:
        tag:
          $ref: '#/components/schemas/Tag'
          description: The tag being represented by the entity.
        client:
          description: The client being represented by the entity.
          $ref: '#/components/schemas/Client'
        folder:
          description: The folder being represented by the entity.
          $ref: '#/components/schemas/Folder'
        changeStatus:
          enum:
            - changeStatusUnspecified
            - none
            - added
            - deleted
            - updated
          enumDescriptions:
            - ''
            - The entity has never been changed.
            - The entity is added to the workspace.
            - The entity is deleted from the workspace.
            - The entity has been updated in the workspace.
          description: Represents how the entity has been changed in the workspace.
          type: string
        variable:
          description: The variable being represented by the entity.
          $ref: '#/components/schemas/Variable'
        trigger:
          description: The trigger being represented by the entity.
          $ref: '#/components/schemas/Trigger'
    ContainerFeatures:
      id: ContainerFeatures
      type: object
      properties:
        supportUserPermissions:
          description: Whether this Container supports user permissions managed by GTM.
          type: boolean
        supportWorkspaces:
          description: Whether this Container supports workspaces.
          type: boolean
        supportFolders:
          type: boolean
          description: Whether this Container supports folders.
        supportTriggers:
          description: Whether this Container supports triggers.
          type: boolean
        supportTags:
          type: boolean
          description: Whether this Container supports tags.
        supportEnvironments:
          type: boolean
          description: Whether this Container supports environments.
        supportGtagConfigs:
          description: Whether this Container supports Google tag config.
          type: boolean
        supportVersions:
          description: Whether this Container supports Container versions.
          type: boolean
        supportVariables:
          description: Whether this Container supports variables.
          type: boolean
        supportClients:
          description: Whether this Container supports clients.
          type: boolean
        supportBuiltInVariables:
          type: boolean
          description: Whether this Container supports built-in variables
        supportTemplates:
          description: Whether this Container supports templates.
          type: boolean
        supportZones:
          type: boolean
          description: Whether this Container supports zones.
    GetWorkspaceStatusResponse:
      type: object
      id: GetWorkspaceStatusResponse
      description: The changes that have occurred in the workspace since the base container version.
      properties:
        mergeConflict:
          description: The merge conflict after sync.
          items:
            $ref: '#/components/schemas/MergeConflict'
          type: array
        workspaceChange:
          items:
            $ref: '#/components/schemas/Entity'
          type: array
          description: Entities that have been changed in the workspace.
    ListDestinationsResponse:
      properties:
        destination:
          type: array
          description: All Destinations linked to a GTM Container.
          items:
            $ref: '#/components/schemas/Destination'
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      type: object
      id: ListDestinationsResponse
    ZoneChildContainer:
      description: Represents a child container of a Zone.
      id: ZoneChildContainer
      type: object
      properties:
        publicId:
          description: The child container's public id.
          type: string
        nickname:
          type: string
          description: The zone's nickname for the child container.
    Container:
      properties:
        fingerprint:
          description: The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
          type: string
        name:
          type: string
          annotations:
            required:
              - tagmanager.accounts.containers.create
              - tagmanager.accounts.containers.update
          description: Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
        domainName:
          type: array
          description: List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
          items:
            type: string
        taggingServerUrls:
          description: List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
          items:
            type: string
          type: array
        tagIds:
          type: array
          description: All Tag IDs that refer to this Container.
          items:
            type: string
        accountId:
          description: GTM Account ID.
          type: string
        features:
          description: Read-only Container feature set.
          $ref: '#/components/schemas/ContainerFeatures'
        path:
          description: GTM Container's API relative path.
          type: string
        containerId:
          description: The Container ID uniquely identifies the GTM Container.
          type: string
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        notes:
          description: Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
          type: string
        usageContext:
          annotations:
            required:
              - tagmanager.accounts.containers.create
              - tagmanager.accounts.containers.update
          description: 'List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update'
          items:
            type: string
            enum:
              - usageContextUnspecified
              - web
              - android
              - ios
              - androidSdk5
              - iosSdk5
              - amp
              - server
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
          type: array
        publicId:
          type: string
          description: Container Public ID.
      type: object
      description: Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
      id: Container
    TagConsentSetting:
      id: TagConsentSetting
      type: object
      properties:
        consentStatus:
          type: string
          enum:
            - notSet
            - notNeeded
            - needed
          description: The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.
          enumDescriptions:
            - Default value where user has not specified any setting on it.
            - Tag doesn't require any additional consent settings.
            - Tag requires additional consent settings.
        consentType:
          description: The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING.
          $ref: '#/components/schemas/Parameter'
    Condition:
      properties:
        parameter:
          items:
            $ref: '#/components/schemas/Parameter'
          description: 'A list of named parameters (key/value), depending on the condition''s type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update'
          type: array
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.triggers.create
              - tagmanager.accounts.containers.workspaces.triggers.update
        type:
          type: string
          enum:
            - conditionTypeUnspecified
            - equals
            - contains
            - startsWith
            - endsWith
            - matchRegex
            - greater
            - greaterOrEquals
            - less
            - lessOrEquals
            - cssSelector
            - urlMatches
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.triggers.create
              - tagmanager.accounts.containers.workspaces.triggers.update
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - 'NOTE(lanzone): When defining a ConditionType here, don''t forget to also define a matching PredicateType (in condition.proto).'
          description: The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
      description: Represents a predicate.
      type: object
      id: Condition
    ListZonesResponse:
      id: ListZonesResponse
      type: object
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        zone:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
          description: All GTM Zones of a GTM Container.
    ListContainerVersionsResponse:
      description: List container versions response.
      properties:
        containerVersionHeader:
          description: All container version headers of a GTM Container.
          type: array
          items:
            $ref: '#/components/schemas/ContainerVersionHeader'
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
      id: ListContainerVersionsResponse
      type: object
    Workspace:
      id: Workspace
      properties:
        path:
          description: GTM Workspace's API relative path.
          type: string
        tagManagerUrl:
          type: string
          description: Auto generated link to the tag manager UI
        accountId:
          description: GTM Account ID.
          type: string
        fingerprint:
          type: string
          description: The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.
        containerId:
          type: string
          description: GTM Container ID.
        description:
          type: string
          description: Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update
        workspaceId:
          type: string
          description: The Workspace ID uniquely identifies the GTM Workspace.
        name:
          type: string
          description: Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.create
              - tagmanager.accounts.containers.workspaces.update
      type: object
      description: Represents a Google Tag Manager Container Workspace.
    ListClientsResponse:
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        client:
          type: array
          items:
            $ref: '#/components/schemas/Client'
          description: All GTM Clients of a GTM Container.
      id: ListClientsResponse
      type: object
    ListVariablesResponse:
      description: List Variables Response.
      id: ListVariablesResponse
      properties:
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
        variable:
          type: array
          description: All GTM Variables of a GTM Container.
          items:
            $ref: '#/components/schemas/Variable'
      type: object
    ContainerVersionHeader:
      description: Represents a Google Tag Manager Container Version Header.
      type: object
      id: ContainerVersionHeader
      properties:
        numTags:
          type: string
          description: Number of tags in the container version.
        containerId:
          type: string
          description: GTM Container ID.
        numClients:
          description: Number of clients in the container version.
          type: string
        numGtagConfigs:
          type: string
          description: Number of Google tag configs in the container version.
        numTriggers:
          description: Number of triggers in the container version.
          type: string
        accountId:
          type: string
          description: GTM Account ID.
        numZones:
          description: Number of zones in the container version.
          type: string
        path:
          type: string
          description: GTM Container Version's API relative path.
        deleted:
          type: boolean
          description: A value of true indicates this container version has been deleted.
        numVariables:
          description: Number of variables in the container version.
          type: string
        numMacros:
          type: string
          description: Number of macros in the container version.
        name:
          description: Container version display name.
          type: string
        containerVersionId:
          description: The Container Version ID uniquely identifies the GTM Container Version.
          type: string
        numCustomTemplates:
          type: string
          description: Number of custom templates in the container version.
        numRules:
          type: string
          description: Number of rules in the container version.
    ZoneBoundary:
      type: object
      id: ZoneBoundary
      description: Represents a Zone's boundaries.
      properties:
        customEvaluationTriggerId:
          type: array
          description: Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.
          items:
            type: string
        condition:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
          description: The conditions that, when conjoined, make up the boundary.
    ContainerVersion:
      description: Represents a Google Tag Manager Container Version.
      properties:
        name:
          type: string
          description: Container version display name. @mutable tagmanager.accounts.containers.versions.update
        client:
          description: The clients in the container that this version was taken from.
          items:
            $ref: '#/components/schemas/Client'
          type: array
        containerVersionId:
          type: string
          description: The Container Version ID uniquely identifies the GTM Container Version.
        tagManagerUrl:
          type: string
          description: Auto generated link to the tag manager UI
        accountId:
          description: GTM Account ID.
          type: string
        fingerprint:
          description: The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.
          type: string
        gtagConfig:
          items:
            $ref: '#/components/schemas/GtagConfig'
          description: The Google tag configs in the container that this version was taken from.
          type: array
        tag:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: The tags in the container that this version was taken from.
        customTemplate:
          type: array
          items:
            $ref: '#/components/schemas/CustomTemplate'
          description: The custom templates in the container that this version was taken from.
        deleted:
          description: A value of true indicates this container version has been deleted.
          type: boolean
        builtInVariable:
          items:
            $ref: '#/components/schemas/BuiltInVariable'
          type: array
          description: The built-in variables in the container that this version was taken from.
        trigger:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
          description: The triggers in the container that this version was taken from.
        container:
          description: The container that this version was taken from.
          $ref: '#/components/schemas/Container'
        path:
          type: string
          description: GTM Container Version's API relative path.
        variable:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
          description: The variables in the container that this version was taken from.
        containerId:
          type: string
          description: GTM Container ID.
        zone:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
          description: The zones in the container that this version was taken from.
        folder:
          items:
            $ref: '#/components/schemas/Folder'
          description: The folders in the container that this version was taken from.
          type: array
        description:
          type: string
          description: Container version description. @mutable tagmanager.accounts.containers.versions.update
      type: object
      id: ContainerVersion
    CustomTemplate:
      type: object
      description: Represents a Google Tag Manager Custom Template's contents.
      id: CustomTemplate
      properties:
        path:
          type: string
          description: GTM Custom Template's API relative path.
        tagManagerUrl:
          type: string
          description: Auto generated link to the tag manager UI
        workspaceId:
          type: string
          description: GTM Workspace ID.
        containerId:
          type: string
          description: GTM Container ID.
        templateId:
          type: string
          description: The Custom Template ID uniquely identifies the GTM custom template.
        accountId:
          type: string
          description: GTM Account ID.
        templateData:
          type: string
          description: The custom template in text format.
        fingerprint:
          type: string
          description: The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.
        galleryReference:
          description: A reference to the Community Template Gallery entry.
          $ref: '#/components/schemas/GalleryReference'
        name:
          type: string
          description: Custom Template display name.
    GtagConfig:
      id: GtagConfig
      type: object
      properties:
        accountId:
          description: Google tag account ID.
          type: string
        workspaceId:
          description: Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.
          type: string
        containerId:
          type: string
          description: Google tag container ID.
        parameter:
          type: array
          description: The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update
          items:
            $ref: '#/components/schemas/Parameter'
        path:
          type: string
          description: Google tag config's API relative path.
        gtagConfigId:
          type: string
          description: The ID uniquely identifies the Google tag config.
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        type:
          type: string
          description: Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update
        fingerprint:
          type: string
          description: The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified.
      description: Represents a Google tag configuration.
    AccountFeatures:
      type: object
      id: AccountFeatures
      properties:
        supportMultipleContainers:
          type: boolean
          description: Whether this Account supports multiple Containers.
        supportUserPermissions:
          type: boolean
          description: Whether this Account supports user permissions managed by GTM.
    TeardownTag:
      properties:
        tagName:
          type: string
          description: The name of the teardown tag.
        stopTeardownOnFailure:
          type: boolean
          description: If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.
      type: object
      id: TeardownTag
      description: Represents a tag that fires after another tag in order to tear down dependencies.
    RevertZoneResponse:
      id: RevertZoneResponse
      description: The result of reverting a zone in a workspace.
      properties:
        zone:
          description: Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version.
          $ref: '#/components/schemas/Zone'
      type: object
    ListTemplatesResponse:
      id: ListTemplatesResponse
      properties:
        template:
          items:
            $ref: '#/components/schemas/CustomTemplate'
          type: array
          description: All GTM Custom Templates of a GTM Container.
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      type: object
    CreateBuiltInVariableResponse:
      type: object
      id: CreateBuiltInVariableResponse
      properties:
        builtInVariable:
          items:
            $ref: '#/components/schemas/BuiltInVariable'
          type: array
          description: List of created built-in variables.
    RevertFolderResponse:
      id: RevertFolderResponse
      properties:
        folder:
          description: Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.
          $ref: '#/components/schemas/Folder'
      type: object
      description: The result of reverting folder changes in a workspace.
    Destination:
      type: object
      description: Represents a Google Tag Destination.
      id: Destination
      properties:
        path:
          type: string
          description: Destination's API relative path.
        name:
          type: string
          description: Destination display name.
        fingerprint:
          type: string
          description: The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified.
        destinationId:
          type: string
          description: Destination ID.
        tagManagerUrl:
          description: Auto generated link to the tag manager UI.
          type: string
        destinationLinkId:
          type: string
          description: The Destination link ID uniquely identifies the Destination.
        containerId:
          type: string
          description: GTM Container ID.
        accountId:
          type: string
          description: GTM Account ID.
    RevertTemplateResponse:
      id: RevertTemplateResponse
      description: The result of reverting a template in a workspace.
      type: object
      properties:
        template:
          description: Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version.
          $ref: '#/components/schemas/CustomTemplate'
    ListTagsResponse:
      properties:
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
        tag:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          description: All GTM Tags of a GTM Container.
      description: List Tags Response.
      id: ListTagsResponse
      type: object
    CreateContainerVersionRequestVersionOptions:
      id: CreateContainerVersionRequestVersionOptions
      type: object
      properties:
        notes:
          type: string
          description: The notes of the container version to be created.
        name:
          description: The name of the container version to be created.
          type: string
      description: Options for new container versions.
    SyncStatus:
      description: The status of a workspace after synchronization.
      type: object
      id: SyncStatus
      properties:
        mergeConflict:
          description: Synchornization operation detected a merge conflict.
          type: boolean
        syncError:
          type: boolean
          description: An error occurred during the synchronization operation.
    Trigger:
      properties:
        visiblePercentageMin:
          $ref: '#/components/schemas/Parameter'
          description: A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        horizontalScrollPercentageList:
          $ref: '#/components/schemas/Parameter'
          description: List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        visibilitySelector:
          description: A visibility trigger CSS selector (i.e. "#id"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        limit:
          $ref: '#/components/schemas/Parameter'
          description: Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        customEventFilter:
          description: Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        continuousTimeMinMilliseconds:
          $ref: '#/components/schemas/Parameter'
          description: A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        interval:
          description: Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        notes:
          description: User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          type: string
        filter:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          description: The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        eventName:
          description: Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        name:
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.triggers.create
              - tagmanager.accounts.containers.workspaces.triggers.update
          description: Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          type: string
        path:
          type: string
          description: GTM Trigger's API relative path.
        fingerprint:
          description: The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.
          type: string
        accountId:
          type: string
          description: GTM Account ID.
        triggerId:
          type: string
          description: The Trigger ID uniquely identifies the GTM Trigger.
        maxTimerLengthSeconds:
          description: Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        waitForTags:
          $ref: '#/components/schemas/Parameter'
          description: Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        totalTimeMinMilliseconds:
          $ref: '#/components/schemas/Parameter'
          description: A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        visiblePercentageMax:
          $ref: '#/components/schemas/Parameter'
          description: A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        intervalSeconds:
          $ref: '#/components/schemas/Parameter'
          description: Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        waitForTagsTimeout:
          description: How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        type:
          description: Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.triggers.create
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - eventTypeUnspecified
            - pageview
            - domReady
            - windowLoaded
            - customEvent
            - triggerGroup
            - init
            - consentInit
            - serverPageview
            - always
            - firebaseAppException
            - firebaseAppUpdate
            - firebaseCampaign
            - firebaseFirstOpen
            - firebaseInAppPurchase
            - firebaseNotificationDismiss
            - firebaseNotificationForeground
            - firebaseNotificationOpen
            - firebaseNotificationReceive
            - firebaseOsUpdate
            - firebaseSessionStart
            - firebaseUserEngagement
            - formSubmission
            - click
            - linkClick
            - jsError
            - historyChange
            - timer
            - ampClick
            - ampTimer
            - ampScroll
            - ampVisibility
            - youTubeVideo
            - scrollDepth
            - elementVisibility
        checkValidation:
          description: Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          $ref: '#/components/schemas/Parameter'
        containerId:
          description: GTM Container ID.
          type: string
        selector:
          $ref: '#/components/schemas/Parameter'
          description: A click trigger CSS selector (i.e. "a", "button" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        parameter:
          description: Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        autoEventFilter:
          items:
            $ref: '#/components/schemas/Condition'
          description: Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
          type: array
        workspaceId:
          description: GTM Workspace ID.
          type: string
        verticalScrollPercentageList:
          $ref: '#/components/schemas/Parameter'
          description: List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
        parentFolderId:
          type: string
          description: Parent folder id.
        uniqueTriggerId:
          $ref: '#/components/schemas/Parameter'
          description: Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
      id: Trigger
      description: Represents a Google Tag Manager Trigger
      type: object
    RevertClientResponse:
      id: RevertClientResponse
      description: The result of reverting a client in a workspace.
      properties:
        client:
          $ref: '#/components/schemas/Client'
          description: Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version.
      type: object
    ListEnabledBuiltInVariablesResponse:
      id: ListEnabledBuiltInVariablesResponse
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        builtInVariable:
          type: array
          description: All GTM BuiltInVariables of a GTM container.
          items:
            $ref: '#/components/schemas/BuiltInVariable'
      description: A list of enabled built-in variables.
      type: object
    SyncWorkspaceResponse:
      description: A response after synchronizing the workspace to the latest container version.
      properties:
        syncStatus:
          $ref: '#/components/schemas/SyncStatus'
          description: Indicates whether synchronization caused a merge conflict or sync error.
        mergeConflict:
          description: The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.
          items:
            $ref: '#/components/schemas/MergeConflict'
          type: array
      id: SyncWorkspaceResponse
      type: object
    ListEnvironmentsResponse:
      id: ListEnvironmentsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
        environment:
          items:
            $ref: '#/components/schemas/Environment'
          type: array
          description: All Environments of a GTM Container.
      description: List Environments Response.
    Environment:
      properties:
        accountId:
          type: string
          description: GTM Account ID.
        authorizationTimestamp:
          type: string
          description: The last update time-stamp for the authorization code.
          format: google-datetime
        authorizationCode:
          type: string
          description: The environment authorization code.
        containerVersionId:
          description: Represents a link to a container version.
          type: string
        fingerprint:
          description: The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.
          type: string
        containerId:
          type: string
          description: GTM Container ID.
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        path:
          description: GTM Environment's API relative path.
          type: string
        type:
          description: The type of this environment.
          enum:
            - user
            - live
            - latest
            - workspace
          type: string
          enumDescriptions:
            - Points to a user defined environment.
            - Points to the current live container version.
            - Points to the latest container version.
            - Automatically managed environment that points to a workspace preview or version created by a workspace.
        enableDebug:
          type: boolean
          description: Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
        description:
          description: The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
          type: string
        url:
          type: string
          description: Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
        environmentId:
          description: GTM Environment ID uniquely identifies the GTM Environment.
          type: string
        name:
          annotations:
            required:
              - tagmanager.accounts.containers.environments.create
              - tagmanager.accounts.containers.environments.update
          description: The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
          type: string
        workspaceId:
          description: Represents a link to a quick preview of a workspace.
          type: string
      id: Environment
      description: Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.
      type: object
    ListFoldersResponse:
      properties:
        folder:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          description: All GTM Folders of a GTM Container.
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
      description: List Folders Response.
      type: object
      id: ListFoldersResponse
    RevertTagResponse:
      description: The result of reverting a tag in a workspace.
      properties:
        tag:
          $ref: '#/components/schemas/Tag'
          description: Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version.
      type: object
      id: RevertTagResponse
    UserPermission:
      properties:
        path:
          type: string
          description: GTM UserPermission's API relative path.
        accountAccess:
          $ref: '#/components/schemas/AccountAccess'
          description: GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
        containerAccess:
          items:
            $ref: '#/components/schemas/ContainerAccess'
          type: array
          description: GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
        accountId:
          description: The Account ID uniquely identifies the GTM Account.
          type: string
        emailAddress:
          type: string
          description: User's email address. @mutable tagmanager.accounts.permissions.create
      id: UserPermission
      description: Represents a user's permissions to an account and its container.
      type: object
    CreateContainerVersionResponse:
      properties:
        containerVersion:
          $ref: '#/components/schemas/ContainerVersion'
          description: The container version created.
        newWorkspacePath:
          type: string
          description: Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview.
        compilerError:
          type: boolean
          description: Compiler errors or not.
        syncStatus:
          description: Whether version creation failed when syncing the workspace to the latest container version.
          $ref: '#/components/schemas/SyncStatus'
      id: CreateContainerVersionResponse
      description: Create container versions response.
      type: object
    AccountAccess:
      description: Defines the Google Tag Manager Account access permissions.
      type: object
      id: AccountAccess
      properties:
        permission:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
          enum:
            - accountPermissionUnspecified
            - noAccess
            - user
            - admin
    QuickPreviewResponse:
      description: Response to quick previewing a workspace.
      properties:
        containerVersion:
          $ref: '#/components/schemas/ContainerVersion'
          description: The quick previewed container version.
        compilerError:
          type: boolean
          description: Were there compiler errors or not.
        syncStatus:
          $ref: '#/components/schemas/SyncStatus'
          description: Whether quick previewing failed when syncing the workspace to the latest container version.
      type: object
      id: QuickPreviewResponse
    Zone:
      description: Represents a Google Tag Manager Zone's contents.
      type: object
      properties:
        fingerprint:
          type: string
          description: The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.
        path:
          description: GTM Zone's API relative path.
          type: string
        zoneId:
          type: string
          description: The Zone ID uniquely identifies the GTM Zone.
        workspaceId:
          type: string
          description: GTM Workspace ID.
        boundary:
          $ref: '#/components/schemas/ZoneBoundary'
          description: This Zone's boundary.
        tagManagerUrl:
          description: Auto generated link to the tag manager UI
          type: string
        accountId:
          description: GTM Account ID.
          type: string
        typeRestriction:
          $ref: '#/components/schemas/ZoneTypeRestriction'
          description: This Zone's type restrictions.
        childContainer:
          items:
            $ref: '#/components/schemas/ZoneChildContainer'
          description: Containers that are children of this Zone.
          type: array
        containerId:
          type: string
          description: GTM Container ID.
        notes:
          description: User notes on how to apply this zone in the container.
          type: string
        name:
          description: Zone display name.
          type: string
      id: Zone
    GalleryReference:
      properties:
        signature:
          description: The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.
          type: string
        owner:
          type: string
          description: The name of the owner for the community gallery template.
        repository:
          type: string
          description: The name of the repository for the community gallery template.
        version:
          type: string
          description: The version of the community gallery template.
        isModified:
          type: boolean
          description: If a user has manually edited the community gallery template.
        host:
          description: The name of the host for the community gallery template.
          type: string
      id: GalleryReference
      description: Represents the link between a custom template and an entry on the Community Template Gallery site.
      type: object
    ZoneTypeRestriction:
      properties:
        whitelistedTypeId:
          description: List of type public ids that have been whitelisted for use in this Zone.
          items:
            type: string
          type: array
        enable:
          type: boolean
          description: True if type restrictions have been enabled for this Zone.
      description: Represents a Zone's type restrictions.
      type: object
      id: ZoneTypeRestriction
    GetContainerSnippetResponse:
      id: GetContainerSnippetResponse
      type: object
      properties:
        snippet:
          description: Tagging snippet for a Container.
          type: string
    Client:
      properties:
        fingerprint:
          type: string
          description: The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.
        clientId:
          description: The Client ID uniquely identifies the GTM client.
          type: string
        type:
          description: Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.clients.create
              - tagmanager.accounts.containers.workspaces.clients.update
          type: string
        workspaceId:
          description: GTM Workspace ID.
          type: string
        notes:
          type: string
          description: User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
        parentFolderId:
          description: Parent folder id.
          type: string
        containerId:
          type: string
          description: GTM Container ID.
        priority:
          description: Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
          type: integer
          format: int32
        name:
          type: string
          annotations:
            required:
              - tagmanager.accounts.containers.workspaces.clients.create
              - tagmanager.accounts.containers.workspaces.clients.update
          description: Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
        accountId:
          description: GTM Account ID.
          type: string
        path:
          description: GTM client's API relative path.
          type: string
        tagManagerUrl:
          type: string
          description: Auto generated link to the tag manager UI
        parameter:
          description: The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      id: Client
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/tagmanager.delete.containers: Delete your Google Tag Manager containers
            https://www.googleapis.com/auth/tagmanager.publish: Publish your Google Tag Manager container versions
            https://www.googleapis.com/auth/tagmanager.edit.containers: Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing
            https://www.googleapis.com/auth/tagmanager.readonly: View your Google Tag Manager container and its subcomponents
            https://www.googleapis.com/auth/tagmanager.manage.users: Manage user permissions of your Google Tag Manager account and container
            https://www.googleapis.com/auth/tagmanager.edit.containerversions: Manage your Google Tag Manager container versions
            https://www.googleapis.com/auth/tagmanager.manage.accounts: View and manage your Google Tag Manager accounts
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    accounts:
      id: googleanalytics.tagmanager.accounts
      name: accounts
      title: Accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert: []
        update: []
        delete: []
    containers:
      id: googleanalytics.tagmanager.containers
      name: containers
      title: Containers
      methods:
        accounts_containers_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_combine:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}:combine/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_snippet:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}:snippet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_lookup:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1containers:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_move_tag_id:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}:move_tag_id/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/containers/methods/accounts_containers_get'
          - $ref: '#/components/x-stackQL-resources/containers/methods/accounts_containers_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/containers/methods/accounts_containers_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/containers/methods/accounts_containers_delete'
    version_headers:
      id: googleanalytics.tagmanager.version_headers
      name: version_headers
      title: Version_headers
      methods:
        accounts_containers_version_headers_latest:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1version_headers:latest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_version_headers_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1version_headers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/version_headers/methods/accounts_containers_version_headers_list'
        insert: []
        update: []
        delete: []
    versions:
      id: googleanalytics.tagmanager.versions
      name: versions
      title: Versions
      methods:
        accounts_containers_versions_undelete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_publish:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}:publish/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_live:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions:live/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_set_latest:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}:set_latest/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_versions_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1versions~1{versionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/versions/methods/accounts_containers_versions_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/versions/methods/accounts_containers_versions_delete'
    workspaces__version:
      id: googleanalytics.tagmanager.workspaces__version
      name: workspaces__version
      title: Workspaces__version
      methods:
        accounts_containers_workspaces_create_version:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}:create_version/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces__version/methods/accounts_containers_workspaces_create_version'
        update: []
        delete: []
    workspaces:
      id: googleanalytics.tagmanager.workspaces
      name: workspaces
      title: Workspaces
      methods:
        accounts_containers_workspaces_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_resolve_conflict:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}:resolve_conflict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_sync:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}:sync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_quick_preview:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}:quick_preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/accounts_containers_workspaces_get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/accounts_containers_workspaces_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/accounts_containers_workspaces_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/accounts_containers_workspaces_delete'
    workspaces__status:
      id: googleanalytics.tagmanager.workspaces__status
      name: workspaces__status
      title: Workspaces__status
      methods:
        accounts_containers_workspaces_getStatus:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces__status/methods/accounts_containers_workspaces_getStatus'
        insert: []
        update: []
        delete: []
    zones:
      id: googleanalytics.tagmanager.zones
      name: zones
      title: Zones
      methods:
        accounts_containers_workspaces_zones_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones~1{zonesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_zones_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones~1{zonesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_zones_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones~1{zonesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_zones_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_zones_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_zones_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1zones~1{zonesId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/accounts_containers_workspaces_zones_get'
          - $ref: '#/components/x-stackQL-resources/zones/methods/accounts_containers_workspaces_zones_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/accounts_containers_workspaces_zones_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/accounts_containers_workspaces_zones_delete'
    folders:
      id: googleanalytics.tagmanager.folders
      name: folders
      title: Folders
      methods:
        accounts_containers_workspaces_folders_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_move_entities_to_folder:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}:move_entities_to_folder/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_entities:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}:entities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_folders_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1folders~1{foldersId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/folders/methods/accounts_containers_workspaces_folders_get'
          - $ref: '#/components/x-stackQL-resources/folders/methods/accounts_containers_workspaces_folders_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/folders/methods/accounts_containers_workspaces_folders_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/folders/methods/accounts_containers_workspaces_folders_delete'
    tags:
      id: googleanalytics.tagmanager.tags
      name: tags
      title: Tags
      methods:
        accounts_containers_workspaces_tags_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_tags_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_tags_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags~1{tagsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_tags_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags~1{tagsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_tags_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags~1{tagsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_tags_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1tags~1{tagsId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tags/methods/accounts_containers_workspaces_tags_get'
          - $ref: '#/components/x-stackQL-resources/tags/methods/accounts_containers_workspaces_tags_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tags/methods/accounts_containers_workspaces_tags_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tags/methods/accounts_containers_workspaces_tags_delete'
    gtag_config:
      id: googleanalytics.tagmanager.gtag_config
      name: gtag_config
      title: Gtag_config
      methods:
        accounts_containers_workspaces_gtag_config_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1gtag_config~1{gtag_configId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_gtag_config_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1gtag_config~1{gtag_configId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_gtag_config_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1gtag_config~1{gtag_configId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_gtag_config_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1gtag_config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_gtag_config_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1gtag_config/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gtag_config/methods/accounts_containers_workspaces_gtag_config_get'
          - $ref: '#/components/x-stackQL-resources/gtag_config/methods/accounts_containers_workspaces_gtag_config_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gtag_config/methods/accounts_containers_workspaces_gtag_config_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gtag_config/methods/accounts_containers_workspaces_gtag_config_delete'
    templates:
      id: googleanalytics.tagmanager.templates
      name: templates
      title: Templates
      methods:
        accounts_containers_workspaces_templates_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_templates_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_templates_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates~1{templatesId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_templates_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates~1{templatesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_templates_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates~1{templatesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_templates_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1templates~1{templatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/templates/methods/accounts_containers_workspaces_templates_get'
          - $ref: '#/components/x-stackQL-resources/templates/methods/accounts_containers_workspaces_templates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/templates/methods/accounts_containers_workspaces_templates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/templates/methods/accounts_containers_workspaces_templates_delete'
    variables:
      id: googleanalytics.tagmanager.variables
      name: variables
      title: Variables
      methods:
        accounts_containers_workspaces_variables_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_variables_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_variables_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables~1{variablesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_variables_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables~1{variablesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_variables_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables~1{variablesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_variables_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1variables~1{variablesId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/variables/methods/accounts_containers_workspaces_variables_get'
          - $ref: '#/components/x-stackQL-resources/variables/methods/accounts_containers_workspaces_variables_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/variables/methods/accounts_containers_workspaces_variables_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/variables/methods/accounts_containers_workspaces_variables_delete'
    clients:
      id: googleanalytics.tagmanager.clients
      name: clients
      title: Clients
      methods:
        accounts_containers_workspaces_clients_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_clients_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_clients_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients~1{clientsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_clients_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients~1{clientsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_clients_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients~1{clientsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_clients_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1clients~1{clientsId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_containers_workspaces_clients_get'
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_containers_workspaces_clients_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_containers_workspaces_clients_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_containers_workspaces_clients_delete'
    triggers:
      id: googleanalytics.tagmanager.triggers
      name: triggers
      title: Triggers
      methods:
        accounts_containers_workspaces_triggers_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers~1{triggersId}:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_triggers_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers~1{triggersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_triggers_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers~1{triggersId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_triggers_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers~1{triggersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_triggers_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_triggers_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1triggers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/accounts_containers_workspaces_triggers_get'
          - $ref: '#/components/x-stackQL-resources/triggers/methods/accounts_containers_workspaces_triggers_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/accounts_containers_workspaces_triggers_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/accounts_containers_workspaces_triggers_delete'
    built_in_variables:
      id: googleanalytics.tagmanager.built_in_variables
      name: built_in_variables
      title: Built_in_variables
      methods:
        accounts_containers_workspaces_built_in_variables_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1built_in_variables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_built_in_variables_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1built_in_variables/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_built_in_variables_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1built_in_variables/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_workspaces_built_in_variables_revert:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1workspaces~1{workspacesId}~1built_in_variables:revert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/built_in_variables/methods/accounts_containers_workspaces_built_in_variables_list'
        insert: []
          # - $ref: '#/components/x-stackQL-resources/built_in_variables/methods/accounts_containers_workspaces_built_in_variables_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/built_in_variables/methods/accounts_containers_workspaces_built_in_variables_delete'
    destinations:
      id: googleanalytics.tagmanager.destinations
      name: destinations
      title: Destinations
      methods:
        accounts_containers_destinations_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1destinations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_destinations_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1destinations~1{destinationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_destinations_link:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1destinations:link/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/accounts_containers_destinations_get'
          - $ref: '#/components/x-stackQL-resources/destinations/methods/accounts_containers_destinations_list'
        insert: []
        update: []
        delete: []
    environments:
      id: googleanalytics.tagmanager.environments
      name: environments
      title: Environments
      methods:
        accounts_containers_environments_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_environments_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_environments_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_environments_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments~1{environmentsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_environments_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_containers_environments_reauthorize:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1containers~1{containersId}~1environments~1{environmentsId}:reauthorize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/accounts_containers_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/accounts_containers_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/accounts_containers_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/accounts_containers_environments_delete'
    user_permissions:
      id: googleanalytics.tagmanager.user_permissions
      name: user_permissions
      title: User_permissions
      methods:
        accounts_user_permissions_list:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1user_permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_user_permissions_create:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1user_permissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_user_permissions_update:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1user_permissions~1{user_permissionsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_user_permissions_delete:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1user_permissions~1{user_permissionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_user_permissions_get:
          operation:
            $ref: '#/paths/~1tagmanager~1v2~1accounts~1{accountsId}~1user_permissions~1{user_permissionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_permissions/methods/accounts_user_permissions_get'
          - $ref: '#/components/x-stackQL-resources/user_permissions/methods/accounts_user_permissions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_permissions/methods/accounts_user_permissions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_permissions/methods/accounts_user_permissions_delete'
paths:
  /tagmanager/v2/accounts:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
    get:
      description: Lists all GTM Accounts that a user has access to.
      operationId: tagmanager.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
      parameters:
        - in: query
          name: includeGoogleTags
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}:
    parameters: *ref_1
    put:
      description: Updates a GTM Account.
      operationId: tagmanager.accounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
    get:
      description: Gets a GTM Account.
      operationId: tagmanager.accounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.accounts
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}:
    parameters: *ref_1
    delete:
      description: Deletes a Container.
      operationId: tagmanager.accounts.containers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.delete.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.delete.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: delete
    put:
      description: Updates a Container.
      operationId: tagmanager.accounts.containers.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: exec
    get:
      description: Gets a Container.
      operationId: tagmanager.accounts.containers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine:
    parameters: *ref_1
    post:
      description: Combines Containers.
      operationId: tagmanager.accounts.containers.combine
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: containerId
          schema:
            type: string
        - in: query
          name: settingSource
          schema:
            type: string
        - in: query
          name: allowUserPermissionFeatureUpdate
          schema:
            type: boolean
      x-stackQL-resource: containers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers:
    parameters: *ref_1
    get:
      description: Lists all Containers that belongs to a GTM Account.
      operationId: tagmanager.accounts.containers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainersResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: select
    post:
      description: Creates a Container.
      operationId: tagmanager.accounts.containers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet:
    parameters: *ref_1
    get:
      description: Gets the tagging snippet for a Container.
      operationId: tagmanager.accounts.containers.snippet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContainerSnippetResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/containers:lookup:
    parameters: *ref_1
    get:
      description: Looks up a Container by destination ID.
      operationId: tagmanager.accounts.containers.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: query
          name: destinationId
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id:
    parameters: *ref_1
    post:
      description: Move Tag ID out of a Container.
      operationId: tagmanager.accounts.containers.move_tag_id
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: copyTermsOfService
          schema:
            type: boolean
        - in: query
          name: copyUsers
          schema:
            type: boolean
        - in: query
          name: allowUserPermissionFeatureUpdate
          schema:
            type: boolean
        - in: query
          name: copySettings
          schema:
            type: boolean
        - in: query
          name: tagId
          schema:
            type: string
        - in: query
          name: tagName
          schema:
            type: string
      x-stackQL-resource: containers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest:
    parameters: *ref_1
    get:
      description: Gets the latest container version header
      operationId: tagmanager.accounts.containers.version_headers.latest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersionHeader'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: version_headers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:
    parameters: *ref_1
    get:
      description: Lists all Container Versions of a GTM Container.
      operationId: tagmanager.accounts.containers.version_headers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainerVersionsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
      x-stackQL-resource: version_headers
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes a Container Version.
      operationId: tagmanager.accounts.containers.versions.undelete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersion'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish:
    parameters: *ref_1
    post:
      description: Publishes a Container Version.
      operationId: tagmanager.accounts.containers.versions.publish
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.publish
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.publish
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishContainerVersionResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live:
    parameters: *ref_1
    get:
      description: Gets the live (i.e. published) container version
      operationId: tagmanager.accounts.containers.versions.live
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersion'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest:
    parameters: *ref_1
    post:
      description: Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.
      operationId: tagmanager.accounts.containers.versions.set_latest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersion'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:
    parameters: *ref_1
    get:
      description: Gets a Container Version.
      operationId: tagmanager.accounts.containers.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersion'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: containerVersionId
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
    put:
      description: Updates a Container Version.
      operationId: tagmanager.accounts.containers.versions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerVersion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerVersion'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
    delete:
      description: Deletes a Container Version.
      operationId: tagmanager.accounts.containers.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: delete
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version:
    parameters: *ref_1
    post:
      description: Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.
      operationId: tagmanager.accounts.containers.workspaces.create_version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerVersionRequestVersionOptions'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContainerVersionResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces__version
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:
    parameters: *ref_1
    delete:
      description: Deletes a Workspace.
      operationId: tagmanager.accounts.containers.workspaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.delete.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.delete.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: delete
    get:
      description: Gets a Workspace.
      operationId: tagmanager.accounts.containers.workspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
    put:
      description: Updates a Workspace.
      operationId: tagmanager.accounts.containers.workspaces.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces:
    parameters: *ref_1
    get:
      description: Lists all Workspaces that belong to a GTM Container.
      operationId: tagmanager.accounts.containers.workspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
    post:
      description: Creates a Workspace.
      operationId: tagmanager.accounts.containers.workspaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict:
    parameters: *ref_1
    post:
      description: Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.
      operationId: tagmanager.accounts.containers.workspaces.resolve_conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync:
    parameters: *ref_1
    post:
      description: Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.
      operationId: tagmanager.accounts.containers.workspaces.sync
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncWorkspaceResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status:
    parameters: *ref_1
    get:
      description: Finds conflicting and modified entities in the workspace.
      operationId: tagmanager.accounts.containers.workspaces.getStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceStatusResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces__status
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview:
    parameters: *ref_1
    post:
      description: Quick previews a workspace by creating a fake container version from all entities in the provided workspace.
      operationId: tagmanager.accounts.containers.workspaces.quick_preview
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containerversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickPreviewResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:
    parameters: *ref_1
    put:
      description: Updates a GTM Zone.
      operationId: tagmanager.accounts.containers.workspaces.zones.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: exec
    delete:
      description: Deletes a GTM Zone.
      operationId: tagmanager.accounts.containers.workspaces.zones.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: delete
    get:
      description: Gets a GTM Zone.
      operationId: tagmanager.accounts.containers.workspaces.zones.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones:
    parameters: *ref_1
    post:
      description: Creates a GTM Zone.
      operationId: tagmanager.accounts.containers.workspaces.zones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: insert
    get:
      description: Lists all GTM Zones of a GTM container workspace.
      operationId: tagmanager.accounts.containers.workspaces.zones.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZonesResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Zone in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.zones.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertZoneResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:
    parameters: *ref_1
    put:
      description: Updates a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: exec
    delete:
      description: Deletes a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: delete
    get:
      description: Gets a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders:
    parameters: *ref_1
    get:
      description: Lists all GTM Folders of a Container.
      operationId: tagmanager.accounts.containers.workspaces.folders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: select
    post:
      description: Creates a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder:
    parameters: *ref_1
    post:
      description: Moves entities to a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: tagId
          schema:
            type: string
        - in: query
          name: variableId
          schema:
            type: string
        - in: query
          name: triggerId
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities:
    parameters: *ref_1
    post:
      description: List all entities in a GTM Folder.
      operationId: tagmanager.accounts.containers.workspaces.folders.entities
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderEntities'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Folder in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.folders.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertFolderResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: folders
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags:
    parameters: *ref_1
    get:
      description: Lists all GTM Tags of a Container.
      operationId: tagmanager.accounts.containers.workspaces.tags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: select
    post:
      description: Creates a GTM Tag.
      operationId: tagmanager.accounts.containers.workspaces.tags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:
    parameters: *ref_1
    get:
      description: Gets a GTM Tag.
      operationId: tagmanager.accounts.containers.workspaces.tags.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: select
    put:
      description: Updates a GTM Tag.
      operationId: tagmanager.accounts.containers.workspaces.tags.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: exec
    delete:
      description: Deletes a GTM Tag.
      operationId: tagmanager.accounts.containers.workspaces.tags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: delete
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Tag in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.tags.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertTagResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}:
    parameters: *ref_1
    get:
      description: Gets a Google tag config.
      operationId: tagmanager.accounts.containers.workspaces.gtag_config.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GtagConfig'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: gtag_configId
          required: true
          schema:
            type: string
      x-stackQL-resource: gtag_config
      x-stackQL-verb: select
    put:
      description: Updates a Google tag config.
      operationId: tagmanager.accounts.containers.workspaces.gtag_config.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GtagConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GtagConfig'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: gtag_configId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: gtag_config
      x-stackQL-verb: exec
    delete:
      description: Deletes a Google tag config.
      operationId: tagmanager.accounts.containers.workspaces.gtag_config.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: gtag_configId
          required: true
          schema:
            type: string
      x-stackQL-resource: gtag_config
      x-stackQL-verb: delete
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config:
    parameters: *ref_1
    get:
      description: Lists all Google tag configs in a Container.
      operationId: tagmanager.accounts.containers.workspaces.gtag_config.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGtagConfigResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: gtag_config
      x-stackQL-verb: select
    post:
      description: Creates a Google tag config.
      operationId: tagmanager.accounts.containers.workspaces.gtag_config.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GtagConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GtagConfig'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: gtag_config
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates:
    parameters: *ref_1
    get:
      description: Lists all GTM Templates of a GTM container workspace.
      operationId: tagmanager.accounts.containers.workspaces.templates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: select
    post:
      description: Creates a GTM Custom Template.
      operationId: tagmanager.accounts.containers.workspaces.templates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplate'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Template in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.templates.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertTemplateResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: templatesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:
    parameters: *ref_1
    put:
      description: Updates a GTM Template.
      operationId: tagmanager.accounts.containers.workspaces.templates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplate'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: templatesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: exec
    delete:
      description: Deletes a GTM Template.
      operationId: tagmanager.accounts.containers.workspaces.templates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: templatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: delete
    get:
      description: Gets a GTM Template.
      operationId: tagmanager.accounts.containers.workspaces.templates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplate'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: templatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: templates
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables:
    parameters: *ref_1
    post:
      description: Creates a GTM Variable.
      operationId: tagmanager.accounts.containers.workspaces.variables.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: insert
    get:
      description: Lists all GTM Variables of a Container.
      operationId: tagmanager.accounts.containers.workspaces.variables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVariablesResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:
    parameters: *ref_1
    get:
      description: Gets a GTM Variable.
      operationId: tagmanager.accounts.containers.workspaces.variables.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: variablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: select
    delete:
      description: Deletes a GTM Variable.
      operationId: tagmanager.accounts.containers.workspaces.variables.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: variablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: delete
    put:
      description: Updates a GTM Variable.
      operationId: tagmanager.accounts.containers.workspaces.variables.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: variablesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Variable in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.variables.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertVariableResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: variablesId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: variables
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients:
    parameters: *ref_1
    get:
      description: Lists all GTM Clients of a GTM container workspace.
      operationId: tagmanager.accounts.containers.workspaces.clients.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: select
    post:
      description: Creates a GTM Client.
      operationId: tagmanager.accounts.containers.workspaces.clients.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:
    parameters: *ref_1
    get:
      description: Gets a GTM Client.
      operationId: tagmanager.accounts.containers.workspaces.clients.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: clientsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: select
    delete:
      description: Deletes a GTM Client.
      operationId: tagmanager.accounts.containers.workspaces.clients.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: clientsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: delete
    put:
      description: Updates a GTM Client.
      operationId: tagmanager.accounts.containers.workspaces.clients.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: clientsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Client in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.clients.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertClientResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: clientsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Trigger in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.triggers.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertTriggerResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: triggersId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:
    parameters: *ref_1
    get:
      description: Gets a GTM Trigger.
      operationId: tagmanager.accounts.containers.workspaces.triggers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: triggersId
          required: true
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: select
    put:
      description: Updates a GTM Trigger.
      operationId: tagmanager.accounts.containers.workspaces.triggers.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: triggersId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
    delete:
      description: Deletes a GTM Trigger.
      operationId: tagmanager.accounts.containers.workspaces.triggers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: path
          name: triggersId
          required: true
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: delete
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers:
    parameters: *ref_1
    post:
      description: Creates a GTM Trigger.
      operationId: tagmanager.accounts.containers.workspaces.triggers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: insert
    get:
      description: Lists all GTM Triggers of a Container.
      operationId: tagmanager.accounts.containers.workspaces.triggers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggersResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: triggers
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:
    parameters: *ref_1
    get:
      description: Lists all the enabled Built-In Variables of a GTM Container.
      operationId: tagmanager.accounts.containers.workspaces.built_in_variables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnabledBuiltInVariablesResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: built_in_variables
      x-stackQL-verb: select
    post:
      description: Creates one or more GTM Built-In Variables.
      operationId: tagmanager.accounts.containers.workspaces.built_in_variables.create
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBuiltInVariableResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: built_in_variables
      x-stackQL-verb: insert
    delete:
      description: Deletes one or more GTM Built-In Variables.
      operationId: tagmanager.accounts.containers.workspaces.built_in_variables.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: built_in_variables
      x-stackQL-verb: delete
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert:
    parameters: *ref_1
    post:
      description: Reverts changes to a GTM Built-In Variables in a GTM Workspace.
      operationId: tagmanager.accounts.containers.workspaces.built_in_variables.revert
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertBuiltInVariableResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: built_in_variables
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:
    parameters: *ref_1
    get:
      description: Lists all Destinations linked to a GTM Container.
      operationId: tagmanager.accounts.containers.destinations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDestinationsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: destinations
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}:
    parameters: *ref_1
    get:
      description: Gets a Destination.
      operationId: tagmanager.accounts.containers.destinations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: destinationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: destinations
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link:
    parameters: *ref_1
    post:
      description: Adds a Destination to this Container and removes it from the Container to which it is currently linked.
      operationId: tagmanager.accounts.containers.destinations.link
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: destinationId
          schema:
            type: string
        - in: query
          name: allowUserPermissionFeatureUpdate
          schema:
            type: boolean
      x-stackQL-resource: destinations
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments:
    parameters: *ref_1
    get:
      description: Lists all GTM Environments of a GTM Container.
      operationId: tagmanager.accounts.containers.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
    post:
      description: Creates a GTM Environment.
      operationId: tagmanager.accounts.containers.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:
    parameters: *ref_1
    delete:
      description: Deletes a GTM Environment.
      operationId: tagmanager.accounts.containers.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: delete
    put:
      description: Updates a GTM Environment.
      operationId: tagmanager.accounts.containers.environments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: fingerprint
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
    get:
      description: Gets a GTM Environment.
      operationId: tagmanager.accounts.containers.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.edit.containers
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize:
    parameters: *ref_1
    post:
      description: Re-generates the authorization code for a GTM Environment.
      operationId: tagmanager.accounts.containers.environments.reauthorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.publish
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.publish
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: containersId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
  /tagmanager/v2/accounts/{accountsId}/user_permissions:
    parameters: *ref_1
    get:
      description: List all users that have access to the account along with Account and Container user access granted to each of them.
      operationId: tagmanager.accounts.user_permissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserPermissionsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: user_permissions
      x-stackQL-verb: select
    post:
      description: Creates a user's Account & Container access.
      operationId: tagmanager.accounts.user_permissions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermission'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_permissions
      x-stackQL-verb: insert
  /tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}:
    parameters: *ref_1
    put:
      description: Updates a user's Account & Container access.
      operationId: tagmanager.accounts.user_permissions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermission'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: user_permissionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_permissions
      x-stackQL-verb: exec
    delete:
      description: Removes a user from the account, revoking access to it and all of its containers.
      operationId: tagmanager.accounts.user_permissions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.users
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: user_permissionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_permissions
      x-stackQL-verb: delete
    get:
      description: Gets a user's Account & Container access.
      operationId: tagmanager.accounts.user_permissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tagmanager.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/tagmanager.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermission'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: user_permissionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_permissions
      x-stackQL-verb: select
