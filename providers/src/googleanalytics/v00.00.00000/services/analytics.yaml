openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Analytics API
  description: Views and manages your Google Analytics data.
  version: v3
  x-discovery-doc-revision: '20190807'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/analytics/
servers:
  - url: https://analytics.googleapis.com/analytics/v3
components:
  schemas:
    Accounts:
      id: Accounts
      type: object
      description: An account collection provides a list of Analytics accounts to which a user has access. The account collection is the entry point to all management information. Each resource in the collection corresponds to a single Analytics account.
      properties:
        itemsPerPage:
          format: int32
          type: integer
          description: The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        username:
          description: Email ID of the authenticated user
          type: string
        items:
          description: A list of accounts.
          items:
            $ref: '#/components/schemas/Account'
          type: array
        previousLink:
          type: string
          description: Previous link for this account collection.
        totalResults:
          type: integer
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
        kind:
          type: string
          default: analytics#accounts
          description: Collection type.
        nextLink:
          description: Next link for this account collection.
          type: string
        startIndex:
          format: int32
          description: The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
    Webproperties:
      type: object
      properties:
        previousLink:
          description: Link to previous page for this web property collection.
          type: string
        startIndex:
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
          format: int32
        itemsPerPage:
          format: int32
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
        username:
          type: string
          description: Email ID of the authenticated user
        totalResults:
          type: integer
          format: int32
          description: The total number of results for the query, regardless of the number of results in the response.
        nextLink:
          type: string
          description: Link to next page for this web property collection.
        items:
          items:
            $ref: '#/components/schemas/Webproperty'
          type: array
          description: A list of web properties.
        kind:
          type: string
          description: Collection type.
          default: analytics#webproperties
      id: Webproperties
      description: A web property collection lists Analytics web properties to which the user has access. Each resource in the collection corresponds to a single Analytics web property.
    Column:
      description: JSON template for a metadata column.
      type: object
      id: Column
      properties:
        id:
          description: Column id.
          type: string
        kind:
          type: string
          description: Resource type for Analytics column.
          default: analytics#column
        attributes:
          description: Map of attribute name and value for this column.
          additionalProperties:
            description: The name of the attribute.
            type: string
          type: object
    Goals:
      id: Goals
      properties:
        kind:
          type: string
          default: analytics#goals
          description: Collection type.
        previousLink:
          description: Link to previous page for this goal collection.
          type: string
        startIndex:
          type: integer
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
        username:
          type: string
          description: Email ID of the authenticated user
        items:
          description: A list of goals.
          type: array
          items:
            $ref: '#/components/schemas/Goal'
        itemsPerPage:
          type: integer
          format: int32
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        totalResults:
          format: int32
          description: The total number of results for the query, regardless of the number of resources in the result.
          type: integer
        nextLink:
          type: string
          description: Link to next page for this goal collection.
      type: object
      description: A goal collection lists Analytics goals to which the user has access. Each view (profile) can have a set of goals. Each resource in the Goal collection corresponds to a single Analytics goal.
    CustomDimension:
      properties:
        accountId:
          type: string
          description: Account ID.
        webPropertyId:
          type: string
          description: Property ID.
        scope:
          type: string
          description: 'Scope of the custom dimension: HIT, SESSION, USER or PRODUCT.'
        id:
          type: string
          description: Custom dimension ID.
        selfLink:
          type: string
          description: Link for the custom dimension
          readOnly: true
        kind:
          description: Kind value for a custom dimension. Set to "analytics#customDimension". It is a read-only field.
          readOnly: true
          type: string
          default: analytics#customDimension
        active:
          type: boolean
          description: Boolean indicating whether the custom dimension is active.
        name:
          type: string
          description: Name of the custom dimension.
        created:
          type: string
          format: date-time
          readOnly: true
          description: Time the custom dimension was created.
        updated:
          description: Time the custom dimension was last modified.
          format: date-time
          type: string
          readOnly: true
        index:
          readOnly: true
          format: int32
          description: Index of the custom dimension.
          type: integer
        parentLink:
          properties:
            href:
              type: string
              description: Link to the property to which the custom dimension belongs.
            type:
              description: Type of the parent link. Set to "analytics#webproperty".
              default: analytics#webproperty
              type: string
          type: object
          description: Parent link for the custom dimension. Points to the property to which the custom dimension belongs.
      type: object
      description: JSON template for Analytics Custom Dimension.
      id: CustomDimension
    FilterRef:
      description: JSON template for a profile filter link.
      id: FilterRef
      properties:
        href:
          type: string
          description: Link for this filter.
        kind:
          description: Kind value for filter reference.
          default: analytics#filterRef
          type: string
        accountId:
          type: string
          description: Account ID to which this filter belongs.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Name of this filter.
        id:
          description: Filter ID.
          annotations:
            required:
              - analytics.management.profileFilterLinks.insert
          type: string
      type: object
    EntityAdWordsLink:
      description: JSON template for Analytics Entity Google Ads Link.
      type: object
      properties:
        profileIds:
          items:
            type: string
          description: IDs of linked Views (Profiles) represented as strings.
          type: array
        selfLink:
          type: string
          description: URL link for this Google Analytics - Google Ads link.
        name:
          description: Name of the link. This field is required when creating a Google Ads link.
          annotations:
            required:
              - analytics.management.webPropertyAdWordsLinks.insert
              - analytics.management.webPropertyAdWordsLinks.update
          type: string
        adWordsAccounts:
          items:
            $ref: '#/components/schemas/AdWordsAccount'
          type: array
          annotations:
            required:
              - analytics.management.webPropertyAdWordsLinks.insert
              - analytics.management.webPropertyAdWordsLinks.update
          description: A list of Google Ads client accounts. These cannot be MCC accounts. This field is required when creating a Google Ads link. It cannot be empty.
        entity:
          type: object
          properties:
            webPropertyRef:
              $ref: '#/components/schemas/WebPropertyRef'
          description: Web property being linked.
        id:
          type: string
          description: Entity Google Ads link ID
        kind:
          description: Resource type for entity Google Ads link.
          default: analytics#entityAdWordsLink
          type: string
      id: EntityAdWordsLink
    Experiments:
      type: object
      description: An experiment collection lists Analytics experiments to which the user has access. Each view (profile) can have a set of experiments. Each resource in the Experiment collection corresponds to a single Analytics experiment.
      id: Experiments
      properties:
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        nextLink:
          description: Link to next page for this experiment collection.
          type: string
        kind:
          default: analytics#experiments
          type: string
          description: Collection type.
        username:
          description: Email ID of the authenticated user
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
          description: A list of experiments.
        previousLink:
          description: Link to previous page for this experiment collection.
          type: string
        totalResults:
          type: integer
          format: int32
          description: The total number of results for the query, regardless of the number of resources in the result.
        startIndex:
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
          type: integer
    ProfileRef:
      type: object
      description: JSON template for a linked view (profile).
      properties:
        webPropertyId:
          type: string
          description: Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.
        name:
          type: string
          description: Name of this view (profile).
        internalWebPropertyId:
          description: Internal ID for the web property to which this view (profile) belongs.
          type: string
        href:
          description: Link for this view (profile).
          type: string
        accountId:
          description: Account ID to which this view (profile) belongs.
          type: string
        kind:
          description: Analytics view (profile) reference.
          type: string
          default: analytics#profileRef
        id:
          type: string
          description: View (Profile) ID.
      id: ProfileRef
    UserRef:
      description: JSON template for a user reference.
      id: UserRef
      type: object
      properties:
        id:
          type: string
          description: User ID.
        email:
          description: Email ID of this user.
          type: string
        kind:
          default: analytics#userRef
          type: string
    RemarketingAudience:
      type: object
      properties:
        stateBasedAudienceDefinition:
          properties:
            excludeConditions:
              properties:
                segment:
                  description: The segment condition that will cause a user to be removed from an audience.
                  type: string
                exclusionDuration:
                  description: Whether to make the exclusion TEMPORARY or PERMANENT.
                  type: string
              description: Defines the conditions to exclude users from the audience.
              type: object
            includeConditions:
              $ref: '#/components/schemas/IncludeConditions'
              description: Defines the conditions to include users to the audience.
          description: A state based audience definition that will cause a user to be added or removed from an audience.
          type: object
        linkedViews:
          type: array
          items:
            type: string
          description: The views (profiles) that this remarketing audience is linked to.
        created:
          type: string
          format: date-time
          readOnly: true
          description: Time this remarketing audience was created.
        updated:
          readOnly: true
          format: date-time
          type: string
          description: Time this remarketing audience was last modified.
        kind:
          description: Collection type.
          type: string
          default: analytics#remarketingAudience
        audienceDefinition:
          type: object
          description: The simple audience definition that will cause a user to be added to an audience.
          properties:
            includeConditions:
              $ref: '#/components/schemas/IncludeConditions'
              description: Defines the conditions to include users to the audience.
        webPropertyId:
          description: Web property ID of the form UA-XXXXX-YY to which this remarketing audience belongs.
          type: string
        linkedAdAccounts:
          type: array
          description: The linked ad accounts associated with this remarketing audience. A remarketing audience can have only one linkedAdAccount currently.
          items:
            $ref: '#/components/schemas/LinkedForeignAccount'
        internalWebPropertyId:
          description: Internal ID for the web property to which this remarketing audience belongs.
          readOnly: true
          type: string
        id:
          description: Remarketing Audience ID.
          type: string
        name:
          description: The name of this remarketing audience.
          type: string
        audienceType:
          type: string
          description: The type of audience, either SIMPLE or STATE_BASED.
        description:
          readOnly: true
          type: string
          description: The description of this remarketing audience.
        accountId:
          type: string
          description: Account ID to which this remarketing audience belongs.
      description: JSON template for an Analytics remarketing audience.
      id: RemarketingAudience
    AccountSummaries:
      description: An AccountSummary collection lists a summary of accounts, properties and views (profiles) to which the user has access. Each resource in the collection corresponds to a single AccountSummary.
      properties:
        previousLink:
          description: Link to previous page for this AccountSummary collection.
          type: string
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
          format: int32
        itemsPerPage:
          format: int32
          type: integer
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        kind:
          description: Collection type.
          type: string
          default: analytics#accountSummaries
        username:
          description: Email ID of the authenticated user
          type: string
        startIndex:
          format: int32
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
        items:
          description: A list of AccountSummaries.
          type: array
          items:
            $ref: '#/components/schemas/AccountSummary'
        nextLink:
          type: string
          description: Link to next page for this AccountSummary collection.
      id: AccountSummaries
      type: object
    EntityAdWordsLinks:
      type: object
      id: EntityAdWordsLinks
      properties:
        kind:
          type: string
          default: analytics#entityAdWordsLinks
          description: Collection type.
        nextLink:
          description: Next link for this Google Ads link collection.
          type: string
        startIndex:
          description: The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
          type: integer
        itemsPerPage:
          format: int32
          description: The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
        totalResults:
          format: int32
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/EntityAdWordsLink'
          description: A list of entity Google Ads links.
        previousLink:
          description: Previous link for this Google Ads link collection.
          type: string
      description: An entity Google Ads link collection provides a list of GA-Google Ads links Each resource in this collection corresponds to a single link.
    Webproperty:
      id: Webproperty
      type: object
      properties:
        accountId:
          type: string
          description: Account ID to which this web property belongs.
        childLink:
          properties:
            href:
              description: Link to the list of views (profiles) for this web property.
              type: string
            type:
              description: Type of the parent link. Its value is "analytics#profiles".
              default: analytics#profiles
              type: string
          description: Child link for this web property. Points to the list of views (profiles) for this web property.
          type: object
        id:
          description: Web property ID of the form UA-XXXXX-YY.
          type: string
        internalWebPropertyId:
          type: string
          readOnly: true
          description: Internal ID for this web property.
        permissions:
          type: object
          description: Permissions the user has for this web property.
          properties:
            effective:
              description: All the permissions that the user has for this web property. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent account.
              type: array
              items:
                type: string
              readOnly: true
        websiteUrl:
          type: string
          description: Website url for this web property.
        defaultProfileId:
          type: string
          description: Default view (profile) ID.
          format: int64
        created:
          readOnly: true
          format: date-time
          type: string
          description: Time this web property was created.
        parentLink:
          description: Parent link for this web property. Points to the account to which this web property belongs.
          properties:
            href:
              description: Link to the account for this web property.
              type: string
            type:
              default: analytics#account
              type: string
              description: Type of the parent link. Its value is "analytics#account".
          type: object
        updated:
          format: date-time
          readOnly: true
          type: string
          description: Time this web property was last modified.
        selfLink:
          description: Link for this web property.
          type: string
          readOnly: true
        dataRetentionResetOnNewActivity:
          type: boolean
          description: |-
            Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
            Set to false to delete data associated with the user identifier automatically after the rentention period.
            This property cannot be set on insert.
        kind:
          readOnly: true
          type: string
          description: Resource type for Analytics WebProperty.
          default: analytics#webproperty
        industryVertical:
          type: string
          description: The industry vertical/category selected for this web property.
        starred:
          description: Indicates whether this web property is starred or not.
          type: boolean
        name:
          description: Name of this web property.
          type: string
        profileCount:
          format: int32
          description: View (Profile) count for this web property.
          readOnly: true
          type: integer
        dataRetentionTtl:
          type: string
          description: |-
            The length of time for which user and event data is retained.
            This property cannot be set on insert.
        level:
          description: Level for this web property. Possible values are STANDARD or PREMIUM.
          readOnly: true
          type: string
      description: JSON template for an Analytics web property.
    CustomDataSource:
      id: CustomDataSource
      properties:
        profilesLinked:
          items:
            type: string
          type: array
          description: IDs of views (profiles) linked to the custom data source.
        name:
          description: Name of this custom data source.
          type: string
        webPropertyId:
          description: Web property ID of the form UA-XXXXX-YY to which this custom data source belongs.
          type: string
        parentLink:
          type: object
          properties:
            href:
              description: Link to the web property to which this custom data source belongs.
              type: string
            type:
              type: string
              default: analytics#webproperty
              description: Value is "analytics#webproperty".
          description: Parent link for this custom data source. Points to the web property to which this custom data source belongs.
        uploadType:
          description: Upload type of the custom data source.
          type: string
        description:
          type: string
          description: Description of custom data source.
        type:
          description: Type of the custom data source.
          type: string
        created:
          type: string
          format: date-time
          description: Time this custom data source was created.
        updated:
          format: date-time
          description: Time this custom data source was last modified.
          type: string
        importBehavior:
          type: string
        accountId:
          type: string
          description: Account ID to which this custom data source belongs.
        id:
          type: string
          description: Custom data source ID.
        schema:
          type: array
          items:
            type: string
          description: Collection of schema headers of the custom data source.
        childLink:
          type: object
          properties:
            type:
              type: string
              description: Value is "analytics#dailyUploads". Value is "analytics#uploads".
            href:
              type: string
              description: Link to the list of daily uploads for this custom data source. Link to the list of uploads for this custom data source.
        selfLink:
          description: Link for this Analytics custom data source.
          type: string
        kind:
          type: string
          description: Resource type for Analytics custom data source.
          default: analytics#customDataSource
      type: object
      description: JSON template for an Analytics custom data source.
    AnalyticsDataimportDeleteUploadDataRequest:
      description: Request template for the delete upload data request.
      id: AnalyticsDataimportDeleteUploadDataRequest
      properties:
        customDataImportUids:
          type: array
          items:
            type: string
          description: A list of upload UIDs.
      type: object
    Profile:
      type: object
      description: JSON template for an Analytics view (profile).
      id: Profile
      properties:
        siteSearchQueryParameters:
          type: string
          description: The site search query parameters for this view (profile).
        parentLink:
          properties:
            href:
              type: string
              description: Link to the web property to which this view (profile) belongs.
            type:
              default: analytics#webproperty
              type: string
              description: Value is "analytics#webproperty".
          type: object
          description: Parent link for this view (profile). Points to the web property to which this view (profile) belongs.
        enhancedECommerceTracking:
          type: boolean
          description: Indicates whether enhanced ecommerce tracking is enabled for this view (profile). This property can only be enabled if ecommerce tracking is enabled.
        permissions:
          type: object
          description: Permissions the user has for this view (profile).
          properties:
            effective:
              items:
                type: string
              type: array
              readOnly: true
              description: All the permissions that the user has for this view (profile). These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent web property.
        websiteUrl:
          type: string
          description: Website URL for this view (profile).
        webPropertyId:
          readOnly: true
          description: Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.
          type: string
        name:
          description: Name of this view (profile).
          type: string
        timezone:
          type: string
          description: Time zone for which this view (profile) has been configured. Time zones are identified by strings from the TZ database.
        childLink:
          description: Child link for this view (profile). Points to the list of goals for this view (profile).
          properties:
            type:
              default: analytics#goals
              description: Value is "analytics#goals".
              type: string
            href:
              type: string
              description: Link to the list of goals for this view (profile).
          type: object
        botFilteringEnabled:
          description: Indicates whether bot filtering is enabled for this view (profile).
          type: boolean
        created:
          format: date-time
          type: string
          readOnly: true
          description: Time this view (profile) was created.
        updated:
          format: date-time
          readOnly: true
          type: string
          description: Time this view (profile) was last modified.
        stripSiteSearchCategoryParameters:
          type: boolean
          description: Whether or not Analytics will strip search category parameters from the URLs in your reports.
        excludeQueryParameters:
          description: The query parameters that are excluded from this view (profile).
          type: string
        kind:
          description: Resource type for Analytics view (profile).
          default: analytics#profile
          readOnly: true
          type: string
        stripSiteSearchQueryParameters:
          type: boolean
          description: Whether or not Analytics will strip search query parameters from the URLs in your reports.
        currency:
          description: |-
            The currency type associated with this view (profile), defaults to USD. The supported values are:
            USD, JPY, EUR, GBP, AUD, KRW, BRL, CNY, DKK, RUB, SEK, NOK, PLN, TRY, TWD, HKD, THB, IDR, ARS, MXN, VND, PHP, INR, CHF, CAD, CZK, NZD, HUF, BGN, LTL, ZAR, UAH, AED, BOB, CLP, COP, EGP, HRK, ILS, MAD, MYR, PEN, PKR, RON, RSD, SAR, SGD, VEF, LVL
          type: string
        type:
          description: 'View (Profile) type. Supported types: WEB or APP.'
          type: string
        siteSearchCategoryParameters:
          description: Site search category parameters for this view (profile).
          type: string
        internalWebPropertyId:
          readOnly: true
          description: Internal ID for the web property to which this view (profile) belongs.
          type: string
        selfLink:
          readOnly: true
          description: Link for this view (profile).
          type: string
        starred:
          description: Indicates whether this view (profile) is starred or not.
          type: boolean
        defaultPage:
          type: string
          description: Default page for this view (profile).
        eCommerceTracking:
          type: boolean
          description: Indicates whether ecommerce tracking is enabled for this view (profile).
        id:
          description: View (Profile) ID.
          type: string
        accountId:
          type: string
          description: Account ID to which this view (profile) belongs.
    ProfileFilterLinks:
      type: object
      properties:
        nextLink:
          description: Link to next page for this profile filter link collection.
          type: string
        startIndex:
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
          type: integer
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        previousLink:
          description: Link to previous page for this profile filter link collection.
          type: string
        kind:
          description: Collection type.
          type: string
          default: analytics#profileFilterLinks
        username:
          type: string
          description: Email ID of the authenticated user
        totalResults:
          type: integer
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
        items:
          description: A list of profile filter links.
          type: array
          items:
            $ref: '#/components/schemas/ProfileFilterLink'
      id: ProfileFilterLinks
      description: A profile filter link collection lists profile filter links between profiles and filters. Each resource in the collection corresponds to a profile filter link.
    Segments:
      id: Segments
      properties:
        startIndex:
          type: integer
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
        items:
          description: A list of segments.
          items:
            $ref: '#/components/schemas/Segment'
          type: array
        previousLink:
          type: string
          description: Link to previous page for this segment collection.
        nextLink:
          description: Link to next page for this segment collection.
          type: string
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        kind:
          description: Collection type for segments.
          type: string
          default: analytics#segments
        username:
          description: Email ID of the authenticated user
          type: string
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
          format: int32
      description: An segment collection lists Analytics segments that the user has access to. Each resource in the collection corresponds to a single Analytics segment.
      type: object
    ProfileSummary:
      id: ProfileSummary
      type: object
      description: JSON template for an Analytics ProfileSummary. ProfileSummary returns basic information (i.e., summary) for a profile.
      properties:
        type:
          description: 'View (Profile) type. Supported types: WEB or APP.'
          type: string
        starred:
          type: boolean
          description: Indicates whether this view (profile) is starred or not.
        name:
          description: View (profile) name.
          type: string
        id:
          description: View (profile) ID.
          type: string
        kind:
          default: analytics#profileSummary
          type: string
          description: Resource type for Analytics ProfileSummary.
    AccountTreeResponse:
      type: object
      properties:
        webproperty:
          description: Web property for the account.
          $ref: '#/components/schemas/Webproperty'
        profile:
          description: View (Profile) for the account.
          $ref: '#/components/schemas/Profile'
        account:
          $ref: '#/components/schemas/Account'
          description: The account created.
        kind:
          description: Resource type for account ticket.
          default: analytics#accountTreeResponse
          type: string
      id: AccountTreeResponse
      description: JSON template for an Analytics account tree response. The account tree response is used in the provisioning api to return the result of creating an account, property, and view (profile).
    CustomMetric:
      type: object
      properties:
        updated:
          type: string
          format: date-time
          description: Time the custom metric was last modified.
          readOnly: true
        min_value:
          type: string
          description: Min value of custom metric.
        accountId:
          type: string
          description: Account ID.
        index:
          description: Index of the custom metric.
          type: integer
          format: int32
          readOnly: true
        kind:
          description: Kind value for a custom metric. Set to "analytics#customMetric". It is a read-only field.
          type: string
          readOnly: true
          default: analytics#customMetric
        created:
          description: Time the custom metric was created.
          format: date-time
          type: string
          readOnly: true
        webPropertyId:
          type: string
          description: Property ID.
        id:
          type: string
          description: Custom metric ID.
        selfLink:
          type: string
          description: Link for the custom metric
          readOnly: true
        active:
          type: boolean
          description: Boolean indicating whether the custom metric is active.
        parentLink:
          type: object
          description: Parent link for the custom metric. Points to the property to which the custom metric belongs.
          properties:
            type:
              default: analytics#webproperty
              type: string
              description: Type of the parent link. Set to "analytics#webproperty".
            href:
              type: string
              description: Link to the property to which the custom metric belongs.
        name:
          type: string
          description: Name of the custom metric.
        max_value:
          type: string
          description: Max value of custom metric.
        type:
          type: string
          description: Data type of custom metric.
        scope:
          description: 'Scope of the custom metric: HIT or PRODUCT.'
          type: string
      description: JSON template for Analytics Custom Metric.
      id: CustomMetric
    Uploads:
      description: Upload collection lists Analytics uploads to which the user has access. Each custom data source can have a set of uploads. Each resource in the upload collection corresponds to a single Analytics data upload.
      id: Uploads
      type: object
      properties:
        previousLink:
          type: string
          description: Link to previous page for this upload collection.
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        kind:
          default: analytics#uploads
          type: string
          description: Collection type.
        startIndex:
          format: int32
          type: integer
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
        items:
          type: array
          description: A list of uploads.
          items:
            $ref: '#/components/schemas/Upload'
        nextLink:
          type: string
          description: Link to next page for this upload collection.
        totalResults:
          format: int32
          description: The total number of results for the query, regardless of the number of resources in the result.
          type: integer
    Columns:
      description: Lists columns (dimensions and metrics) for a particular report type.
      properties:
        etag:
          description: Etag of collection. This etag can be compared with the last response etag to check if response has changed.
          type: string
        items:
          description: List of columns for a report type.
          items:
            $ref: '#/components/schemas/Column'
          type: array
        totalResults:
          type: integer
          description: Total number of columns returned in the response.
          format: int32
        attributeNames:
          description: List of attributes names returned by columns.
          items:
            type: string
          type: array
        kind:
          description: Collection type.
          default: analytics#columns
          type: string
      id: Columns
      type: object
    CustomDataSources:
      id: CustomDataSources
      properties:
        kind:
          description: Collection type.
          type: string
          default: analytics#customDataSources
        nextLink:
          type: string
          description: Link to next page for this custom data source collection.
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
          type: integer
        itemsPerPage:
          format: int32
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
        startIndex:
          format: int32
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
        items:
          type: array
          description: Collection of custom data sources.
          items:
            $ref: '#/components/schemas/CustomDataSource'
        username:
          type: string
          description: Email ID of the authenticated user
        previousLink:
          type: string
          description: Link to previous page for this custom data source collection.
      type: object
      description: Lists Analytics custom data sources to which the user has access. Each resource in the collection corresponds to a single Analytics custom data source.
    Goal:
      description: JSON template for Analytics goal resource.
      type: object
      id: Goal
      properties:
        internalWebPropertyId:
          type: string
          description: Internal ID for the web property to which this goal belongs.
        eventDetails:
          description: Details for the goal of the type EVENT.
          properties:
            eventConditions:
              description: List of event conditions.
              type: array
              items:
                properties:
                  type:
                    description: Type of this event condition. Possible values are CATEGORY, ACTION, LABEL, or VALUE.
                    type: string
                  comparisonValue:
                    format: int64
                    type: string
                    description: Value used for this comparison.
                  comparisonType:
                    type: string
                    description: Type of comparison. Possible values are LESS_THAN, GREATER_THAN or EQUAL.
                  matchType:
                    description: Type of the match to be performed. Possible values are REGEXP, BEGINS_WITH, or EXACT.
                    type: string
                  expression:
                    type: string
                    description: Expression used for this match.
                type: object
            useEventValue:
              description: Determines if the event value should be used as the value for this goal.
              type: boolean
          type: object
        created:
          format: date-time
          description: Time this goal was created.
          type: string
        webPropertyId:
          description: Web property ID to which this goal belongs. The web property ID is of the form UA-XXXXX-YY.
          type: string
        urlDestinationDetails:
          properties:
            matchType:
              type: string
              description: Match type for the goal URL. Possible values are HEAD, EXACT, or REGEX.
            caseSensitive:
              type: boolean
              description: Determines if the goal URL must exactly match the capitalization of visited URLs.
            firstStepRequired:
              type: boolean
              description: Determines if the first step in this goal is required.
            url:
              description: URL for this goal.
              type: string
            steps:
              type: array
              description: List of steps configured for this goal funnel.
              items:
                properties:
                  number:
                    format: int32
                    type: integer
                    description: Step number.
                  name:
                    type: string
                    description: Step name.
                  url:
                    type: string
                    description: URL for this step.
                type: object
          description: Details for the goal of the type URL_DESTINATION.
          type: object
        selfLink:
          description: Link for this goal.
          type: string
        type:
          type: string
          description: Goal type. Possible values are URL_DESTINATION, VISIT_TIME_ON_SITE, VISIT_NUM_PAGES, AND EVENT.
        id:
          type: string
          description: Goal ID.
        visitTimeOnSiteDetails:
          properties:
            comparisonValue:
              description: Value used for this comparison.
              format: int64
              type: string
            comparisonType:
              description: Type of comparison. Possible values are LESS_THAN or GREATER_THAN.
              type: string
          type: object
          description: Details for the goal of the type VISIT_TIME_ON_SITE.
        profileId:
          description: View (Profile) ID to which this goal belongs.
          type: string
        active:
          description: Determines whether this goal is active.
          type: boolean
        visitNumPagesDetails:
          properties:
            comparisonValue:
              description: Value used for this comparison.
              format: int64
              type: string
            comparisonType:
              description: Type of comparison. Possible values are LESS_THAN, GREATER_THAN, or EQUAL.
              type: string
          description: Details for the goal of the type VISIT_NUM_PAGES.
          type: object
        kind:
          default: analytics#goal
          type: string
          description: Resource type for an Analytics goal.
        updated:
          format: date-time
          type: string
          description: Time this goal was last modified.
        value:
          description: Goal value.
          type: number
          format: float
        name:
          description: Goal name.
          type: string
        accountId:
          type: string
          description: Account ID to which this goal belongs.
        parentLink:
          description: Parent link for a goal. Points to the view (profile) to which this goal belongs.
          properties:
            href:
              description: Link to the view (profile) to which this goal belongs.
              type: string
            type:
              default: analytics#profile
              description: Value is "analytics#profile".
              type: string
          type: object
    RemarketingAudiences:
      id: RemarketingAudiences
      description: A remarketing audience collection lists Analytics remarketing audiences to which the user has access. Each resource in the collection corresponds to a single Analytics remarketing audience.
      type: object
      properties:
        previousLink:
          type: string
          description: Link to previous page for this view (profile) collection.
        items:
          description: A list of remarketing audiences.
          items:
            $ref: '#/components/schemas/RemarketingAudience'
          type: array
        nextLink:
          type: string
          description: Link to next page for this remarketing audience collection.
        kind:
          type: string
          default: analytics#remarketingAudiences
          description: Collection type.
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
          type: integer
        username:
          type: string
          description: Email ID of the authenticated user
        itemsPerPage:
          format: int32
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
        startIndex:
          format: int32
          type: integer
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    EntityUserLinks:
      type: object
      id: EntityUserLinks
      description: An entity user link collection provides a list of Analytics ACL links Each resource in this collection corresponds to a single link.
      properties:
        items:
          items:
            $ref: '#/components/schemas/EntityUserLink'
          type: array
          description: A list of entity user links.
        startIndex:
          type: integer
          format: int32
          description: The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
        nextLink:
          description: Next link for this account collection.
          type: string
        previousLink:
          type: string
          description: Previous link for this account collection.
        itemsPerPage:
          format: int32
          type: integer
          description: The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        kind:
          default: analytics#entityUserLinks
          type: string
          description: Collection type.
        totalResults:
          format: int32
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
    RealtimeData:
      id: RealtimeData
      properties:
        rows:
          items:
            items:
              type: string
            type: array
          type: array
          description: Real time data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
        query:
          description: Real time data request query parameters.
          type: object
          properties:
            sort:
              description: List of dimensions or metrics based on which real time data is sorted.
              type: array
              items:
                type: string
            metrics:
              type: array
              items:
                type: string
              description: List of real time metrics.
            ids:
              description: Unique table ID.
              type: string
            dimensions:
              type: string
              description: List of real time dimensions.
            filters:
              description: Comma-separated list of dimension or metric filters.
              type: string
            max-results:
              type: integer
              description: Maximum results per page.
              format: int32
        id:
          description: Unique ID for this data response.
          type: string
        totalsForAllResults:
          description: Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
          additionalProperties:
            description: Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.
            type: string
          type: object
        kind:
          description: Resource type.
          type: string
          default: analytics#realtimeData
        profileInfo:
          description: Information for the view (profile), for which the real time data was requested.
          properties:
            internalWebPropertyId:
              type: string
              description: Internal ID for the web property to which this view (profile) belongs.
            profileId:
              description: View (Profile) ID.
              type: string
            accountId:
              description: Account ID to which this view (profile) belongs.
              type: string
            tableId:
              description: Table ID for view (profile).
              type: string
            webPropertyId:
              description: Web Property ID to which this view (profile) belongs.
              type: string
            profileName:
              type: string
              description: View (Profile) name.
          type: object
        columnHeaders:
          type: array
          items:
            properties:
              columnType:
                description: Column Type. Either DIMENSION or METRIC.
                type: string
              name:
                description: Column name.
                type: string
              dataType:
                description: Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.
                type: string
            type: object
          description: Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
        selfLink:
          description: Link to this page.
          type: string
        totalResults:
          description: The total number of rows for the query, regardless of the number of rows in the response.
          type: integer
          format: int32
      description: Real time data for a given view (profile).
      type: object
    Filters:
      type: object
      description: A filter collection lists filters created by users in an Analytics account. Each resource in the collection corresponds to a filter.
      properties:
        username:
          type: string
          description: Email ID of the authenticated user
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
          format: int32
        previousLink:
          type: string
          description: Link to previous page for this filter collection.
        startIndex:
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          format: int32
          type: integer
        items:
          type: array
          description: A list of filters.
          items:
            $ref: '#/components/schemas/Filter'
        kind:
          default: analytics#filters
          description: Collection type.
          type: string
        itemsPerPage:
          format: int32
          type: integer
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        nextLink:
          type: string
          description: Link to next page for this filter collection.
      id: Filters
    AccountSummary:
      description: JSON template for an Analytics AccountSummary. An AccountSummary is a lightweight tree comprised of properties/profiles.
      id: AccountSummary
      properties:
        id:
          type: string
          description: Account ID.
        kind:
          description: Resource type for Analytics AccountSummary.
          default: analytics#accountSummary
          type: string
        name:
          description: Account name.
          type: string
        webProperties:
          type: array
          items:
            $ref: '#/components/schemas/WebPropertySummary'
          description: List of web properties under this account.
        starred:
          type: boolean
          description: Indicates whether this account is starred or not.
      type: object
    McfData:
      type: object
      properties:
        totalsForAllResults:
          type: object
          description: Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
          additionalProperties:
            description: Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.
            type: string
        nextLink:
          description: Link to next page for this Analytics data query.
          type: string
        columnHeaders:
          items:
            properties:
              dataType:
                type: string
                description: Data type. Dimension and metric values data types such as INTEGER, DOUBLE, CURRENCY, MCF_SEQUENCE etc.
              name:
                description: Column name.
                type: string
              columnType:
                description: Column Type. Either DIMENSION or METRIC.
                type: string
            type: object
          type: array
          description: Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
        rows:
          items:
            items:
              properties:
                primitiveValue:
                  description: A primitive dimension value. A primitive metric value.
                  type: string
                conversionPathValue:
                  items:
                    type: object
                    properties:
                      interactionType:
                        type: string
                        description: Type of an interaction on conversion path. Such as CLICK, IMPRESSION etc.
                      nodeValue:
                        description: Node value of an interaction on conversion path. Such as source, medium etc.
                        type: string
                  type: array
                  description: A conversion path dimension value, containing a list of interactions with their attributes.
              type: object
              description: A union object representing a dimension or metric value. Only one of "primitiveValue" or "conversionPathValue" attribute will be populated.
            type: array
          description: Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
          type: array
        profileInfo:
          type: object
          description: Information for the view (profile), for which the Analytics data was requested.
          properties:
            accountId:
              description: Account ID to which this view (profile) belongs.
              type: string
            tableId:
              description: Table ID for view (profile).
              type: string
            internalWebPropertyId:
              type: string
              description: Internal ID for the web property to which this view (profile) belongs.
            webPropertyId:
              type: string
              description: Web Property ID to which this view (profile) belongs.
            profileId:
              type: string
              description: View (Profile) ID.
            profileName:
              description: View (Profile) name.
              type: string
        kind:
          default: analytics#mcfData
          description: Resource type.
          type: string
        containsSampledData:
          description: Determines if the Analytics data contains sampled data.
          type: boolean
        previousLink:
          description: Link to previous page for this Analytics data query.
          type: string
        itemsPerPage:
          type: integer
          format: int32
          description: The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
        sampleSize:
          description: The number of samples used to calculate the result.
          format: int64
          type: string
        selfLink:
          description: Link to this page.
          type: string
        totalResults:
          description: The total number of rows for the query, regardless of the number of rows in the response.
          type: integer
          format: int32
        id:
          type: string
          description: Unique ID for this data response.
        query:
          properties:
            ids:
              type: string
              description: Unique table ID.
            start-index:
              format: int32
              description: Start index.
              type: integer
            filters:
              type: string
              description: Comma-separated list of dimension or metric filters.
            metrics:
              type: array
              description: List of analytics metrics.
              items:
                type: string
            segment:
              type: string
              description: Analytics advanced segment.
            max-results:
              type: integer
              description: Maximum results per page.
              format: int32
            sort:
              items:
                type: string
              type: array
              description: List of dimensions or metrics based on which Analytics data is sorted.
            dimensions:
              type: string
              description: List of analytics dimensions.
            end-date:
              type: string
              description: End date.
            start-date:
              type: string
              description: Start date.
            samplingLevel:
              description: Desired sampling level
              type: string
          description: Analytics data request query parameters.
          type: object
        sampleSpace:
          type: string
          format: int64
          description: Total size of the sample space from which the samples were selected.
      description: Multi-Channel Funnels data for a given view (profile).
      id: McfData
    WebPropertySummary:
      id: WebPropertySummary
      type: object
      properties:
        name:
          type: string
          description: Web property name.
        websiteUrl:
          description: Website url for this web property.
          type: string
        level:
          type: string
          description: Level for this web property. Possible values are STANDARD or PREMIUM.
        kind:
          type: string
          description: Resource type for Analytics WebPropertySummary.
          default: analytics#webPropertySummary
        id:
          description: Web property ID of the form UA-XXXXX-YY.
          type: string
        starred:
          description: Indicates whether this web property is starred or not.
          type: boolean
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/ProfileSummary'
          description: List of profiles under this web property.
        internalWebPropertyId:
          type: string
          description: Internal ID for this web property.
      description: JSON template for an Analytics WebPropertySummary. WebPropertySummary returns basic information (i.e., summary) for a web property.
    ProfileFilterLink:
      description: JSON template for an Analytics profile filter link.
      type: object
      properties:
        id:
          type: string
          description: Profile filter link ID.
        filterRef:
          description: Filter for this link.
          $ref: '#/components/schemas/FilterRef'
        selfLink:
          type: string
          description: Link for this profile filter link.
          readOnly: true
        rank:
          format: int32
          type: integer
          description: |-
            The rank of this profile filter link relative to the other filters linked to the same profile.
            For readonly (i.e., list and get) operations, the rank always starts at 1.
            For write (i.e., create, update, or delete) operations, you may specify a value between 0 and 255 inclusively, [0, 255]. In order to insert a link at the end of the list, either don't specify a rank or set a rank to a number greater than the largest rank in the list. In order to insert a link to the beginning of the list specify a rank that is less than or equal to 1. The new link will move all existing filters with the same or lower rank down the list. After the link is inserted/updated/deleted all profile filter links will be renumbered starting at 1.
        kind:
          description: Resource type for Analytics filter.
          type: string
          readOnly: true
          default: analytics#profileFilterLink
        profileRef:
          $ref: '#/components/schemas/ProfileRef'
          description: View (Profile) for this link.
      id: ProfileFilterLink
    HashClientIdResponse:
      id: HashClientIdResponse
      description: JSON template for a hash Client Id response resource.
      properties:
        hashedClientId:
          type: string
        kind:
          default: analytics#hashClientIdResponse
          type: string
        clientId:
          type: string
        webPropertyId:
          type: string
      type: object
    CustomMetrics:
      description: A custom metric collection lists Analytics custom metrics to which the user has access. Each resource in the collection corresponds to a single Analytics custom metric.
      properties:
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        kind:
          description: Collection type.
          type: string
          default: analytics#customMetrics
        username:
          description: Email ID of the authenticated user
          type: string
        nextLink:
          description: Link to next page for this custom metric collection.
          type: string
        totalResults:
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
          type: integer
        startIndex:
          type: integer
          format: int32
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
        items:
          type: array
          description: Collection of custom metrics.
          items:
            $ref: '#/components/schemas/CustomMetric'
        previousLink:
          type: string
          description: Link to previous page for this custom metric collection.
      id: CustomMetrics
      type: object
    Profiles:
      properties:
        items:
          type: array
          description: A list of views (profiles).
          items:
            $ref: '#/components/schemas/Profile'
        nextLink:
          type: string
          description: Link to next page for this view (profile) collection.
        kind:
          description: Collection type.
          default: analytics#profiles
          type: string
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        startIndex:
          format: int32
          type: integer
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
        previousLink:
          description: Link to previous page for this view (profile) collection.
          type: string
        totalResults:
          type: integer
          description: The total number of results for the query, regardless of the number of results in the response.
          format: int32
        username:
          description: Email ID of the authenticated user
          type: string
      type: object
      id: Profiles
      description: A view (profile) collection lists Analytics views (profiles) to which the user has access. Each resource in the collection corresponds to a single Analytics view (profile).
    AdWordsAccount:
      description: JSON template for an Google Ads account.
      id: AdWordsAccount
      type: object
      properties:
        kind:
          default: analytics#adWordsAccount
          type: string
          description: Resource type for Google Ads account.
        autoTaggingEnabled:
          type: boolean
          description: True if auto-tagging is enabled on the Google Ads account. Read-only after the insert operation.
        customerId:
          description: Customer ID. This field is required when creating a Google Ads link.
          annotations:
            required:
              - analytics.management.webPropertyAdWordsLinks.insert
              - analytics.management.webPropertyAdWordsLinks.update
          type: string
    HashClientIdRequest:
      properties:
        clientId:
          type: string
        webPropertyId:
          type: string
        kind:
          default: analytics#hashClientIdRequest
          type: string
      description: JSON template for a hash Client Id request resource.
      id: HashClientIdRequest
      type: object
    UserDeletionRequest:
      type: object
      description: JSON template for a user deletion request resource.
      id: UserDeletionRequest
      properties:
        webPropertyId:
          description: Web property ID of the form UA-XXXXX-YY.
          type: string
        propertyId:
          type: string
          description: Property ID
        firebaseProjectId:
          description: Firebase Project Id
          type: string
        id:
          properties:
            type:
              type: string
              description: Type of user
            userId:
              type: string
              description: The User's id
          description: User ID.
          type: object
        deletionRequestTime:
          readOnly: true
          format: date-time
          description: This marks the point in time for which all user data before should be deleted
          type: string
        kind:
          description: Value is "analytics#userDeletionRequest".
          default: analytics#userDeletionRequest
          type: string
    WebPropertyRef:
      properties:
        id:
          description: Web property ID of the form UA-XXXXX-YY.
          type: string
        href:
          type: string
          description: Link for this web property.
        accountId:
          description: Account ID to which this web property belongs.
          type: string
        kind:
          description: Analytics web property reference.
          type: string
          default: analytics#webPropertyRef
        internalWebPropertyId:
          description: Internal ID for this web property.
          type: string
        name:
          type: string
          description: Name of this web property.
      id: WebPropertyRef
      description: JSON template for a web property reference.
      type: object
    Account:
      type: object
      properties:
        childLink:
          properties:
            href:
              type: string
              description: Link to the list of web properties for this account.
            type:
              type: string
              default: analytics#webproperties
              description: Type of the child link. Its value is "analytics#webproperties".
          type: object
          description: Child link for an account entry. Points to the list of web properties for this account.
        updated:
          format: date-time
          type: string
          description: Time the account was last modified.
        kind:
          type: string
          default: analytics#account
          description: Resource type for Analytics account.
        id:
          description: Account ID.
          type: string
        selfLink:
          type: string
          description: Link for this account.
        name:
          type: string
          description: Account name.
        permissions:
          properties:
            effective:
              items:
                type: string
              type: array
              description: All the permissions that the user has for this account. These include any implied permissions (e.g., EDIT implies VIEW).
              readOnly: true
          description: Permissions the user has for this account.
          type: object
        starred:
          description: Indicates whether this account is starred or not.
          type: boolean
        created:
          type: string
          description: Time the account was created.
          format: date-time
      id: Account
      description: JSON template for Analytics account entry.
    EntityUserLink:
      type: object
      id: EntityUserLink
      properties:
        kind:
          type: string
          default: analytics#entityUserLink
          description: Resource type for entity user link.
        permissions:
          description: Permissions the user has for this entity.
          properties:
            local:
              type: array
              description: Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable.
              items:
                type: string
            effective:
              readOnly: true
              type: array
              description: Effective permissions represent all the permissions that a user has for this entity. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent entity. Effective permissions are read-only.
              items:
                type: string
          type: object
        selfLink:
          description: Self link for this resource.
          type: string
        id:
          description: Entity user link ID
          type: string
        entity:
          type: object
          description: Entity for this link. It can be an account, a web property, or a view (profile).
          properties:
            webPropertyRef:
              $ref: '#/components/schemas/WebPropertyRef'
              description: Web property for this link.
            profileRef:
              description: View (Profile) for this link.
              $ref: '#/components/schemas/ProfileRef'
            accountRef:
              $ref: '#/components/schemas/AccountRef'
              description: Account for this link.
        userRef:
          $ref: '#/components/schemas/UserRef'
          description: User reference.
      description: JSON template for an Analytics Entity-User Link. Returns permissions that a user has for an entity.
    IncludeConditions:
      description: JSON template for an Analytics Remarketing Include Conditions.
      type: object
      id: IncludeConditions
      properties:
        segment:
          description: The segment condition that will cause a user to be added to an audience.
          type: string
        daysToLookBack:
          format: int32
          description: The look-back window lets you specify a time frame for evaluating the behavior that qualifies users for your audience. For example, if your filters include users from Central Asia, and Transactions Greater than 2, and you set the look-back window to 14 days, then any user from Central Asia whose cumulative transactions exceed 2 during the last 14 days is added to the audience.
          type: integer
        membershipDurationDays:
          format: int32
          type: integer
          description: Number of days (in the range 1 to 540) a user remains in the audience.
        isSmartList:
          type: boolean
          description: Boolean indicating whether this segment is a smart list. https://support.google.com/analytics/answer/4628577
        kind:
          description: Resource type for include conditions.
          default: analytics#includeConditions
          type: string
    GaData:
      id: GaData
      type: object
      description: Analytics data for a given view (profile).
      properties:
        sampleSpace:
          description: Total size of the sample space from which the samples were selected.
          format: int64
          type: string
        totalResults:
          description: The total number of rows for the query, regardless of the number of rows in the response.
          type: integer
          format: int32
        query:
          description: Analytics data request query parameters.
          properties:
            start-date:
              type: string
              description: Start date.
            segment:
              type: string
              description: Analytics advanced segment.
            dimensions:
              type: string
              description: List of analytics dimensions.
            start-index:
              description: Start index.
              format: int32
              type: integer
            filters:
              description: Comma-separated list of dimension or metric filters.
              type: string
            sort:
              items:
                type: string
              type: array
              description: List of dimensions or metrics based on which Analytics data is sorted.
            metrics:
              type: array
              items:
                type: string
              description: List of analytics metrics.
            ids:
              type: string
              description: Unique table ID.
            samplingLevel:
              type: string
              description: Desired sampling level
            end-date:
              description: End date.
              type: string
            max-results:
              description: Maximum results per page.
              format: int32
              type: integer
          type: object
        dataLastRefreshed:
          description: The last refreshed time in seconds for Analytics data.
          format: int64
          type: string
        rows:
          items:
            type: array
            items:
              type: string
          description: Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
          type: array
        totalsForAllResults:
          type: object
          description: Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
          additionalProperties:
            description: Key-value pair for the total value of a metric. Key is the metric name and the value is the total value for that metric.
            type: string
        sampleSize:
          type: string
          description: The number of samples used to calculate the result.
          format: int64
        itemsPerPage:
          description: The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        profileInfo:
          description: Information for the view (profile), for which the Analytics data was requested.
          type: object
          properties:
            accountId:
              description: Account ID to which this view (profile) belongs.
              type: string
            internalWebPropertyId:
              description: Internal ID for the web property to which this view (profile) belongs.
              type: string
            webPropertyId:
              type: string
              description: Web Property ID to which this view (profile) belongs.
            profileId:
              type: string
              description: View (Profile) ID.
            profileName:
              description: View (Profile) name.
              type: string
            tableId:
              description: Table ID for view (profile).
              type: string
        columnHeaders:
          description: Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
          items:
            type: object
            properties:
              name:
                type: string
                description: Column name.
              dataType:
                description: Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.
                type: string
              columnType:
                type: string
                description: Column Type. Either DIMENSION or METRIC.
          type: array
        id:
          description: Unique ID for this data response.
          type: string
        containsSampledData:
          type: boolean
          description: Determines if Analytics data contains samples.
        dataTable:
          properties:
            cols:
              items:
                properties:
                  id:
                    type: string
                  label:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            rows:
              type: array
              items:
                properties:
                  c:
                    items:
                      type: object
                      properties:
                        v:
                          type: string
                    type: array
                type: object
          type: object
        kind:
          description: Resource type.
          type: string
          default: analytics#gaData
        previousLink:
          type: string
          description: Link to previous page for this Analytics data query.
        selfLink:
          description: Link to this page.
          type: string
        nextLink:
          description: Link to next page for this Analytics data query.
          type: string
    FilterExpression:
      properties:
        kind:
          default: analytics#filterExpression
          type: string
          description: Kind value for filter expression
        matchType:
          description: Match type for this filter. Possible values are BEGINS_WITH, EQUAL, ENDS_WITH, CONTAINS, or MATCHES. GEO_DOMAIN, GEO_IP_ADDRESS, PAGE_REQUEST_URI, or PAGE_HOSTNAME filters can use any match type; all other filters must use MATCHES.
          type: string
        expressionValue:
          description: Filter expression value
          type: string
        fieldIndex:
          type: integer
          format: int32
          description: The Index of the custom dimension. Set only if the field is a is CUSTOM_DIMENSION.
        caseSensitive:
          description: Determines if the filter is case sensitive.
          type: boolean
        field:
          description: |-
            Field to filter. Possible values:  
            - Content and Traffic  
            - PAGE_REQUEST_URI, 
            - PAGE_HOSTNAME, 
            - PAGE_TITLE, 
            - REFERRAL, 
            - COST_DATA_URI (Campaign target URL), 
            - HIT_TYPE, 
            - INTERNAL_SEARCH_TERM, 
            - INTERNAL_SEARCH_TYPE, 
            - SOURCE_PROPERTY_TRACKING_ID,   
            - Campaign or AdGroup  
            - CAMPAIGN_SOURCE, 
            - CAMPAIGN_MEDIUM, 
            - CAMPAIGN_NAME, 
            - CAMPAIGN_AD_GROUP, 
            - CAMPAIGN_TERM, 
            - CAMPAIGN_CONTENT, 
            - CAMPAIGN_CODE, 
            - CAMPAIGN_REFERRAL_PATH,   
            - E-Commerce  
            - TRANSACTION_COUNTRY, 
            - TRANSACTION_REGION, 
            - TRANSACTION_CITY, 
            - TRANSACTION_AFFILIATION (Store or order location), 
            - ITEM_NAME, 
            - ITEM_CODE, 
            - ITEM_VARIATION, 
            - TRANSACTION_ID, 
            - TRANSACTION_CURRENCY_CODE, 
            - PRODUCT_ACTION_TYPE,   
            - Audience/Users  
            - BROWSER, 
            - BROWSER_VERSION, 
            - BROWSER_SIZE, 
            - PLATFORM, 
            - PLATFORM_VERSION, 
            - LANGUAGE, 
            - SCREEN_RESOLUTION, 
            - SCREEN_COLORS, 
            - JAVA_ENABLED (Boolean Field), 
            - FLASH_VERSION, 
            - GEO_SPEED (Connection speed), 
            - VISITOR_TYPE, 
            - GEO_ORGANIZATION (ISP organization), 
            - GEO_DOMAIN, 
            - GEO_IP_ADDRESS, 
            - GEO_IP_VERSION,   
            - Location  
            - GEO_COUNTRY, 
            - GEO_REGION, 
            - GEO_CITY,   
            - Event  
            - EVENT_CATEGORY, 
            - EVENT_ACTION, 
            - EVENT_LABEL,   
            - Other  
            - CUSTOM_FIELD_1, 
            - CUSTOM_FIELD_2, 
            - USER_DEFINED_VALUE,   
            - Application  
            - APP_ID, 
            - APP_INSTALLER_ID, 
            - APP_NAME, 
            - APP_VERSION, 
            - SCREEN, 
            - IS_APP (Boolean Field), 
            - IS_FATAL_EXCEPTION (Boolean Field), 
            - EXCEPTION_DESCRIPTION,   
            - Mobile device  
            - IS_MOBILE (Boolean Field, Deprecated. Use DEVICE_CATEGORY=mobile), 
            - IS_TABLET (Boolean Field, Deprecated. Use DEVICE_CATEGORY=tablet), 
            - DEVICE_CATEGORY, 
            - MOBILE_HAS_QWERTY_KEYBOARD (Boolean Field), 
            - MOBILE_HAS_NFC_SUPPORT (Boolean Field), 
            - MOBILE_HAS_CELLULAR_RADIO (Boolean Field), 
            - MOBILE_HAS_WIFI_SUPPORT (Boolean Field), 
            - MOBILE_BRAND_NAME, 
            - MOBILE_MODEL_NAME, 
            - MOBILE_MARKETING_NAME, 
            - MOBILE_POINTING_METHOD,   
            - Social  
            - SOCIAL_NETWORK, 
            - SOCIAL_ACTION, 
            - SOCIAL_ACTION_TARGET,   
            - Custom dimension  
            - CUSTOM_DIMENSION (See accompanying field index),
          type: string
      type: object
      description: JSON template for an Analytics filter expression.
      id: FilterExpression
    AccountTicket:
      properties:
        account:
          description: Account for this ticket.
          $ref: '#/components/schemas/Account'
        id:
          description: Account ticket ID used to access the account ticket.
          type: string
        webproperty:
          $ref: '#/components/schemas/Webproperty'
          description: Web property for the account.
        kind:
          default: analytics#accountTicket
          description: Resource type for account ticket.
          type: string
        redirectUri:
          type: string
          description: Redirect URI where the user will be sent after accepting Terms of Service. Must be configured in APIs console as a callback URL.
        profile:
          description: View (Profile) for the account.
          $ref: '#/components/schemas/Profile'
      type: object
      description: JSON template for an Analytics account ticket. The account ticket consists of the ticket ID and the basic information for the account, property and profile.
      id: AccountTicket
    LinkedForeignAccount:
      type: object
      properties:
        id:
          type: string
          description: Entity ad account link ID.
        accountId:
          description: Account ID to which this linked foreign account belongs.
          type: string
        linkedAccountId:
          description: The foreign account ID. For example the an Google Ads `linkedAccountId` has the following format XXX-XXX-XXXX.
          type: string
        internalWebPropertyId:
          type: string
          readOnly: true
          description: Internal ID for the web property to which this linked foreign account belongs.
        webPropertyId:
          type: string
          description: Web property ID of the form UA-XXXXX-YY to which this linked foreign account belongs.
        remarketingAudienceId:
          description: Remarketing audience ID to which this linked foreign account belongs.
          type: string
        status:
          description: The status of this foreign account link.
          type: string
        kind:
          description: Resource type for linked foreign account.
          default: analytics#linkedForeignAccount
          type: string
        type:
          description: The type of the foreign account. For example, `ADWORDS_LINKS`, `DBM_LINKS`, `MCC_LINKS` or `OPTIMIZE`.
          type: string
        eligibleForSearch:
          readOnly: true
          description: Boolean indicating whether this is eligible for search.
          type: boolean
      description: JSON template for an Analytics Remarketing Audience Foreign Link.
      id: LinkedForeignAccount
    UnsampledReport:
      properties:
        end-date:
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.unsampledReports.insert
          description: The end date for the unsampled report.
          type: string
        kind:
          description: Resource type for an Analytics unsampled report.
          readOnly: true
          type: string
          default: analytics#unsampledReport
        dimensions:
          type: string
          description: The dimensions for the unsampled report.
        driveDownloadDetails:
          readOnly: true
          properties:
            documentId:
              type: string
              description: Id of the document/file containing the report data.
          description: Download details for a file stored in Google Drive.
          type: object
        filters:
          type: string
          description: The filters for the unsampled report.
        updated:
          type: string
          format: date-time
          readOnly: true
          description: Time this unsampled report was last modified.
        selfLink:
          readOnly: true
          description: Link for this unsampled report.
          type: string
        webPropertyId:
          description: Web property ID to which this unsampled report belongs. The web property ID is of the form UA-XXXXX-YY.
          type: string
        title:
          type: string
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.unsampledReports.insert
          description: Title of the unsampled report.
        status:
          description: Status of this unsampled report. Possible values are PENDING, COMPLETED, or FAILED.
          readOnly: true
          type: string
        id:
          type: string
          description: Unsampled report ID.
        segment:
          type: string
          description: The segment for the unsampled report.
        cloudStorageDownloadDetails:
          properties:
            bucketId:
              type: string
              description: Id of the bucket the file object is stored in.
            objectId:
              description: Id of the file object containing the report data.
              type: string
          description: Download details for a file stored in Google Cloud Storage.
          type: object
          readOnly: true
        metrics:
          type: string
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.unsampledReports.insert
          description: The metrics for the unsampled report.
        profileId:
          description: View (Profile) ID to which this unsampled report belongs.
          type: string
        created:
          type: string
          description: Time this unsampled report was created.
          readOnly: true
          format: date-time
        start-date:
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.unsampledReports.insert
          description: The start date for the unsampled report.
          type: string
        accountId:
          type: string
          description: Account ID to which this unsampled report belongs.
        downloadType:
          readOnly: true
          description: The type of download you need to use for the report data file. Possible values include `GOOGLE_DRIVE` and `GOOGLE_CLOUD_STORAGE`. If the value is `GOOGLE_DRIVE`, see the `driveDownloadDetails` field. If the value is `GOOGLE_CLOUD_STORAGE`, see the `cloudStorageDownloadDetails` field.
          type: string
      id: UnsampledReport
      type: object
      description: JSON template for Analytics unsampled report resource.
    Experiment:
      description: JSON template for Analytics experiment resource.
      type: object
      id: Experiment
      properties:
        profileId:
          type: string
          description: View (Profile) ID to which this experiment belongs. This field is read-only.
        objectiveMetric:
          description: 'The metric that the experiment is optimizing. Valid values: "ga:goal(n)Completions", "ga:adsenseAdsClicks", "ga:adsenseAdsViewed", "ga:adsenseRevenue", "ga:bounces", "ga:pageviews", "ga:sessionDuration", "ga:transactions", "ga:transactionRevenue". This field is required if status is "RUNNING" and servingFramework is one of "REDIRECT" or "API".'
          type: string
        updated:
          description: Time the experiment was last modified. This field is read-only.
          format: date-time
          type: string
        status:
          annotations:
            required:
              - analytics.management.experiments.insert
              - analytics.management.experiments.update
          description: 'Experiment status. Possible values: "DRAFT", "READY_TO_RUN", "RUNNING", "ENDED". Experiments can be created in the "DRAFT", "READY_TO_RUN" or "RUNNING" state. This field is required when creating an experiment.'
          type: string
        parentLink:
          description: Parent link for an experiment. Points to the view (profile) to which this experiment belongs.
          properties:
            href:
              type: string
              description: Link to the view (profile) to which this experiment belongs. This field is read-only.
            type:
              default: analytics#profile
              description: Value is "analytics#profile". This field is read-only.
              type: string
          type: object
        reasonExperimentEnded:
          description: 'Why the experiment ended. Possible values: "STOPPED_BY_USER", "WINNER_FOUND", "EXPERIMENT_EXPIRED", "ENDED_WITH_NO_WINNER", "GOAL_OBJECTIVE_CHANGED". "ENDED_WITH_NO_WINNER" means that the experiment didn''t expire but no winner was projected to be found. If the experiment status is changed via the API to ENDED this field is set to STOPPED_BY_USER. This field is read-only.'
          type: string
        webPropertyId:
          type: string
          description: Web property ID to which this experiment belongs. The web property ID is of the form UA-XXXXX-YY. This field is read-only.
        created:
          type: string
          format: date-time
          description: Time the experiment was created. This field is read-only.
        rewriteVariationUrlsAsOriginal:
          description: Boolean specifying whether variations URLS are rewritten to match those of the original. This field may not be changed for an experiments whose status is ENDED.
          type: boolean
        servingFramework:
          description: |-
            The framework used to serve the experiment variations and evaluate the results. One of:  
            - REDIRECT: Google Analytics redirects traffic to different variation pages, reports the chosen variation and evaluates the results.
            - API: Google Analytics chooses and reports the variation to serve and evaluates the results; the caller is responsible for serving the selected variation.
            - EXTERNAL: The variations will be served externally and the chosen variation reported to Google Analytics. The caller is responsible for serving the selected variation and evaluating the results.
          type: string
        kind:
          description: Resource type for an Analytics experiment. This field is read-only.
          default: analytics#experiment
          type: string
        minimumExperimentLengthInDays:
          description: An integer number in [3, 90]. Specifies the minimum length of the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED.
          type: integer
          format: int32
        accountId:
          type: string
          description: Account ID to which this experiment belongs. This field is read-only.
        equalWeighting:
          description: Boolean specifying whether to distribute traffic evenly across all variations. If the value is False, content experiments follows the default behavior of adjusting traffic dynamically based on variation performance. Optional -- defaults to False. This field may not be changed for an experiment whose status is ENDED.
          type: boolean
        name:
          description: Experiment name. This field may not be changed for an experiment whose status is ENDED. This field is required when creating an experiment.
          annotations:
            required:
              - analytics.management.experiments.insert
              - analytics.management.experiments.update
          type: string
        trafficCoverage:
          description: A floating-point number in (0, 1]. Specifies the fraction of the traffic that participates in the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED.
          type: number
          format: double
        editableInGaUi:
          description: If true, the end user will be able to edit the experiment via the Google Analytics user interface.
          type: boolean
        variations:
          type: array
          description: Array of variations. The first variation in the array is the original. The number of variations may not change once an experiment is in the RUNNING state. At least two variations are required before status can be set to RUNNING.
          items:
            properties:
              name:
                annotations:
                  required:
                    - analytics.management.experiments.insert
                    - analytics.management.experiments.update
                type: string
                description: The name of the variation. This field is required when creating an experiment. This field may not be changed for an experiment whose status is ENDED.
              won:
                description: True if the experiment has ended and this variation performed (statistically) significantly better than the original. This field is read-only.
                type: boolean
              weight:
                format: double
                description: Weight that this variation should receive. Only present if the experiment is running. This field is read-only.
                type: number
              url:
                type: string
                description: The URL of the variation. This field may not be changed for an experiment whose status is RUNNING or ENDED.
              status:
                type: string
                description: 'Status of the variation. Possible values: "ACTIVE", "INACTIVE". INACTIVE variations are not served. This field may not be changed for an experiment whose status is ENDED.'
            type: object
        optimizationType:
          type: string
          description: 'Whether the objectiveMetric should be minimized or maximized. Possible values: "MAXIMUM", "MINIMUM". Optional--defaults to "MAXIMUM". Cannot be specified without objectiveMetric. Cannot be modified when status is "RUNNING" or "ENDED".'
        winnerConfidenceLevel:
          description: A floating-point number in (0, 1). Specifies the necessary confidence level to choose a winner. This field may not be changed for an experiments whose status is ENDED.
          format: double
          type: number
        id:
          type: string
          annotations:
            required:
              - analytics.management.experiments.patch
              - analytics.management.experiments.update
          description: Experiment ID. Required for patch and update. Disallowed for create.
        snippet:
          type: string
          description: The snippet of code to include on the control page(s). This field is read-only.
        startTime:
          type: string
          description: The starting time of the experiment (the time the status changed from READY_TO_RUN to RUNNING). This field is present only if the experiment has started. This field is read-only.
          format: date-time
        selfLink:
          description: Link for this experiment. This field is read-only.
          type: string
        description:
          type: string
          description: Notes about this experiment.
        winnerFound:
          type: boolean
          description: Boolean specifying whether a winner has been found for this experiment. This field is read-only.
        internalWebPropertyId:
          description: Internal ID for the web property to which this experiment belongs. This field is read-only.
          type: string
        endTime:
          format: date-time
          description: The ending time of the experiment (the time the status changed from RUNNING to ENDED). This field is present only if the experiment has ended. This field is read-only.
          type: string
    Filter:
      id: Filter
      type: object
      properties:
        accountId:
          description: Account ID to which this filter belongs.
          type: string
        type:
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.filters.update
          description: Type of this filter. Possible values are INCLUDE, EXCLUDE, LOWERCASE, UPPERCASE, SEARCH_AND_REPLACE and ADVANCED.
          type: string
        includeDetails:
          $ref: '#/components/schemas/FilterExpression'
          description: Details for the filter of the type INCLUDE.
        excludeDetails:
          description: Details for the filter of the type EXCLUDE.
          $ref: '#/components/schemas/FilterExpression'
        advancedDetails:
          type: object
          properties:
            outputToField:
              description: Output field.
              type: string
            overrideOutputField:
              description: Indicates if the existing value of the output field, if any, should be overridden by the output expression.
              type: boolean
            caseSensitive:
              type: boolean
              description: Indicates if the filter expressions are case sensitive.
            outputConstructor:
              type: string
              description: Expression used to construct the output value.
            fieldB:
              type: string
              description: Field B.
            outputToFieldIndex:
              type: integer
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
              format: int32
            extractA:
              type: string
              description: Expression to extract from field A.
            fieldAIndex:
              type: integer
              format: int32
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
            extractB:
              type: string
              description: Expression to extract from field B.
            fieldARequired:
              description: Indicates if field A is required to match.
              type: boolean
            fieldBIndex:
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
              format: int32
              type: integer
            fieldBRequired:
              description: Indicates if field B is required to match.
              type: boolean
            fieldA:
              type: string
              description: Field A.
          description: Details for the filter of the type ADVANCED.
        name:
          annotations:
            required:
              - analytics.management.filters.insert
              - analytics.management.filters.update
          description: Name of this filter.
          type: string
        searchAndReplaceDetails:
          properties:
            fieldIndex:
              format: int32
              type: integer
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
            replaceString:
              type: string
              description: Term to replace the search term with.
            field:
              type: string
              description: Field to use in the filter.
            searchString:
              description: Term to search.
              type: string
            caseSensitive:
              type: boolean
              description: Determines if the filter is case sensitive.
          type: object
          description: Details for the filter of the type SEARCH_AND_REPLACE.
        selfLink:
          type: string
          readOnly: true
          description: Link for this filter.
        uppercaseDetails:
          properties:
            field:
              type: string
              description: Field to use in the filter.
            fieldIndex:
              format: int32
              type: integer
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
          description: Details for the filter of the type UPPER.
          type: object
        kind:
          default: analytics#filter
          readOnly: true
          type: string
          description: Resource type for Analytics filter.
        created:
          readOnly: true
          format: date-time
          description: Time this filter was created.
          type: string
        parentLink:
          description: Parent link for this filter. Points to the account to which this filter belongs.
          type: object
          properties:
            href:
              description: Link to the account to which this filter belongs.
              type: string
            type:
              description: Value is "analytics#account".
              type: string
              default: analytics#account
        id:
          description: Filter ID.
          type: string
        lowercaseDetails:
          type: object
          description: Details for the filter of the type LOWER.
          properties:
            fieldIndex:
              description: The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
              format: int32
              type: integer
            field:
              type: string
              description: Field to use in the filter.
        updated:
          description: Time this filter was last modified.
          format: date-time
          type: string
          readOnly: true
      description: JSON template for an Analytics account filter.
    Segment:
      type: object
      properties:
        segmentId:
          description: Segment ID. Can be used with the 'segment' parameter in Core Reporting API.
          type: string
        id:
          description: Segment ID.
          type: string
        selfLink:
          description: Link for this segment.
          type: string
        name:
          type: string
          description: Segment name.
        definition:
          description: Segment definition.
          type: string
        type:
          description: Type for a segment. Possible values are "BUILT_IN" or "CUSTOM".
          type: string
        created:
          type: string
          description: Time the segment was created.
          format: date-time
        updated:
          format: date-time
          description: Time the segment was last modified.
          type: string
        kind:
          description: Resource type for Analytics segment.
          type: string
          default: analytics#segment
      id: Segment
      description: JSON template for an Analytics segment.
    AccountRef:
      type: object
      description: JSON template for a linked account.
      properties:
        name:
          description: Account name.
          type: string
        kind:
          default: analytics#accountRef
          type: string
          description: Analytics account reference.
        id:
          description: Account ID.
          type: string
        href:
          description: Link for this account.
          type: string
      id: AccountRef
    Upload:
      type: object
      properties:
        customDataSourceId:
          type: string
          description: Custom data source Id to which this data import belongs.
        status:
          description: 'Upload status. Possible values: PENDING, COMPLETED, FAILED, DELETING, DELETED.'
          type: string
        accountId:
          type: string
          format: int64
          description: Account Id to which this upload belongs.
        uploadTime:
          format: date-time
          type: string
          description: Time this file is uploaded.
        id:
          description: A unique ID for this upload.
          type: string
        kind:
          default: analytics#upload
          description: Resource type for Analytics upload.
          type: string
        errors:
          description: Data import errors collection.
          items:
            type: string
          type: array
      id: Upload
      description: Metadata returned for an upload operation.
    UnsampledReports:
      description: An unsampled report collection lists Analytics unsampled reports to which the user has access. Each view (profile) can have a set of unsampled reports. Each resource in the unsampled report collection corresponds to a single Analytics unsampled report.
      properties:
        previousLink:
          type: string
          description: Link to previous page for this unsampled report collection.
        username:
          description: Email ID of the authenticated user
          type: string
        kind:
          description: Collection type.
          default: analytics#unsampledReports
          type: string
        startIndex:
          format: int32
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
        totalResults:
          type: integer
          format: int32
          description: The total number of results for the query, regardless of the number of resources in the result.
        items:
          items:
            $ref: '#/components/schemas/UnsampledReport'
          description: A list of unsampled reports.
          type: array
        nextLink:
          description: Link to next page for this unsampled report collection.
          type: string
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
      id: UnsampledReports
      type: object
    AccountTreeRequest:
      description: JSON template for an Analytics account tree requests. The account tree request is used in the provisioning api to create an account, property, and view (profile). It contains the basic information required to make these fields.
      type: object
      properties:
        webpropertyName:
          type: string
          annotations:
            required:
              - analytics.provisioning.createAccountTree
        timezone:
          annotations:
            required:
              - analytics.provisioning.createAccountTree
          type: string
        accountName:
          annotations:
            required:
              - analytics.provisioning.createAccountTree
          type: string
        kind:
          type: string
          default: analytics#accountTreeRequest
          description: Resource type for account ticket.
        websiteUrl:
          type: string
          annotations:
            required:
              - analytics.provisioning.createAccountTree
        profileName:
          type: string
          annotations:
            required:
              - analytics.provisioning.createAccountTree
      id: AccountTreeRequest
    CustomDimensions:
      type: object
      description: A custom dimension collection lists Analytics custom dimensions to which the user has access. Each resource in the collection corresponds to a single Analytics custom dimension.
      properties:
        previousLink:
          type: string
          description: Link to previous page for this custom dimension collection.
        username:
          description: Email ID of the authenticated user
          type: string
        totalResults:
          format: int32
          description: The total number of results for the query, regardless of the number of results in the response.
          type: integer
        items:
          description: Collection of custom dimensions.
          items:
            $ref: '#/components/schemas/CustomDimension'
          type: array
        kind:
          default: analytics#customDimensions
          description: Collection type.
          type: string
        startIndex:
          description: The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
          type: integer
          format: int32
        itemsPerPage:
          description: The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
          type: integer
          format: int32
        nextLink:
          description: Link to next page for this custom dimension collection.
          type: string
      id: CustomDimensions
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/analytics.user.deletion: Manage Google Analytics user deletion requests
            https://www.googleapis.com/auth/analytics.provision: Create a new Google Analytics account along with its default property and view
            https://www.googleapis.com/auth/analytics.manage.users.readonly: View Google Analytics user permissions
            https://www.googleapis.com/auth/analytics.manage.users: Manage Google Analytics Account users by email address
            https://www.googleapis.com/auth/analytics.edit: Edit Google Analytics management entities
            https://www.googleapis.com/auth/analytics.readonly: View your Google Analytics data
            https://www.googleapis.com/auth/analytics: View and manage your Google Analytics data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    custom_metrics:
      id: googleanalytics.analytics.custom_metrics
      name: custom_metrics
      title: Custom_metrics
      methods:
        management_customMetrics_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customMetrics~1{customMetricId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customMetrics_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customMetrics~1{customMetricId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customMetrics_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customMetrics~1{customMetricId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customMetrics_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customMetrics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customMetrics_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customMetrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_metrics/methods/management_customMetrics_get'
          - $ref: '#/components/x-stackQL-resources/custom_metrics/methods/management_customMetrics_list'
        insert: []
        update: []
        delete: []
    account_user_links:
      id: googleanalytics.analytics.account_user_links
      name: account_user_links
      title: Account_user_links
      methods:
        management_accountUserLinks_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1entityUserLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_accountUserLinks_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1entityUserLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_accountUserLinks_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1entityUserLinks~1{linkId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_accountUserLinks_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1entityUserLinks~1{linkId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_user_links/methods/management_accountUserLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/account_user_links/methods/management_accountUserLinks_delete'
    segments:
      id: googleanalytics.analytics.segments
      name: segments
      title: Segments
      methods:
        management_segments_list:
          operation:
            $ref: '#/paths/~1management~1segments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/segments/methods/management_segments_list'
        insert: []
        update: []
        delete: []
    experiments:
      id: googleanalytics.analytics.experiments
      name: experiments
      title: Experiments
      methods:
        management_experiments_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments~1{experimentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_experiments_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments~1{experimentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_experiments_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments~1{experimentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_experiments_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments~1{experimentId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_experiments_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_experiments_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1experiments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/management_experiments_get'
          - $ref: '#/components/x-stackQL-resources/experiments/methods/management_experiments_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/management_experiments_delete'
    filters:
      id: googleanalytics.analytics.filters
      name: filters
      title: Filters
      methods:
        management_filters_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters~1{filterId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_filters_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters~1{filterId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_filters_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters~1{filterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_filters_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters~1{filterId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_filters_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_filters_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filters/methods/management_filters_get'
          - $ref: '#/components/x-stackQL-resources/filters/methods/management_filters_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/filters/methods/management_filters_delete'
    webproperty_user_links:
      id: googleanalytics.analytics.webproperty_user_links
      name: webproperty_user_links
      title: Webproperty_user_links
      methods:
        management_webpropertyUserLinks_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityUserLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webpropertyUserLinks_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityUserLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webpropertyUserLinks_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityUserLinks~1{linkId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webpropertyUserLinks_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityUserLinks~1{linkId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webproperty_user_links/methods/management_webpropertyUserLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/webproperty_user_links/methods/management_webpropertyUserLinks_delete'
    accounts:
      id: googleanalytics.analytics.accounts
      name: accounts
      title: Accounts
      methods:
        management_accounts_list:
          operation:
            $ref: '#/paths/~1management~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/management_accounts_list'
        insert: []
        update: []
        delete: []
    client_id:
      id: googleanalytics.analytics.client_id
      name: client_id
      title: Client_id
      methods:
        management_clientId_hashClientId:
          operation:
            $ref: '#/paths/~1management~1clientId:hashClientId/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    uploads__upload_data:
      id: googleanalytics.analytics.uploads__upload_data
      name: uploads__upload_data
      title: Uploads__upload_data
      methods:
        management_uploads_deleteUploadData:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDataSources~1{customDataSourceId}~1deleteUploadData/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    uploads:
      id: googleanalytics.analytics.uploads
      name: uploads
      title: Uploads
      methods:
        management_uploads_uploadData:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDataSources~1{customDataSourceId}~1uploads/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_uploads_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDataSources~1{customDataSourceId}~1uploads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_uploads_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDataSources~1{customDataSourceId}~1uploads~1{uploadId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/uploads/methods/management_uploads_get'
          - $ref: '#/components/x-stackQL-resources/uploads/methods/management_uploads_list'
        insert: []
        update: []
        delete: []
    unsampled_reports:
      id: googleanalytics.analytics.unsampled_reports
      name: unsampled_reports
      title: Unsampled_reports
      methods:
        management_unsampledReports_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1unsampledReports~1{unsampledReportId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_unsampledReports_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1unsampledReports~1{unsampledReportId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_unsampledReports_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1unsampledReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_unsampledReports_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1unsampledReports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/unsampled_reports/methods/management_unsampledReports_get'
          - $ref: '#/components/x-stackQL-resources/unsampled_reports/methods/management_unsampledReports_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/unsampled_reports/methods/management_unsampledReports_delete'
    custom_data_sources:
      id: googleanalytics.analytics.custom_data_sources
      name: custom_data_sources
      title: Custom_data_sources
      methods:
        management_customDataSources_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDataSources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_data_sources/methods/management_customDataSources_list'
        insert: []
        update: []
        delete: []
    profile_user_links:
      id: googleanalytics.analytics.profile_user_links
      name: profile_user_links
      title: Profile_user_links
      methods:
        management_profileUserLinks_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1entityUserLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileUserLinks_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1entityUserLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileUserLinks_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1entityUserLinks~1{linkId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileUserLinks_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1entityUserLinks~1{linkId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profile_user_links/methods/management_profileUserLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profile_user_links/methods/management_profileUserLinks_delete'
    profile_filter_links:
      id: googleanalytics.analytics.profile_filter_links
      name: profile_filter_links
      title: Profile_filter_links
      methods:
        management_profileFilterLinks_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks~1{linkId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileFilterLinks_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks~1{linkId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileFilterLinks_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks~1{linkId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileFilterLinks_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks~1{linkId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileFilterLinks_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profileFilterLinks_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1profileFilterLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profile_filter_links/methods/management_profileFilterLinks_get'
          - $ref: '#/components/x-stackQL-resources/profile_filter_links/methods/management_profileFilterLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profile_filter_links/methods/management_profileFilterLinks_delete'
    web_property_ad_words_links:
      id: googleanalytics.analytics.web_property_ad_words_links
      name: web_property_ad_words_links
      title: Web_property_ad_words_links
      methods:
        management_webPropertyAdWordsLinks_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webPropertyAdWordsLinks_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webPropertyAdWordsLinks_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks~1{webPropertyAdWordsLinkId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webPropertyAdWordsLinks_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks~1{webPropertyAdWordsLinkId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webPropertyAdWordsLinks_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks~1{webPropertyAdWordsLinkId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webPropertyAdWordsLinks_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1entityAdWordsLinks~1{webPropertyAdWordsLinkId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_property_ad_words_links/methods/management_webPropertyAdWordsLinks_get'
          - $ref: '#/components/x-stackQL-resources/web_property_ad_words_links/methods/management_webPropertyAdWordsLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/web_property_ad_words_links/methods/management_webPropertyAdWordsLinks_delete'
    remarketing_audience:
      id: googleanalytics.analytics.remarketing_audience
      name: remarketing_audience
      title: Remarketing_audience
      methods:
        management_remarketingAudience_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences~1{remarketingAudienceId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_remarketingAudience_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences~1{remarketingAudienceId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_remarketingAudience_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences~1{remarketingAudienceId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_remarketingAudience_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences~1{remarketingAudienceId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_remarketingAudience_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_remarketingAudience_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1remarketingAudiences/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/remarketing_audience/methods/management_remarketingAudience_get'
          - $ref: '#/components/x-stackQL-resources/remarketing_audience/methods/management_remarketingAudience_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/remarketing_audience/methods/management_remarketingAudience_delete'
    goals:
      id: googleanalytics.analytics.goals
      name: goals
      title: Goals
      methods:
        management_goals_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1goals~1{goalId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_goals_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1goals~1{goalId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_goals_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1goals~1{goalId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_goals_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1goals/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_goals_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}~1goals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/goals/methods/management_goals_get'
          - $ref: '#/components/x-stackQL-resources/goals/methods/management_goals_list'
        insert: []
        update: []
        delete: []
    custom_dimensions:
      id: googleanalytics.analytics.custom_dimensions
      name: custom_dimensions
      title: Custom_dimensions
      methods:
        management_customDimensions_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDimensions~1{customDimensionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customDimensions_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDimensions~1{customDimensionId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customDimensions_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDimensions~1{customDimensionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customDimensions_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDimensions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_customDimensions_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1customDimensions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_dimensions/methods/management_customDimensions_get'
          - $ref: '#/components/x-stackQL-resources/custom_dimensions/methods/management_customDimensions_list'
        insert: []
        update: []
        delete: []
    webproperties:
      id: googleanalytics.analytics.webproperties
      name: webproperties
      title: Webproperties
      methods:
        management_webproperties_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webproperties_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webproperties_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webproperties_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_webproperties_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webproperties/methods/management_webproperties_get'
          - $ref: '#/components/x-stackQL-resources/webproperties/methods/management_webproperties_list'
        insert: []
        update: []
        delete: []
    account_summaries:
      id: googleanalytics.analytics.account_summaries
      name: account_summaries
      title: Account_summaries
      methods:
        management_accountSummaries_list:
          operation:
            $ref: '#/paths/~1management~1accountSummaries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_summaries/methods/management_accountSummaries_list'
        insert: []
        update: []
        delete: []
    profiles:
      id: googleanalytics.analytics.profiles
      name: profiles
      title: Profiles
      methods:
        management_profiles_list:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profiles_insert:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profiles_get:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profiles_update:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profiles_patch:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        management_profiles_delete:
          operation:
            $ref: '#/paths/~1management~1accounts~1{accountId}~1webproperties~1{webPropertyId}~1profiles~1{profileId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/management_profiles_get'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/management_profiles_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/management_profiles_delete'
    columns:
      id: googleanalytics.analytics.columns
      name: columns
      title: Columns
      methods:
        metadata_columns_list:
          operation:
            $ref: '#/paths/~1metadata~1{reportType}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/columns/methods/metadata_columns_list'
        insert: []
        update: []
        delete: []
    provisioning__account_ticket:
      id: googleanalytics.analytics.provisioning__account_ticket
      name: provisioning__account_ticket
      title: Provisioning__account_ticket
      methods:
        provisioning_createAccountTicket:
          operation:
            $ref: '#/paths/~1provisioning~1createAccountTicket/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning__account_ticket/methods/provisioning_createAccountTicket'
        update: []
        delete: []
    provisioning__account_tree:
      id: googleanalytics.analytics.provisioning__account_tree
      name: provisioning__account_tree
      title: Provisioning__account_tree
      methods:
        provisioning_createAccountTree:
          operation:
            $ref: '#/paths/~1provisioning~1createAccountTree/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioning__account_tree/methods/provisioning_createAccountTree'
        update: []
        delete: []
    user_deletion_request:
      id: googleanalytics.analytics.user_deletion_request
      name: user_deletion_request
      title: User_deletion_request
      methods:
        userDeletion_userDeletionRequest_upsert:
          operation:
            $ref: '#/paths/~1userDeletion~1userDeletionRequests:upsert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    realtime:
      id: googleanalytics.analytics.realtime
      name: realtime
      title: Realtime
      methods:
        data_realtime_get:
          operation:
            $ref: '#/paths/~1data~1realtime/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/realtime/methods/data_realtime_get'
        insert: []
        update: []
        delete: []
    ga:
      id: googleanalytics.analytics.ga
      name: ga
      title: Ga
      methods:
        data_ga_get:
          operation:
            $ref: '#/paths/~1data~1ga/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ga/methods/data_ga_get'
        insert: []
        update: []
        delete: []
    mcf:
      id: googleanalytics.analytics.mcf
      name: mcf
      title: Mcf
      methods:
        data_mcf_get:
          operation:
            $ref: '#/paths/~1data~1mcf/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mcf/methods/data_mcf_get'
        insert: []
        update: []
        delete: []
paths:
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Get a custom metric to which the user has access.
      operationId: analytics.management.customMetrics.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetric'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customMetricId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_metrics
      x-stackQL-verb: select
    patch:
      description: Updates an existing custom metric. This method supports patch semantics.
      operationId: analytics.management.customMetrics.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMetric'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetric'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customMetricId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreCustomDataSourceLinks
          schema:
            type: boolean
      x-stackQL-resource: custom_metrics
      x-stackQL-verb: exec
    put:
      description: Updates an existing custom metric.
      operationId: analytics.management.customMetrics.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMetric'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetric'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customMetricId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreCustomDataSourceLinks
          schema:
            type: boolean
      x-stackQL-resource: custom_metrics
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics:
    parameters: *ref_1
    post:
      description: Create a new custom metric.
      operationId: analytics.management.customMetrics.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMetric'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetric'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_metrics
      x-stackQL-verb: insert
    get:
      description: Lists custom metrics to which the user has access.
      operationId: analytics.management.customMetrics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetrics'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: custom_metrics
      x-stackQL-verb: select
  /management/accounts/{accountId}/entityUserLinks:
    parameters: *ref_1
    get:
      description: Lists account-user links for a given account.
      operationId: analytics.management.accountUserLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLinks'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: account_user_links
      x-stackQL-verb: select
    post:
      description: Adds a new user to the given account.
      operationId: analytics.management.accountUserLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_links
      x-stackQL-verb: insert
  /management/accounts/{accountId}/entityUserLinks/{linkId}:
    parameters: *ref_1
    put:
      description: Updates permissions for an existing user on the given account.
      operationId: analytics.management.accountUserLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_links
      x-stackQL-verb: exec
    delete:
      description: Removes a user from the given account.
      operationId: analytics.management.accountUserLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_links
      x-stackQL-verb: delete
  /management/segments:
    parameters: *ref_1
    get:
      description: Lists segments to which the user has access.
      operationId: analytics.management.segments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segments'
      parameters:
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: segments
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}:
    parameters: *ref_1
    patch:
      description: Update an existing experiment. This method supports patch semantics.
      operationId: analytics.management.experiments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: experimentId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-verb: exec
    get:
      description: Returns an experiment to which the user has access.
      operationId: analytics.management.experiments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: experimentId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-verb: select
    delete:
      description: Delete an experiment.
      operationId: analytics.management.experiments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: experimentId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-verb: delete
    put:
      description: Update an existing experiment.
      operationId: analytics.management.experiments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: experimentId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments:
    parameters: *ref_1
    post:
      description: Create a new experiment.
      operationId: analytics.management.experiments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: experiments
      x-stackQL-verb: insert
    get:
      description: Lists experiments to which the user has access.
      operationId: analytics.management.experiments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiments'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: experiments
      x-stackQL-verb: select
  /management/accounts/{accountId}/filters/{filterId}:
    parameters: *ref_1
    delete:
      description: Delete a filter.
      operationId: analytics.management.filters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: filterId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: delete
    patch:
      description: Updates an existing filter. This method supports patch semantics.
      operationId: analytics.management.filters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: filterId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: exec
    get:
      description: Returns filters to which the user has access.
      operationId: analytics.management.filters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: filterId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: select
    put:
      description: Updates an existing filter.
      operationId: analytics.management.filters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: filterId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: exec
  /management/accounts/{accountId}/filters:
    parameters: *ref_1
    get:
      description: Lists all filters for an account
      operationId: analytics.management.filters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filters'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: filters
      x-stackQL-verb: select
    post:
      description: Create a new filter.
      operationId: analytics.management.filters.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks:
    parameters: *ref_1
    get:
      description: Lists webProperty-user links for a given web property.
      operationId: analytics.management.webpropertyUserLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLinks'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: webproperty_user_links
      x-stackQL-verb: select
    post:
      description: Adds a new user to the given web property.
      operationId: analytics.management.webpropertyUserLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperty_user_links
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}:
    parameters: *ref_1
    delete:
      description: Removes a user from the given web property.
      operationId: analytics.management.webpropertyUserLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperty_user_links
      x-stackQL-verb: delete
    put:
      description: Updates permissions for an existing user on the given web property.
      operationId: analytics.management.webpropertyUserLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperty_user_links
      x-stackQL-verb: exec
  /management/accounts:
    parameters: *ref_1
    get:
      description: Lists all accounts to which the user has access.
      operationId: analytics.management.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
      parameters:
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /management/clientId:hashClientId:
    parameters: *ref_1
    post:
      description: Hashes the given Client ID.
      operationId: analytics.management.clientId.hashClientId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashClientIdRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashClientIdResponse'
      x-stackQL-resource: client_id
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData:
    parameters: *ref_1
    post:
      description: Delete data associated with a previous upload.
      operationId: analytics.management.uploads.deleteUploadData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsDataimportDeleteUploadDataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDataSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: uploads__upload_data
      x-stackQL-verb: delete
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads:
    parameters: *ref_1
    post:
      description: Upload data for a custom data source.
      operationId: analytics.management.uploads.uploadData
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDataSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: uploads
      x-stackQL-verb: exec
    get:
      description: List uploads to which the user has access.
      operationId: analytics.management.uploads.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uploads'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDataSourceId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: uploads
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads/{uploadId}:
    parameters: *ref_1
    get:
      description: List uploads to which the user has access.
      operationId: analytics.management.uploads.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDataSourceId
          required: true
          schema:
            type: string
        - in: path
          name: uploadId
          required: true
          schema:
            type: string
      x-stackQL-resource: uploads
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}:
    parameters: *ref_1
    delete:
      description: Deletes an unsampled report.
      operationId: analytics.management.unsampledReports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: unsampledReportId
          required: true
          schema:
            type: string
      x-stackQL-resource: unsampled_reports
      x-stackQL-verb: delete
    get:
      description: Returns a single unsampled report.
      operationId: analytics.management.unsampledReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsampledReport'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: unsampledReportId
          required: true
          schema:
            type: string
      x-stackQL-resource: unsampled_reports
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports:
    parameters: *ref_1
    get:
      description: Lists unsampled reports to which the user has access.
      operationId: analytics.management.unsampledReports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsampledReports'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: unsampled_reports
      x-stackQL-verb: select
    post:
      description: Create a new unsampled report.
      operationId: analytics.management.unsampledReports.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsampledReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsampledReport'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: unsampled_reports
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources:
    parameters: *ref_1
    get:
      description: List custom data sources to which the user has access.
      operationId: analytics.management.customDataSources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDataSources'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: custom_data_sources
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks:
    parameters: *ref_1
    post:
      description: Adds a new user to the given view (profile).
      operationId: analytics.management.profileUserLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_user_links
      x-stackQL-verb: insert
    get:
      description: Lists profile-user links for a given view (profile).
      operationId: analytics.management.profileUserLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLinks'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: profile_user_links
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}:
    parameters: *ref_1
    delete:
      description: Removes a user from the given view (profile).
      operationId: analytics.management.profileUserLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_user_links
      x-stackQL-verb: delete
    put:
      description: Updates permissions for an existing user on the given view (profile).
      operationId: analytics.management.profileUserLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUserLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.manage.users
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.manage.users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_user_links
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}:
    parameters: *ref_1
    patch:
      description: Update an existing profile filter link. This method supports patch semantics.
      operationId: analytics.management.profileFilterLinks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileFilterLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFilterLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: exec
    put:
      description: Update an existing profile filter link.
      operationId: analytics.management.profileFilterLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileFilterLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFilterLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: exec
    delete:
      description: Delete a profile filter link.
      operationId: analytics.management.profileFilterLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: delete
    get:
      description: Returns a single profile filter link.
      operationId: analytics.management.profileFilterLinks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFilterLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks:
    parameters: *ref_1
    get:
      description: Lists all profile filter links for a profile.
      operationId: analytics.management.profileFilterLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFilterLinks'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: select
    post:
      description: Create a new profile filter link.
      operationId: analytics.management.profileFilterLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileFilterLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFilterLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profile_filter_links
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks:
    parameters: *ref_1
    get:
      description: Lists webProperty-Google Ads links for a given web property.
      operationId: analytics.management.webPropertyAdWordsLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAdWordsLinks'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: select
    post:
      description: Creates a webProperty-Google Ads link.
      operationId: analytics.management.webPropertyAdWordsLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAdWordsLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAdWordsLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}:
    parameters: *ref_1
    put:
      description: Updates an existing webProperty-Google Ads link.
      operationId: analytics.management.webPropertyAdWordsLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAdWordsLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAdWordsLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyAdWordsLinkId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: exec
    delete:
      description: Deletes a web property-Google Ads link.
      operationId: analytics.management.webPropertyAdWordsLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyAdWordsLinkId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: delete
    patch:
      description: Updates an existing webProperty-Google Ads link. This method supports patch semantics.
      operationId: analytics.management.webPropertyAdWordsLinks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAdWordsLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAdWordsLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyAdWordsLinkId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: exec
    get:
      description: Returns a web property-Google Ads link to which the user has access.
      operationId: analytics.management.webPropertyAdWordsLinks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAdWordsLink'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyAdWordsLinkId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_property_ad_words_links
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}:
    parameters: *ref_1
    patch:
      description: Updates an existing remarketing audience. This method supports patch semantics.
      operationId: analytics.management.remarketingAudience.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingAudience'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingAudience'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: remarketingAudienceId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: exec
    put:
      description: Updates an existing remarketing audience.
      operationId: analytics.management.remarketingAudience.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingAudience'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingAudience'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: remarketingAudienceId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: exec
    delete:
      description: Delete a remarketing audience.
      operationId: analytics.management.remarketingAudience.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: remarketingAudienceId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: delete
    get:
      description: Gets a remarketing audience to which the user has access.
      operationId: analytics.management.remarketingAudience.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingAudience'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: remarketingAudienceId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences:
    parameters: *ref_1
    get:
      description: Lists remarketing audiences to which the user has access.
      operationId: analytics.management.remarketingAudience.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingAudiences'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: select
    post:
      description: Creates a new remarketing audience.
      operationId: analytics.management.remarketingAudience.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingAudience'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingAudience'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_audience
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}:
    parameters: *ref_1
    patch:
      description: Updates an existing goal. This method supports patch semantics.
      operationId: analytics.management.goals.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: goalId
          required: true
          schema:
            type: string
      x-stackQL-resource: goals
      x-stackQL-verb: exec
    get:
      description: Gets a goal to which the user has access.
      operationId: analytics.management.goals.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: goalId
          required: true
          schema:
            type: string
      x-stackQL-resource: goals
      x-stackQL-verb: select
    put:
      description: Updates an existing goal.
      operationId: analytics.management.goals.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: goalId
          required: true
          schema:
            type: string
      x-stackQL-resource: goals
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals:
    parameters: *ref_1
    post:
      description: Create a new goal.
      operationId: analytics.management.goals.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: goals
      x-stackQL-verb: insert
    get:
      description: Lists goals to which the user has access.
      operationId: analytics.management.goals.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goals'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: goals
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}:
    parameters: *ref_1
    patch:
      description: Updates an existing custom dimension. This method supports patch semantics.
      operationId: analytics.management.customDimensions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDimension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimension'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDimensionId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreCustomDataSourceLinks
          schema:
            type: boolean
      x-stackQL-resource: custom_dimensions
      x-stackQL-verb: exec
    put:
      description: Updates an existing custom dimension.
      operationId: analytics.management.customDimensions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDimension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimension'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDimensionId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreCustomDataSourceLinks
          schema:
            type: boolean
      x-stackQL-resource: custom_dimensions
      x-stackQL-verb: exec
    get:
      description: Get a custom dimension to which the user has access.
      operationId: analytics.management.customDimensions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimension'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: customDimensionId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_dimensions
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions:
    parameters: *ref_1
    post:
      description: Create a new custom dimension.
      operationId: analytics.management.customDimensions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDimension'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimension'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: custom_dimensions
      x-stackQL-verb: insert
    get:
      description: Lists custom dimensions to which the user has access.
      operationId: analytics.management.customDimensions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDimensions'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: custom_dimensions
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}:
    parameters: *ref_1
    patch:
      description: Updates an existing web property. This method supports patch semantics.
      operationId: analytics.management.webproperties.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webproperty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webproperty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperties
      x-stackQL-verb: exec
    get:
      description: Gets a web property to which the user has access.
      operationId: analytics.management.webproperties.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webproperty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperties
      x-stackQL-verb: select
    put:
      description: Updates an existing web property.
      operationId: analytics.management.webproperties.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webproperty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webproperty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperties
      x-stackQL-verb: exec
  /management/accounts/{accountId}/webproperties:
    parameters: *ref_1
    post:
      description: Create a new property if the account has fewer than 20 properties. Web properties are visible in the Google Analytics interface only if they have at least one profile.
      operationId: analytics.management.webproperties.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webproperty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webproperty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: webproperties
      x-stackQL-verb: insert
    get:
      description: Lists web properties to which the user has access.
      operationId: analytics.management.webproperties.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webproperties'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
      x-stackQL-resource: webproperties
      x-stackQL-verb: select
  /management/accountSummaries:
    parameters: *ref_1
    get:
      description: Lists account summaries (lightweight tree comprised of accounts/properties/profiles) to which the user has access.
      operationId: analytics.management.accountSummaries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSummaries'
      parameters:
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: account_summaries
      x-stackQL-verb: select
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles:
    parameters: *ref_1
    get:
      description: Lists views (profiles) to which the user has access.
      operationId: analytics.management.profiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profiles'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: max-results
          schema:
            type: integer
      x-stackQL-resource: profiles
      x-stackQL-verb: select
    post:
      description: Create a new view (profile).
      operationId: analytics.management.profiles.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-verb: insert
  /management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}:
    parameters: *ref_1
    get:
      description: Gets a view (profile) to which the user has access.
      operationId: analytics.management.profiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-verb: select
    put:
      description: Updates an existing view (profile).
      operationId: analytics.management.profiles.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
    patch:
      description: Updates an existing view (profile). This method supports patch semantics.
      operationId: analytics.management.profiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
    delete:
      description: Deletes a view (profile).
      operationId: analytics.management.profiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: webPropertyId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: profiles
      x-stackQL-verb: delete
  /metadata/{reportType}/columns:
    parameters: *ref_1
    get:
      description: Lists all columns for a report type
      operationId: analytics.metadata.columns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.edit
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.edit
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Columns'
      parameters:
        - in: path
          name: reportType
          required: true
          schema:
            type: string
      x-stackQL-resource: columns
      x-stackQL-verb: select
  /provisioning/createAccountTicket:
    parameters: *ref_1
    post:
      description: Creates an account ticket.
      operationId: analytics.provisioning.createAccountTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTicket'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.provision
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.provision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTicket'
      x-stackQL-resource: provisioning__account_ticket
      x-stackQL-verb: insert
  /provisioning/createAccountTree:
    parameters: *ref_1
    post:
      description: Provision account.
      operationId: analytics.provisioning.createAccountTree
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTreeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.provision
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.provision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTreeResponse'
      x-stackQL-resource: provisioning__account_tree
      x-stackQL-verb: insert
  /userDeletion/userDeletionRequests:upsert:
    parameters: *ref_1
    post:
      description: Insert or update a user deletion requests.
      operationId: analytics.userDeletion.userDeletionRequest.upsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeletionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.user.deletion
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.user.deletion
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeletionRequest'
      x-stackQL-resource: user_deletion_request
      x-stackQL-verb: exec
  /data/realtime:
    parameters: *ref_1
    get:
      description: Returns real time data for a view (profile).
      operationId: analytics.data.realtime.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealtimeData'
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
        - in: query
          name: metrics
          required: true
          schema:
            type: string
        - in: query
          name: dimensions
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
      x-stackQL-resource: realtime
      x-stackQL-verb: select
  /data/ga:
    parameters: *ref_1
    get:
      description: Returns Analytics data for a view (profile).
      operationId: analytics.data.ga.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GaData'
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
        - in: query
          name: start-date
          required: true
          schema:
            type: string
        - in: query
          name: end-date
          required: true
          schema:
            type: string
        - in: query
          name: metrics
          required: true
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: dimensions
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: include-empty-rows
          schema:
            type: boolean
        - in: query
          name: segment
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: output
          schema:
            type: string
        - in: query
          name: samplingLevel
          schema:
            type: string
      x-stackQL-resource: ga
      x-stackQL-verb: select
  /data/mcf:
    parameters: *ref_1
    get:
      description: Returns Analytics Multi-Channel Funnels data for a view (profile).
      operationId: analytics.data.mcf.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McfData'
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
        - in: query
          name: start-date
          required: true
          schema:
            type: string
        - in: query
          name: end-date
          required: true
          schema:
            type: string
        - in: query
          name: metrics
          required: true
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: max-results
          schema:
            type: integer
        - in: query
          name: start-index
          schema:
            type: integer
        - in: query
          name: samplingLevel
          schema:
            type: string
        - in: query
          name: dimensions
          schema:
            type: string
      x-stackQL-resource: mcf
      x-stackQL-verb: select
