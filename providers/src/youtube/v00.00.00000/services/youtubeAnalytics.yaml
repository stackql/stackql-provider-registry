openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: YouTube Analytics API
  description: Retrieves your YouTube Analytics data.
  version: v2
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/youtube/analytics
servers:
  - url: https://youtubeanalytics.googleapis.com
components:
  schemas:
    GroupItem:
      id: GroupItem
      properties:
        groupId:
          type: string
          description: The ID that YouTube uses to uniquely identify the group that contains the item.
        resource:
          $ref: '#/components/schemas/GroupItemResource'
          description: The `resource` object contains information that identifies the item being added to the group.
        errors:
          description: Apiary error details
          $ref: '#/components/schemas/Errors'
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#groupItem`.
        etag:
          description: The Etag of this resource.
          type: string
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the `channel`, `video`, `playlist`, or `asset` resource that is included in the group. Note that this ID refers specifically to the inclusion of that resource in a particular group and is different than the channel ID, video ID, playlist ID, or asset ID that uniquely identifies the resource itself. The `resource.id` property's value specifies the unique channel, video, playlist, or asset ID.
      type: object
      description: A group item.
    GroupSnippet:
      properties:
        publishedAt:
          type: string
          description: The date and time that the group was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: google-datetime
        title:
          type: string
          description: The group name. The value must be a non-empty string.
      id: GroupSnippet
      description: A group snippet.
      type: object
    EmptyResponse:
      type: object
      properties:
        errors:
          description: Apiary error details
          $ref: '#/components/schemas/Errors'
      id: EmptyResponse
      description: Empty response.
    Errors:
      id: Errors
      type: object
      properties:
        requestId:
          type: string
          description: Request identifier generated by the service, which can be used to identify the error in the logs
        error:
          type: array
          description: Specific error description and codes
          items:
            $ref: '#/components/schemas/ErrorProto'
        code:
          enum:
            - BAD_REQUEST
            - FORBIDDEN
            - NOT_FOUND
            - CONFLICT
            - GONE
            - PRECONDITION_FAILED
            - INTERNAL_ERROR
            - SERVICE_UNAVAILABLE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
          type: string
      description: Request Error information. The presence of an error field signals that the operation has failed.
    ErrorProto:
      id: ErrorProto
      type: object
      properties:
        code:
          description: Error code in the error domain. This should correspond to a value of the enum type whose name is in domain. See the core error domain in error_domain.proto.
          type: string
        argument:
          type: array
          description: Error arguments, to be used when building user-friendly error messages given the error domain and code. Different error codes require different arguments.
          items:
            type: string
        domain:
          type: string
          description: 'Error domain. RoSy services can define their own domain and error codes. This should normally be the name of an enum type, such as: gdata.CoreErrorDomain'
        externalErrorMessage:
          description: A short explanation for the error, which can be shared outside Google. Please set domain, code and arguments whenever possible instead of this error message so that external APIs can build safe error messages themselves. External messages built in a RoSy interface will most likely refer to information and concepts that are not available externally and should not be exposed. It is safer if external APIs can understand the errors and decide what the error message should look like.
          type: string
        debugInfo:
          description: Debugging information, which should not be shared externally.
          type: string
        location:
          type: string
          description: 'Location of the error, as specified by the location type. If location_type is PATH, this should be a path to a field that''s relative to the request, using FieldPath notation (net/proto2/util/public/field_path.h). Examples: authenticated_user.gaia_id resource.address[2].country'
        locationType:
          type: string
          enum:
            - PATH
            - OTHER
            - PARAMETER
          enumDescriptions:
            - location is an xpath-like path pointing to the request field that caused the error.
            - other location type which can safely be shared externally.
            - Location is request parameter. This maps to the {@link PARAMETERS} in {@link MessageLocation}.
      description: Describes one specific error.
    QueryResponse:
      id: QueryResponse
      type: object
      description: Response message for TargetedQueriesService.Query.
      properties:
        columnHeaders:
          type: array
          items:
            $ref: '#/components/schemas/ResultTableColumnHeader'
          description: 'This value specifies information about the data returned in the `rows` fields. Each item in the `columnHeaders` list identifies a field returned in the `rows` value, which contains a list of comma-delimited data. The `columnHeaders` list will begin with the dimensions specified in the API request, which will be followed by the metrics specified in the API request. The order of both dimensions and metrics will match the ordering in the API request. For example, if the API request contains the parameters `dimensions=ageGroup,gender&metrics=viewerPercentage`, the API response will return columns in this order: `ageGroup`, `gender`, `viewerPercentage`.'
        errors:
          $ref: '#/components/schemas/Errors'
          description: When set, indicates that the operation failed.
        rows:
          type: array
          items:
            items:
              type: any
            type: array
          description: The list contains all rows of the result table. Each item in the list is an array that contains comma-delimited data corresponding to a single row of data. The order of the comma-delimited data fields will match the order of the columns listed in the `columnHeaders` field. If no data is available for the given query, the `rows` element will be omitted from the response. The response for a query with the `day` dimension will not contain rows for the most recent days.
        kind:
          type: string
          description: This value specifies the type of data included in the API response. For the query method, the kind property value will be `youtubeAnalytics#resultTable`.
    ResultTableColumnHeader:
      description: The description of a column of the result table.
      id: ResultTableColumnHeader
      properties:
        columnType:
          description: The type of the column (`DIMENSION` or `METRIC`).
          type: string
        dataType:
          description: The type of the data in the column (`STRING`, `INTEGER`, `FLOAT`, etc.).
          type: string
        name:
          description: The name of the dimension or metric.
          type: string
      type: object
    GroupItemResource:
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies the type of resource being added to the group. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`'
        id:
          type: string
          description: The channel, video, playlist, or asset ID that YouTube uses to uniquely identify the item that is being added to the group.
      id: GroupItemResource
    ListGroupsResponse:
      id: ListGroupsResponse
      type: object
      properties:
        etag:
          type: string
          description: The Etag of this resource.
        errors:
          $ref: '#/components/schemas/Errors'
          description: Apiary error details
        kind:
          description: Identifies the API resource's type. The value will be `youtube#groupListResponse`.
          type: string
        nextPageToken:
          type: string
          description: The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set.
        items:
          description: A list of groups that match the API request parameters. Each item in the list represents a `group` resource.
          items:
            $ref: '#/components/schemas/Group'
          type: array
      description: Response message for GroupsService.ListGroups.
    GroupContentDetails:
      id: GroupContentDetails
      properties:
        itemCount:
          type: string
          format: uint64
          description: The number of items in the group.
        itemType:
          type: string
          description: 'The type of resources that the group contains. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`'
      type: object
      description: A group's content details.
    ListGroupItemsResponse:
      description: Response message for GroupsService.ListGroupItems.
      id: ListGroupItemsResponse
      properties:
        kind:
          description: Identifies the API resource's type. The value will be `youtube#groupItemListResponse`.
          type: string
        etag:
          type: string
          description: The Etag of this resource.
        errors:
          $ref: '#/components/schemas/Errors'
          description: Apiary error details
        items:
          description: A list of groups that match the API request parameters. Each item in the list represents a `groupItem` resource.
          type: array
          items:
            $ref: '#/components/schemas/GroupItem'
      type: object
    Group:
      type: object
      properties:
        errors:
          description: Apiary error details
          $ref: '#/components/schemas/Errors'
        etag:
          description: The Etag of this resource.
          type: string
        id:
          description: The ID that YouTube uses to uniquely identify the group.
          type: string
        snippet:
          $ref: '#/components/schemas/GroupSnippet'
          description: The `snippet` object contains basic information about the group, including its creation date and name.
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#group`.
        contentDetails:
          $ref: '#/components/schemas/GroupContentDetails'
          description: The `contentDetails` object contains additional information about the group, such as the number and type of items that it contains.
      id: Group
      description: A group.
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/youtube: Manage your YouTube account
            https://www.googleapis.com/auth/yt-analytics.readonly: View YouTube Analytics reports for your YouTube content
            https://www.googleapis.com/auth/youtube.readonly: View your YouTube account
            https://www.googleapis.com/auth/youtubepartner: View and manage your assets and associated content on YouTube
            https://www.googleapis.com/auth/yt-analytics-monetary.readonly: View monetary and non-monetary YouTube Analytics reports for your YouTube content
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    reports:
      id: youtube.youtubeAnalytics.reports
      name: reports
      title: Reports
      methods:
        query:
          operation:
            $ref: '#/paths/~1v2~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    groups:
      id: youtube.youtubeAnalytics.groups
      name: groups
      title: Groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1v2~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1groups/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v2~1groups/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    group_items:
      id: youtube.youtubeAnalytics.group_items
      name: group_items
      title: Group_items
      methods:
        groupItems_list:
          operation:
            $ref: '#/paths/~1v2~1groupItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groupItems_delete:
          operation:
            $ref: '#/paths/~1v2~1groupItems/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groupItems_insert:
          operation:
            $ref: '#/paths/~1v2~1groupItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_items/methods/groupItems_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/group_items/methods/groupItems_delete'
paths:
  /v2/reports:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Retrieve your YouTube Analytics reports.
      operationId: youtubeAnalytics.reports.query
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters:
        - in: query
          name: endDate
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: currency
          schema:
            type: string
        - in: query
          name: dimensions
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
        - in: query
          name: metrics
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: includeHistoricalChannelData
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: reports
      x-stackQL-verb: exec
  /v2/groups:
    parameters: *ref_1
    get:
      description: Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs.
      operationId: youtubeAnalytics.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    post:
      description: Creates a group.
      operationId: youtubeAnalytics.groups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: insert
    delete:
      description: Deletes a group.
      operationId: youtubeAnalytics.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      parameters:
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
    put:
      description: Modifies a group. For example, you could change a group's title.
      operationId: youtubeAnalytics.groups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v2/groupItems:
    parameters: *ref_1
    get:
      description: Returns a collection of group items that match the API request parameters.
      operationId: youtubeAnalytics.groupItems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupItemsResponse'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
      x-stackQL-resource: group_items
      x-stackQL-verb: select
    delete:
      description: Removes an item from a group.
      operationId: youtubeAnalytics.groupItems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
      x-stackQL-resource: group_items
      x-stackQL-verb: delete
    post:
      description: Creates a group item.
      operationId: youtubeAnalytics.groupItems.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupItem'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: group_items
      x-stackQL-verb: insert
