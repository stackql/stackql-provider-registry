openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: YouTube Reporting API
  description: Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.
  version: v1
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/youtube/reporting/v1/reports/
servers:
  - url: https://youtubereporting.googleapis.com
components:
  schemas:
    GdataDiffDownloadResponse:
      properties:
        objectLocation:
          description: gdata
          $ref: '#/components/schemas/GdataCompositeMedia'
      id: GdataDiffDownloadResponse
      description: gdata
      type: object
    GdataDiffChecksumsResponse:
      id: GdataDiffChecksumsResponse
      description: gdata
      type: object
      properties:
        objectVersion:
          description: gdata
          type: string
        checksumsLocation:
          description: gdata
          $ref: '#/components/schemas/GdataCompositeMedia'
        chunkSizeBytes:
          type: string
          format: int64
          description: gdata
        objectLocation:
          description: gdata
          $ref: '#/components/schemas/GdataCompositeMedia'
        objectSizeBytes:
          type: string
          format: int64
          description: gdata
    GdataContentTypeInfo:
      description: gdata
      id: GdataContentTypeInfo
      properties:
        bestGuess:
          type: string
          description: gdata
        fromFileName:
          type: string
          description: gdata
        fromHeader:
          type: string
          description: gdata
        fromBytes:
          description: gdata
          type: string
        fromUrlPath:
          description: gdata
          type: string
      type: object
    GdataObjectId:
      id: GdataObjectId
      type: object
      properties:
        generation:
          description: gdata
          format: int64
          type: string
        objectName:
          description: gdata
          type: string
        bucketName:
          type: string
          description: gdata
      description: gdata
    GdataDiffVersionResponse:
      description: gdata
      properties:
        objectVersion:
          description: gdata
          type: string
        objectSizeBytes:
          type: string
          description: gdata
          format: int64
      id: GdataDiffVersionResponse
      type: object
    GdataDiffUploadResponse:
      id: GdataDiffUploadResponse
      type: object
      properties:
        objectVersion:
          description: gdata
          type: string
        originalObject:
          description: gdata
          $ref: '#/components/schemas/GdataCompositeMedia'
      description: gdata
    GdataBlobstore2Info:
      description: gdata
      type: object
      properties:
        uploadMetadataContainer:
          format: byte
          type: string
          description: gdata
        readToken:
          description: gdata
          type: string
        downloadReadHandle:
          type: string
          description: gdata
          format: byte
        blobId:
          description: gdata
          type: string
        blobGeneration:
          type: string
          description: gdata
          format: int64
      id: GdataBlobstore2Info
    GdataDiffUploadRequest:
      type: object
      id: GdataDiffUploadRequest
      properties:
        checksumsInfo:
          $ref: '#/components/schemas/GdataCompositeMedia'
          description: gdata
        objectVersion:
          type: string
          description: gdata
        objectInfo:
          description: gdata
          $ref: '#/components/schemas/GdataCompositeMedia'
      description: gdata
    GdataMedia:
      id: GdataMedia
      type: object
      description: gdata
      properties:
        blobstore2Info:
          $ref: '#/components/schemas/GdataBlobstore2Info'
          description: gdata
        referenceType:
          type: string
          enum:
            - PATH
            - BLOB_REF
            - INLINE
            - GET_MEDIA
            - COMPOSITE_MEDIA
            - BIGSTORE_REF
            - DIFF_VERSION_RESPONSE
            - DIFF_CHECKSUMS_RESPONSE
            - DIFF_DOWNLOAD_RESPONSE
            - DIFF_UPLOAD_REQUEST
            - DIFF_UPLOAD_RESPONSE
            - COSMO_BINARY_REFERENCE
            - ARBITRARY_BYTES
          enumDescriptions:
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
          description: gdata
        diffUploadRequest:
          description: gdata
          $ref: '#/components/schemas/GdataDiffUploadRequest'
        mediaId:
          description: gdata
          type: string
          format: byte
        sha256Hash:
          type: string
          format: byte
          description: gdata
        compositeMedia:
          description: gdata
          type: array
          items:
            $ref: '#/components/schemas/GdataCompositeMedia'
        diffUploadResponse:
          description: gdata
          $ref: '#/components/schemas/GdataDiffUploadResponse'
        crc32cHash:
          type: integer
          format: uint32
          description: gdata
        hashVerified:
          type: boolean
          description: gdata
        filename:
          description: gdata
          type: string
        algorithm:
          description: gdata
          type: string
        md5Hash:
          format: byte
          description: gdata
          type: string
        inline:
          format: byte
          type: string
          description: gdata
        bigstoreObjectRef:
          description: gdata
          type: string
          format: byte
        hash:
          type: string
          description: gdata
        timestamp:
          type: string
          description: gdata
          format: uint64
        objectId:
          description: gdata
          $ref: '#/components/schemas/GdataObjectId'
        diffVersionResponse:
          description: gdata
          $ref: '#/components/schemas/GdataDiffVersionResponse'
        contentTypeInfo:
          description: gdata
          $ref: '#/components/schemas/GdataContentTypeInfo'
        cosmoBinaryReference:
          format: byte
          type: string
          description: gdata
        diffDownloadResponse:
          $ref: '#/components/schemas/GdataDiffDownloadResponse'
          description: gdata
        isPotentialRetry:
          type: boolean
          description: gdata
        path:
          type: string
          description: gdata
        sha1Hash:
          format: byte
          description: gdata
          type: string
        contentType:
          type: string
          description: gdata
        diffChecksumsResponse:
          description: gdata
          $ref: '#/components/schemas/GdataDiffChecksumsResponse'
        blobRef:
          description: gdata
          format: byte
          type: string
        token:
          description: gdata
          type: string
        length:
          format: int64
          type: string
          description: gdata
        downloadParameters:
          $ref: '#/components/schemas/GdataDownloadParameters'
          description: gdata
    Report:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The end of the time period that the report instance covers. The value is exclusive.
        createTime:
          description: The date/time when this report was created.
          type: string
          format: google-datetime
        id:
          type: string
          description: The server-generated ID of the report.
        jobExpireTime:
          type: string
          format: google-datetime
          description: The date/time when the job this report belongs to will expire/expired.
        jobId:
          description: The ID of the job that created this report.
          type: string
        startTime:
          type: string
          format: google-datetime
          description: The start of the time period that the report instance covers. The value is inclusive.
        downloadUrl:
          description: The URL from which the report can be downloaded (max. 1000 characters).
          type: string
      type: object
      description: A report's metadata including the URL from which the report itself can be downloaded.
      id: Report
    ListReportTypesResponse:
      description: Response message for ReportingService.ListReportTypes.
      type: object
      id: ListReportTypesResponse
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in the ListReportTypesRequest.page_token field in the subsequent call to `ListReportTypes` method to retrieve the next page of results.
          type: string
        reportTypes:
          items:
            $ref: '#/components/schemas/ReportType'
          type: array
          description: The list of report types.
    GdataDownloadParameters:
      description: gdata
      id: GdataDownloadParameters
      properties:
        allowGzipCompression:
          type: boolean
          description: gdata
        ignoreRange:
          type: boolean
          description: gdata
      type: object
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
    ListReportsResponse:
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in the ListReportsRequest.page_token field in the subsequent call to `ListReports` method to retrieve the next page of results.
          type: string
        reports:
          items:
            $ref: '#/components/schemas/Report'
          description: The list of report types.
          type: array
      id: ListReportsResponse
      type: object
      description: Response message for ReportingService.ListReports.
    Job:
      description: A job creating reports of a specific type.
      properties:
        systemManaged:
          description: True if this a system-managed job that cannot be modified by the user; otherwise false.
          type: boolean
        expireTime:
          description: The date/time when this job will expire/expired. After a job expired, no new reports are generated.
          format: google-datetime
          type: string
        id:
          description: The server-generated ID of the job (max. 40 characters).
          type: string
        createTime:
          description: The creation date/time of the job.
          type: string
          format: google-datetime
        reportTypeId:
          type: string
          description: The type of reports this job creates. Corresponds to the ID of a ReportType.
        name:
          description: The name of the job (max. 100 characters).
          type: string
      type: object
      id: Job
    GdataCompositeMedia:
      properties:
        objectId:
          description: gdata
          $ref: '#/components/schemas/GdataObjectId'
        path:
          description: gdata
          type: string
        cosmoBinaryReference:
          format: byte
          type: string
          description: gdata
        blobstore2Info:
          description: gdata
          $ref: '#/components/schemas/GdataBlobstore2Info'
        blobRef:
          description: gdata
          type: string
          format: byte
        md5Hash:
          format: byte
          type: string
          description: gdata
        length:
          type: string
          format: int64
          description: gdata
        crc32cHash:
          format: uint32
          description: gdata
          type: integer
        sha1Hash:
          description: gdata
          type: string
          format: byte
        referenceType:
          enumDescriptions:
            - gdata
            - gdata
            - gdata
            - gdata
            - gdata
          description: gdata
          type: string
          enum:
            - PATH
            - BLOB_REF
            - INLINE
            - BIGSTORE_REF
            - COSMO_BINARY_REFERENCE
        inline:
          type: string
          format: byte
          description: gdata
      description: gdata
      id: GdataCompositeMedia
      type: object
    ReportType:
      type: object
      description: A report type.
      id: ReportType
      properties:
        systemManaged:
          type: boolean
          description: True if this a system-managed report type; otherwise false. Reporting jobs for system-managed report types are created automatically and can thus not be used in the `CreateJob` method.
        name:
          description: The name of the report type (max. 100 characters).
          type: string
        id:
          type: string
          description: The ID of the report type (max. 100 characters).
        deprecateTime:
          type: string
          description: The date/time when this report type was/will be deprecated.
          format: google-datetime
    ListJobsResponse:
      type: object
      id: ListJobsResponse
      description: Response message for ReportingService.ListJobs.
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in the ListJobsRequest.page_token field in the subsequent call to `ListJobs` method to retrieve the next page of results.
          type: string
        jobs:
          description: The list of jobs.
          items:
            $ref: '#/components/schemas/Job'
          type: array
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/yt-analytics.readonly: View YouTube Analytics reports for your YouTube content
            https://www.googleapis.com/auth/yt-analytics-monetary.readonly: View monetary and non-monetary YouTube Analytics reports for your YouTube content
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    reports:
      id: youtube.youtubereporting.reports
      name: reports
      title: Reports
      methods:
        jobs_reports_list:
          operation:
            $ref: '#/paths/~1v1~1jobs~1{jobId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        jobs_reports_get:
          operation:
            $ref: '#/paths/~1v1~1jobs~1{jobId}~1reports~1{reportId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/jobs_reports_get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/jobs_reports_list'
        insert: []
        update: []
        delete: []
    jobs:
      id: youtube.youtubereporting.jobs
      name: jobs
      title: Jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1jobs~1{jobId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1jobs~1{jobId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    media:
      id: youtube.youtubereporting.media
      name: media
      title: Media
      methods:
        download:
          operation:
            $ref: '#/paths/~1v1~1media~1{mediaId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    report_types:
      id: youtube.youtubereporting.report_types
      name: report_types
      title: Report_types
      methods:
        reportTypes_list:
          operation:
            $ref: '#/paths/~1v1~1reportTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_types/methods/reportTypes_list'
        insert: []
        update: []
        delete: []
paths:
  /v1/jobs/{jobId}/reports:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
    get:
      description: Lists reports created by a specific job. Returns NOT_FOUND if the job does not exist.
      operationId: youtubereporting.jobs.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startTimeAtOrAfter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: startTimeBefore
          schema:
            type: string
        - in: query
          name: createdAfter
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1/jobs/{jobId}/reports/{reportId}:
    parameters: *ref_1
    get:
      description: Gets the metadata of a specific report.
      operationId: youtubereporting.jobs.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1/jobs:
    parameters: *ref_1
    get:
      description: Lists jobs.
      operationId: youtubereporting.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: query
          name: includeSystemManaged
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
    post:
      description: Creates a job and returns it.
      operationId: youtubereporting.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: insert
  /v1/jobs/{jobId}:
    parameters: *ref_1
    get:
      description: Gets a job.
      operationId: youtubereporting.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
    delete:
      description: Deletes a job.
      operationId: youtubereporting.jobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: delete
  /v1/media/{mediaId}:
    parameters: *ref_1
    get:
      description: Method for media download. Download is supported on the URI `/v1/media/{+name}?alt=media`.
      operationId: youtubereporting.media.download
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdataMedia'
      parameters:
        - in: path
          name: mediaId
          required: true
          schema:
            type: string
      x-stackQL-resource: media
      x-stackQL-verb: exec
  /v1/reportTypes:
    parameters: *ref_1
    get:
      description: Lists report types.
      operationId: youtubereporting.reportTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/yt-analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/yt-analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportTypesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: includeSystemManaged
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: report_types
      x-stackQL-verb: select
