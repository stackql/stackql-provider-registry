openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: YouTube Data API v3
  description: The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
  version: v3
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/youtube/
servers:
  - url: https://youtube.googleapis.com
components:
  schemas:
    Playlist:
      description: 'A *playlist* resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private. YouTube also uses playlists to identify special collections of videos for a channel, such as: - uploaded videos - favorite videos - positively rated (liked) videos - watch history - watch later To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company''s videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods.'
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlist".'
          default: youtube#playlist
          type: string
        player:
          description: The player object contains information that you would use to play the playlist in an embedded player.
          $ref: '#/components/schemas/PlaylistPlayer'
        snippet:
          description: The snippet object contains basic details about the playlist, such as its title and description.
          $ref: '#/components/schemas/PlaylistSnippet'
        status:
          description: The status object contains status information for the playlist.
          $ref: '#/components/schemas/PlaylistStatus'
        contentDetails:
          description: The contentDetails object contains information like video count.
          $ref: '#/components/schemas/PlaylistContentDetails'
        localizations:
          additionalProperties:
            $ref: '#/components/schemas/PlaylistLocalization'
          description: Localizations for different languages
          type: object
        etag:
          description: Etag of this resource.
          type: string
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the playlist.
      id: Playlist
      type: object
    LiveChatMessageRetractedDetails:
      type: object
      properties:
        retractedMessageId:
          type: string
      id: LiveChatMessageRetractedDetails
    VideoCategoryListResponse:
      id: VideoCategoryListResponse
      properties:
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategoryListResponse".'
          type: string
          default: youtube#videoCategoryListResponse
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          description: Etag of this resource.
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/VideoCategory'
          description: A list of video categories that can be associated with YouTube videos. In this map, the video category ID is the map key, and its value is the corresponding videoCategory resource.
      type: object
    TokenPagination:
      properties: {}
      description: Stub token pagination template to suppress results.
      type: object
      id: TokenPagination
    I18nRegion:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegion".'
          default: youtube#i18nRegion
          type: string
        snippet:
          $ref: '#/components/schemas/I18nRegionSnippet'
          description: The snippet object contains basic details about the i18n region, such as region code and human-readable name.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the i18n region.
      id: I18nRegion
      description: A *i18nRegion* resource identifies a region where YouTube is available.
    LiveStreamSnippet:
      id: LiveStreamSnippet
      properties:
        publishedAt:
          description: The date and time that the stream was created.
          format: date-time
          type: string
        description:
          type: string
          description: The stream's description. The value cannot be longer than 10000 characters.
        isDefaultStream:
          type: boolean
        title:
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
          type: string
          description: The stream's title. The value must be between 1 and 128 characters long.
        channelId:
          description: The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.
          type: string
      type: object
    CommentThreadReplies:
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          description: A limited number of replies. Unless the number of replies returned equals total_reply_count in the snippet the returned replies are only a subset of the total number of replies.
      type: object
      id: CommentThreadReplies
      description: Comments written in (direct or indirect) reply to the top level comment.
    ActivityContentDetailsUpload:
      description: Information about the uploaded video.
      id: ActivityContentDetailsUpload
      type: object
      properties:
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the uploaded video.
    LiveStream:
      id: LiveStream
      description: A live stream describes a live ingestion point.
      type: object
      properties:
        etag:
          description: Etag of this resource.
          type: string
        snippet:
          $ref: '#/components/schemas/LiveStreamSnippet'
          description: The snippet object contains basic details about the stream, including its channel, title, and description.
        status:
          $ref: '#/components/schemas/LiveStreamStatus'
          description: The status object contains information about live stream's status.
        contentDetails:
          description: The content_details object contains information about the stream, including the closed captions ingestion URL.
          $ref: '#/components/schemas/LiveStreamContentDetails'
        id:
          description: The ID that YouTube assigns to uniquely identify the stream.
          annotations:
            required:
              - youtube.liveStreams.update
          type: string
        cdn:
          description: The cdn object defines the live stream's content delivery network (CDN) settings. These settings provide details about the manner in which you stream your content to YouTube.
          $ref: '#/components/schemas/CdnSettings'
        kind:
          default: youtube#liveStream
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStream".'
          type: string
    VideoLocalization:
      type: object
      id: VideoLocalization
      properties:
        title:
          description: Localized version of the video's title.
          type: string
        description:
          description: Localized version of the video's description.
          type: string
      description: Localized versions of certain video properties (e.g. title).
    VideoStatistics:
      id: VideoStatistics
      type: object
      description: Statistics about the video, such as the number of times the video was viewed or liked.
      properties:
        viewCount:
          description: The number of times the video has been viewed.
          type: string
          format: uint64
        favoriteCount:
          format: uint64
          description: The number of users who currently have the video marked as a favorite video.
          type: string
        dislikeCount:
          description: The number of users who have indicated that they disliked the video by giving it a negative rating.
          type: string
          format: uint64
        likeCount:
          type: string
          description: The number of users who have indicated that they liked the video by giving it a positive rating.
          format: uint64
        commentCount:
          format: uint64
          description: The number of comments for the video.
          type: string
    ActivityContentDetailsChannelItem:
      properties:
        resourceId:
          description: The resourceId object contains information that identifies the resource that was added to the channel.
          $ref: '#/components/schemas/ResourceId'
      description: Details about a resource which was added to a channel.
      id: ActivityContentDetailsChannelItem
      type: object
    ChannelStatistics:
      id: ChannelStatistics
      properties:
        hiddenSubscriberCount:
          type: boolean
          description: Whether or not the number of subscribers is shown for this user.
        videoCount:
          description: The number of videos uploaded to the channel.
          format: uint64
          type: string
        viewCount:
          description: The number of times the channel has been viewed.
          type: string
          format: uint64
        subscriberCount:
          description: The number of subscribers that the channel has.
          format: uint64
          type: string
        commentCount:
          format: uint64
          description: The number of comments for the channel.
          type: string
      description: 'Statistics about a channel: number of subscribers, number of videos in the channel, etc.'
      type: object
    LiveBroadcastStatistics:
      properties:
        totalChatCount:
          description: The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.
          format: uint64
          type: string
        concurrentViewers:
          format: uint64
          type: string
          description: The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.
      description: Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.
      type: object
      id: LiveBroadcastStatistics
    RelatedEntity:
      properties:
        entity:
          $ref: '#/components/schemas/Entity'
      type: object
      id: RelatedEntity
    PlaylistItemStatus:
      properties:
        privacyStatus:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          description: This resource's privacy status.
          enum:
            - public
            - unlisted
            - private
      description: Information about the playlist item's privacy status.
      type: object
      id: PlaylistItemStatus
    MemberListResponse:
      type: object
      id: MemberListResponse
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        items:
          description: A list of members that match the request criteria.
          items:
            $ref: '#/components/schemas/Member'
          type: array
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        kind:
          default: youtube#memberListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#memberListResponse".'
          type: string
    SearchResult:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        id:
          $ref: '#/components/schemas/ResourceId'
          description: The id object contains information that can be used to uniquely identify the resource that matches the search request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchResult".'
          default: youtube#searchResult
          type: string
        snippet:
          description: The snippet object contains basic details about a search result, such as its title or description. For example, if the search result is a video, then the title will be the video's title and the description will be the video's description.
          $ref: '#/components/schemas/SearchResultSnippet'
      id: SearchResult
      type: object
      description: A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.
    InvideoBranding:
      id: InvideoBranding
      properties:
        imageBytes:
          format: byte
          description: The bytes the uploaded image. Only used in api to youtube communication.
          type: string
        position:
          $ref: '#/components/schemas/InvideoPosition'
          description: The spatial position within the video where the branding watermark will be displayed.
        timing:
          description: The temporal position within the video where watermark will be displayed.
          $ref: '#/components/schemas/InvideoTiming'
        targetChannelId:
          type: string
          description: The channel to which this branding links. If not present it defaults to the current channel.
        imageUrl:
          description: The url of the uploaded image. Only used in apiary to api communication.
          type: string
      type: object
      description: LINT.IfChange Describes an invideo branding.
    ActivityContentDetails:
      properties:
        comment:
          $ref: '#/components/schemas/ActivityContentDetailsComment'
          description: The comment object contains information about a resource that received a comment. This property is only present if the snippet.type is comment.
        recommendation:
          description: The recommendation object contains information about a recommended resource. This property is only present if the snippet.type is recommendation.
          $ref: '#/components/schemas/ActivityContentDetailsRecommendation'
        like:
          $ref: '#/components/schemas/ActivityContentDetailsLike'
          description: The like object contains information about a resource that received a positive (like) rating. This property is only present if the snippet.type is like.
        social:
          $ref: '#/components/schemas/ActivityContentDetailsSocial'
          description: The social object contains details about a social network post. This property is only present if the snippet.type is social.
        playlistItem:
          $ref: '#/components/schemas/ActivityContentDetailsPlaylistItem'
          description: The playlistItem object contains information about a new playlist item. This property is only present if the snippet.type is playlistItem.
        bulletin:
          description: The bulletin object contains details about a channel bulletin post. This object is only present if the snippet.type is bulletin.
          $ref: '#/components/schemas/ActivityContentDetailsBulletin'
        upload:
          $ref: '#/components/schemas/ActivityContentDetailsUpload'
          description: The upload object contains information about the uploaded video. This property is only present if the snippet.type is upload.
        channelItem:
          description: The channelItem object contains details about a resource which was added to a channel. This property is only present if the snippet.type is channelItem.
          $ref: '#/components/schemas/ActivityContentDetailsChannelItem'
        favorite:
          description: The favorite object contains information about a video that was marked as a favorite video. This property is only present if the snippet.type is favorite.
          $ref: '#/components/schemas/ActivityContentDetailsFavorite'
        subscription:
          description: The subscription object contains information about a channel that a user subscribed to. This property is only present if the snippet.type is subscription.
          $ref: '#/components/schemas/ActivityContentDetailsSubscription'
        promotedItem:
          $ref: '#/components/schemas/ActivityContentDetailsPromotedItem'
          description: The promotedItem object contains details about a resource which is being promoted. This property is only present if the snippet.type is promotedItem.
      type: object
      description: 'Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.'
      id: ActivityContentDetails
    ActivityContentDetailsFavorite:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resourceId object contains information that identifies the resource that was marked as a favorite.
      description: Information about a video that was marked as a favorite video.
      id: ActivityContentDetailsFavorite
    LiveChatSuperChatDetails:
      type: object
      id: LiveChatSuperChatDetails
      properties:
        currency:
          type: string
          description: The currency in which the purchase was made.
        userComment:
          description: The comment added by the user to this Super Chat event.
          type: string
        tier:
          format: uint32
          description: The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1.
          type: integer
        amountDisplayString:
          type: string
          description: A rendered string that displays the fund amount and currency to the user.
        amountMicros:
          format: uint64
          type: string
          description: The amount purchased by the user, in micros (1,750,000 micros = 1.75).
    LiveBroadcastListResponse:
      type: object
      properties:
        kind:
          default: youtube#liveBroadcastListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcastListResponse".'
          type: string
        etag:
          description: Etag of this resource.
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        items:
          type: array
          items:
            $ref: '#/components/schemas/LiveBroadcast'
          description: A list of broadcasts that match the request criteria.
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
      id: LiveBroadcastListResponse
    TestItemTestItemSnippet:
      type: object
      properties: {}
      id: TestItemTestItemSnippet
    AbuseType:
      id: AbuseType
      properties:
        id:
          type: string
      type: object
    PlaylistItemContentDetails:
      type: object
      id: PlaylistItemContentDetails
      properties:
        startAt:
          type: string
          description: The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.
        note:
          description: A user-generated note for this item.
          type: string
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.
        videoPublishedAt:
          description: The date and time that the video was published to YouTube.
          type: string
          format: date-time
        endAt:
          type: string
          description: The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.
    ChannelSectionLocalization:
      type: object
      description: ChannelSection localization setting
      id: ChannelSectionLocalization
      properties:
        title:
          description: The localized strings for channel section's title.
          type: string
    SearchListResponse:
      id: SearchListResponse
      type: object
      properties:
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        kind:
          default: youtube#searchListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchListResponse".'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        regionCode:
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        items:
          items:
            $ref: '#/components/schemas/SearchResult'
          description: Pagination information for token pagination.
          type: array
    ChannelConversionPings:
      id: ChannelConversionPings
      type: object
      description: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
      properties:
        pings:
          items:
            $ref: '#/components/schemas/ChannelConversionPing'
          type: array
          description: Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
    SearchResultSnippet:
      properties:
        title:
          type: string
          description: The title of the search result.
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
        publishedAt:
          description: The creation date and time of the resource that the search result identifies.
          type: string
          format: date-time
        liveBroadcastContent:
          enumDescriptions:
            - ''
            - The live broadcast is upcoming.
            - The live broadcast is active.
            - The live broadcast has been completed.
          description: It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
          type: string
          enum:
            - none
            - upcoming
            - live
            - completed
        channelId:
          type: string
          description: The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.
        channelTitle:
          type: string
          description: The title of the channel that published the resource that the search result identifies.
        description:
          type: string
          description: A description of the search result.
      type: object
      description: Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.
      id: SearchResultSnippet
    I18nLanguage:
      id: I18nLanguage
      description: An *i18nLanguage* resource identifies a UI language currently supported by YouTube.
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguage".'
          default: youtube#i18nLanguage
          type: string
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the i18n language.
        snippet:
          $ref: '#/components/schemas/I18nLanguageSnippet'
          description: The snippet object contains basic details about the i18n language, such as language code and human-readable name.
        etag:
          description: Etag of this resource.
          type: string
    ChannelListResponse:
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        kind:
          type: string
          default: youtube#channelListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelListResponse".'
        items:
          items:
            $ref: '#/components/schemas/Channel'
          type: array
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        etag:
          type: string
          description: Etag of this resource.
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
      type: object
      id: ChannelListResponse
    ActivityContentDetailsBulletin:
      description: Details about a channel bulletin post.
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resourceId object contains information that identifies the resource associated with a bulletin post. @mutable youtube.activities.insert
      type: object
      id: ActivityContentDetailsBulletin
    VideoAbuseReportSecondaryReason:
      properties:
        id:
          description: The ID of this abuse report secondary reason.
          type: string
        label:
          description: The localized label for this abuse report secondary reason.
          type: string
      type: object
      id: VideoAbuseReportSecondaryReason
    CdnSettings:
      properties:
        ingestionType:
          enum:
            - rtmp
            - dash
            - webrtc
            - hls
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
          description: ' The method or protocol used to transmit the video stream.'
        ingestionInfo:
          description: The ingestionInfo object contains information that YouTube provides that you need to transmit your RTMP or HTTP stream to YouTube.
          $ref: '#/components/schemas/IngestionInfo'
        format:
          type: string
          description: 'The format of the video stream that you are sending to Youtube. '
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
        resolution:
          description: The resolution of the inbound video data.
          enum:
            - 240p
            - 360p
            - 480p
            - 720p
            - 1080p
            - 1440p
            - 2160p
            - variable
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        frameRate:
          description: The frame rate of the inbound video data.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - 30fps
            - 60fps
            - variable
      type: object
      id: CdnSettings
      description: Brief description of the live stream cdn settings.
    VideoGetRatingResponse:
      type: object
      id: VideoGetRatingResponse
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          type: string
          description: Etag of this resource.
        items:
          items:
            $ref: '#/components/schemas/VideoRating'
          type: array
          description: A list of ratings that match the request criteria.
        kind:
          default: youtube#videoGetRatingResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoGetRatingResponse".'
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    ActivityListResponse:
      properties:
        kind:
          default: youtube#activityListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activityListResponse".'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        etag:
          type: string
          description: Etag of this resource.
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
      type: object
      id: ActivityListResponse
    I18nLanguageListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/I18nLanguage'
          description: A list of supported i18n languages. In this map, the i18n language ID is the map key, and its value is the corresponding i18nLanguage resource.
          type: array
        kind:
          default: youtube#i18nLanguageListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguageListResponse".'
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          description: Etag of this resource.
          type: string
      id: I18nLanguageListResponse
      type: object
    LocalizedString:
      type: object
      properties:
        value:
          type: string
        language:
          type: string
      id: LocalizedString
    ChannelConversionPing:
      description: Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
      properties:
        context:
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - subscribe
            - unsubscribe
            - cview
          type: string
          description: Defines the context of the ping.
        conversionUrl:
          description: 'The url (without the schema) that the player shall send the ping to. It''s at caller''s descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.'
          type: string
      id: ChannelConversionPing
      type: object
    SubscriptionListResponse:
      type: object
      id: SubscriptionListResponse
      properties:
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        items:
          items:
            $ref: '#/components/schemas/Subscription'
          description: A list of subscriptions that match the request criteria.
          type: array
        etag:
          description: Etag of this resource.
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        kind:
          default: youtube#subscriptionListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscriptionListResponse".'
          type: string
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
    ActivityContentDetailsComment:
      id: ActivityContentDetailsComment
      type: object
      properties:
        resourceId:
          description: The resourceId object contains information that identifies the resource associated with the comment.
          $ref: '#/components/schemas/ResourceId'
      description: Information about a resource that received a comment.
    ImageSettings:
      type: object
      properties:
        bannerTvMediumImageUrl:
          description: Banner image. TV size medium resolution (1280x720).
          type: string
        largeBrandedBannerImageUrl:
          description: The URL for the 854px by 70px image that appears below the video player in the expanded video view of the video watch page.
          $ref: '#/components/schemas/LocalizedProperty'
        watchIconImageUrl:
          type: string
        trackingImageUrl:
          description: The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.
          type: string
        bannerImageUrl:
          description: Banner image. Desktop size (1060x175).
          type: string
        backgroundImageUrl:
          description: The URL for the background image shown on the video watch page. The image should be 1200px by 615px, with a maximum file size of 128k.
          $ref: '#/components/schemas/LocalizedProperty'
        bannerMobileImageUrl:
          type: string
          description: Banner image. Mobile size (640x175).
        bannerMobileMediumHdImageUrl:
          type: string
          description: Banner image. Mobile size medium/high resolution (960x263).
        bannerTvHighImageUrl:
          type: string
          description: Banner image. TV size high resolution (1920x1080).
        bannerTabletImageUrl:
          type: string
          description: Banner image. Tablet size (1707x283).
        bannerTabletHdImageUrl:
          description: Banner image. Tablet size high resolution (2276x377).
          type: string
        bannerMobileLowImageUrl:
          description: Banner image. Mobile size low resolution (320x88).
          type: string
        bannerTabletExtraHdImageUrl:
          description: Banner image. Tablet size extra high resolution (2560x424).
          type: string
        largeBrandedBannerImageImapScript:
          description: The image map script for the large banner image.
          $ref: '#/components/schemas/LocalizedProperty'
        bannerTvImageUrl:
          description: Banner image. TV size extra high resolution (2120x1192).
          type: string
        bannerTabletLowImageUrl:
          description: Banner image. Tablet size low resolution (1138x188).
          type: string
        bannerMobileHdImageUrl:
          description: Banner image. Mobile size high resolution (1280x360).
          type: string
        bannerMobileExtraHdImageUrl:
          description: Banner image. Mobile size high resolution (1440x395).
          type: string
        bannerExternalUrl:
          description: This is generated when a ChannelBanner.Insert request has succeeded for the given channel.
          type: string
        smallBrandedBannerImageImapScript:
          $ref: '#/components/schemas/LocalizedProperty'
          description: The image map script for the small banner image.
        smallBrandedBannerImageUrl:
          $ref: '#/components/schemas/LocalizedProperty'
          description: The URL for the 640px by 70px banner image that appears below the video player in the default view of the video watch page. The URL for the image that appears above the top-left corner of the video player. This is a 25-pixel-high image with a flexible width that cannot exceed 170 pixels.
        bannerTvLowImageUrl:
          description: Banner image. TV size low resolution (854x480).
          type: string
      id: ImageSettings
      description: Branding properties for images associated with the channel.
    ChannelContentDetails:
      description: Details about the content of a channel.
      type: object
      id: ChannelContentDetails
      properties:
        relatedPlaylists:
          type: object
          properties:
            favorites:
              type: string
              description: The ID of the playlist that contains the channel"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
            watchLater:
              description: The ID of the playlist that contains the channel"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
              type: string
            watchHistory:
              type: string
              description: The ID of the playlist that contains the channel"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
            likes:
              type: string
              description: The ID of the playlist that contains the channel"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
            uploads:
              description: The ID of the playlist that contains the channel"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.
              type: string
    MemberSnippet:
      properties:
        creatorChannelId:
          description: The id of the channel that's offering memberships.
          type: string
        membershipsDetails:
          $ref: '#/components/schemas/MembershipsDetails'
          description: Details about the user's membership.
        memberDetails:
          description: Details about the member.
          $ref: '#/components/schemas/ChannelProfileDetails'
      id: MemberSnippet
      type: object
    VideoContentDetails:
      type: object
      properties:
        projection:
          description: Specifies the projection format of the video.
          enum:
            - rectangular
            - '360'
          enumDescriptions:
            - ''
            - ''
          type: string
        caption:
          description: The value of captions indicates whether the video has captions or not.
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - 'true'
            - 'false'
        dimension:
          type: string
          description: The value of dimension indicates whether the video is available in 3D or in 2D.
        licensedContent:
          type: boolean
          description: The value of is_license_content indicates whether the video is licensed content.
        duration:
          description: 'The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long.'
          type: string
        contentRating:
          description: Specifies the ratings that the video received under various rating schemes.
          $ref: '#/components/schemas/ContentRating'
        countryRestriction:
          description: The countryRestriction object contains information about the countries where a video is (or is not) viewable.
          $ref: '#/components/schemas/AccessPolicy'
        regionRestriction:
          $ref: '#/components/schemas/VideoContentDetailsRegionRestriction'
          description: The regionRestriction object contains information about the countries where a video is (or is not) viewable. The object will contain either the contentDetails.regionRestriction.allowed property or the contentDetails.regionRestriction.blocked property.
        definition:
          enum:
            - sd
            - hd
          description: The value of definition indicates whether the video is available in high definition or only in standard definition.
          type: string
          enumDescriptions:
            - sd
            - hd
        hasCustomThumbnail:
          type: boolean
          description: Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader.
      description: Details about the content of a YouTube Video.
      id: VideoContentDetails
    SuperChatEvent:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        id:
          description: The ID that YouTube assigns to uniquely identify the Super Chat event.
          type: string
        snippet:
          $ref: '#/components/schemas/SuperChatEventSnippet'
          description: The `snippet` object contains basic details about the Super Chat event.
        kind:
          default: youtube#superChatEvent
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string `"youtube#superChatEvent"`.'
      description: A `__superChatEvent__` resource represents a Super Chat purchase on a YouTube channel.
      id: SuperChatEvent
      type: object
    ChannelBrandingSettings:
      description: Branding properties of a YouTube channel.
      id: ChannelBrandingSettings
      type: object
      properties:
        watch:
          $ref: '#/components/schemas/WatchSettings'
          description: Branding properties for the watch page.
        channel:
          description: Branding properties for the channel view.
          $ref: '#/components/schemas/ChannelSettings'
        image:
          $ref: '#/components/schemas/ImageSettings'
          description: Branding properties for branding images.
        hints:
          description: Additional experimental branding properties.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
    VideoMonetizationDetails:
      properties:
        access:
          $ref: '#/components/schemas/AccessPolicy'
          description: The value of access indicates whether the video can be monetized or not.
      id: VideoMonetizationDetails
      description: Details about monetization of a YouTube Video.
      type: object
    ActivityContentDetailsSubscription:
      description: Information about a channel that a user subscribed to.
      properties:
        resourceId:
          description: The resourceId object contains information that identifies the resource that the user subscribed to.
          $ref: '#/components/schemas/ResourceId'
      id: ActivityContentDetailsSubscription
      type: object
    LocalizedProperty:
      properties:
        default:
          type: string
        defaultLanguage:
          $ref: '#/components/schemas/LanguageTag'
          description: The language of the default property.
        localized:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
      id: LocalizedProperty
      type: object
    LiveBroadcastContentDetails:
      type: object
      properties:
        startWithSlate:
          type: boolean
          description: This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers.
        stereoLayout:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - stereoLayoutUnspecified
            - mono
            - leftRight
            - topBottom
          description: The 3D stereo layout of this broadcast. This defaults to mono.
          type: string
        mesh:
          format: byte
          description: The mesh for projecting the video if projection is mesh. The mesh value must be a UTF-8 string containing the base-64 encoding of 3D mesh data that follows the Spherical Video V2 RFC specification for an mshp box, excluding the box size and type but including the following four reserved zero bytes for the version and flags.
          type: string
        enableLowLatency:
          type: boolean
          description: Indicates whether this broadcast has low latency enabled.
        enableDvr:
          type: boolean
          description: This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true. *Important:* You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends.
        enableAutoStop:
          type: boolean
          description: This setting indicates whether auto stop is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events.
        monitorStream:
          $ref: '#/components/schemas/MonitorStreamInfo'
          description: The monitorStream object contains information about the monitor stream, which the broadcaster can use to review the event content before the broadcast stream is shown publicly.
        enableClosedCaptions:
          description: This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST.
          type: boolean
        latencyPreference:
          type: string
          enum:
            - latencyPreferenceUnspecified
            - normal
            - low
            - ultraLow
          enumDescriptions:
            - ''
            - 'Best for: highest quality viewer playbacks and higher resolutions.'
            - 'Best for: near real-time interaction, with minimal playback buffering.'
            - 'Best for: real-time interaction Does not support: Closed captions, 1440p, and 4k resolutions'
          description: If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted.
        projection:
          enum:
            - projectionUnspecified
            - rectangular
            - '360'
            - mesh
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The projection format of this broadcast. This defaults to rectangular.
        boundStreamId:
          type: string
          description: This value uniquely identifies the live stream bound to the broadcast.
        boundStreamLastUpdateTimeMs:
          type: string
          format: date-time
          description: The date and time that the live stream referenced by boundStreamId was last updated.
        closedCaptionsType:
          type: string
          enum:
            - closedCaptionsTypeUnspecified
            - closedCaptionsDisabled
            - closedCaptionsHttpPost
            - closedCaptionsEmbedded
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        enableContentEncryption:
          description: This setting indicates whether YouTube should enable content encryption for the broadcast.
          type: boolean
        recordFromStart:
          description: Automatically start recording after the event goes live. The default value for this property is true. *Important:* You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback.
          type: boolean
        enableEmbed:
          type: boolean
          description: This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video.
        enableAutoStart:
          type: boolean
          description: This setting indicates whether auto start is enabled for this broadcast. The default value for this property is false. This setting can only be used by Events.
      id: LiveBroadcastContentDetails
      description: Detailed settings of a broadcast.
    LiveChatMessage:
      id: LiveChatMessage
      properties:
        id:
          description: The ID that YouTube assigns to uniquely identify the message.
          type: string
        authorDetails:
          description: The authorDetails object contains basic details about the user that posted this message.
          $ref: '#/components/schemas/LiveChatMessageAuthorDetails'
        snippet:
          $ref: '#/components/schemas/LiveChatMessageSnippet'
          description: The snippet object contains basic details about the message.
        etag:
          description: Etag of this resource.
          type: string
        kind:
          default: youtube#liveChatMessage
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessage".'
          type: string
      description: A *liveChatMessage* resource represents a chat message in a YouTube Live Chat.
      type: object
    InvideoTiming:
      properties:
        offsetMs:
          description: Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.
          format: uint64
          type: string
        durationMs:
          description: Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.
          format: uint64
          type: string
        type:
          description: Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - offsetFromStart
            - offsetFromEnd
      description: Describes a temporal position of a visual widget inside a video.
      id: InvideoTiming
      type: object
    ChannelToStoreLinkDetails:
      description: Information specific to a store on a merchandising platform linked to a YouTube channel.
      type: object
      id: ChannelToStoreLinkDetails
      properties:
        storeUrl:
          type: string
          description: Landing page of the store.
        storeName:
          type: string
          description: Name of the store.
        merchantId:
          description: Google Merchant Center id of the store.
          type: string
          format: uint64
    VideoListResponse:
      id: VideoListResponse
      type: object
      properties:
        items:
          items:
            $ref: '#/components/schemas/Video'
          type: array
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        etag:
          type: string
          description: Etag of this resource.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        prevPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
          type: string
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        kind:
          default: youtube#videoListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoListResponse".'
          type: string
    ThumbnailSetResponse:
      properties:
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#thumbnailSetResponse".'
          type: string
          default: youtube#thumbnailSetResponse
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of thumbnails.
          items:
            $ref: '#/components/schemas/ThumbnailDetails'
        etag:
          description: Etag of this resource.
          type: string
      type: object
      id: ThumbnailSetResponse
    MembershipsDurationAtLevel:
      type: object
      id: MembershipsDurationAtLevel
      properties:
        memberSince:
          description: The date and time when the user became a continuous member for the given level.
          type: string
        level:
          description: Pricing level ID.
          type: string
        memberTotalDurationMonths:
          description: The cumulative time the user has been a member for the given level in complete months (the time is rounded down to the nearest integer).
          format: int32
          type: integer
    SubscriptionSnippet:
      id: SubscriptionSnippet
      description: Basic details about a subscription, including title, description and thumbnails of the subscribed item.
      properties:
        publishedAt:
          format: date-time
          description: The date and time that the subscription was created.
          type: string
        thumbnails:
          description: A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The id object contains information about the channel that the user subscribed to.
          annotations:
            required:
              - youtube.subscriptions.insert
        channelTitle:
          description: Channel title for the channel that the subscription belongs to.
          type: string
        title:
          type: string
          description: The subscription's title.
        channelId:
          description: The ID that YouTube uses to uniquely identify the subscriber's channel.
          type: string
        description:
          description: The subscription's details.
          type: string
      type: object
    VideoRecordingDetails:
      type: object
      properties:
        recordingDate:
          description: The date and time when the video was recorded.
          format: date-time
          type: string
        location:
          $ref: '#/components/schemas/GeoPoint'
          description: The geolocation information associated with the video.
        locationDescription:
          description: The text description of the location where the video was recorded.
          type: string
      description: Recording information associated with the video.
      id: VideoRecordingDetails
    ThirdPartyLinkSnippet:
      id: ThirdPartyLinkSnippet
      type: object
      properties:
        channelToStoreLink:
          description: Information specific to a link between a channel and a store on a merchandising platform.
          $ref: '#/components/schemas/ChannelToStoreLinkDetails'
        type:
          type: string
          enum:
            - linkUnspecified
            - channelToStoreLink
          description: Type of the link named after the entities that are being linked.
          enumDescriptions:
            - ''
            - A link that is connecting (or about to connect) a channel with a store on a merchandising platform in order to enable retail commerce capabilities for that channel on YouTube.
      description: Basic information about a third party account link, including its type and type-specific information.
    VideoFileDetails:
      id: VideoFileDetails
      properties:
        durationMs:
          description: The length of the uploaded video in milliseconds.
          type: string
          format: uint64
        fileType:
          description: The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.
          enumDescriptions:
            - Known video file (e.g., an MP4 file).
            - Audio only file (e.g., an MP3 file).
            - Image file (e.g., a JPEG image).
            - Archive file (e.g., a ZIP archive).
            - Document or text file (e.g., MS Word document).
            - Movie project file (e.g., Microsoft Windows Movie Maker project).
            - Other non-video file type.
          enum:
            - video
            - audio
            - image
            - archive
            - document
            - project
            - other
          type: string
        creationTime:
          description: 'The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM '
          type: string
        bitrateBps:
          format: uint64
          description: The uploaded video file's combined (video and audio) bitrate in bits per second.
          type: string
        videoStreams:
          description: A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.
          items:
            $ref: '#/components/schemas/VideoFileDetailsVideoStream'
          type: array
        audioStreams:
          type: array
          description: A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.
          items:
            $ref: '#/components/schemas/VideoFileDetailsAudioStream'
        container:
          type: string
          description: The uploaded video file's container format.
        fileSize:
          type: string
          format: uint64
          description: The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.
        fileName:
          type: string
          description: The uploaded file's name. This field is present whether a video file or another type of file was uploaded.
      type: object
      description: Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.
    LiveChatModeratorSnippet:
      id: LiveChatModeratorSnippet
      properties:
        liveChatId:
          type: string
          description: The ID of the live chat this moderator can act on.
        moderatorDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
          description: Details about the moderator.
      type: object
    LiveStreamContentDetails:
      properties:
        isReusable:
          type: boolean
          description: 'Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times. If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways: - A non-reusable stream can only be bound to one broadcast. - A non-reusable stream might be deleted by an automated process after the broadcast ends. - The liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream. '
        closedCaptionsIngestionUrl:
          description: The ingestion URL where the closed captions of this stream are sent.
          type: string
      description: Detailed settings of a stream.
      id: LiveStreamContentDetails
      type: object
    Video:
      id: Video
      properties:
        statistics:
          $ref: '#/components/schemas/VideoStatistics'
          description: The statistics object contains statistics about the video.
        status:
          description: The status object contains information about the video's uploading, processing, and privacy statuses.
          $ref: '#/components/schemas/VideoStatus'
        player:
          $ref: '#/components/schemas/VideoPlayer'
          description: The player object contains information that you would use to play the video in an embedded player.
        recordingDetails:
          $ref: '#/components/schemas/VideoRecordingDetails'
          description: The recordingDetails object encapsulates information about the location, date and address where the video was recorded.
        monetizationDetails:
          description: The monetizationDetails object encapsulates information about the monetization status of the video.
          $ref: '#/components/schemas/VideoMonetizationDetails'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#video".'
          default: youtube#video
          type: string
        fileDetails:
          $ref: '#/components/schemas/VideoFileDetails'
          description: The fileDetails object encapsulates information about the video file that was uploaded to YouTube, including the file's resolution, duration, audio and video codecs, stream bitrates, and more. This data can only be retrieved by the video owner.
        liveStreamingDetails:
          description: The liveStreamingDetails object contains metadata about a live video broadcast. The object will only be present in a video resource if the video is an upcoming, live, or completed live broadcast.
          $ref: '#/components/schemas/VideoLiveStreamingDetails'
        topicDetails:
          $ref: '#/components/schemas/VideoTopicDetails'
          description: The topicDetails object encapsulates information about Freebase topics associated with the video.
        snippet:
          description: The snippet object contains basic details about the video, such as its title, description, and category.
          $ref: '#/components/schemas/VideoSnippet'
        ageGating:
          $ref: '#/components/schemas/VideoAgeGating'
          description: Age restriction details related to a video. This data can only be retrieved by the video owner.
        processingDetails:
          $ref: '#/components/schemas/VideoProcessingDetails'
          description: The processingDetails object encapsulates information about YouTube's progress in processing the uploaded video file. The properties in the object identify the current processing status and an estimate of the time remaining until YouTube finishes processing the video. This part also indicates whether different types of data or content, such as file details or thumbnail images, are available for the video. The processingProgress object is designed to be polled so that the video uploaded can track the progress that YouTube has made in processing the uploaded video file. This data can only be retrieved by the video owner.
        contentDetails:
          $ref: '#/components/schemas/VideoContentDetails'
          description: The contentDetails object contains information about the video content, including the length of the video and its aspect ratio.
        id:
          description: The ID that YouTube uses to uniquely identify the video.
          annotations:
            required:
              - youtube.videos.update
          type: string
        etag:
          description: Etag of this resource.
          type: string
        projectDetails:
          description: 'The projectDetails object contains information about the project specific video metadata. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677'
          $ref: '#/components/schemas/VideoProjectDetails'
        localizations:
          description: The localizations object contains localized versions of the basic details about the video, such as its title and description.
          additionalProperties:
            $ref: '#/components/schemas/VideoLocalization'
          type: object
        suggestions:
          $ref: '#/components/schemas/VideoSuggestions'
          description: The suggestions object encapsulates suggestions that identify opportunities to improve the video quality or the metadata for the uploaded video. This data can only be retrieved by the video owner.
      description: A *video* resource represents a YouTube video.
      type: object
    Cuepoint:
      description: Note that there may be a 5-second end-point resolution issue. For instance, if a cuepoint comes in for 22:03:27, we may stuff the cuepoint into 22:03:25 or 22:03:30, depending. This is an artifact of HLS.
      id: Cuepoint
      properties:
        id:
          description: The identifier for cuepoint resource.
          type: string
        durationSecs:
          description: The duration of this cuepoint.
          type: integer
          format: uint32
        walltimeMs:
          type: string
          format: uint64
          description: The wall clock time at which the cuepoint should be inserted. Only one of insertion_offset_time_ms and walltime_ms may be set at a time.
        insertionOffsetTimeMs:
          format: int64
          type: string
          description: The time when the cuepoint should be inserted by offset to the broadcast actual start time.
        cueType:
          enumDescriptions:
            - ''
            - ''
          enum:
            - cueTypeUnspecified
            - cueTypeAd
          type: string
        etag:
          type: string
      type: object
    LiveChatFanFundingEventDetails:
      properties:
        amountMicros:
          format: uint64
          description: The amount of the fund.
          type: string
        amountDisplayString:
          type: string
          description: A rendered string that displays the fund amount and currency to the user.
        currency:
          type: string
          description: The currency in which the fund was made.
        userComment:
          description: The comment added by the user to this fan funding event.
          type: string
      id: LiveChatFanFundingEventDetails
      type: object
    LiveStreamStatus:
      properties:
        healthStatus:
          description: The health status of the stream.
          $ref: '#/components/schemas/LiveStreamHealthStatus'
        streamStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - created
            - ready
            - active
            - inactive
            - error
      type: object
      description: Brief description of the live stream status.
      id: LiveStreamStatus
    VideoRating:
      properties:
        videoId:
          description: The ID that YouTube uses to uniquely identify the video.
          type: string
        rating:
          enumDescriptions:
            - ''
            - The entity is liked.
            - The entity is disliked.
          description: Rating of a video.
          enum:
            - none
            - like
            - dislike
          type: string
      description: Basic details about rating of a video.
      type: object
      id: VideoRating
    InvideoPosition:
      id: InvideoPosition
      description: Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.
      type: object
      properties:
        type:
          enumDescriptions:
            - ''
          description: Defines the position type.
          type: string
          enum:
            - corner
        cornerPosition:
          enum:
            - topLeft
            - topRight
            - bottomLeft
            - bottomRight
          description: Describes in which corner of the video the visual widget will appear.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
    ChannelProfileDetails:
      properties:
        channelUrl:
          type: string
          description: The channel's URL.
        profileImageUrl:
          type: string
          description: The channels's avatar URL.
        channelId:
          description: The YouTube channel ID.
          type: string
        displayName:
          type: string
          description: The channel's display name.
      type: object
      id: ChannelProfileDetails
    ChannelSection:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        id:
          description: The ID that YouTube uses to uniquely identify the channel section.
          type: string
        localizations:
          description: Localizations for different languages
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChannelSectionLocalization'
        contentDetails:
          description: The contentDetails object contains details about the channel section content, such as a list of playlists or channels featured in the section.
          $ref: '#/components/schemas/ChannelSectionContentDetails'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSection".'
          default: youtube#channelSection
          type: string
        targeting:
          $ref: '#/components/schemas/ChannelSectionTargeting'
          description: The targeting object contains basic targeting settings about the channel section.
        snippet:
          $ref: '#/components/schemas/ChannelSectionSnippet'
          description: The snippet object contains basic details about the channel section, such as its type, style and title.
      id: ChannelSection
      type: object
    MembershipsLevelSnippet:
      type: object
      properties:
        creatorChannelId:
          description: The id of the channel that's offering channel memberships.
          type: string
        levelDetails:
          $ref: '#/components/schemas/LevelDetails'
          description: Details about the pricing level.
      id: MembershipsLevelSnippet
    CommentSnippet:
      description: Basic details about a comment, such as its author and text.
      properties:
        authorChannelUrl:
          description: Link to the author's YouTube channel, if any.
          type: string
        textDisplay:
          type: string
          description: The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.
        moderationStatus:
          enumDescriptions:
            - The comment is available for public display.
            - The comment is awaiting review by a moderator.
            - ''
            - The comment is unfit for display.
          description: The comment's moderation status. Will not be set if the comments were requested through the id filter.
          enum:
            - published
            - heldForReview
            - likelySpam
            - rejected
          type: string
        canRate:
          description: Whether the current viewer can rate this comment.
          type: boolean
        likeCount:
          format: uint32
          description: The total number of likes this comment has received.
          type: integer
        authorProfileImageUrl:
          description: The URL for the avatar of the user who posted the comment.
          type: string
        authorDisplayName:
          type: string
          description: The name of the user who posted the comment.
        parentId:
          type: string
          description: The unique id of the parent comment, only set for replies.
        viewerRating:
          type: string
          enumDescriptions:
            - ''
            - The entity is liked.
            - The entity is disliked.
          enum:
            - none
            - like
            - dislike
          description: The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.
        authorChannelId:
          $ref: '#/components/schemas/CommentSnippetAuthorChannelId'
        publishedAt:
          description: The date and time when the comment was originally published.
          type: string
          format: date-time
        textOriginal:
          type: string
          description: The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.
        updatedAt:
          format: date-time
          type: string
          description: The date and time when the comment was last updated.
        videoId:
          description: The ID of the video the comment refers to, if any.
          type: string
        channelId:
          description: The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.
          type: string
      type: object
      id: CommentSnippet
    ActivityContentDetailsRecommendation:
      type: object
      description: Information that identifies the recommended resource.
      properties:
        resourceId:
          description: The resourceId object contains information that identifies the recommended resource.
          $ref: '#/components/schemas/ResourceId'
        reason:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The reason that the resource is recommended to the user.
          enum:
            - reasonUnspecified
            - videoFavorited
            - videoLiked
            - videoWatched
        seedResourceId:
          description: The seedResourceId object contains information about the resource that caused the recommendation.
          $ref: '#/components/schemas/ResourceId'
      id: ActivityContentDetailsRecommendation
    PlaylistStatus:
      type: object
      properties:
        privacyStatus:
          type: string
          enum:
            - public
            - unlisted
            - private
          description: The playlist's privacy status.
          enumDescriptions:
            - ''
            - ''
            - ''
      id: PlaylistStatus
    WatchSettings:
      description: Branding properties for the watch. All deprecated.
      properties:
        backgroundColor:
          description: The text color for the video watch page's branded area.
          type: string
        textColor:
          type: string
          description: The background color for the video watch page's branded area.
        featuredPlaylistId:
          description: An ID that uniquely identifies a playlist that displays next to the video player.
          type: string
      id: WatchSettings
      type: object
    LiveChatSuperStickerDetails:
      type: object
      properties:
        superStickerMetadata:
          $ref: '#/components/schemas/SuperStickerMetadata'
          description: Information about the Super Sticker.
        amountDisplayString:
          description: A rendered string that displays the fund amount and currency to the user.
          type: string
        amountMicros:
          type: string
          description: The amount purchased by the user, in micros (1,750,000 micros = 1.75).
          format: uint64
        tier:
          format: uint32
          type: integer
          description: The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1.
        currency:
          description: The currency in which the purchase was made.
          type: string
      id: LiveChatSuperStickerDetails
    LiveBroadcastStatus:
      type: object
      properties:
        privacyStatus:
          description: The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.
          enumDescriptions:
            - ''
            - ''
            - ''
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
          type: string
          enum:
            - public
            - unlisted
            - private
        lifeCycleStatus:
          description: The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.
          enum:
            - lifeCycleStatusUnspecified
            - created
            - ready
            - testing
            - live
            - complete
            - revoked
            - testStarting
            - liveStarting
          enumDescriptions:
            - No value or the value is unknown.
            - Incomplete settings, but otherwise valid
            - Complete settings
            - Visible only to partner, may need special UI treatment
            - Viper is recording; this means the "clock" is running
            - The broadcast is finished.
            - This broadcast was removed by admin action
            - Transition into TESTING has been requested
            - Transition into LIVE has been requested
          type: string
        recordingStatus:
          description: The broadcast's recording status.
          enum:
            - liveBroadcastRecordingStatusUnspecified
            - notRecording
            - recording
            - recorded
          enumDescriptions:
            - No value or the value is unknown.
            - The recording has not yet been started.
            - The recording is currently on.
            - The recording is completed, and cannot be started again.
          type: string
        madeForKids:
          type: boolean
          description: Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only.
        liveBroadcastPriority:
          enumDescriptions:
            - ''
            - 'Low priority broadcast: for low view count HoAs or other low priority broadcasts.'
            - 'Normal priority broadcast: for regular HoAs and broadcasts.'
            - 'High priority broadcast: for high profile HoAs, like PixelCorp ones.'
          enum:
            - liveBroadcastPriorityUnspecified
            - low
            - normal
            - high
          description: Priority of the live broadcast event (internal state).
          type: string
        selfDeclaredMadeForKids:
          description: 'This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work.'
          type: boolean
      id: LiveBroadcastStatus
      description: Live broadcast state.
    ChannelSectionTargeting:
      id: ChannelSectionTargeting
      type: object
      properties:
        countries:
          items:
            type: string
          description: The country the channel section is targeting.
          type: array
        regions:
          description: The region the channel section is targeting.
          items:
            type: string
          type: array
        languages:
          description: The language the channel section is targeting.
          type: array
          items:
            type: string
      description: ChannelSection targeting setting.
    LiveChatUserBannedMessageDetails:
      type: object
      properties:
        banType:
          description: The type of ban.
          enum:
            - permanent
            - temporary
          enumDescriptions:
            - ''
            - ''
          type: string
        banDurationSeconds:
          type: string
          format: uint64
          description: The duration of the ban. This property is only present if the banType is temporary.
        bannedUserDetails:
          description: The details of the user that was banned.
          $ref: '#/components/schemas/ChannelProfileDetails'
      id: LiveChatUserBannedMessageDetails
    AccessPolicy:
      id: AccessPolicy
      type: object
      description: Rights management policy for YouTube resources.
      properties:
        exception:
          description: A list of region codes that identify countries where the default policy do not apply.
          type: array
          items:
            type: string
        allowed:
          type: boolean
          description: The value of allowed indicates whether the access to the policy is allowed or denied by default.
    Comment:
      description: A *comment* represents a single YouTube comment.
      id: Comment
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#comment".'
          type: string
          default: youtube#comment
        snippet:
          $ref: '#/components/schemas/CommentSnippet'
          description: The snippet object contains basic details about the comment.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the comment.
    VideoSuggestionsTagSuggestion:
      description: A single tag suggestion with it's relevance information.
      type: object
      properties:
        categoryRestricts:
          items:
            type: string
          type: array
          description: A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.
        tag:
          type: string
          description: The keyword tag suggested for the video.
      id: VideoSuggestionsTagSuggestion
    MembershipsDuration:
      properties:
        memberTotalDurationMonths:
          type: integer
          description: The cumulative time the user has been a member across all levels in complete months (the time is rounded down to the nearest integer).
          format: int32
        memberSince:
          type: string
          description: The date and time when the user became a continuous member across all levels.
      id: MembershipsDuration
      type: object
    VideoAgeGating:
      properties:
        videoGameRating:
          enum:
            - anyone
            - m15Plus
            - m16Plus
            - m17Plus
          description: Video game rating, if any.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
        alcoholContent:
          type: boolean
          description: Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content.
        restricted:
          description: Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present.
          type: boolean
      id: VideoAgeGating
      type: object
    ChannelContentOwnerDetails:
      id: ChannelContentOwnerDetails
      description: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
      properties:
        timeLinked:
          type: string
          format: date-time
          description: The date and time when the channel was linked to the content owner.
        contentOwner:
          description: The ID of the content owner linked to the channel.
          type: string
      type: object
    ChannelSnippet:
      id: ChannelSnippet
      properties:
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: A map of thumbnail images associated with the channel. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail. When displaying thumbnails in your application, make sure that your code uses the image URLs exactly as they are returned in API responses. For example, your application should not use the http domain instead of the https domain in a URL returned in an API response. Beginning in July 2018, channel thumbnail URLs will only be available in the https domain, which is how the URLs appear in API responses. After that time, you might see broken images in your application if it tries to load YouTube images from the http domain. Thumbnail images might be empty for newly created channels and might take up to one day to populate.
        customUrl:
          type: string
          description: The custom url of the channel.
        publishedAt:
          type: string
          description: The date and time that the channel was created.
          format: date-time
        title:
          type: string
          description: The channel's title.
        defaultLanguage:
          type: string
          description: The language of the channel's default title and description.
        description:
          type: string
          description: The description of the channel.
        localized:
          $ref: '#/components/schemas/ChannelLocalization'
          description: Localized title and description, read-only.
        country:
          type: string
          description: The country of the channel.
      description: Basic details about a channel, including title, description and thumbnails.
      type: object
    CommentSnippetAuthorChannelId:
      type: object
      properties:
        value:
          type: string
      id: CommentSnippetAuthorChannelId
      description: The id of the author's YouTube channel, if any.
    IngestionInfo:
      id: IngestionInfo
      description: Describes information necessary for ingesting an RTMP, HTTP, or SRT stream.
      properties:
        ingestionAddress:
          description: 'The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL. Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format: *STREAM_URL/STREAM_NAME* '
          type: string
        streamName:
          description: The stream name that YouTube assigns to the video stream.
          type: string
        rtmpsIngestionAddress:
          description: This ingestion url may be used instead of ingestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams.
          type: string
        rtmpsBackupIngestionAddress:
          type: string
          description: This ingestion url may be used instead of backupIngestionAddress in order to stream via RTMPS. Not applicable to non-RTMP streams.
        backupIngestionAddress:
          type: string
          description: The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL.
      type: object
    LiveChatMessageDeletedDetails:
      properties:
        deletedMessageId:
          type: string
      type: object
      id: LiveChatMessageDeletedDetails
    ChannelBannerResource:
      id: ChannelBannerResource
      properties:
        url:
          description: The URL of this banner image.
          type: string
        kind:
          default: youtube#channelBannerResource
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelBannerResource".'
        etag:
          type: string
      type: object
      description: A channel banner returned as the response to a channel_banner.insert call.
    LiveChatMessageSnippet:
      properties:
        superStickerDetails:
          $ref: '#/components/schemas/LiveChatSuperStickerDetails'
          description: Details about the Super Sticker event, this is only set if the type is 'superStickerEvent'.
        userBannedDetails:
          $ref: '#/components/schemas/LiveChatUserBannedMessageDetails'
        textMessageDetails:
          $ref: '#/components/schemas/LiveChatTextMessageDetails'
          description: Details about the text message, this is only set if the type is 'textMessageEvent'.
        authorChannelId:
          description: The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor memberMilestoneChatEvent - the member that sent the message membershipGiftingEvent - the user that made the purchase giftMembershipReceivedEvent - the user that received the gift membership messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action superChatEvent - the user that made the purchase superStickerEvent - the user that made the purchase
          type: string
        publishedAt:
          format: date-time
          type: string
          description: The date and time when the message was orignally published.
        liveChatId:
          type: string
        membershipGiftingDetails:
          description: Details about the Membership Gifting event, this is only set if the type is 'membershipGiftingEvent'.
          $ref: '#/components/schemas/LiveChatMembershipGiftingDetails'
        superChatDetails:
          $ref: '#/components/schemas/LiveChatSuperChatDetails'
          description: Details about the Super Chat event, this is only set if the type is 'superChatEvent'.
        messageDeletedDetails:
          $ref: '#/components/schemas/LiveChatMessageDeletedDetails'
        giftMembershipReceivedDetails:
          $ref: '#/components/schemas/LiveChatGiftMembershipReceivedDetails'
          description: Details about the Gift Membership Received event, this is only set if the type is 'giftMembershipReceivedEvent'.
        displayMessage:
          description: Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.
          type: string
        fanFundingEventDetails:
          $ref: '#/components/schemas/LiveChatFanFundingEventDetails'
          description: Details about the funding event, this is only set if the type is 'fanFundingEvent'.
        newSponsorDetails:
          $ref: '#/components/schemas/LiveChatNewSponsorDetails'
          description: Details about the New Member Announcement event, this is only set if the type is 'newSponsorEvent'. Please note that "member" is the new term for "sponsor".
        hasDisplayContent:
          description: Whether the message has display content that should be displayed to users.
          type: boolean
        memberMilestoneChatDetails:
          $ref: '#/components/schemas/LiveChatMemberMilestoneChatDetails'
          description: Details about the Member Milestone Chat event, this is only set if the type is 'memberMilestoneChatEvent'.
        messageRetractedDetails:
          $ref: '#/components/schemas/LiveChatMessageRetractedDetails'
        type:
          type: string
          enum:
            - invalidType
            - textMessageEvent
            - tombstone
            - fanFundingEvent
            - chatEndedEvent
            - sponsorOnlyModeStartedEvent
            - sponsorOnlyModeEndedEvent
            - newSponsorEvent
            - memberMilestoneChatEvent
            - membershipGiftingEvent
            - giftMembershipReceivedEvent
            - messageDeletedEvent
            - messageRetractedEvent
            - userBannedEvent
            - superChatEvent
            - superStickerEvent
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The type of message, this will always be present, it determines the contents of the message as well as which fields will be present.
      description: 'Next ID: 33'
      id: LiveChatMessageSnippet
      type: object
    LiveChatTextMessageDetails:
      id: LiveChatTextMessageDetails
      properties:
        messageText:
          type: string
          description: The user's message.
      type: object
    VideoAbuseReportReasonSnippet:
      properties:
        label:
          type: string
          description: The localized label belonging to this abuse report reason.
        secondaryReasons:
          items:
            $ref: '#/components/schemas/VideoAbuseReportSecondaryReason'
          description: The secondary reasons associated with this reason, if any are available. (There might be 0 or more.)
          type: array
      type: object
      id: VideoAbuseReportReasonSnippet
      description: Basic details about a video category, such as its localized title.
    VideoTopicDetails:
      type: object
      id: VideoTopicDetails
      description: Freebase topic information related to the video.
      properties:
        topicIds:
          description: A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href="http://wiki.freebase.com/wiki/Topic_API">Freebase Topic API.
          items:
            type: string
          type: array
        topicCategories:
          items:
            type: string
          type: array
          description: A list of Wikipedia URLs that provide a high-level description of the video's content.
        relevantTopicIds:
          description: Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.
          type: array
          items:
            type: string
    ThirdPartyLink:
      description: A *third party account link* resource represents a link between a YouTube account or a channel and an account on a third-party service.
      type: object
      id: ThirdPartyLink
      properties:
        linkingToken:
          type: string
          description: The linking_token identifies a YouTube account and channel with which the third party account is linked.
        etag:
          type: string
          description: Etag of this resource
        kind:
          default: youtube#thirdPartyLink
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#thirdPartyLink".'
          type: string
        status:
          $ref: '#/components/schemas/ThirdPartyLinkStatus'
          description: The status object contains information about the status of the link.
        snippet:
          $ref: '#/components/schemas/ThirdPartyLinkSnippet'
          description: The snippet object contains basic details about the third- party account link.
    VideoProcessingDetailsProcessingProgress:
      properties:
        timeLeftMs:
          description: An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.
          format: uint64
          type: string
        partsTotal:
          type: string
          description: An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.
          format: uint64
        partsProcessed:
          format: uint64
          description: 'The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.'
          type: string
      type: object
      id: VideoProcessingDetailsProcessingProgress
      description: Video processing progress and completion time estimate.
    ActivityContentDetailsLike:
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The resourceId object contains information that identifies the rated resource.
      type: object
      description: Information about a resource that received a positive (like) rating.
      id: ActivityContentDetailsLike
    ChannelSectionListResponse:
      id: ChannelSectionListResponse
      type: object
      properties:
        etag:
          description: Etag of this resource.
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        kind:
          default: youtube#channelSectionListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSectionListResponse".'
          type: string
        items:
          description: A list of ChannelSections that match the request criteria.
          type: array
          items:
            $ref: '#/components/schemas/ChannelSection'
    VideoAbuseReportReason:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        id:
          type: string
          description: The ID of this abuse report reason.
        snippet:
          description: The `snippet` object contains basic details about the abuse report reason.
          $ref: '#/components/schemas/VideoAbuseReportReasonSnippet'
        kind:
          default: youtube#videoAbuseReportReason
          description: 'Identifies what kind of resource this is. Value: the fixed string `"youtube#videoAbuseReportReason"`.'
          type: string
      type: object
      id: VideoAbuseReportReason
      description: A `__videoAbuseReportReason__` resource identifies a reason that a video could be reported as abusive. Video abuse report reasons are used with `video.ReportAbuse`.
    GeoPoint:
      description: Geographical coordinates of a point, in WGS84.
      type: object
      id: GeoPoint
      properties:
        latitude:
          format: double
          description: Latitude in degrees.
          type: number
        altitude:
          description: Altitude above the reference ellipsoid, in meters.
          format: double
          type: number
        longitude:
          description: Longitude in degrees.
          format: double
          type: number
    LiveChatBanSnippet:
      type: object
      id: LiveChatBanSnippet
      properties:
        liveChatId:
          description: The chat this ban is pertinent to.
          type: string
        type:
          description: The type of ban.
          enum:
            - liveChatBanTypeUnspecified
            - permanent
            - temporary
          enumDescriptions:
            - An invalid ban type.
            - A permanent ban.
            - A temporary ban.
          type: string
        banDurationSeconds:
          type: string
          format: uint64
          description: The duration of a ban, only filled if the ban has type TEMPORARY.
        bannedUserDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
    CaptionListResponse:
      type: object
      id: CaptionListResponse
      properties:
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        items:
          description: A list of captions that match the request criteria.
          items:
            $ref: '#/components/schemas/Caption'
          type: array
        kind:
          default: youtube#captionListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#captionListResponse".'
    VideoFileDetailsVideoStream:
      id: VideoFileDetailsVideoStream
      description: Information about a video stream.
      properties:
        frameRateFps:
          format: double
          description: The video stream's frame rate, in frames per second.
          type: number
        codec:
          description: The video codec that the stream uses.
          type: string
        widthPixels:
          format: uint32
          type: integer
          description: The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.
        aspectRatio:
          description: The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.
          format: double
          type: number
        rotation:
          enum:
            - none
            - clockwise
            - upsideDown
            - counterClockwise
            - other
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The amount that YouTube needs to rotate the original source content to properly display the video.
        heightPixels:
          description: The encoded video content's height in pixels.
          type: integer
          format: uint32
        bitrateBps:
          format: uint64
          type: string
          description: The video stream's bitrate, in bits per second.
        vendor:
          description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
          type: string
      type: object
    PlaylistItemListResponse:
      type: object
      properties:
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        items:
          items:
            $ref: '#/components/schemas/PlaylistItem'
          type: array
          description: A list of playlist items that match the request criteria.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        etag:
          type: string
        kind:
          type: string
          default: youtube#playlistItemListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItemListResponse". Etag of this resource.'
      id: PlaylistItemListResponse
    Subscription:
      type: object
      properties:
        kind:
          type: string
          default: youtube#subscription
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscription".'
        contentDetails:
          description: The contentDetails object contains basic statistics about the subscription.
          $ref: '#/components/schemas/SubscriptionContentDetails'
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the subscription.
        subscriberSnippet:
          description: The subscriberSnippet object contains basic details about the subscriber.
          $ref: '#/components/schemas/SubscriptionSubscriberSnippet'
        snippet:
          description: The snippet object contains basic details about the subscription, including its title and the channel that the user subscribed to.
          $ref: '#/components/schemas/SubscriptionSnippet'
        etag:
          type: string
          description: Etag of this resource.
      id: Subscription
      description: A *subscription* resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.
    Activity:
      properties:
        snippet:
          description: The snippet object contains basic details about the activity, including the activity's type and group ID.
          $ref: '#/components/schemas/ActivitySnippet'
        kind:
          default: youtube#activity
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activity".'
        id:
          description: The ID that YouTube uses to uniquely identify the activity.
          type: string
        contentDetails:
          $ref: '#/components/schemas/ActivityContentDetails'
          description: The contentDetails object contains information about the content associated with the activity. For example, if the snippet.type value is videoRated, then the contentDetails object's content identifies the rated video.
        etag:
          type: string
          description: Etag of this resource
      type: object
      description: An *activity* resource contains information about an action that a particular channel, or user, has taken on YouTube.The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.
      id: Activity
    LiveChatModeratorListResponse:
      id: LiveChatModeratorListResponse
      type: object
      properties:
        prevPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
          type: string
        kind:
          default: youtube#liveChatModeratorListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModeratorListResponse".'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        items:
          description: A list of moderators that match the request criteria.
          type: array
          items:
            $ref: '#/components/schemas/LiveChatModerator'
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        etag:
          type: string
          description: Etag of this resource.
    VideoLiveStreamingDetails:
      id: VideoLiveStreamingDetails
      properties:
        actualStartTime:
          description: The time that the broadcast actually started. This value will not be available until the broadcast begins.
          format: date-time
          type: string
        concurrentViewers:
          description: The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.
          type: string
          format: uint64
        activeLiveChatId:
          type: string
          description: The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page.
        actualEndTime:
          description: The time that the broadcast actually ended. This value will not be available until the broadcast is over.
          type: string
          format: date-time
        scheduledEndTime:
          description: The time that the broadcast is scheduled to end. If the value is empty or the property is not present, then the broadcast is scheduled to contiue indefinitely.
          type: string
          format: date-time
        scheduledStartTime:
          format: date-time
          description: The time that the broadcast is scheduled to begin.
          type: string
      description: Details about the live streaming metadata.
      type: object
    LiveStreamHealthStatus:
      type: object
      id: LiveStreamHealthStatus
      properties:
        lastUpdateTimeSeconds:
          description: The last time this status was updated (in seconds)
          format: uint64
          type: string
        status:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - good
            - ok
            - bad
            - noData
            - revoked
          description: The status code of this stream
          type: string
        configurationIssues:
          type: array
          description: The configurations issues on this stream
          items:
            $ref: '#/components/schemas/LiveStreamConfigurationIssue'
    LiveBroadcast:
      type: object
      description: A *liveBroadcast* resource represents an event that will be streamed, via live video, on YouTube.
      id: LiveBroadcast
      properties:
        kind:
          default: youtube#liveBroadcast
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcast".'
          type: string
        status:
          description: The status object contains information about the event's status.
          $ref: '#/components/schemas/LiveBroadcastStatus'
        snippet:
          description: The snippet object contains basic details about the event, including its title, description, start time, and end time.
          $ref: '#/components/schemas/LiveBroadcastSnippet'
        etag:
          description: Etag of this resource.
          type: string
        id:
          annotations:
            required:
              - youtube.liveBroadcasts.update
          type: string
          description: The ID that YouTube assigns to uniquely identify the broadcast.
        contentDetails:
          description: The contentDetails object contains information about the event's video content, such as whether the content can be shown in an embedded video player or if it will be archived and therefore available for viewing after the event has concluded.
          $ref: '#/components/schemas/LiveBroadcastContentDetails'
        statistics:
          description: The statistics object contains info about the event's current stats. These include concurrent viewers and total chat count. Statistics can change (in either direction) during the lifetime of an event. Statistics are only returned while the event is live.
          $ref: '#/components/schemas/LiveBroadcastStatistics'
    ActivityContentDetailsPromotedItem:
      type: object
      properties:
        destinationUrl:
          description: The URL the client should direct the user to, if the user chooses to visit the advertiser's website.
          type: string
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the promoted video.
        customCtaButtonText:
          type: string
          description: The custom call-to-action button text. If specified, it will override the default button text for the cta_type.
        forecastingUrl:
          type: array
          items:
            type: string
          description: The list of forecasting URLs. The client should ping all of these URLs when a promoted item is not available, to indicate that a promoted item could have been shown.
        ctaType:
          enum:
            - ctaTypeUnspecified
            - visitAdvertiserSite
          type: string
          description: The type of call-to-action, a message to the user indicating action that can be taken.
          enumDescriptions:
            - ''
            - ''
        adTag:
          type: string
          description: The URL the client should fetch to request a promoted item.
        descriptionText:
          type: string
          description: The text description to accompany the promoted item.
        clickTrackingUrl:
          description: The URL the client should ping to indicate that the user clicked through on this promoted item.
          type: string
        impressionUrl:
          items:
            type: string
          description: The list of impression URLs. The client should ping all of these URLs to indicate that the user was shown this promoted item.
          type: array
        creativeViewUrl:
          description: The URL the client should ping to indicate that the user was shown this promoted item.
          type: string
      id: ActivityContentDetailsPromotedItem
      description: Details about a resource which is being promoted.
    ActivityContentDetailsSocial:
      id: ActivityContentDetailsSocial
      description: Details about a social network post.
      properties:
        resourceId:
          description: The resourceId object encapsulates information that identifies the resource associated with a social network post.
          $ref: '#/components/schemas/ResourceId'
        imageUrl:
          type: string
          description: An image of the post's author.
        referenceUrl:
          description: The URL of the social network post.
          type: string
        author:
          description: The author of the social network post.
          type: string
        type:
          enum:
            - unspecified
            - googlePlus
            - facebook
            - twitter
          type: string
          description: The name of the social network.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      type: object
    LiveBroadcastSnippet:
      properties:
        scheduledStartTime:
          description: The date and time that the broadcast is scheduled to start.
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
          type: string
          format: date-time
        actualEndTime:
          format: date-time
          description: The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete.
          type: string
        isDefaultBroadcast:
          description: Indicates whether this broadcast is the default broadcast. Internal only.
          type: boolean
        thumbnails:
          description: A map of thumbnail images associated with the broadcast. For each nested object in this object, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.
        actualStartTime:
          type: string
          description: The date and time that the broadcast actually started. This information is only available once the broadcast's state is live.
          format: date-time
        scheduledEndTime:
          description: The date and time that the broadcast is scheduled to end.
          format: date-time
          type: string
        liveChatId:
          type: string
          description: The id of the live chat for this broadcast.
        publishedAt:
          format: date-time
          description: The date and time that the broadcast was added to YouTube's live broadcast schedule.
          type: string
        title:
          description: The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
          type: string
        description:
          type: string
          description: The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.
      description: Basic broadcast information.
      type: object
      id: LiveBroadcastSnippet
    PlaylistListResponse:
      id: PlaylistListResponse
      properties:
        etag:
          type: string
          description: Etag of this resource.
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        items:
          type: array
          description: A list of playlists that match the request criteria
          items:
            $ref: '#/components/schemas/Playlist'
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistListResponse".'
          default: youtube#playlistListResponse
          type: string
      type: object
    Channel:
      description: A *channel* resource contains information about a YouTube channel.
      id: Channel
      properties:
        etag:
          type: string
          description: Etag of this resource.
        status:
          $ref: '#/components/schemas/ChannelStatus'
          description: The status object encapsulates information about the privacy status of the channel.
        auditDetails:
          description: The auditionDetails object encapsulates channel data that is relevant for YouTube Partners during the audition process.
          $ref: '#/components/schemas/ChannelAuditDetails'
        conversionPings:
          $ref: '#/components/schemas/ChannelConversionPings'
          description: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
        snippet:
          $ref: '#/components/schemas/ChannelSnippet'
          description: The snippet object contains basic details about the channel, such as its title, description, and thumbnail images.
        contentOwnerDetails:
          description: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
          $ref: '#/components/schemas/ChannelContentOwnerDetails'
        brandingSettings:
          $ref: '#/components/schemas/ChannelBrandingSettings'
          description: The brandingSettings object encapsulates information about the branding of the channel.
        topicDetails:
          $ref: '#/components/schemas/ChannelTopicDetails'
          description: The topicDetails object encapsulates information about Freebase topics associated with the channel.
        kind:
          type: string
          default: youtube#channel
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channel".'
        statistics:
          $ref: '#/components/schemas/ChannelStatistics'
          description: The statistics object encapsulates statistics for the channel.
        localizations:
          additionalProperties:
            $ref: '#/components/schemas/ChannelLocalization'
          description: Localizations for different languages
          type: object
        id:
          description: The ID that YouTube uses to uniquely identify the channel.
          type: string
        contentDetails:
          description: The contentDetails object encapsulates information about the channel's content.
          $ref: '#/components/schemas/ChannelContentDetails'
      type: object
    LiveChatGiftMembershipReceivedDetails:
      type: object
      properties:
        gifterChannelId:
          type: string
          description: The ID of the user that made the membership gifting purchase. This matches the `snippet.authorChannelId` of the associated membership gifting message.
        memberLevelName:
          description: The name of the Level at which the viewer is a member. This matches the `snippet.membershipGiftingDetails.giftMembershipsLevelName` of the associated membership gifting message. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.
          type: string
        associatedMembershipGiftingMessageId:
          description: The ID of the membership gifting message that is related to this gift membership. This ID will always refer to a message whose type is 'membershipGiftingEvent'.
          type: string
      id: LiveChatGiftMembershipReceivedDetails
    LiveChatMessageListResponse:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        offlineAt:
          description: The date and time when the underlying stream went offline.
          format: date-time
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessageListResponse".'
          default: youtube#liveChatMessageListResponse
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        pollingIntervalMillis:
          format: uint32
          description: The amount of time the client should wait before polling again.
          type: integer
        nextPageToken:
          type: string
        items:
          items:
            $ref: '#/components/schemas/LiveChatMessage'
          type: array
      id: LiveChatMessageListResponse
      type: object
    CommentThread:
      description: A *comment thread* represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.
      type: object
      id: CommentThread
      properties:
        snippet:
          $ref: '#/components/schemas/CommentThreadSnippet'
          description: The snippet object contains basic details about the comment thread and also the top level comment.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the comment thread.
        kind:
          default: youtube#commentThread
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThread".'
        replies:
          description: The replies object contains a limited number of replies (if any) to the top level comment found in the snippet.
          $ref: '#/components/schemas/CommentThreadReplies'
        etag:
          description: Etag of this resource.
          type: string
    PlaylistContentDetails:
      id: PlaylistContentDetails
      type: object
      properties:
        itemCount:
          type: integer
          description: The number of videos in the playlist.
          format: uint32
    ThirdPartyLinkListResponse:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#thirdPartyLinkListResponse".'
          default: youtube#thirdPartyLinkListResponse
        items:
          items:
            $ref: '#/components/schemas/ThirdPartyLink'
          type: array
      id: ThirdPartyLinkListResponse
      type: object
    VideoProcessingDetails:
      type: object
      id: VideoProcessingDetails
      description: Describes processing status and progress and availability of some other Video resource parts.
      properties:
        editorSuggestionsAvailability:
          type: string
          description: This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        processingIssuesAvailability:
          type: string
          description: This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        fileDetailsAvailability:
          type: string
          description: This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request.
        tagSuggestionsAvailability:
          description: This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
          type: string
        thumbnailsAvailability:
          type: string
          description: This value indicates whether thumbnail images have been generated for the video.
        processingProgress:
          description: The processingProgress object contains information about the progress YouTube has made in processing the video. The values are really only relevant if the video's processing status is processing.
          $ref: '#/components/schemas/VideoProcessingDetailsProcessingProgress'
        processingFailureReason:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - uploadFailed
            - transcodeFailed
            - streamingFailed
            - other
          type: string
          description: The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.
        processingStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.
          type: string
          enum:
            - processing
            - succeeded
            - failed
            - terminated
    ThirdPartyLinkStatus:
      properties:
        linkStatus:
          enum:
            - unknown
            - failed
            - pending
            - linked
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      description: The third-party link status object contains information about the status of the link.
      type: object
      id: ThirdPartyLinkStatus
    CaptionSnippet:
      id: CaptionSnippet
      description: Basic details about a caption track, such as its language and name.
      type: object
      properties:
        isDraft:
          description: Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update
          type: boolean
        isAutoSynced:
          description: Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions.
          type: boolean
        isEasyReader:
          type: boolean
          description: Indicates whether caption track is formatted for "easy reader," meaning it is at a third-grade level for language learners. The default value is false.
        lastUpdated:
          description: The date and time when the caption track was last updated.
          type: string
          format: date-time
        status:
          description: The caption track's status.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - serving
            - syncing
            - failed
          type: string
        audioTrackType:
          type: string
          enum:
            - unknown
            - primary
            - commentary
            - descriptive
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The type of audio track associated with the caption track.
        videoId:
          description: The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert
          type: string
          annotations:
            required:
              - youtube.captions.insert
        name:
          description: The name of the caption track. The name is intended to be visible to the user as an option during playback.
          annotations:
            required:
              - youtube.captions.insert
          type: string
        language:
          annotations:
            required:
              - youtube.captions.insert
          description: The language of the caption track. The property value is a BCP-47 language tag.
          type: string
        isCC:
          type: boolean
          description: Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false.
        failureReason:
          description: The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - unknownFormat
            - unsupportedFormat
            - processingFailed
          type: string
        trackKind:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          description: The caption track's type.
          enum:
            - standard
            - ASR
            - forced
        isLarge:
          type: boolean
          description: Indicates whether the caption track uses large text for the vision-impaired. The default value is false.
    MembershipsLevelListResponse:
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          description: Etag of this resource.
          type: string
        items:
          items:
            $ref: '#/components/schemas/MembershipsLevel'
          type: array
          description: A list of pricing levels offered by a creator to the fans.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#membershipsLevelListResponse".'
          type: string
          default: youtube#membershipsLevelListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
      type: object
      id: MembershipsLevelListResponse
    LiveChatBan:
      type: object
      id: LiveChatBan
      description: A `__liveChatBan__` resource represents a ban for a YouTube live chat.
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string `"youtube#liveChatBan"`.'
          default: youtube#liveChatBan
        etag:
          type: string
          description: Etag of this resource.
        snippet:
          $ref: '#/components/schemas/LiveChatBanSnippet'
          description: The `snippet` object contains basic details about the ban.
        id:
          description: The ID that YouTube assigns to uniquely identify the ban.
          type: string
    LiveStreamConfigurationIssue:
      properties:
        description:
          description: The long-form description of the issue and how to resolve it.
          type: string
        type:
          enum:
            - gopSizeOver
            - gopSizeLong
            - gopSizeShort
            - openGop
            - badContainer
            - audioBitrateHigh
            - audioBitrateLow
            - audioSampleRate
            - bitrateHigh
            - bitrateLow
            - audioCodec
            - videoCodec
            - noAudioStream
            - noVideoStream
            - multipleVideoStreams
            - multipleAudioStreams
            - audioTooManyChannels
            - interlacedVideo
            - frameRateHigh
            - resolutionMismatch
            - videoCodecMismatch
            - videoInterlaceMismatch
            - videoProfileMismatch
            - videoBitrateMismatch
            - framerateMismatch
            - gopMismatch
            - audioSampleRateMismatch
            - audioStereoMismatch
            - audioCodecMismatch
            - audioBitrateMismatch
            - videoResolutionSuboptimal
            - videoResolutionUnsupported
            - videoIngestionStarved
            - videoIngestionFasterThanRealtime
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The kind of error happening.
        severity:
          type: string
          enum:
            - info
            - warning
            - error
          enumDescriptions:
            - ''
            - ''
            - ''
          description: How severe this issue is to the stream.
        reason:
          description: The short-form reason for this issue.
          type: string
      type: object
      id: LiveStreamConfigurationIssue
    VideoFileDetailsAudioStream:
      id: VideoFileDetailsAudioStream
      properties:
        vendor:
          type: string
          description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
        channelCount:
          format: uint32
          type: integer
          description: The number of audio channels that the stream contains.
        bitrateBps:
          format: uint64
          description: The audio stream's bitrate, in bits per second.
          type: string
        codec:
          description: The audio codec that the stream uses.
          type: string
      type: object
      description: Information about an audio stream.
    LiveChatMembershipGiftingDetails:
      id: LiveChatMembershipGiftingDetails
      type: object
      properties:
        giftMembershipsCount:
          type: integer
          description: The number of gift memberships purchased by the user.
          format: int32
        giftMembershipsLevelName:
          description: The name of the level of the gift memberships purchased by the user. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.
          type: string
    LanguageTag:
      properties:
        value:
          type: string
      type: object
      id: LanguageTag
    ChannelLocalization:
      type: object
      properties:
        title:
          description: The localized strings for channel's title.
          type: string
        description:
          type: string
          description: The localized strings for channel's description.
      id: ChannelLocalization
      description: Channel localization setting
    PlaylistSnippet:
      id: PlaylistSnippet
      description: Basic details about a playlist, including title, description and thumbnails.
      properties:
        channelId:
          description: The ID that YouTube uses to uniquely identify the channel that published the playlist.
          type: string
        channelTitle:
          type: string
          description: The channel title of the channel that the video belongs to.
        localized:
          $ref: '#/components/schemas/PlaylistLocalization'
          description: Localized title and description, read-only.
        publishedAt:
          type: string
          format: date-time
          description: The date and time that the playlist was created.
        thumbnails:
          description: A map of thumbnail images associated with the playlist. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        description:
          description: The playlist's description.
          type: string
        title:
          type: string
          annotations:
            required:
              - youtube.playlists.insert
              - youtube.playlists.update
          description: The playlist's title.
        defaultLanguage:
          description: The language of the playlist's default title and description.
          type: string
        thumbnailVideoId:
          description: 'Note: if the playlist has a custom thumbnail, this field will not be populated. The video id selected by the user that will be used as the thumbnail of this playlist. This field defaults to the first publicly viewable video in the playlist, if: 1. The user has never selected a video to be the thumbnail of the playlist. 2. The user selects a video to be the thumbnail, and then removes that video from the playlist. 3. The user selects a non-owned video to be the thumbnail, but that video becomes private, or gets deleted.'
          type: string
        tags:
          description: Keyword tags associated with the playlist.
          items:
            type: string
          type: array
      type: object
    SubscriptionSubscriberSnippet:
      type: object
      description: Basic details about a subscription's subscriber including title, description, channel ID and thumbnails.
      properties:
        channelId:
          description: The channel ID of the subscriber.
          type: string
        description:
          type: string
          description: The description of the subscriber.
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: Thumbnails for this subscriber.
        title:
          description: The title of the subscriber.
          type: string
      id: SubscriptionSubscriberSnippet
    ChannelStatus:
      description: JSON template for the status part of a channel.
      properties:
        privacyStatus:
          type: string
          description: Privacy status of the channel.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - public
            - unlisted
            - private
        selfDeclaredMadeForKids:
          type: boolean
        longUploadsStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - longUploadsUnspecified
            - allowed
            - eligible
            - disallowed
          type: string
          description: The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.
        madeForKids:
          type: boolean
        isLinked:
          type: boolean
          description: If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.
      type: object
      id: ChannelStatus
    VideoCategorySnippet:
      description: Basic details about a video category, such as its localized title.
      properties:
        channelId:
          type: string
          default: UCBR8-60-B28hp2BmDPdntcQ
          description: The YouTube channel that created the video category.
        assignable:
          type: boolean
        title:
          description: The video category's title.
          type: string
      id: VideoCategorySnippet
      type: object
    PlaylistItemSnippet:
      id: PlaylistItemSnippet
      description: 'Basic details about a playlist, including title, description and thumbnails. Basic details of a YouTube Playlist item provided by the author. Next ID: 15'
      properties:
        title:
          description: The item's title.
          type: string
        resourceId:
          annotations:
            required:
              - youtube.playlistItems.insert
              - youtube.playlistItems.update
          $ref: '#/components/schemas/ResourceId'
          description: The id object contains information that can be used to uniquely identify the resource that is included in the playlist as the playlist item.
        publishedAt:
          type: string
          format: date-time
          description: The date and time that the item was added to the playlist.
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: A map of thumbnail images associated with the playlist item. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
        videoOwnerChannelId:
          type: string
          description: Channel id for the channel this video belongs to.
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the user that added the item to the playlist.
        channelTitle:
          description: Channel title for the channel that the playlist item belongs to.
          type: string
        videoOwnerChannelTitle:
          type: string
          description: Channel title for the channel this video belongs to.
        description:
          type: string
          description: The item's description.
        position:
          description: The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.
          format: uint32
          type: integer
        playlistId:
          annotations:
            required:
              - youtube.playlistItems.insert
              - youtube.playlistItems.update
          type: string
          description: The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.
      type: object
    Thumbnail:
      type: object
      description: A thumbnail is an image representing a YouTube resource.
      properties:
        height:
          description: (Optional) Height of the thumbnail image.
          type: integer
          format: uint32
        url:
          type: string
          description: The thumbnail image's URL.
        width:
          description: (Optional) Width of the thumbnail image.
          format: uint32
          type: integer
      id: Thumbnail
    Caption:
      id: Caption
      description: A *caption* resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#caption".'
          default: youtube#caption
          type: string
        snippet:
          $ref: '#/components/schemas/CaptionSnippet'
          description: The snippet object contains basic details about the caption.
        etag:
          description: Etag of this resource.
          type: string
        id:
          annotations:
            required:
              - youtube.captions.update
          type: string
          description: The ID that YouTube uses to uniquely identify the caption track.
      type: object
    Entity:
      type: object
      id: Entity
      properties:
        typeId:
          type: string
        id:
          type: string
        url:
          type: string
    PlaylistPlayer:
      properties:
        embedHtml:
          description: An <iframe> tag that embeds a player that will play the playlist.
          type: string
      id: PlaylistPlayer
      type: object
    TestItem:
      properties:
        gaia:
          format: int64
          type: string
        id:
          type: string
        featuredPart:
          type: boolean
        snippet:
          $ref: '#/components/schemas/TestItemTestItemSnippet'
      type: object
      id: TestItem
    SuperChatEventSnippet:
      properties:
        amountMicros:
          description: The purchase amount, in micros of the purchase currency. e.g., 1 is represented as 1000000.
          type: string
          format: uint64
        createdAt:
          description: The date and time when the event occurred.
          format: date-time
          type: string
        superStickerMetadata:
          description: If this event is a Super Sticker event, this field will contain metadata about the Super Sticker.
          $ref: '#/components/schemas/SuperStickerMetadata'
        supporterDetails:
          description: Details about the supporter.
          $ref: '#/components/schemas/ChannelProfileDetails'
        isSuperStickerEvent:
          type: boolean
          description: True if this event is a Super Sticker event.
        currency:
          description: The currency in which the purchase was made. ISO 4217.
          type: string
        channelId:
          description: Channel id where the event occurred.
          type: string
        commentText:
          type: string
          description: The text contents of the comment left by the user.
        messageType:
          type: integer
          format: uint32
          description: The tier for the paid message, which is based on the amount of money spent to purchase the message.
        displayString:
          type: string
          description: A rendered string that displays the purchase amount and currency (e.g., "$1.00"). The string is rendered for the given language.
      id: SuperChatEventSnippet
      type: object
    Member:
      description: A *member* resource represents a member for a YouTube channel. A member provides recurring monetary support to a creator and receives special benefits.
      properties:
        snippet:
          $ref: '#/components/schemas/MemberSnippet'
          description: The snippet object contains basic details about the member.
        etag:
          type: string
          description: Etag of this resource.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#member".'
          default: youtube#member
          type: string
      type: object
      id: Member
    ChannelSectionSnippet:
      description: Basic details about a channel section, including title, style and position.
      type: object
      properties:
        defaultLanguage:
          type: string
          description: The language of the channel section's default title and description.
        position:
          format: uint32
          type: integer
          description: The position of the channel section in the channel.
        title:
          type: string
          description: The channel section's title for multiple_playlists and multiple_channels.
        channelId:
          description: The ID that YouTube uses to uniquely identify the channel that published the channel section.
          type: string
        style:
          description: The style of the channel section.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - channelsectionStyleUnspecified
            - horizontalRow
            - verticalList
        localized:
          description: Localized title, read-only.
          $ref: '#/components/schemas/ChannelSectionLocalization'
        type:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The type of the channel section.
          enum:
            - channelsectionTypeUndefined
            - singlePlaylist
            - multiplePlaylists
            - popularUploads
            - recentUploads
            - likes
            - allPlaylists
            - likedPlaylists
            - recentPosts
            - recentActivity
            - liveEvents
            - upcomingEvents
            - completedEvents
            - multipleChannels
            - postedVideos
            - postedPlaylists
            - subscriptions
      id: ChannelSectionSnippet
    ChannelSettings:
      properties:
        title:
          type: string
          description: Specifies the channel title.
        moderateComments:
          type: boolean
          description: Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.
        description:
          type: string
          description: Specifies the channel description.
        keywords:
          type: string
          description: Lists keywords associated with the channel, comma-separated.
        defaultLanguage:
          type: string
        defaultTab:
          description: Which content tab users should see when viewing the channel.
          type: string
        featuredChannelsUrls:
          items:
            type: string
          description: The list of featured channels.
          type: array
        country:
          description: The country of the channel.
          type: string
        profileColor:
          type: string
          description: A prominent color that can be rendered on this channel page.
        showBrowseView:
          type: boolean
          description: Whether the tab to browse the videos should be displayed.
        trackingAnalyticsAccountId:
          type: string
          description: The ID for a Google Analytics account to track and measure traffic to the channels.
        unsubscribedTrailer:
          description: The trailer of the channel, for users that are not subscribers.
          type: string
        showRelatedChannels:
          type: boolean
          description: Whether related channels should be proposed.
        featuredChannelsTitle:
          type: string
          description: Title for the featured channels tab.
      type: object
      description: Branding properties for the channel view.
      id: ChannelSettings
    CommentThreadListResponse:
      properties:
        kind:
          default: youtube#commentThreadListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThreadListResponse".'
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommentThread'
          description: A list of comment threads that match the request criteria.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
      type: object
      id: CommentThreadListResponse
    PlaylistLocalization:
      description: Playlist localization setting
      id: PlaylistLocalization
      properties:
        description:
          type: string
          description: The localized strings for playlist's description.
        title:
          type: string
          description: The localized strings for playlist's title.
      type: object
    ChannelAuditDetails:
      id: ChannelAuditDetails
      description: The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.
      type: object
      properties:
        copyrightStrikesGoodStanding:
          description: Whether or not the channel has any copyright strikes.
          type: boolean
        contentIdClaimsGoodStanding:
          type: boolean
          description: Whether or not the channel has any unresolved claims.
        communityGuidelinesGoodStanding:
          type: boolean
          description: Whether or not the channel respects the community guidelines.
    LiveChatMessageAuthorDetails:
      properties:
        profileImageUrl:
          description: The channels's avatar URL.
          type: string
        isChatModerator:
          type: boolean
          description: Whether the author is a moderator of the live chat.
        isVerified:
          type: boolean
          description: Whether the author's identity has been verified by YouTube.
        isChatOwner:
          type: boolean
          description: Whether the author is the owner of the live chat.
        channelUrl:
          type: string
          description: The channel's URL.
        displayName:
          description: The channel's display name.
          type: string
        isChatSponsor:
          type: boolean
          description: Whether the author is a sponsor of the live chat.
        channelId:
          type: string
          description: The YouTube channel ID.
      type: object
      id: LiveChatMessageAuthorDetails
    PropertyValue:
      id: PropertyValue
      type: object
      properties:
        property:
          description: A property.
          type: string
        value:
          type: string
          description: The property's value.
      description: A pair Property / Value.
    MembershipsDetails:
      properties:
        membershipsDurationAtLevels:
          description: Data about memberships duration on particular pricing levels.
          type: array
          items:
            $ref: '#/components/schemas/MembershipsDurationAtLevel'
        highestAccessibleLevelDisplayName:
          description: Display name for the highest level that the user has access to at the moment.
          type: string
        membershipsDuration:
          $ref: '#/components/schemas/MembershipsDuration'
          description: Data about memberships duration without taking into consideration pricing levels.
        highestAccessibleLevel:
          type: string
          description: Id of the highest level that the user has access to at the moment.
        accessibleLevels:
          description: Ids of all levels that the user has access to. This includes the currently active level and all other levels that are included because of a higher purchase.
          type: array
          items:
            type: string
      id: MembershipsDetails
      type: object
    VideoAbuseReport:
      properties:
        language:
          description: The language that the content was viewed in.
          type: string
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the video.
        comments:
          description: Additional comments regarding the abuse report.
          type: string
        secondaryReasonId:
          description: The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason.
          type: string
        reasonId:
          description: The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID.
          type: string
      id: VideoAbuseReport
      type: object
    CommentListResponse:
      type: object
      properties:
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        items:
          description: A list of comments that match the request criteria.
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        etag:
          type: string
          description: Etag of this resource.
        kind:
          default: youtube#commentListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentListResponse".'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
      id: CommentListResponse
    LevelDetails:
      id: LevelDetails
      type: object
      properties:
        displayName:
          description: The name that should be used when referring to this level.
          type: string
    VideoAbuseReportReasonListResponse:
      id: VideoAbuseReportReasonListResponse
      type: object
      properties:
        visitorId:
          type: string
          description: The `visitorId` identifies the visitor.
        items:
          items:
            $ref: '#/components/schemas/VideoAbuseReportReason'
          type: array
          description: A list of valid abuse reasons that are used with `video.ReportAbuse`.
        etag:
          type: string
          description: Etag of this resource.
        kind:
          default: youtube#videoAbuseReportReasonListResponse
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string `"youtube#videoAbuseReportReasonListResponse"`.'
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
    VideoSnippet:
      properties:
        tags:
          items:
            type: string
          type: array
          description: A list of keyword tags associated with the video. Tags may contain spaces.
        defaultLanguage:
          type: string
          description: The language of the videos's default snippet.
        categoryId:
          description: The YouTube video category associated with the video.
          type: string
        publishedAt:
          format: date-time
          type: string
          description: The date and time when the video was uploaded.
        channelTitle:
          description: Channel title for the channel that the video belongs to.
          type: string
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.
        description:
          type: string
          description: The video's description. @mutable youtube.videos.insert youtube.videos.update
        title:
          description: The video's title. @mutable youtube.videos.insert youtube.videos.update
          type: string
        liveBroadcastContent:
          description: Indicates if the video is an upcoming/active live broadcast. Or it's "none" if the video is not an upcoming/active live broadcast.
          enum:
            - none
            - upcoming
            - live
            - completed
          enumDescriptions:
            - ''
            - The live broadcast is upcoming.
            - The live broadcast is active.
            - The live broadcast has been completed.
          type: string
        localized:
          $ref: '#/components/schemas/VideoLocalization'
          description: Localized snippet selected with the hl parameter. If no such localization exists, this field is populated with the default snippet. (Read-only)
        defaultAudioLanguage:
          description: The default_audio_language property specifies the language spoken in the video's default audio track.
          type: string
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
      type: object
      id: VideoSnippet
      description: Basic details about a video, including title, description, uploader, thumbnails and category.
    PageInfo:
      id: PageInfo
      properties:
        totalResults:
          type: integer
          format: int32
          description: The total number of results in the result set.
        resultsPerPage:
          type: integer
          format: int32
          description: The number of results included in the API response.
      description: Paging details for lists of resources, including total number of items available and number of resources returned in a single page.
      type: object
    I18nLanguageSnippet:
      id: I18nLanguageSnippet
      description: Basic details about an i18n language, such as language code and human-readable name.
      properties:
        name:
          description: The human-readable name of the language in the language itself.
          type: string
        hl:
          description: A short BCP-47 code that uniquely identifies a language.
          type: string
      type: object
    VideoStatus:
      id: VideoStatus
      description: 'Basic details about a video category, such as its localized title. Next Id: 18'
      properties:
        madeForKids:
          type: boolean
        publishAt:
          type: string
          format: date-time
          description: The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private..
        selfDeclaredMadeForKids:
          type: boolean
        embeddable:
          type: boolean
          description: This value indicates if the video can be embedded on another website. @mutable youtube.videos.insert youtube.videos.update
        rejectionReason:
          enum:
            - copyright
            - inappropriate
            - duplicate
            - termsOfUse
            - uploaderAccountSuspended
            - length
            - claim
            - uploaderAccountClosed
            - trademark
            - legal
          description: This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.
          type: string
          enumDescriptions:
            - Copyright infringement.
            - Inappropriate video content.
            - Duplicate upload in the same channel.
            - Terms of use violation.
            - Uploader account was suspended.
            - Video duration was too long.
            - Blocked by content owner.
            - Uploader closed his/her account.
            - Trademark infringement.
            - An unspecified legal reason.
        uploadStatus:
          type: string
          enumDescriptions:
            - Video has been uploaded but not processed yet.
            - Video has been successfully processed.
            - Processing has failed. See FailureReason.
            - Video has been rejected. See RejectionReason.
            - Video has been deleted.
          description: The status of the uploaded video.
          enum:
            - uploaded
            - processed
            - failed
            - rejected
            - deleted
        failureReason:
          type: string
          enum:
            - conversion
            - invalidFile
            - emptyFile
            - tooSmall
            - codec
            - uploadAborted
          enumDescriptions:
            - Unable to convert video content.
            - Invalid file format.
            - Empty file.
            - File was too small.
            - Unsupported codec.
            - Upload wasn't finished.
          description: This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.
        license:
          description: The video's license. @mutable youtube.videos.insert youtube.videos.update
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - youtube
            - creativeCommon
        privacyStatus:
          description: The video's privacy status.
          type: string
          enum:
            - public
            - unlisted
            - private
          enumDescriptions:
            - ''
            - ''
            - ''
        publicStatsViewable:
          type: boolean
          description: This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled. @mutable youtube.videos.insert youtube.videos.update
      type: object
    LiveChatMemberMilestoneChatDetails:
      type: object
      id: LiveChatMemberMilestoneChatDetails
      properties:
        memberMonth:
          type: integer
          description: The total amount of months (rounded up) the viewer has been a member that granted them this Member Milestone Chat. This is the same number of months as is being displayed to YouTube users.
          format: uint32
        userComment:
          description: The comment added by the member to this Member Milestone Chat. This field is empty for messages without a comment from the member.
          type: string
        memberLevelName:
          description: The name of the Level at which the viever is a member. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.
          type: string
    VideoContentDetailsRegionRestriction:
      description: DEPRECATED Region restriction of the video.
      properties:
        blocked:
          items:
            type: string
          description: A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.
          type: array
        allowed:
          description: A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.
          type: array
          items:
            type: string
      id: VideoContentDetailsRegionRestriction
      type: object
    I18nRegionSnippet:
      id: I18nRegionSnippet
      properties:
        name:
          description: The human-readable name of the region.
          type: string
        gl:
          description: The region code as a 2-letter ISO country code.
          type: string
      description: Basic details about an i18n region, such as region code and human-readable name.
      type: object
    LiveStreamListResponse:
      type: object
      id: LiveStreamListResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStreamListResponse".'
          default: youtube#liveStreamListResponse
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        items:
          type: array
          description: A list of live streams that match the request criteria.
          items:
            $ref: '#/components/schemas/LiveStream'
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    LiveChatNewSponsorDetails:
      type: object
      id: LiveChatNewSponsorDetails
      properties:
        memberLevelName:
          type: string
          description: The name of the Level that the viewer just had joined. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.
        isUpgrade:
          description: If the viewer just had upgraded from a lower level. For viewers that were not members at the time of purchase, this field is false.
          type: boolean
    VideoPlayer:
      type: object
      id: VideoPlayer
      description: Player to be used for a video playback.
      properties:
        embedHeight:
          type: string
          format: int64
        embedWidth:
          format: int64
          type: string
          description: The embed width
        embedHtml:
          type: string
          description: An <iframe> tag that embeds a player that will play the video.
    SubscriptionContentDetails:
      description: Details about the content to witch a subscription refers.
      id: SubscriptionContentDetails
      properties:
        activityType:
          description: The type of activity this subscription is for (only uploads, everything).
          enum:
            - subscriptionActivityTypeUnspecified
            - all
            - uploads
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        totalItemCount:
          type: integer
          description: The approximate number of items that the subscription points to.
          format: uint32
        newItemCount:
          type: integer
          description: The number of new items in the subscription since its content was last read.
          format: uint32
      type: object
    AbuseReport:
      properties:
        relatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
        subject:
          $ref: '#/components/schemas/Entity'
        abuseTypes:
          type: array
          items:
            $ref: '#/components/schemas/AbuseType'
        description:
          type: string
      id: AbuseReport
      type: object
    VideoSuggestions:
      properties:
        editorSuggestions:
          type: array
          description: A list of video editing operations that might improve the video quality or playback experience of the uploaded video.
          items:
            enum:
              - videoAutoLevels
              - videoStabilize
              - videoCrop
              - audioQuietAudioSwap
            enumDescriptions:
              - Picture brightness levels seem off and could be corrected.
              - The video appears shaky and could be stabilized.
              - Margins (mattes) detected around the picture could be cropped.
              - The audio track appears silent and could be swapped with a better quality one.
            type: string
        tagSuggestions:
          type: array
          description: A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.
          items:
            $ref: '#/components/schemas/VideoSuggestionsTagSuggestion'
        processingErrors:
          items:
            enumDescriptions:
              - File contains audio only (e.g., an MP3 file).
              - Image file (e.g., a JPEG image).
              - Movie project file (e.g., Microsoft Windows Movie Maker project).
              - Other non-video file.
              - Document or text file (e.g., MS Word document).
              - An archive file (e.g., a ZIP archive).
              - Unsupported spatial audio layout type.
            type: string
            enum:
              - audioFile
              - imageFile
              - projectFile
              - notAVideoFile
              - docFile
              - archiveFile
              - unsupportedSpatialAudioLayout
          type: array
          description: A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed.
        processingWarnings:
          description: A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track.
          items:
            enumDescriptions:
              - Unrecognized file format, transcoding is likely to fail.
              - Unrecognized video codec, transcoding is likely to fail.
              - Unrecognized audio codec, transcoding is likely to fail.
              - Conflicting container and stream resolutions.
              - Edit lists are not currently supported.
              - Video codec that is known to cause problems was used.
              - Audio codec that is known to cause problems was used.
              - Unsupported VR video stereo mode.
              - Unsupported spherical video projection type.
              - Unsupported HDR pixel format.
              - Unspecified HDR color metadata.
              - Problematic HDR lookup table attached.
            enum:
              - unknownContainer
              - unknownVideoCodec
              - unknownAudioCodec
              - inconsistentResolution
              - hasEditlist
              - problematicVideoCodec
              - problematicAudioCodec
              - unsupportedVrStereoMode
              - unsupportedSphericalProjectionType
              - unsupportedHdrPixelFormat
              - unsupportedHdrColorMetadata
              - problematicHdrLookupTable
            type: string
          type: array
        processingHints:
          items:
            type: string
            enum:
              - nonStreamableMov
              - sendBestQualityVideo
              - sphericalVideo
              - spatialAudio
              - vrVideo
              - hdrVideo
            enumDescriptions:
              - The MP4 file is not streamable, this will slow down the processing. MOOV atom was not found at the beginning of the file.
              - Probably a better quality version of the video exists. The video has wide screen aspect ratio, but is not an HD video.
              - Uploaded video is spherical video.
              - Uploaded video has spatial audio.
              - Uploaded video is VR video.
              - Uploaded video is HDR video.
          description: A list of suggestions that may improve YouTube's ability to process the video.
          type: array
      id: VideoSuggestions
      description: Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.
      type: object
    ChannelTopicDetails:
      type: object
      id: ChannelTopicDetails
      description: Freebase topic information related to the channel.
      properties:
        topicCategories:
          type: array
          items:
            type: string
          description: A list of Wikipedia URLs that describe the channel's content.
        topicIds:
          description: A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.
          type: array
          items:
            type: string
    SuperStickerMetadata:
      properties:
        altTextLanguage:
          type: string
          description: Specifies the localization language in which the alt text is returned.
        stickerId:
          description: Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker.
          type: string
        altText:
          type: string
          description: Internationalized alt text that describes the sticker image and any animation associated with it.
      id: SuperStickerMetadata
      type: object
    I18nRegionListResponse:
      properties:
        kind:
          type: string
          default: youtube#i18nRegionListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegionListResponse".'
        etag:
          description: Etag of this resource.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          items:
            $ref: '#/components/schemas/I18nRegion'
          description: A list of regions where YouTube is available. In this map, the i18n region ID is the map key, and its value is the corresponding i18nRegion resource.
          type: array
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
      id: I18nRegionListResponse
      type: object
    CommentThreadSnippet:
      id: CommentThreadSnippet
      type: object
      properties:
        channelId:
          type: string
          description: The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself.
        topLevelComment:
          description: The top level comment of this thread.
          $ref: '#/components/schemas/Comment'
        canReply:
          description: Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field.
          type: boolean
        videoId:
          type: string
          description: The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.
        totalReplyCount:
          description: The total number of replies (not including the top level comment).
          format: uint32
          type: integer
        isPublic:
          type: boolean
          description: Whether the thread (and therefore all its comments) is visible to all YouTube users.
      description: Basic details about a comment thread.
    ContentRating:
      type: object
      id: ContentRating
      properties:
        bbfcRating:
          description: The video's British Board of Film Classification (BBFC) rating.
          enumDescriptions:
            - ''
            - U
            - PG
            - 12A
            - '12'
            - '15'
            - '18'
            - R18
            - ''
          type: string
          enum:
            - bbfcUnspecified
            - bbfcU
            - bbfcPg
            - bbfc12a
            - bbfc12
            - bbfc15
            - bbfc18
            - bbfcR18
            - bbfcUnrated
        tvpgRating:
          enum:
            - tvpgUnspecified
            - tvpgY
            - tvpgY7
            - tvpgY7Fv
            - tvpgG
            - tvpgPg
            - pg14
            - tvpgMa
            - tvpgUnrated
          description: The video's TV Parental Guidelines (TVPG) rating.
          enumDescriptions:
            - ''
            - TV-Y
            - TV-Y7
            - TV-Y7-FV
            - TV-G
            - TV-PG
            - TV-14
            - TV-MA
            - ''
          type: string
        fcbmRating:
          type: string
          enumDescriptions:
            - ''
            - U
            - PG13
            - P13
            - '18'
            - 18SX
            - 18PA
            - 18SG
            - 18PL
            - ''
          description: The video's rating from Malaysia's Film Censorship Board.
          enum:
            - fcbmUnspecified
            - fcbmU
            - fcbmPg13
            - fcbmP13
            - fcbm18
            - fcbm18sx
            - fcbm18pa
            - fcbm18sg
            - fcbm18pl
            - fcbmUnrated
        eirinRating:
          enum:
            - eirinUnspecified
            - eirinG
            - eirinPg12
            - eirinR15plus
            - eirinR18plus
            - eirinUnrated
          type: string
          description: The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
          enumDescriptions:
            - ''
            - G
            - PG-12
            - R15+
            - R18+
            - ''
        djctqRatingReasons:
          description: Reasons that explain why the video received its DJCQT (Brazil) rating.
          type: array
          items:
            enum:
              - djctqRatingReasonUnspecified
              - djctqViolence
              - djctqExtremeViolence
              - djctqSexualContent
              - djctqNudity
              - djctqSex
              - djctqExplicitSex
              - djctqDrugs
              - djctqLegalDrugs
              - djctqIllegalDrugs
              - djctqInappropriateLanguage
              - djctqCriminalActs
              - djctqImpactingContent
            type: string
            enumDescriptions:
              - ''
              - Brazil rating content descriptors. See http://go/brazilratings section F. Violência (Violence)
              - Violência extrema (Extreme violence)
              - Conteúdo sexual (Sexual content)
              - Nudez (Nudity)
              - Sexo (Sex)
              - Sexo Explícito (Explicit sex)
              - Drogas (Drugs)
              - Drogas Lícitas (Legal drugs)
              - Drogas Ilícitas (Illegal drugs)
              - Linguagem Imprópria (Inappropriate language)
              - Atos Criminosos (Criminal Acts)
              - Conteúdo Impactante (Impacting content)
        icaaRating:
          enum:
            - icaaUnspecified
            - icaaApta
            - icaa7
            - icaa12
            - icaa13
            - icaa16
            - icaa18
            - icaaX
            - icaaUnrated
          enumDescriptions:
            - ''
            - APTA
            - '7'
            - '12'
            - '13'
            - '16'
            - '18'
            - X
            - ''
          description: The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
          type: string
        cbfcRating:
          description: The video's Central Board of Film Certification (CBFC - India) rating.
          enumDescriptions:
            - ''
            - U
            - U/A
            - U/A 7+
            - U/A 13+
            - U/A 16+
            - A
            - S
            - ''
          enum:
            - cbfcUnspecified
            - cbfcU
            - cbfcUA
            - cbfcUA7plus
            - cbfcUA13plus
            - cbfcUA16plus
            - cbfcA
            - cbfcS
            - cbfcUnrated
          type: string
        catvRating:
          enum:
            - catvUnspecified
            - catvC
            - catvC8
            - catvG
            - catvPg
            - catv14plus
            - catv18plus
            - catvUnrated
            - catvE
          description: Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
          type: string
          enumDescriptions:
            - ''
            - C
            - C8
            - G
            - PG
            - 14+
            - 18+
            - ''
            - ''
        cccRating:
          enumDescriptions:
            - ''
            - Todo espectador
            - 6+ - Inconveniente para menores de 7 años
            - 14+
            - 18+
            - 18+ - contenido excesivamente violento
            - 18+ - contenido pornográfico
            - ''
          description: The video's Consejo de Calificación Cinematográfica (Chile) rating.
          enum:
            - cccUnspecified
            - cccTe
            - ccc6
            - ccc14
            - ccc18
            - ccc18v
            - ccc18s
            - cccUnrated
          type: string
        nkclvRating:
          description: The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
          type: string
          enumDescriptions:
            - ''
            - U
            - 7+
            - 12+
            - '! 16+'
            - 18+
            - ''
          enum:
            - nkclvUnspecified
            - nkclvU
            - nkclv7plus
            - nkclv12plus
            - nkclv16plus
            - nkclv18plus
            - nkclvUnrated
        nfrcRating:
          type: string
          enum:
            - nfrcUnspecified
            - nfrcA
            - nfrcB
            - nfrcC
            - nfrcD
            - nfrcX
            - nfrcUnrated
          enumDescriptions:
            - ''
            - A
            - B
            - C
            - D
            - X
            - ''
          description: The video's rating from the Bulgarian National Film Center.
        grfilmRating:
          enum:
            - grfilmUnspecified
            - grfilmK
            - grfilmE
            - grfilmK12
            - grfilmK13
            - grfilmK15
            - grfilmK17
            - grfilmK18
            - grfilmUnrated
          enumDescriptions:
            - ''
            - K
            - E
            - K-12
            - K-13
            - K-15
            - K-17
            - K-18
            - ''
          description: The video's rating in Greece.
          type: string
        agcomRating:
          type: string
          enumDescriptions:
            - ''
            - T
            - VM14
            - VM18
            - ''
          description: The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
          enum:
            - agcomUnspecified
            - agcomT
            - agcomVm14
            - agcomVm18
            - agcomUnrated
        cicfRating:
          enum:
            - cicfUnspecified
            - cicfE
            - cicfKtEa
            - cicfKntEna
            - cicfUnrated
          enumDescriptions:
            - ''
            - E
            - KT/EA
            - KNT/ENA
            - ''
          description: The video's rating from the Commission de Contrôle des Films (Belgium).
          type: string
        cnaRating:
          enumDescriptions:
            - ''
            - AP
            - '12'
            - '15'
            - '18'
            - 18+
            - ''
          enum:
            - cnaUnspecified
            - cnaAp
            - cna12
            - cna15
            - cna18
            - cna18plus
            - cnaUnrated
          type: string
          description: The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
        nfvcbRating:
          type: string
          enum:
            - nfvcbUnspecified
            - nfvcbG
            - nfvcbPg
            - nfvcb12
            - nfvcb12a
            - nfvcb15
            - nfvcb18
            - nfvcbRe
            - nfvcbUnrated
          description: The video's rating from Nigeria's National Film and Video Censors Board.
          enumDescriptions:
            - ''
            - G
            - PG
            - '12'
            - 12A
            - '15'
            - '18'
            - RE
            - ''
        medietilsynetRating:
          enumDescriptions:
            - ''
            - A
            - '6'
            - '7'
            - '9'
            - '11'
            - '12'
            - '15'
            - '18'
            - ''
          description: The video's rating from Medietilsynet, the Norwegian Media Authority.
          enum:
            - medietilsynetUnspecified
            - medietilsynetA
            - medietilsynet6
            - medietilsynet7
            - medietilsynet9
            - medietilsynet11
            - medietilsynet12
            - medietilsynet15
            - medietilsynet18
            - medietilsynetUnrated
          type: string
        bfvcRating:
          description: The video's rating from Thailand's Board of Film and Video Censors.
          enum:
            - bfvcUnspecified
            - bfvcG
            - bfvcE
            - bfvc13
            - bfvc15
            - bfvc18
            - bfvc20
            - bfvcB
            - bfvcUnrated
          type: string
          enumDescriptions:
            - ''
            - G
            - E
            - '13'
            - '15'
            - '18'
            - '20'
            - B
            - ''
        oflcRating:
          enumDescriptions:
            - ''
            - G
            - PG
            - M
            - R13
            - R15
            - R16
            - R18
            - ''
            - RP13
            - RP16
            - RP18
          type: string
          enum:
            - oflcUnspecified
            - oflcG
            - oflcPg
            - oflcM
            - oflcR13
            - oflcR15
            - oflcR16
            - oflcR18
            - oflcUnrated
            - oflcRp13
            - oflcRp16
            - oflcRp18
          description: The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
        mekuRating:
          enum:
            - mekuUnspecified
            - mekuS
            - meku7
            - meku12
            - meku16
            - meku18
            - mekuUnrated
          description: The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
          type: string
          enumDescriptions:
            - ''
            - S
            - '7'
            - '12'
            - '16'
            - '18'
            - ''
        menaMpaaRating:
          type: string
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - R
            - To keep the same enum values as MPAA's items have, skip NC_17.
          description: The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details.
          enum:
            - menaMpaaUnspecified
            - menaMpaaG
            - menaMpaaPg
            - menaMpaaPg13
            - menaMpaaR
            - menaMpaaUnrated
        mdaRating:
          type: string
          enum:
            - mdaUnspecified
            - mdaG
            - mdaPg
            - mdaPg13
            - mdaNc16
            - mdaM18
            - mdaR21
            - mdaUnrated
          description: The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC).
          enumDescriptions:
            - ''
            - G
            - PG
            - PG13
            - NC16
            - M18
            - R21
            - ''
        incaaRating:
          type: string
          enumDescriptions:
            - ''
            - ATP (Apta para todo publico)
            - 13 (Solo apta para mayores de 13 años)
            - 16 (Solo apta para mayores de 16 años)
            - 18 (Solo apta para mayores de 18 años)
            - X (Solo apta para mayores de 18 años, de exhibición condicionada)
            - ''
          enum:
            - incaaUnspecified
            - incaaAtp
            - incaaSam13
            - incaaSam16
            - incaaSam18
            - incaaC
            - incaaUnrated
          description: The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
        rcnofRating:
          type: string
          enum:
            - rcnofUnspecified
            - rcnofI
            - rcnofIi
            - rcnofIii
            - rcnofIv
            - rcnofV
            - rcnofVi
            - rcnofUnrated
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.
        mtrcbRating:
          type: string
          description: The video's rating from the Movie and Television Review and Classification Board (Philippines).
          enumDescriptions:
            - ''
            - G
            - PG
            - R-13
            - R-16
            - R-18
            - X
            - ''
          enum:
            - mtrcbUnspecified
            - mtrcbG
            - mtrcbPg
            - mtrcbR13
            - mtrcbR16
            - mtrcbR18
            - mtrcbX
            - mtrcbUnrated
        fpbRating:
          enum:
            - fpbUnspecified
            - fpbA
            - fpbPg
            - fpb79Pg
            - fpb1012Pg
            - fpb13
            - fpb16
            - fpb18
            - fpbX18
            - fpbXx
            - fpbUnrated
            - fpb10
          type: string
          description: The video's rating from South Africa's Film and Publication Board.
          enumDescriptions:
            - ''
            - A
            - PG
            - 7-9PG
            - 10-12PG
            - '13'
            - '16'
            - '18'
            - X18
            - XX
            - ''
            - '10'
        cceRating:
          enum:
            - cceUnspecified
            - cceM4
            - cceM6
            - cceM12
            - cceM16
            - cceM18
            - cceUnrated
            - cceM14
          type: string
          description: The video's rating from Portugal's Comissão de Classificação de Espect´culos.
          enumDescriptions:
            - ''
            - '4'
            - '6'
            - '12'
            - '16'
            - '18'
            - ''
            - '14'
        fmocRating:
          enumDescriptions:
            - ''
            - U
            - '10'
            - '12'
            - '16'
            - '18'
            - E
            - ''
          type: string
          enum:
            - fmocUnspecified
            - fmocU
            - fmoc10
            - fmoc12
            - fmoc16
            - fmoc18
            - fmocE
            - fmocUnrated
          description: This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
        nmcRating:
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - PG-15
            - 15+
            - 18+
            - 18TC
            - ''
          description: The National Media Council ratings system for United Arab Emirates.
          enum:
            - nmcUnspecified
            - nmcG
            - nmcPg
            - nmcPg13
            - nmcPg15
            - nmc15plus
            - nmc18plus
            - nmc18tc
            - nmcUnrated
          type: string
        acbRating:
          enumDescriptions:
            - ''
            - E
            - Programs that have been given a P classification by the Australian Communications and Media Authority. These programs are intended for preschool children.
            - Programs that have been given a C classification by the Australian Communications and Media Authority. These programs are intended for children (other than preschool children) who are younger than 14 years of age.
            - G
            - PG
            - M
            - MA15+
            - R18+
            - ''
          enum:
            - acbUnspecified
            - acbE
            - acbP
            - acbC
            - acbG
            - acbPg
            - acbM
            - acbMa15plus
            - acbR18plus
            - acbUnrated
          type: string
          description: The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
        mibacRating:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
          enum:
            - mibacUnspecified
            - mibacT
            - mibacVap
            - mibacVm6
            - mibacVm12
            - mibacVm14
            - mibacVm16
            - mibacVm18
            - mibacUnrated
        pefilmRating:
          enum:
            - pefilmUnspecified
            - pefilmPt
            - pefilmPg
            - pefilm14
            - pefilm18
            - pefilmUnrated
          type: string
          description: The video's rating in Peru.
          enumDescriptions:
            - ''
            - PT
            - PG
            - '14'
            - '18'
            - ''
        anatelRating:
          enum:
            - anatelUnspecified
            - anatelF
            - anatelI
            - anatelI7
            - anatelI10
            - anatelI12
            - anatelR
            - anatelA
            - anatelUnrated
          type: string
          description: The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
          enumDescriptions:
            - ''
            - F
            - I
            - I-7
            - I-10
            - I-12
            - R
            - A
            - ''
        chfilmRating:
          type: string
          enum:
            - chfilmUnspecified
            - chfilm0
            - chfilm6
            - chfilm12
            - chfilm16
            - chfilm18
            - chfilmUnrated
          enumDescriptions:
            - ''
            - '0'
            - '6'
            - '12'
            - '16'
            - '18'
            - ''
          description: The video's rating in Switzerland.
        kfcbRating:
          enumDescriptions:
            - ''
            - GE
            - PG
            - '16'
            - '18'
            - ''
          enum:
            - kfcbUnspecified
            - kfcbG
            - kfcbPg
            - kfcb16plus
            - kfcbR
            - kfcbUnrated
          type: string
          description: The video's rating from the Kenya Film Classification Board.
        czfilmRating:
          description: The video's rating in the Czech Republic.
          enumDescriptions:
            - ''
            - U
            - '12'
            - '14'
            - '18'
            - ''
          type: string
          enum:
            - czfilmUnspecified
            - czfilmU
            - czfilm12
            - czfilm14
            - czfilm18
            - czfilmUnrated
        eefilmRating:
          enumDescriptions:
            - ''
            - Pere
            - L
            - MS-6
            - K-6
            - MS-12
            - K-12
            - K-14
            - K-16
            - ''
          type: string
          enum:
            - eefilmUnspecified
            - eefilmPere
            - eefilmL
            - eefilmMs6
            - eefilmK6
            - eefilmMs12
            - eefilmK12
            - eefilmK14
            - eefilmK16
            - eefilmUnrated
          description: The video's rating in Estonia.
        ytRating:
          description: A rating that YouTube uses to identify age-restricted content.
          enum:
            - ytUnspecified
            - ytAgeRestricted
          type: string
          enumDescriptions:
            - ''
            - ''
        chvrsRating:
          description: The video's Canadian Home Video Rating System (CHVRS) rating.
          type: string
          enumDescriptions:
            - ''
            - G
            - PG
            - 14A
            - 18A
            - R
            - E
            - ''
          enum:
            - chvrsUnspecified
            - chvrsG
            - chvrsPg
            - chvrs14a
            - chvrs18a
            - chvrsR
            - chvrsE
            - chvrsUnrated
        resorteviolenciaRating:
          type: string
          enumDescriptions:
            - ''
            - A
            - B
            - C
            - D
            - E
            - ''
          description: The video's rating in Venezuela.
          enum:
            - resorteviolenciaUnspecified
            - resorteviolenciaA
            - resorteviolenciaB
            - resorteviolenciaC
            - resorteviolenciaD
            - resorteviolenciaE
            - resorteviolenciaUnrated
        nbcplRating:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - nbcplUnspecified
            - nbcplI
            - nbcplIi
            - nbcplIii
            - nbcplIv
            - nbcpl18plus
            - nbcplUnrated
          description: The video's rating in Poland.
        ifcoRating:
          enum:
            - ifcoUnspecified
            - ifcoG
            - ifcoPg
            - ifco12
            - ifco12a
            - ifco15
            - ifco15a
            - ifco16
            - ifco18
            - ifcoUnrated
          type: string
          description: The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
          enumDescriptions:
            - ''
            - G
            - PG
            - '12'
            - 12A
            - '15'
            - 15A
            - '16'
            - '18'
            - ''
        rtcRating:
          enum:
            - rtcUnspecified
            - rtcAa
            - rtcA
            - rtcB
            - rtcB15
            - rtcC
            - rtcD
            - rtcUnrated
          type: string
          description: The video's General Directorate of Radio, Television and Cinematography (Mexico) rating.
          enumDescriptions:
            - ''
            - AA
            - A
            - B
            - B15
            - C
            - D
            - ''
        fskRating:
          enum:
            - fskUnspecified
            - fsk0
            - fsk6
            - fsk12
            - fsk16
            - fsk18
            - fskUnrated
          description: The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
          enumDescriptions:
            - ''
            - FSK 0
            - FSK 6
            - FSK 12
            - FSK 16
            - FSK 18
            - ''
          type: string
        cncRating:
          type: string
          enumDescriptions:
            - ''
            - T
            - '10'
            - '12'
            - '16'
            - '18'
            - E
            - interdiction
            - ''
          description: Rating system in France - Commission de classification cinematographique
          enum:
            - cncUnspecified
            - cncT
            - cnc10
            - cnc12
            - cnc16
            - cnc18
            - cncE
            - cncInterdiction
            - cncUnrated
        mpaaRating:
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - R
            - NC-17
            - '! X'
            - ''
          enum:
            - mpaaUnspecified
            - mpaaG
            - mpaaPg
            - mpaaPg13
            - mpaaR
            - mpaaNc17
            - mpaaX
            - mpaaUnrated
          type: string
          description: The video's Motion Picture Association of America (MPAA) rating.
        ecbmctRating:
          type: string
          enumDescriptions:
            - ''
            - G
            - 7A
            - 7+
            - 13A
            - 13+
            - 15A
            - 15+
            - 18+
            - ''
          description: Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
          enum:
            - ecbmctUnspecified
            - ecbmctG
            - ecbmct7a
            - ecbmct7plus
            - ecbmct13a
            - ecbmct13plus
            - ecbmct15a
            - ecbmct15plus
            - ecbmct18plus
            - ecbmctUnrated
        catvfrRating:
          enum:
            - catvfrUnspecified
            - catvfrG
            - catvfr8plus
            - catvfr13plus
            - catvfr16plus
            - catvfr18plus
            - catvfrUnrated
            - catvfrE
          enumDescriptions:
            - ''
            - G
            - 8+
            - 13+
            - 16+
            - 18+
            - ''
            - ''
          description: The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
          type: string
        mpaatRating:
          enum:
            - mpaatUnspecified
            - mpaatGb
            - mpaatRb
          enumDescriptions:
            - ''
            - GB
            - RB
          description: The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
          type: string
        djctqRating:
          enumDescriptions:
            - ''
            - L
            - '10'
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - djctqUnspecified
            - djctqL
            - djctq10
            - djctq12
            - djctq14
            - djctq16
            - djctq18
            - djctqEr
            - djctqL10
            - djctqL12
            - djctqL14
            - djctqL16
            - djctqL18
            - djctq1012
            - djctq1014
            - djctq1016
            - djctq1018
            - djctq1214
            - djctq1216
            - djctq1218
            - djctq1416
            - djctq1418
            - djctq1618
            - djctqUnrated
          description: The video's Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.
          type: string
        fpbRatingReasons:
          items:
            enumDescriptions:
              - ''
              - South Africa rating content descriptors.
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - fpbRatingReasonUnspecified
              - fpbBlasphemy
              - fpbLanguage
              - fpbNudity
              - fpbPrejudice
              - fpbSex
              - fpbViolence
              - fpbDrugs
              - fpbSexualViolence
              - fpbHorror
              - fpbCriminalTechniques
              - fpbImitativeActsTechniques
            type: string
          type: array
          description: Reasons that explain why the video received its FPB (South Africa) rating.
        rteRating:
          description: The video's rating from Ireland's Raidió Teilifís Éireann.
          enumDescriptions:
            - ''
            - GA
            - CH
            - PS
            - MA
            - ''
          type: string
          enum:
            - rteUnspecified
            - rteGa
            - rteCh
            - rtePs
            - rteMa
            - rteUnrated
        smsaRating:
          description: The video's rating from Statens medieråd (Sweden's National Media Council).
          enum:
            - smsaUnspecified
            - smsaA
            - smsa7
            - smsa11
            - smsa15
            - smsaUnrated
          type: string
          enumDescriptions:
            - ''
            - All ages
            - '7'
            - '11'
            - '15'
            - ''
        mcstRating:
          type: string
          enum:
            - mcstUnspecified
            - mcstP
            - mcst0
            - mcstC13
            - mcstC16
            - mcst16plus
            - mcstC18
            - mcstGPg
            - mcstUnrated
          enumDescriptions:
            - ''
            - P
            - '0'
            - C13
            - C16
            - 16+
            - C18
            - MCST_G_PG
            - ''
          description: The video's rating system for Vietnam - MCST
        csaRating:
          description: The video's rating from France's Conseil supérieur de l’audiovisuel, which rates broadcast content.
          type: string
          enum:
            - csaUnspecified
            - csaT
            - csa10
            - csa12
            - csa16
            - csa18
            - csaInterdiction
            - csaUnrated
          enumDescriptions:
            - ''
            - T
            - '10'
            - '12'
            - '16'
            - '18'
            - Interdiction
            - ''
        kijkwijzerRating:
          type: string
          enum:
            - kijkwijzerUnspecified
            - kijkwijzerAl
            - kijkwijzer6
            - kijkwijzer9
            - kijkwijzer12
            - kijkwijzer16
            - kijkwijzer18
            - kijkwijzerUnrated
          description: The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands).
          enumDescriptions:
            - ''
            - AL
            - '6'
            - '9'
            - '12'
            - '16'
            - ''
            - ''
        smaisRating:
          type: string
          description: The video's rating in Iceland.
          enum:
            - smaisUnspecified
            - smaisL
            - smais7
            - smais12
            - smais14
            - smais16
            - smais18
            - smaisUnrated
          enumDescriptions:
            - ''
            - L
            - '7'
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
        moctwRating:
          type: string
          enum:
            - moctwUnspecified
            - moctwG
            - moctwP
            - moctwPg
            - moctwR
            - moctwUnrated
            - moctwR12
            - moctwR15
          description: The video's rating from Taiwan's Ministry of Culture (文化部).
          enumDescriptions:
            - ''
            - G
            - P
            - PG
            - R
            - ''
            - R-12
            - R-15
        mccaaRating:
          type: string
          description: The video's rating from Malta's Film Age-Classification Board.
          enum:
            - mccaaUnspecified
            - mccaaU
            - mccaaPg
            - mccaa12a
            - mccaa12
            - mccaa14
            - mccaa15
            - mccaa16
            - mccaa18
            - mccaaUnrated
          enumDescriptions:
            - ''
            - U
            - PG
            - 12A
            - '12'
            - 14 - this rating was removed from the new classification structure introduced in 2013.
            - '15'
            - 16 - this rating was removed from the new classification structure introduced in 2013.
            - '18'
            - ''
        fcoRating:
          enumDescriptions:
            - ''
            - I
            - IIA
            - IIB
            - II
            - III
            - ''
          enum:
            - fcoUnspecified
            - fcoI
            - fcoIia
            - fcoIib
            - fcoIi
            - fcoIii
            - fcoUnrated
          type: string
          description: The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration.
        mocRating:
          description: The video's Ministerio de Cultura (Colombia) rating.
          type: string
          enum:
            - mocUnspecified
            - mocE
            - mocT
            - moc7
            - moc12
            - moc15
            - moc18
            - mocX
            - mocBanned
            - mocUnrated
          enumDescriptions:
            - ''
            - E
            - T
            - '7'
            - '12'
            - '15'
            - '18'
            - X
            - Banned
            - ''
        skfilmRating:
          type: string
          description: The video's rating in Slovakia.
          enum:
            - skfilmUnspecified
            - skfilmG
            - skfilmP2
            - skfilmP5
            - skfilmP8
            - skfilmUnrated
          enumDescriptions:
            - ''
            - G
            - P2
            - P5
            - P8
            - ''
        mccypRating:
          type: string
          description: The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
          enumDescriptions:
            - ''
            - A
            - '7'
            - '11'
            - '15'
            - ''
          enum:
            - mccypUnspecified
            - mccypA
            - mccyp7
            - mccyp11
            - mccyp15
            - mccypUnrated
        lsfRating:
          type: string
          description: The video's rating from Indonesia's Lembaga Sensor Film.
          enum:
            - lsfUnspecified
            - lsfSu
            - lsfA
            - lsfBo
            - lsf13
            - lsfR
            - lsf17
            - lsfD
            - lsf21
            - lsfUnrated
          enumDescriptions:
            - ''
            - SU
            - A
            - BO
            - '13'
            - R
            - '17'
            - D
            - '21'
            - ''
        nbcRating:
          description: The video's rating from the Maldives National Bureau of Classification.
          enum:
            - nbcUnspecified
            - nbcG
            - nbcPg
            - nbc12plus
            - nbc15plus
            - nbc18plus
            - nbc18plusr
            - nbcPu
            - nbcUnrated
          enumDescriptions:
            - ''
            - G
            - PG
            - 12+
            - 15+
            - 18+
            - 18+R
            - PU
            - ''
          type: string
        bmukkRating:
          description: The video's rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).
          enum:
            - bmukkUnspecified
            - bmukkAa
            - bmukk6
            - bmukk8
            - bmukk10
            - bmukk12
            - bmukk14
            - bmukk16
            - bmukkUnrated
          enumDescriptions:
            - ''
            - Unrestricted
            - 6+
            - 8+
            - 10+
            - 12+
            - 14+
            - 16+
            - ''
          type: string
        kmrbRating:
          type: string
          enum:
            - kmrbUnspecified
            - kmrbAll
            - kmrb12plus
            - kmrb15plus
            - kmrbTeenr
            - kmrbR
            - kmrbUnrated
          enumDescriptions:
            - ''
            - 전체관람가
            - 12세 이상 관람가
            - 15세 이상 관람가
            - ''
            - 청소년 관람불가
            - ''
          description: The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
        cscfRating:
          enum:
            - cscfUnspecified
            - cscfAl
            - cscfA
            - cscf6
            - cscf9
            - cscf12
            - cscf16
            - cscf18
            - cscfUnrated
          description: The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
          enumDescriptions:
            - ''
            - AL
            - A
            - '6'
            - '9'
            - '12'
            - '16'
            - '18'
            - ''
          type: string
        russiaRating:
          enumDescriptions:
            - ''
            - 0+
            - 6+
            - 12+
            - 16+
            - 18+
            - ''
          type: string
          description: The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
          enum:
            - russiaUnspecified
            - russia0
            - russia6
            - russia12
            - russia16
            - russia18
            - russiaUnrated
        egfilmRating:
          enumDescriptions:
            - ''
            - GN
            - '18'
            - BN
            - ''
          enum:
            - egfilmUnspecified
            - egfilmGn
            - egfilm18
            - egfilmBn
            - egfilmUnrated
          type: string
          description: The video's rating in Egypt.
        ilfilmRating:
          enum:
            - ilfilmUnspecified
            - ilfilmAa
            - ilfilm12
            - ilfilm14
            - ilfilm16
            - ilfilm18
            - ilfilmUnrated
          description: The video's rating in Israel.
          enumDescriptions:
            - ''
            - AA
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
          type: string
      description: Ratings schemes. The country-specific ratings are mostly for movies and shows. LINT.IfChange
    MembershipsLevel:
      properties:
        etag:
          type: string
          description: Etag of this resource.
        snippet:
          description: The snippet object contains basic details about the level.
          $ref: '#/components/schemas/MembershipsLevelSnippet'
        id:
          description: The ID that YouTube assigns to uniquely identify the memberships level.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#membershipsLevelListResponse".'
          default: youtube#membershipsLevel
      type: object
      id: MembershipsLevel
      description: A *membershipsLevel* resource represents an offer made by YouTube creators for their fans. Users can become members of the channel by joining one of the available levels. They will provide recurring monetary support and receives special benefits.
    VideoProjectDetails:
      description: 'DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677'
      id: VideoProjectDetails
      properties: {}
      type: object
    PlaylistItem:
      id: PlaylistItem
      properties:
        snippet:
          description: The snippet object contains basic details about the playlist item, such as its title and position in the playlist.
          $ref: '#/components/schemas/PlaylistItemSnippet'
        kind:
          type: string
          default: youtube#playlistItem
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItem".'
        status:
          description: The status object contains information about the playlist item's privacy status.
          $ref: '#/components/schemas/PlaylistItemStatus'
        contentDetails:
          $ref: '#/components/schemas/PlaylistItemContentDetails'
          description: The contentDetails object is included in the resource if the included item is a YouTube video. The object contains additional information about the video.
        id:
          description: The ID that YouTube uses to uniquely identify the playlist item.
          type: string
        etag:
          description: Etag of this resource.
          type: string
      type: object
      description: 'A *playlistItem* resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem resource contains details about the included resource that pertain specifically to how that resource is used in that playlist. YouTube uses playlists to identify special collections of videos for a channel, such as: - uploaded videos - favorite videos - positively rated (liked) videos - watch history - watch later To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company''s videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user''s channel.'
    ActivityContentDetailsPlaylistItem:
      type: object
      id: ActivityContentDetailsPlaylistItem
      properties:
        playlistId:
          description: The value that YouTube uses to uniquely identify the playlist.
          type: string
        resourceId:
          description: The resourceId object contains information about the resource that was added to the playlist.
          $ref: '#/components/schemas/ResourceId'
        playlistItemId:
          type: string
          description: ID of the item within the playlist.
      description: Information about a new playlist item.
    ChannelSectionContentDetails:
      description: Details about a channelsection, including playlists and channels.
      id: ChannelSectionContentDetails
      properties:
        channels:
          type: array
          items:
            type: string
          description: The channel ids for type multiple_channels.
        playlists:
          type: array
          description: The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed.
          items:
            type: string
      type: object
    LiveChatModerator:
      description: A *liveChatModerator* resource represents a moderator for a YouTube live chat. A chat moderator has the ability to ban/unban users from a chat, remove message, etc.
      properties:
        id:
          description: The ID that YouTube assigns to uniquely identify the moderator.
          type: string
        snippet:
          $ref: '#/components/schemas/LiveChatModeratorSnippet'
          description: The snippet object contains basic details about the moderator.
        etag:
          type: string
          description: Etag of this resource.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModerator".'
          default: youtube#liveChatModerator
      type: object
      id: LiveChatModerator
    MonitorStreamInfo:
      type: object
      description: Settings and Info of the monitor stream
      id: MonitorStreamInfo
      properties:
        enableMonitorStream:
          type: boolean
          annotations:
            required:
              - youtube.liveBroadcasts.update
          description: This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints. You need to set this value to true if you intend to have a broadcast delay for your event. *Note:* This property cannot be updated once the broadcast is in the testing or live state.
        embedHtml:
          type: string
          description: HTML code that embeds a player that plays the monitor stream.
        broadcastStreamDelayMs:
          annotations:
            required:
              - youtube.liveBroadcasts.update
          type: integer
          format: uint32
          description: If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.
    SuperChatEventListResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#superChatEventListResponse".'
          default: youtube#superChatEventListResponse
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        items:
          description: A list of Super Chat purchases that match the request criteria.
          type: array
          items:
            $ref: '#/components/schemas/SuperChatEvent'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        nextPageToken:
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
          type: string
        etag:
          description: Etag of this resource.
          type: string
      id: SuperChatEventListResponse
      type: object
    ActivitySnippet:
      id: ActivitySnippet
      description: 'Basic details about an activity, including title, description, thumbnails, activity type and group. Next ID: 12'
      properties:
        publishedAt:
          type: string
          description: The date and time that the video was uploaded.
          format: date-time
        channelTitle:
          type: string
          description: Channel title for the channel responsible for this activity
        groupId:
          type: string
          description: The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user's activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.
        title:
          description: The title of the resource primarily associated with the activity.
          type: string
        description:
          type: string
          description: The description of the resource primarily associated with the activity. @mutable youtube.activities.insert
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: A map of thumbnail images associated with the resource that is primarily associated with the activity. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
        channelId:
          description: The ID that YouTube uses to uniquely identify the channel associated with the activity.
          type: string
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - typeUnspecified
            - upload
            - like
            - favorite
            - comment
            - subscription
            - playlistItem
            - recommendation
            - bulletin
            - social
            - channelItem
            - promotedItem
          description: The type of activity that the resource describes.
          type: string
      type: object
    ThumbnailDetails:
      type: object
      description: Internal representation of thumbnails for a YouTube resource.
      id: ThumbnailDetails
      properties:
        maxres:
          $ref: '#/components/schemas/Thumbnail'
          description: The maximum resolution quality image for this resource.
        standard:
          description: The standard quality image for this resource.
          $ref: '#/components/schemas/Thumbnail'
        high:
          $ref: '#/components/schemas/Thumbnail'
          description: The high quality image for this resource.
        medium:
          $ref: '#/components/schemas/Thumbnail'
          description: The medium quality image for this resource.
        default:
          description: The default image for this resource.
          $ref: '#/components/schemas/Thumbnail'
    ResourceId:
      id: ResourceId
      description: A resource id is a generic reference that points to another YouTube resource.
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.
        playlistId:
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.
          type: string
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.
        kind:
          description: The type of the API resource.
          type: string
      type: object
    VideoCategory:
      properties:
        id:
          description: The ID that YouTube uses to uniquely identify the video category.
          type: string
        etag:
          description: Etag of this resource.
          type: string
        kind:
          default: youtube#videoCategory
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategory".'
          type: string
        snippet:
          $ref: '#/components/schemas/VideoCategorySnippet'
          description: The snippet object contains basic details about the video category, including its title.
      type: object
      description: A *videoCategory* resource identifies a category that has been or could be associated with uploaded videos.
      id: VideoCategory
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/youtubepartner: View and manage your assets and associated content on YouTube
            https://www.googleapis.com/auth/youtube.force-ssl: See, edit, and permanently delete your YouTube videos, ratings, comments and captions
            https://www.googleapis.com/auth/youtube: Manage your YouTube account
            https://www.googleapis.com/auth/youtube.readonly: View your YouTube account
            https://www.googleapis.com/auth/youtube.channel-memberships.creator: See a list of your current active channel members, their current level, and when they became a member
            https://www.googleapis.com/auth/youtube.upload: Manage your YouTube videos
            https://www.googleapis.com/auth/youtubepartner-channel-audit: View private information of your YouTube channel relevant during the audit process with a YouTube partner
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    memberships_levels:
      id: youtube.youtube.memberships_levels
      name: memberships_levels
      title: Memberships_levels
      methods:
        membershipsLevels_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1membershipsLevels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_levels/methods/membershipsLevels_list'
        insert: []
        update: []
        delete: []
    channel_banners:
      id: youtube.youtube.channel_banners
      name: channel_banners
      title: Channel_banners
      methods:
        channelBanners_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channelBanners~1insert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    live_streams:
      id: youtube.youtube.live_streams
      name: live_streams
      title: Live_streams
      methods:
        liveStreams_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveStreams/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveStreams_update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveStreams/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveStreams_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveStreams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveStreams_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveStreams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_streams/methods/liveStreams_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_streams/methods/liveStreams_delete'
    i18n_languages:
      id: youtube.youtube.i18n_languages
      name: i18n_languages
      title: I18n_languages
      methods:
        i18nLanguages_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1i18nLanguages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/i18n_languages/methods/i18nLanguages_list'
        insert: []
        update: []
        delete: []
    playlist_items:
      id: youtube.youtube.playlist_items
      name: playlist_items
      title: Playlist_items
      methods:
        playlistItems_update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlistItems/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        playlistItems_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlistItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        playlistItems_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlistItems/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        playlistItems_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlistItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/playlist_items/methods/playlistItems_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/playlist_items/methods/playlistItems_delete'
    i18n_regions:
      id: youtube.youtube.i18n_regions
      name: i18n_regions
      title: I18n_regions
      methods:
        i18nRegions_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1i18nRegions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/i18n_regions/methods/i18nRegions_list'
        insert: []
        update: []
        delete: []
    videos:
      id: youtube.youtube.videos
      name: videos
      title: Videos
      methods:
        delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rate:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos~1rate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reportAbuse:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos~1reportAbuse/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/videos/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/videos/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/videos/methods/delete'
    videos__rating:
      id: youtube.youtube.videos__rating
      name: videos__rating
      title: Videos__rating
      methods:
        videos_getRating:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videos~1getRating/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/videos__rating/methods/videos_getRating'
        insert: []
        update: []
        delete: []
    video_abuse_report_reasons:
      id: youtube.youtube.video_abuse_report_reasons
      name: video_abuse_report_reasons
      title: Video_abuse_report_reasons
      methods:
        videoAbuseReportReasons_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videoAbuseReportReasons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/video_abuse_report_reasons/methods/videoAbuseReportReasons_list'
        insert: []
        update: []
        delete: []
    super_chat_events:
      id: youtube.youtube.super_chat_events
      name: super_chat_events
      title: Super_chat_events
      methods:
        superChatEvents_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1superChatEvents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/super_chat_events/methods/superChatEvents_list'
        insert: []
        update: []
        delete: []
    activities:
      id: youtube.youtube.activities
      name: activities
      title: Activities
      methods:
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1activities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/activities/methods/list'
        insert: []
        update: []
        delete: []
    v3:
      id: youtube.youtube.v3
      name: v3
      title: V3
      methods:
        youtube_v3_updateCommentThreads:
          operation:
            $ref: '#/paths/~1youtube~1v3~1commentThreads/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    comment_threads:
      id: youtube.youtube.comment_threads
      name: comment_threads
      title: Comment_threads
      methods:
        commentThreads_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1commentThreads/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        commentThreads_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1commentThreads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comment_threads/methods/commentThreads_list'
        insert: []
        update: []
        delete: []
    channels:
      id: youtube.youtube.channels
      name: channels
      title: Channels
      methods:
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channels/methods/list'
        insert: []
        update: []
        delete: []
    live_chat_bans:
      id: youtube.youtube.live_chat_bans
      name: live_chat_bans
      title: Live_chat_bans
      methods:
        liveChatBans_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1bans/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveChatBans_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1bans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_chat_bans/methods/liveChatBans_delete'
    channel_sections:
      id: youtube.youtube.channel_sections
      name: channel_sections
      title: Channel_sections
      methods:
        channelSections_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channelSections/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        channelSections_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channelSections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        channelSections_update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channelSections/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        channelSections_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1channelSections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channel_sections/methods/channelSections_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/channel_sections/methods/channelSections_delete'
    thumbnails:
      id: youtube.youtube.thumbnails
      name: thumbnails
      title: Thumbnails
      methods:
        set:
          operation:
            $ref: '#/paths/~1youtube~1v3~1thumbnails~1set/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    watermarks:
      id: youtube.youtube.watermarks
      name: watermarks
      title: Watermarks
      methods:
        unset:
          operation:
            $ref: '#/paths/~1youtube~1v3~1watermarks~1unset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set:
          operation:
            $ref: '#/paths/~1youtube~1v3~1watermarks~1set/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    comments:
      id: youtube.youtube.comments
      name: comments
      title: Comments
      methods:
        markAsSpam:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments~1markAsSpam/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        setModerationStatus:
          operation:
            $ref: '#/paths/~1youtube~1v3~1comments~1setModerationStatus/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/comments/methods/delete'
    captions:
      id: youtube.youtube.captions
      name: captions
      title: Captions
      methods:
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1captions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1captions/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1captions/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1captions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download:
          operation:
            $ref: '#/paths/~1youtube~1v3~1captions~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/captions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/captions/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/captions/methods/delete'
    playlists:
      id: youtube.youtube.playlists
      name: playlists
      title: Playlists
      methods:
        delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlists/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1playlists/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/playlists/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/playlists/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/playlists/methods/delete'
    search:
      id: youtube.youtube.search
      name: search
      title: Search
      methods:
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/search/methods/list'
        insert: []
        update: []
        delete: []
    video_categories:
      id: youtube.youtube.video_categories
      name: video_categories
      title: Video_categories
      methods:
        videoCategories_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1videoCategories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/video_categories/methods/videoCategories_list'
        insert: []
        update: []
        delete: []
    members:
      id: youtube.youtube.members
      name: members
      title: Members
      methods:
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/members/methods/list'
        insert: []
        update: []
        delete: []
    tests:
      id: youtube.youtube.tests
      name: tests
      title: Tests
      methods:
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1tests/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/tests/methods/insert'
        update: []
        delete: []
    live_chat_messages:
      id: youtube.youtube.live_chat_messages
      name: live_chat_messages
      title: Live_chat_messages
      methods:
        liveChatMessages_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveChatMessages_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1messages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveChatMessages_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1messages/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_chat_messages/methods/liveChatMessages_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_chat_messages/methods/liveChatMessages_delete'
    subscriptions:
      id: youtube.youtube.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1subscriptions/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1subscriptions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/delete'
    third_party_links:
      id: youtube.youtube.third_party_links
      name: third_party_links
      title: Third_party_links
      methods:
        thirdPartyLinks_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1thirdPartyLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        thirdPartyLinks_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1thirdPartyLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        thirdPartyLinks_update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1thirdPartyLinks/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        thirdPartyLinks_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1thirdPartyLinks/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/third_party_links/methods/thirdPartyLinks_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/third_party_links/methods/thirdPartyLinks_delete'
    abuse_reports:
      id: youtube.youtube.abuse_reports
      name: abuse_reports
      title: Abuse_reports
      methods:
        abuseReports_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1abuseReports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    live_chat_moderators:
      id: youtube.youtube.live_chat_moderators
      name: live_chat_moderators
      title: Live_chat_moderators
      methods:
        liveChatModerators_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1moderators/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveChatModerators_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1moderators/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveChatModerators_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveChat~1moderators/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_chat_moderators/methods/liveChatModerators_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_chat_moderators/methods/liveChatModerators_delete'
    live_broadcasts:
      id: youtube.youtube.live_broadcasts
      name: live_broadcasts
      title: Live_broadcasts
      methods:
        liveBroadcasts_transition:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts~1transition/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_insert:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_delete:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_update:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_list:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_insertCuepoint:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts~1cuepoint/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        liveBroadcasts_bind:
          operation:
            $ref: '#/paths/~1youtube~1v3~1liveBroadcasts~1bind/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/live_broadcasts/methods/liveBroadcasts_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/live_broadcasts/methods/liveBroadcasts_delete'
paths:
  /youtube/v3/membershipsLevels:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Retrieves a list of all pricing levels offered by a creator to the fans.
      operationId: youtube.membershipsLevels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.channel-memberships.creator
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.channel-memberships.creator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsLevelListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_levels
      x-stackQL-verb: select
  /youtube/v3/channelBanners/insert:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.channelBanners.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelBannerResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBannerResource'
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
      x-stackQL-resource: channel_banners
      x-stackQL-verb: insert
  /youtube/v3/liveStreams:
    parameters: *ref_1
    delete:
      description: Deletes an existing stream for the authenticated user.
      operationId: youtube.liveStreams.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: delete
    put:
      description: Updates an existing stream for the authenticated user.
      operationId: youtube.liveStreams.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: exec
    post:
      description: Inserts a new stream for the authenticated user.
      operationId: youtube.liveStreams.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: insert
    get:
      description: Retrieve the list of streams associated with the given channel. --
      operationId: youtube.liveStreams.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: select
  /youtube/v3/i18nLanguages:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.i18nLanguages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/I18nLanguageListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: i18n_languages
      x-stackQL-verb: select
  /youtube/v3/playlistItems:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.playlistItems.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.playlistItems.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: insert
    delete:
      description: Deletes a resource.
      operationId: youtube.playlistItems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.playlistItems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItemListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: playlistId
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: videoId
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: select
  /youtube/v3/i18nRegions:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.i18nRegions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/I18nRegionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: i18n_regions
      x-stackQL-verb: select
  /youtube/v3/videos:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.videos.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.videos.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: stabilize
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: autoLevels
          schema:
            type: boolean
        - in: query
          name: notifySubscribers
          schema:
            type: boolean
      x-stackQL-resource: videos
      x-stackQL-verb: insert
    put:
      description: Updates an existing resource.
      operationId: youtube.videos.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videos.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: maxHeight
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: chart
          schema:
            type: string
        - in: query
          name: maxWidth
          schema:
            type: integer
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: videoCategoryId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: myRating
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: select
  /youtube/v3/videos/rate:
    parameters: *ref_1
    post:
      description: Adds a like or dislike rating to a video or removes a rating from a video.
      operationId: youtube.videos.rate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: rating
          required: true
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
  /youtube/v3/videos/getRating:
    parameters: *ref_1
    get:
      description: Retrieves the ratings that the authorized user gave to a list of specified videos.
      operationId: youtube.videos.getRating
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGetRatingResponse'
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos__rating
      x-stackQL-verb: select
  /youtube/v3/videos/reportAbuse:
    parameters: *ref_1
    post:
      description: Report abuse for a video.
      operationId: youtube.videos.reportAbuse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoAbuseReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
  /youtube/v3/videoAbuseReportReasons:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videoAbuseReportReasons.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAbuseReportReasonListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: video_abuse_report_reasons
      x-stackQL-verb: select
  /youtube/v3/superChatEvents:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.superChatEvents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperChatEventListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: super_chat_events
      x-stackQL-verb: select
  /youtube/v3/activities:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.activities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: publishedAfter
          schema:
            type: string
        - in: query
          name: publishedBefore
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: home
          schema:
            type: boolean
      x-stackQL-resource: activities
      x-stackQL-verb: select
  /youtube/v3/commentThreads:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.youtube.v3.updateCommentThreads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentThread'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThread'
      parameters:
        - in: query
          name: part
          schema:
            type: string
      x-stackQL-resource: v3
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.commentThreads.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentThread'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThread'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comment_threads
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.commentThreads.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThreadListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchTerms
          schema:
            type: string
        - in: query
          name: textFormat
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: allThreadsRelatedToChannelId
          schema:
            type: string
        - in: query
          name: moderationStatus
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: videoId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: comment_threads
      x-stackQL-verb: select
  /youtube/v3/channels:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.channels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner-channel-audit
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner-channel-audit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: managedByMe
          schema:
            type: boolean
        - in: query
          name: categoryId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: mySubscribers
          schema:
            type: boolean
        - in: query
          name: forUsername
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.channels.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /youtube/v3/liveChat/bans:
    parameters: *ref_1
    delete:
      description: Deletes a chat ban.
      operationId: youtube.liveChatBans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_bans
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatBans.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatBan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatBan'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_bans
      x-stackQL-verb: insert
  /youtube/v3/channelSections:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.channelSections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.channelSections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSectionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.channelSections.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSection'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.channelSections.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSection'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: insert
  /youtube/v3/thumbnails/set:
    parameters: *ref_1
    post:
      description: As this is not an insert in a strict sense (it supports uploading/setting of a thumbnail for multiple videos, which doesn't result in creation of a single resource), I use a custom verb here.
      operationId: youtube.thumbnails.set
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbnailSetResponse'
      parameters:
        - in: query
          name: videoId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: thumbnails
      x-stackQL-verb: exec
  /youtube/v3/watermarks/unset:
    parameters: *ref_1
    post:
      description: Allows removal of channel watermark.
      operationId: youtube.watermarks.unset
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: watermarks
      x-stackQL-verb: exec
  /youtube/v3/watermarks/set:
    parameters: *ref_1
    post:
      description: Allows upload of watermark image and setting it for a channel.
      operationId: youtube.watermarks.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvideoBranding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: watermarks
      x-stackQL-verb: exec
  /youtube/v3/comments/markAsSpam:
    parameters: *ref_1
    post:
      description: Expresses the caller's opinion that one or more comments should be flagged as spam.
      operationId: youtube.comments.markAsSpam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
  /youtube/v3/comments:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.comments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
    delete:
      description: Deletes a resource.
      operationId: youtube.comments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: textFormat
          schema:
            type: string
        - in: query
          name: parentId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: comments
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.comments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: insert
  /youtube/v3/comments/setModerationStatus:
    parameters: *ref_1
    post:
      description: Sets the moderation status of one or more comments.
      operationId: youtube.comments.setModerationStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: moderationStatus
          required: true
          schema:
            type: string
        - in: query
          name: banAuthor
          schema:
            type: boolean
      x-stackQL-resource: comments
      x-stackQL-verb: exec
  /youtube/v3/captions:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.captions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Caption'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caption'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: sync
          schema:
            type: boolean
      x-stackQL-resource: captions
      x-stackQL-verb: insert
    put:
      description: Updates an existing resource.
      operationId: youtube.captions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Caption'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caption'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: sync
          schema:
            type: boolean
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: exec
    delete:
      description: Deletes a resource.
      operationId: youtube.captions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.captions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: videoId
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: select
  /youtube/v3/captions/{id}:
    parameters: *ref_1
    get:
      description: Downloads a caption track.
      operationId: youtube.captions.download
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: tfmt
          schema:
            type: string
        - in: query
          name: tlang
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: exec
  /youtube/v3/playlists:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.playlists.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.playlists.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.playlists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.playlists.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: exec
  /youtube/v3/search:
    parameters: *ref_1
    get:
      description: Retrieves a list of search resources
      operationId: youtube.search.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: videoDefinition
          schema:
            type: string
        - in: query
          name: videoDuration
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: locationRadius
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: videoEmbeddable
          schema:
            type: string
        - in: query
          name: videoCaption
          schema:
            type: string
        - in: query
          name: videoDimension
          schema:
            type: string
        - in: query
          name: publishedBefore
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: forMine
          schema:
            type: boolean
        - in: query
          name: videoSyndicated
          schema:
            type: string
        - in: query
          name: relatedToVideoId
          schema:
            type: string
        - in: query
          name: eventType
          schema:
            type: string
        - in: query
          name: videoType
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: forContentOwner
          schema:
            type: boolean
        - in: query
          name: channelType
          schema:
            type: string
        - in: query
          name: videoLicense
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: safeSearch
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: relevanceLanguage
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: publishedAfter
          schema:
            type: string
        - in: query
          name: videoCategoryId
          schema:
            type: string
        - in: query
          name: forDeveloper
          schema:
            type: boolean
        - in: query
          name: topicId
          schema:
            type: string
      x-stackQL-resource: search
      x-stackQL-verb: select
  /youtube/v3/videoCategories:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videoCategories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCategoryListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: video_categories
      x-stackQL-verb: select
  /youtube/v3/members:
    parameters: *ref_1
    get:
      description: Retrieves a list of members that match the request criteria for a channel.
      operationId: youtube.members.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.channel-memberships.creator
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.channel-memberships.creator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: mode
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: hasAccessToLevel
          schema:
            type: string
        - in: query
          name: filterByMemberChannelId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: members
      x-stackQL-verb: select
  /youtube/v3/tests:
    parameters: *ref_1
    post:
      description: POST method.
      operationId: youtube.tests.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: tests
      x-stackQL-verb: insert
  /youtube/v3/liveChat/messages:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.liveChatMessages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatMessageListResponse'
      parameters:
        - in: query
          name: liveChatId
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: profileImageSize
          schema:
            type: integer
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatMessages.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatMessage'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: insert
    delete:
      description: Deletes a chat message.
      operationId: youtube.liveChatMessages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: delete
  /youtube/v3/subscriptions:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.subscriptions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.subscriptions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: forChannelId
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: myRecentSubscribers
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: mySubscribers
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.subscriptions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: insert
  /youtube/v3/thirdPartyLinks:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.thirdPartyLinks.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLinkListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
        - in: query
          name: linkingToken
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.thirdPartyLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLink'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: insert
    put:
      description: Updates an existing resource.
      operationId: youtube.thirdPartyLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLink'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: exec
    delete:
      description: Deletes a resource.
      operationId: youtube.thirdPartyLinks.delete
      security: []
      parameters:
        - in: query
          name: linkingToken
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
        - in: query
          name: part
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: delete
  /youtube/v3/abuseReports:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.abuseReports.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbuseReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseReport'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: abuse_reports
      x-stackQL-verb: insert
  /youtube/v3/liveChat/moderators:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatModerators.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatModerator'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatModerator'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.liveChatModerators.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatModeratorListResponse'
      parameters:
        - in: query
          name: liveChatId
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: select
    delete:
      description: Deletes a chat moderator.
      operationId: youtube.liveChatModerators.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: delete
  /youtube/v3/liveBroadcasts/transition:
    parameters: *ref_1
    post:
      description: Transition a broadcast to a given status.
      operationId: youtube.liveBroadcasts.transition
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: broadcastStatus
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
  /youtube/v3/liveBroadcasts:
    parameters: *ref_1
    post:
      description: Inserts a new stream for the authenticated user.
      operationId: youtube.liveBroadcasts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveBroadcast'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: insert
    delete:
      description: Delete a given broadcast.
      operationId: youtube.liveBroadcasts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: delete
    put:
      description: Updates an existing broadcast for the authenticated user.
      operationId: youtube.liveBroadcasts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveBroadcast'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
    get:
      description: Retrieve the list of broadcasts associated with the given channel.
      operationId: youtube.liveBroadcasts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcastListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: broadcastType
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: broadcastStatus
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: select
  /youtube/v3/liveBroadcasts/cuepoint:
    parameters: *ref_1
    post:
      description: Insert cuepoints in a broadcast
      operationId: youtube.liveBroadcasts.insertCuepoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuepoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cuepoint'
      parameters:
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: part
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: insert
  /youtube/v3/liveBroadcasts/bind:
    parameters: *ref_1
    post:
      description: Bind a broadcast to a stream.
      operationId: youtube.liveBroadcasts.bind
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: streamId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
