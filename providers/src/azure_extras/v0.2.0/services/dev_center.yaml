openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Dev Center Client (Microsoft.DevCenter)
  description: DevCenter Management API
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ProjectNameParameter:
      name: projectName
      in: path
      description: The name of the project.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TopParameter:
      name: $top
      in: query
      description: 'The maximum number of resources to return from the operation. Example: ''$top=10''.'
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    PoolNameParameter:
      name: poolName
      in: path
      description: Name of the pool.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkConnectionName:
      name: networkConnectionName
      in: path
      description: Name of the Network Connection that can be applied to a Pool.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ScheduleNameParameter:
      name: scheduleName
      in: path
      description: The name of the schedule that uniquely identifies it.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[-\w]+$
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'').'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    DevCenterNameParameter:
      name: devCenterName
      in: path
      description: The name of the devcenter.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    CatalogNameParameter:
      name: catalogName
      in: path
      description: The name of the Catalog.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GalleryNameParameter:
      name: galleryName
      in: path
      description: The name of the gallery.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ImageNameParameter:
      name: imageName
      in: path
      description: The name of the image.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VersionNameParameter:
      name: versionName
      in: path
      description: The version of the image.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    EnvironmentTypeNameParameter:
      name: environmentTypeName
      in: path
      description: The name of the environment type.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AttachedNetworkConnectionNameParameter:
      name: attachedNetworkConnectionName
      in: path
      description: The name of the attached NetworkConnection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DevBoxDefinitionName:
      name: devBoxDefinitionName
      in: path
      description: The name of the Dev Box definition.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
  schemas:
    Capability:
      description: A name/value pair to describe a capability.
      type: object
      properties:
        name:
          description: Name of the capability.
          type: string
          readOnly: true
        value:
          description: Value of the capability.
          type: string
          readOnly: true
    TrackedResourceUpdate:
      description: Base tracked resource type for PATCH updates
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
    Tags:
      additionalProperties:
        type: string
      x-ms-mutability:
        - read
        - create
        - update
      description: Resource tags.
      properties: {}
      type: object
    CloudError:
      x-ms-external: true
      type: object
      properties:
        error:
          description: Error body
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from the DevCenter service.
      required:
        - error
    CloudErrorBody:
      x-ms-external: true
      type: object
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers: []
          description: A list of additional details about the error.
      description: An error response from the DevCenter service.
      required:
        - code
        - message
    DevCenterSku:
      description: The resource model definition representing SKU for DevCenter resources
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
        resourceType:
          type: string
          description: The name of the resource type
          readOnly: true
        locations:
          description: SKU supported locations.
          type: array
          readOnly: true
          items:
            type: string
        capabilities:
          description: Collection of name/value pairs to describe the SKU capabilities.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Capability'
          x-ms-identifiers: []
      type: object
    ProvisioningState:
      type: string
      description: Provisioning state of the resource.
      readOnly: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    SkuListResult:
      description: Results of the Microsoft.DevCenter SKU list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/DevCenterSku'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Pool:
      description: A pool of Virtual Machines.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    PoolUpdateProperties:
      description: Properties of a Pool. These properties can be updated after the resource has been created.
      type: object
      properties:
        devBoxDefinitionName:
          description: Name of a Dev Box definition in parent Project of this Pool
          type: string
        networkConnectionName:
          description: Name of a Network Connection in parent Project of this Pool
          type: string
        licenseType:
          description: Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
          $ref: '#/components/schemas/LicenseType'
        localAdministrator:
          description: Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
          $ref: '#/components/schemas/LocalAdminStatus'
    PoolProperties:
      description: Properties of a Pool
      required:
        - devBoxDefinitionName
        - networkConnectionName
        - licenseType
        - localAdministrator
      properties:
        devBoxDefinitionName:
          description: Name of a Dev Box definition in parent Project of this Pool
          type: string
        networkConnectionName:
          description: Name of a Network Connection in parent Project of this Pool
          type: string
        licenseType:
          description: Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
          $ref: '#/components/schemas/LicenseType'
        localAdministrator:
          description: Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
          $ref: '#/components/schemas/LocalAdminStatus'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    LicenseType:
      description: License Types
      enum:
        - Windows_Client
      type: string
      x-ms-enum:
        name: LicenseType
        modelAsString: true
    LocalAdminStatus:
      type: string
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: LocalAdminStatus
        modelAsString: true
    PoolListResult:
      description: Results of the machine pool list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/Pool'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    PoolUpdate:
      description: The pool properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        devBoxDefinitionName:
          description: Name of a Dev Box definition in parent Project of this Pool
          type: string
        networkConnectionName:
          description: Name of a Network Connection in parent Project of this Pool
          type: string
        licenseType:
          description: Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
          $ref: '#/components/schemas/LicenseType'
        localAdministrator:
          description: Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
          $ref: '#/components/schemas/LocalAdminStatus'
      type: object
    ImageReference:
      type: object
      description: Image reference information
      properties:
        id:
          description: Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
          type: string
        exactVersion:
          type: string
          readOnly: true
          description: The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
        publisher:
          description: The image publisher.
          type: string
        offer:
          description: The image offer.
          type: string
        sku:
          description: The image sku.
          type: string
    ImageValidationStatus:
      description: Image validation status
      enum:
        - Unknown
        - Pending
        - Succeeded
        - Failed
        - TimedOut
      type: string
      x-ms-enum:
        name: ImageValidationStatus
        modelAsString: true
    ImageValidationErrorDetails:
      type: object
      description: Image validation error details
      properties:
        code:
          type: string
          description: An identifier for the error.
        message:
          type: string
          description: A message describing the error.
    NetworkConnection:
      description: Network related settings
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        healthCheckStatus:
          description: Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        networkingResourceGroupName:
          description: The name for resource group where NICs will be placed.
          type: string
          x-ms-mutability:
            - read
            - create
        domainJoinType:
          description: AAD Join type.
          $ref: '#/components/schemas/DomainJoinType'
          x-ms-mutability:
            - read
            - create
      type: object
    NetworkConnectionUpdate:
      description: The network connection properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        subnetId:
          description: The subnet to attach Virtual Machines to
          type: string
        domainName:
          description: Active Directory domain name
          type: string
        organizationUnit:
          description: Active Directory domain Organization Unit (OU)
          type: string
        domainUsername:
          description: 'The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.'
          type: string
        domainPassword:
          description: The password for the account used to join domain
          type: string
          x-ms-secret: true
      type: object
    NetworkConnectionUpdateProperties:
      description: Properties of network connection. These properties can be updated after the resource has been created.
      type: object
      properties:
        subnetId:
          description: The subnet to attach Virtual Machines to
          type: string
        domainName:
          description: Active Directory domain name
          type: string
        organizationUnit:
          description: Active Directory domain Organization Unit (OU)
          type: string
        domainUsername:
          description: 'The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.'
          type: string
        domainPassword:
          description: The password for the account used to join domain
          type: string
          x-ms-secret: true
    NetworkProperties:
      description: Network properties
      required:
        - subnetId
        - domainJoinType
      properties:
        subnetId:
          description: The subnet to attach Virtual Machines to
          type: string
        domainName:
          description: Active Directory domain name
          type: string
        organizationUnit:
          description: Active Directory domain Organization Unit (OU)
          type: string
        domainUsername:
          description: 'The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.'
          type: string
        domainPassword:
          description: The password for the account used to join domain
          type: string
          x-ms-secret: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        healthCheckStatus:
          description: Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        networkingResourceGroupName:
          description: The name for resource group where NICs will be placed.
          type: string
          x-ms-mutability:
            - read
            - create
        domainJoinType:
          description: AAD Join type.
          $ref: '#/components/schemas/DomainJoinType'
          x-ms-mutability:
            - read
            - create
      type: object
    NetworkConnectionListResult:
      description: Result of the network connection list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnection'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DomainJoinType:
      description: Active Directory join type
      enum:
        - HybridAzureADJoin
        - AzureADJoin
      type: string
      x-ms-enum:
        name: DomainJoinType
        modelAsString: true
    HealthCheckStatus:
      description: Health check status values
      enum:
        - Pending
        - Running
        - Passed
        - Failed
        - Warning
        - Unknown
      type: string
      x-ms-enum:
        name: HealthCheckStatus
        modelAsString: true
    HealthCheckStatusDetails:
      description: Health Check details.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        startDateTime:
          type: string
          description: Start time of last execution of the health checks.
          readOnly: true
          format: date-time
        endDateTime:
          type: string
          description: End time of last execution of the health checks.
          readOnly: true
          format: date-time
        healthChecks:
          description: Details for each health check item.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheck'
          x-ms-identifiers: []
          readOnly: true
      type: object
    HealthCheckStatusDetailsProperties:
      description: Health Check properties.
      type: object
      properties:
        startDateTime:
          type: string
          description: Start time of last execution of the health checks.
          readOnly: true
          format: date-time
        endDateTime:
          type: string
          description: End time of last execution of the health checks.
          readOnly: true
          format: date-time
        healthChecks:
          description: Details for each health check item.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheck'
          x-ms-identifiers: []
          readOnly: true
    HealthCheck:
      description: An individual health check item
      type: object
      properties:
        status:
          description: The status of the health check item.
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        displayName:
          description: The display name of this health check item.
          type: string
          readOnly: true
        startDateTime:
          description: Start time of health check item.
          type: string
          readOnly: true
          format: date-time
        endDateTime:
          description: End time of the health check item.
          type: string
          readOnly: true
          format: date-time
        errorType:
          description: The type of error that occurred during this health check.
          type: string
          readOnly: true
        recommendedAction:
          description: The recommended action to fix the corresponding error.
          type: string
          readOnly: true
        additionalDetails:
          description: Additional details about the health check or the recommended action.
          type: string
          readOnly: true
    HealthCheckStatusDetailsListResult:
      description: Result of the network health check list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckStatusDetails'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Schedule:
      description: Represents a Schedule to execute a task.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ScheduleUpdate:
      description: The schedule properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        type:
          description: Supported type this scheduled task represents.
          $ref: '#/components/schemas/ScheduledType'
        frequency:
          description: The frequency of this scheduled task.
          $ref: '#/components/schemas/ScheduledFrequency'
        time:
          description: The target time to trigger the action. The format is HH:MM.
          type: string
        timeZone:
          description: The IANA timezone id at which the schedule should execute.
          type: string
        state:
          description: Indicates whether or not this scheduled task is enabled.
          $ref: '#/components/schemas/EnableStatus'
      type: object
    ScheduleUpdateProperties:
      description: Updatable properties of a Schedule.
      type: object
      properties:
        type:
          description: Supported type this scheduled task represents.
          $ref: '#/components/schemas/ScheduledType'
        frequency:
          description: The frequency of this scheduled task.
          $ref: '#/components/schemas/ScheduledFrequency'
        time:
          description: The target time to trigger the action. The format is HH:MM.
          type: string
        timeZone:
          description: The IANA timezone id at which the schedule should execute.
          type: string
        state:
          description: Indicates whether or not this scheduled task is enabled.
          $ref: '#/components/schemas/EnableStatus'
    ScheduleProperties:
      description: The Schedule properties defining when and what to execute.
      required:
        - type
        - frequency
        - timeZone
        - time
      properties:
        type:
          description: Supported type this scheduled task represents.
          $ref: '#/components/schemas/ScheduledType'
        frequency:
          description: The frequency of this scheduled task.
          $ref: '#/components/schemas/ScheduledFrequency'
        time:
          description: The target time to trigger the action. The format is HH:MM.
          type: string
        timeZone:
          description: The IANA timezone id at which the schedule should execute.
          type: string
        state:
          description: Indicates whether or not this scheduled task is enabled.
          $ref: '#/components/schemas/EnableStatus'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ScheduleListResult:
      description: Result of the schedule list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ScheduledType:
      description: The supported types for a scheduled task.
      enum:
        - StopDevBox
      type: string
      x-ms-enum:
        name: ScheduledType
        modelAsString: true
    ScheduledFrequency:
      description: The frequency of task execution.
      enum:
        - Daily
      type: string
      x-ms-enum:
        name: ScheduledFrequency
        modelAsString: true
    DevCenter:
      description: Represents a devcenter resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    DevCenterProperties:
      description: Properties of the devcenter.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    DevCenterUpdate:
      description: The devcenter resource for partial updates. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    DevCenterListResult:
      description: Result of the list devcenters operation
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DevCenter'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Project:
      description: Represents a project resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ProjectUpdateProperties:
      description: Properties of a project. These properties can be updated after the resource has been created.
      type: object
      properties:
        devCenterId:
          type: string
          description: Resource Id of an associated DevCenter
        description:
          type: string
          description: Description of the project.
    ProjectProperties:
      description: Properties of a project.
      properties:
        devCenterId:
          type: string
          description: Resource Id of an associated DevCenter
        description:
          type: string
          description: Description of the project.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ProjectUpdate:
      description: The project properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        devCenterId:
          type: string
          description: Resource Id of an associated DevCenter
        description:
          type: string
          description: Description of the project.
      type: object
    ProjectListResult:
      description: Results of the project list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Project'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Catalog:
      description: Represents a catalog.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        lastSyncTime:
          description: When the catalog was last synced.
          type: string
          readOnly: true
          format: date-time
      type: object
    CatalogUpdateProperties:
      description: Properties of a catalog. These properties can be updated after the resource has been created.
      type: object
      properties:
        gitHub:
          description: Properties for a GitHub catalog type.
          $ref: '#/components/schemas/GitCatalog'
        adoGit:
          description: Properties for an Azure DevOps catalog type.
          $ref: '#/components/schemas/GitCatalog'
    CatalogProperties:
      description: Properties of a catalog.
      properties:
        gitHub:
          description: Properties for a GitHub catalog type.
          $ref: '#/components/schemas/GitCatalog'
        adoGit:
          description: Properties for an Azure DevOps catalog type.
          $ref: '#/components/schemas/GitCatalog'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        lastSyncTime:
          description: When the catalog was last synced.
          type: string
          readOnly: true
          format: date-time
      type: object
    GitCatalog:
      description: Properties for a Git repository catalog.
      type: object
      properties:
        uri:
          description: Git URI.
          type: string
        branch:
          description: Git branch.
          type: string
        secretIdentifier:
          description: A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
          type: string
        path:
          description: The folder where the catalog items can be found inside the repository.
          type: string
    CatalogUpdate:
      description: The catalog's properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        gitHub:
          description: Properties for a GitHub catalog type.
          $ref: '#/components/schemas/GitCatalog'
        adoGit:
          description: Properties for an Azure DevOps catalog type.
          $ref: '#/components/schemas/GitCatalog'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      type: object
    CatalogListResult:
      description: Results of the catalog list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Gallery:
      description: Represents a gallery.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        galleryResourceId:
          description: The resource ID of the backing Azure Compute Gallery.
          type: string
          x-ms-mutability:
            - read
            - create
      type: object
    GalleryProperties:
      description: Properties of a gallery.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        galleryResourceId:
          description: The resource ID of the backing Azure Compute Gallery.
          type: string
          x-ms-mutability:
            - read
            - create
      required:
        - galleryResourceId
    Image:
      description: Represents an image.
      properties:
        description:
          description: The description of the image.
          type: string
          readOnly: true
        publisher:
          description: The publisher of the image.
          type: string
          readOnly: true
        offer:
          description: The name of the image offer.
          type: string
          readOnly: true
        sku:
          description: The SKU name for the image.
          type: string
          readOnly: true
        recommendedMachineConfiguration:
          description: The recommended machine configuration to use with the image.
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ImageProperties:
      description: Properties of an image.
      type: object
      properties:
        description:
          description: The description of the image.
          type: string
          readOnly: true
        publisher:
          description: The publisher of the image.
          type: string
          readOnly: true
        offer:
          description: The name of the image offer.
          type: string
          readOnly: true
        sku:
          description: The SKU name for the image.
          type: string
          readOnly: true
        recommendedMachineConfiguration:
          description: The recommended machine configuration to use with the image.
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    RecommendedMachineConfiguration:
      description: Properties for a recommended machine configuration.
      type: object
      properties:
        memory:
          description: Recommended memory range.
          $ref: '#/components/schemas/ResourceRange'
          readOnly: true
        vCPUs:
          description: Recommended vCPU range.
          $ref: '#/components/schemas/ResourceRange'
          readOnly: true
    ResourceRange:
      description: Properties for a range of values.
      type: object
      properties:
        min:
          description: Minimum value.
          type: integer
          format: int32
          readOnly: true
        max:
          description: Maximum value.
          type: integer
          format: int32
          readOnly: true
    ImageVersion:
      description: Represents an image version.
      properties:
        name:
          description: The semantic version string.
          type: string
          readOnly: true
        publishedDate:
          description: The datetime that the backing image version was published.
          type: string
          readOnly: true
          format: date-time
        excludeFromLatest:
          description: If the version should be excluded from being treated as the latest version.
          type: boolean
          readOnly: true
        osDiskImageSizeInGb:
          description: The size of the OS disk image, in GB.
          type: integer
          format: int32
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ImageVersionProperties:
      description: Properties of an image version.
      type: object
      properties:
        name:
          description: The semantic version string.
          type: string
          readOnly: true
        publishedDate:
          description: The datetime that the backing image version was published.
          type: string
          readOnly: true
          format: date-time
        excludeFromLatest:
          description: If the version should be excluded from being treated as the latest version.
          type: boolean
          readOnly: true
        osDiskImageSizeInGb:
          description: The size of the OS disk image, in GB.
          type: integer
          format: int32
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    GalleryListResult:
      description: Results of the gallery list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Gallery'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ImageListResult:
      description: Results of the image list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ImageVersionListResult:
      description: Results of the image version list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ImageVersion'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EnvironmentType:
      description: Represents an environment type.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
      type: object
    EnvironmentTypeProperties:
      description: Properties of an environment type.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    EnvironmentTypeUpdate:
      description: The environment type for partial update. Properties not provided in the update request will not be changed.
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
    EnvironmentTypeListResult:
      description: Result of the environment type list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentType'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ProjectEnvironmentType:
      description: Represents an environment type.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
        location:
          type: string
          description: The geo-location for the environment type
      type: object
    ProjectEnvironmentTypeUpdateProperties:
      description: Properties of a project environment type. These properties can be updated after the resource has been created.
      type: object
      properties:
        deploymentTargetId:
          description: Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.
          type: string
        status:
          description: Defines whether this Environment Type can be used in this Project.
          $ref: '#/components/schemas/EnableStatus'
        creatorRoleAssignment:
          description: The role definition assigned to the environment creator on backing resources.
          type: object
          properties:
            roles:
              type: object
              description: A map of roles to assign to the environment creator.
              additionalProperties:
                $ref: '#/components/schemas/EnvironmentRole'
        userRoleAssignments:
          description: Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserRoleAssignment'
    ProjectEnvironmentTypeProperties:
      description: Properties of a project environment type.
      properties:
        deploymentTargetId:
          description: Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.
          type: string
        status:
          description: Defines whether this Environment Type can be used in this Project.
          $ref: '#/components/schemas/EnableStatus'
        creatorRoleAssignment:
          description: The role definition assigned to the environment creator on backing resources.
          type: object
          properties:
            roles:
              type: object
              description: A map of roles to assign to the environment creator.
              additionalProperties:
                $ref: '#/components/schemas/EnvironmentRole'
        userRoleAssignments:
          description: Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserRoleAssignment'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ProjectEnvironmentTypeUpdate:
      description: The project environment type for partial update. Properties not provided in the update request will not be changed.
      properties:
        deploymentTargetId:
          description: Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.
          type: string
        status:
          description: Defines whether this Environment Type can be used in this Project.
          $ref: '#/components/schemas/EnableStatus'
        creatorRoleAssignment:
          description: The role definition assigned to the environment creator on backing resources.
          type: object
          properties:
            roles:
              type: object
              description: A map of roles to assign to the environment creator.
              additionalProperties:
                $ref: '#/components/schemas/EnvironmentRole'
        userRoleAssignments:
          description: Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserRoleAssignment'
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ProjectEnvironmentTypeListResult:
      description: Result of the project environment type list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvironmentType'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevBoxDefinitionListResult:
      description: Results of the Dev Box definition list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/DevBoxDefinition'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevBoxDefinitionUpdate:
      description: Partial update of a Dev Box definition resource.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information.
        sku:
          description: The SKU for Dev Boxes created using this definition.
          $ref: '#/components/schemas/Sku'
        osStorageType:
          description: The storage type used for the Operating System disk of Dev Boxes created using this definition.
          type: string
      type: object
    DevBoxDefinition:
      description: Represents a definition for a Developer Machine.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        imageValidationStatus:
          description: Validation status of the configured image.
          $ref: '#/components/schemas/ImageValidationStatus'
          readOnly: true
        imageValidationErrorDetails:
          description: Details for image validator error. Populated when the image validation is not successful.
          $ref: '#/components/schemas/ImageValidationErrorDetails'
          readOnly: true
        activeImageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information for the currently active image (only populated during updates).
          readOnly: true
      type: object
    DevBoxDefinitionUpdateProperties:
      description: Properties of a Dev Box definition. These properties can be updated after the resource has been created.
      type: object
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information.
        sku:
          description: The SKU for Dev Boxes created using this definition.
          $ref: '#/components/schemas/Sku'
        osStorageType:
          description: The storage type used for the Operating System disk of Dev Boxes created using this definition.
          type: string
    DevBoxDefinitionProperties:
      description: Properties of a Dev Box definition.
      required:
        - imageReference
        - sku
        - osStorageType
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information.
        sku:
          description: The SKU for Dev Boxes created using this definition.
          $ref: '#/components/schemas/Sku'
        osStorageType:
          description: The storage type used for the Operating System disk of Dev Boxes created using this definition.
          type: string
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        imageValidationStatus:
          description: Validation status of the configured image.
          $ref: '#/components/schemas/ImageValidationStatus'
          readOnly: true
        imageValidationErrorDetails:
          description: Details for image validator error. Populated when the image validation is not successful.
          $ref: '#/components/schemas/ImageValidationErrorDetails'
          readOnly: true
        activeImageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information for the currently active image (only populated during updates).
          readOnly: true
      type: object
    AttachedNetworkConnection:
      description: Represents an attached NetworkConnection.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        networkConnectionId:
          description: The resource ID of the NetworkConnection you want to attach.
          type: string
          x-ms-mutability:
            - read
            - create
        networkConnectionLocation:
          description: The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.
          type: string
          readOnly: true
        healthCheckStatus:
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        domainJoinType:
          description: AAD Join type of the network. This is populated based on the referenced Network Connection.
          $ref: '#/components/schemas/DomainJoinType'
          readOnly: true
      type: object
    AttachedNetworkConnectionProperties:
      description: Properties of an attached NetworkConnection.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        networkConnectionId:
          description: The resource ID of the NetworkConnection you want to attach.
          type: string
          x-ms-mutability:
            - read
            - create
        networkConnectionLocation:
          description: The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.
          type: string
          readOnly: true
        healthCheckStatus:
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        domainJoinType:
          description: AAD Join type of the network. This is populated based on the referenced Network Connection.
          $ref: '#/components/schemas/DomainJoinType'
          readOnly: true
      required:
        - networkConnectionId
    AttachedNetworkListResult:
      description: Results of the Attached Networks list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/AttachedNetworkConnection'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EnvironmentRole:
      type: object
      description: A role that can be assigned to a user.
      properties:
        roleName:
          description: The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.
          type: string
          readOnly: true
        description:
          description: This is a description of the Role Assignment.
          type: string
          readOnly: true
    UserRoleAssignment:
      type: object
      description: Mapping of user object ID to role assignments.
      x-ms-client-name: userRoleAssignmentValue
      properties:
        roles:
          type: object
          description: A map of roles to assign to the parent user.
          additionalProperties:
            $ref: '#/components/schemas/EnvironmentRole'
    OperationStatus:
      description: The current status of an async operation
      properties:
        id:
          description: Fully qualified ID for the operation status.
          type: string
          readOnly: true
        name:
          description: The operation id name
          type: string
          readOnly: true
        status:
          description: Provisioning state of the resource.
          type: string
          readOnly: true
        startTime:
          description: The start time of the operation
          type: string
          readOnly: true
          format: date-time
        endTime:
          description: The end time of the operation
          type: string
          readOnly: true
          format: date-time
        percentComplete:
          description: Percent of the operation that is complete
          type: number
          readOnly: true
          minimum: 0
          maximum: 100
        properties:
          description: Custom operation properties, populated only for a successful operation.
          type: object
          readOnly: true
        error:
          description: Operation Error message
          type: object
          properties:
            code:
              readOnly: true
              type: string
              description: The error code.
            message:
              readOnly: true
              type: string
              description: The error message.
      type: object
    EnableStatus:
      description: Enable or disable status. Indicates whether the property applied to is either enabled or disabled.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: EnableStatus
        modelAsString: true
    ListUsagesResult:
      description: List of Core Usages.
      type: object
      properties:
        value:
          description: The array page of Usages.
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: The link to get the next page of Usage result.
          type: string
          readOnly: true
    Usage:
      description: The core usage details.
      type: object
      properties:
        currentValue:
          description: The current usage.
          type: integer
          format: int64
        limit:
          description: The limit integer.
          type: integer
          format: int64
        unit:
          description: The unit details.
          type: string
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: true
        name:
          description: The name.
          $ref: '#/components/schemas/UsageName'
    UsageName:
      description: The Usage Names.
      type: object
      properties:
        localizedValue:
          description: The localized name of the resource.
          type: string
        value:
          description: The name of the resource.
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    skus:
      id: azure_extras.dev_center.skus
      name: skus
      title: Skus
      methods:
        Skus_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1skus~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/Skus_ListBySubscription'
        insert: []
        update: []
        delete: []
    pools:
      id: azure_extras.dev_center.pools
      name: pools
      title: Pools
      methods:
        Pools_ListByProject:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Pools_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Pools_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Pools_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Pools_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pools/methods/Pools_ListByProject'
        insert:
          - $ref: '#/components/x-stackQL-resources/pools/methods/Pools_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pools/methods/Pools_Delete'
    schedules:
      id: azure_extras.dev_center.schedules
      name: schedules
      title: Schedules
      methods:
        Schedules_ListByPool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Schedules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Schedules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Schedules_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Schedules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/Schedules_ListByPool'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/Schedules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/Schedules_Delete'
    network_connections:
      id: azure_extras.dev_center.network_connections
      name: network_connections
      title: Network_connections
      methods:
        NetworkConnections_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1networkConnections~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkConnections_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkConnections_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkConnections_ListHealthDetails:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1healthChecks~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkConnections_GetHealthDetails:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1healthChecks~1latest~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkConnections_RunHealthChecks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1runHealthChecks~1?api-version=2022-08-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/NetworkConnections_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/NetworkConnections_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/NetworkConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/NetworkConnections_Delete'
    dev_center:
      id: azure_extras.dev_center.dev_center
      name: dev_center
      title: Dev_center
      methods:
        DevCenters_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1devcenters~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevCenters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevCenters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevCenters_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DevCenters_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        DevCenters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dev_center/methods/DevCenters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/dev_center/methods/DevCenters_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dev_center/methods/DevCenters_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dev_center/methods/DevCenters_Delete'
    projects:
      id: azure_extras.dev_center.projects
      name: projects
      title: Projects
      methods:
        Projects_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1projects~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Projects_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Projects_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Projects_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Projects_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Projects_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_Delete'
    attached_networks:
      id: azure_extras.dev_center.attached_networks
      name: attached_networks
      title: Attached_networks
      methods:
        AttachedNetworks_ListByProject:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1attachednetworks~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AttachedNetworks_GetByProject:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1attachednetworks~1{attachedNetworkConnectionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AttachedNetworks_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AttachedNetworks_GetByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AttachedNetworks_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AttachedNetworks_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/AttachedNetworks_ListByProject'
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/AttachedNetworks_ListByDevCenter'
        insert:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/AttachedNetworks_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/AttachedNetworks_Delete'
    galleries:
      id: azure_extras.dev_center.galleries
      name: galleries
      title: Galleries
      methods:
        Galleries_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Galleries_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Galleries_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Galleries_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/Galleries_ListByDevCenter'
        insert:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/Galleries_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/Galleries_Delete'
    images:
      id: azure_extras.dev_center.images
      name: images
      title: Images
      methods:
        Images_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1images~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Images_ListByGallery:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Images_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images/methods/Images_ListByGallery'
          - $ref: '#/components/x-stackQL-resources/images/methods/Images_ListByDevCenter'
        insert: []
        update: []
        delete: []
    image_versions:
      id: azure_extras.dev_center.image_versions
      name: image_versions
      title: Image_versions
      methods:
        ImageVersions_ListByImage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}~1versions~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ImageVersions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}~1versions~1{versionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/ImageVersions_ListByImage'
        insert: []
        update: []
        delete: []
    catalogs:
      id: azure_extras.dev_center.catalogs
      name: catalogs
      title: Catalogs
      methods:
        Catalogs_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Catalogs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Catalogs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Catalogs_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Catalogs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Catalogs_Sync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1sync~1?api-version=2022-08-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/Catalogs_ListByDevCenter'
        insert:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/Catalogs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/Catalogs_Delete'
    environment_types:
      id: azure_extras.dev_center.environment_types
      name: environment_types
      title: Environment_types
      methods:
        EnvironmentTypes_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EnvironmentTypes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EnvironmentTypes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        EnvironmentTypes_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        EnvironmentTypes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/EnvironmentTypes_ListByDevCenter'
        insert:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/EnvironmentTypes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/EnvironmentTypes_Delete'
    project_environment_types:
      id: azure_extras.dev_center.project_environment_types
      name: project_environment_types
      title: Project_environment_types
      methods:
        ProjectEnvironmentTypes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ProjectEnvironmentTypes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ProjectEnvironmentTypes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ProjectEnvironmentTypes_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ProjectEnvironmentTypes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/ProjectEnvironmentTypes_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/ProjectEnvironmentTypes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/ProjectEnvironmentTypes_Delete'
    dev_box_definitions:
      id: azure_extras.dev_center.dev_box_definitions
      name: dev_box_definitions
      title: Dev_box_definitions
      methods:
        DevBoxDefinitions_ListByDevCenter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevBoxDefinitions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevBoxDefinitions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}~1?api-version=2022-08-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DevBoxDefinitions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        DevBoxDefinitions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}~1?api-version=2022-08-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DevBoxDefinitions_ListByProject:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1devboxdefinitions~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DevBoxDefinitions_GetByProject:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1devboxdefinitions~1{devBoxDefinitionName}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/DevBoxDefinitions_ListByDevCenter'
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/DevBoxDefinitions_ListByProject'
        insert:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/DevBoxDefinitions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/DevBoxDefinitions_Delete'
    operations:
      id: azure_extras.dev_center.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DevCenter~1operations~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    operation_statuses:
      id: azure_extras.dev_center.operation_statuses
      name: operation_statuses
      title: Operation_statuses
      methods:
        OperationStatuses_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1locations~1{location}~1operationStatuses~1{operationId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    usages:
      id: azure_extras.dev_center.usages
      name: usages
      title: Usages
      methods:
        Usages_ListByLocation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1locations~1{location}~1usages~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/Usages_ListByLocation'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - SKUs
      description: Lists the Microsoft.DevCenter SKUs available in a subscription
      operationId: Skus_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Pools
      description: Lists pools for a project
      operationId: Pools_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: pools
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
    get:
      tags:
        - Pools
      description: Gets a machine pool
      operationId: Pools_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pools
      x-stackQL-verb: exec
    put:
      tags:
        - Pools
      description: Creates or updates a machine pool
      operationId: Pools_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a machine pool
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pools
      x-stackQL-verb: insert
    patch:
      tags:
        - Pools
      description: Partially updates a machine pool
      operationId: Pools_Update
      requestBody:
        description: Represents a machine pool
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '202':
          description: Accepted. Operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pools
      x-stackQL-verb: exec
    delete:
      tags:
        - Pools
      description: Deletes a machine pool
      operationId: Pools_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pools
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Schedules
      description: Lists schedules for a pool
      operationId: Schedules_ListByPool
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: schedules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules/{scheduleName}/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
      - $ref: '#/components/parameters/ScheduleNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Schedules
      description: Gets a schedule resource.
      operationId: Schedules_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: schedules
      x-stackQL-verb: exec
    put:
      tags:
        - Schedules
      description: Creates or updates a Schedule.
      operationId: Schedules_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a scheduled task
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: schedules
      x-stackQL-verb: insert
    patch:
      tags:
        - Schedules
      description: Partially updates a Scheduled.
      operationId: Schedules_Update
      requestBody:
        description: Represents a scheduled task.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: schedules
      x-stackQL-verb: exec
    delete:
      tags:
        - Schedules
      description: Deletes a Scheduled.
      operationId: Schedules_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: schedules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Network Connections
      description: Lists network connections in a subscription
      operationId: NetworkConnections_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Network Connections
      description: Lists network connections in a resource group
      operationId: NetworkConnections_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkConnectionName'
    get:
      tags:
        - Network Connections
      description: Gets a network connection resource
      operationId: NetworkConnections_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: exec
    put:
      tags:
        - Network Connections
      description: Creates or updates a Network Connections resource
      operationId: NetworkConnections_CreateOrUpdate
      requestBody:
        description: Represents network connection
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnection'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: insert
    patch:
      tags:
        - Network Connections
      description: Partially updates a Network Connection
      operationId: NetworkConnections_Update
      requestBody:
        description: Represents network connection
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnectionUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        '202':
          description: Accepted. Operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - Network Connections
      description: Deletes a Network Connections resource
      operationId: NetworkConnections_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/TopParameter'
      - $ref: '#/components/parameters/NetworkConnectionName'
    get:
      tags:
        - Network Connections
      description: Lists health check status details
      operationId: NetworkConnections_ListHealthDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusDetailsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks/latest/?api-version=2022-08-01-preview:
    get:
      tags:
        - Network Connections
      description: Gets health check status details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkConnectionName'
      operationId: NetworkConnections_GetHealthDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/runHealthChecks/?api-version=2022-08-01-preview:
    post:
      tags:
        - Network Settings
      description: Triggers a new health check run. The execution and health check result can be tracked via the network Connection health check details
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkConnectionName'
      operationId: NetworkConnections_RunHealthChecks
      responses:
        '200':
          description: OK. Successfully initiated health check.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters/?api-version=2022-08-01-preview:
    get:
      tags:
        - DevCenters
      description: Lists all devcenters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: DevCenters_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/?api-version=2022-08-01-preview:
    get:
      tags:
        - DevCenters
      description: Lists all devcenters in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: DevCenters_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - DevCenters
      description: Gets a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      operationId: DevCenters_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ''
      x-stackQL-verb: exec
    put:
      tags:
        - DevCenters
      description: Creates or updates a devcenter resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      requestBody:
        description: Represents a devcenter.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenter'
      operationId: DevCenters_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        '201':
          description: Created. The request will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ''
      x-stackQL-verb: insert
    patch:
      tags:
        - DevCenters
      description: Partially updates a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      requestBody:
        description: Updatable devcenter properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenterUpdate'
      operationId: DevCenters_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        '202':
          description: Accepted. The request will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ''
      x-stackQL-verb: exec
    delete:
      tags:
        - DevCenters
      description: Deletes a devcenter
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      operationId: DevCenters_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ''
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects/?api-version=2022-08-01-preview:
    get:
      tags:
        - Projects
      description: Lists all projects in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Projects_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/?api-version=2022-08-01-preview:
    get:
      tags:
        - Projects
      description: Lists all projects in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Projects_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Projects
      description: Gets a specific project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      operationId: Projects_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: projects
      x-stackQL-verb: exec
    put:
      tags:
        - Projects
      description: Creates or updates a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        description: Represents a project.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      operationId: Projects_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: projects
      x-stackQL-verb: insert
    patch:
      tags:
        - Projects
      description: Partially updates a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        description: Updatable project properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      operationId: Projects_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '202':
          description: Accepted. Operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: projects
      x-stackQL-verb: exec
    delete:
      tags:
        - Projects
      description: Deletes a project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      operationId: Projects_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: projects
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks/?api-version=2022-08-01-preview:
    get:
      tags:
        - Attached NetworkConnections.
      description: Lists the attached NetworkConnections for a Project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: AttachedNetworks_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: attached_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks/{attachedNetworkConnectionName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Attached NetworkConnections
      description: Gets an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_GetByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: attached_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/?api-version=2022-08-01-preview:
    get:
      tags:
        - Galleries
      description: Lists galleries for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Galleries_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: galleries
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Galleries
      description: Gets a gallery
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      operationId: Galleries_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: galleries
      x-stackQL-verb: exec
    put:
      tags:
        - Galleries
      description: Creates or updates a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      requestBody:
        description: Represents a gallery.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery'
      operationId: Galleries_CreateOrUpdate
      responses:
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: galleries
      x-stackQL-verb: insert
    delete:
      tags:
        - Galleries
      description: Deletes a gallery resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      operationId: Galleries_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: galleries
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/images/?api-version=2022-08-01-preview:
    get:
      tags:
        - Images
      description: Lists images for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Images_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: images
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/?api-version=2022-08-01-preview:
    get:
      tags:
        - Images
      description: Lists images for a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Images_ListByGallery
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: images
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Images
      description: Gets a gallery image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
      operationId: Images_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions/?api-version=2022-08-01-preview:
    get:
      tags:
        - Image Versions
      description: Lists versions for an image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
      operationId: ImageVersions_ListByImage
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: image_versions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions/{versionName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Image Versions
      description: Gets an image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
      operationId: ImageVersions_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: image_versions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks/?api-version=2022-08-01-preview:
    get:
      tags:
        - Attached NetworkConnections.
      description: Lists the attached NetworkConnections for a DevCenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: AttachedNetworks_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: attached_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks/{attachedNetworkConnectionName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Attached NetworkConnections
      description: Gets an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_GetByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: attached_networks
      x-stackQL-verb: exec
    put:
      tags:
        - Attached NetworkConnections
      description: Creates or updates an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      requestBody:
        description: Represents an attached NetworkConnection.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachedNetworkConnection'
      operationId: AttachedNetworks_CreateOrUpdate
      responses:
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: attached_networks
      x-stackQL-verb: insert
    delete:
      tags:
        - Attached NetworkConnections
      description: Un-attach a NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: attached_networks
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/?api-version=2022-08-01-preview:
    get:
      tags:
        - Catalogs
      description: Lists catalogs for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Catalogs_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: catalogs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Catalogs
      description: Gets a catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: catalogs
      x-stackQL-verb: exec
    put:
      tags:
        - Catalogs
      description: Creates or updates a catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Represents a catalog.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      operationId: Catalogs_CreateOrUpdate
      responses:
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: catalogs
      x-stackQL-verb: insert
    patch:
      tags:
        - Catalogs
      description: Partially updates a catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Updatable catalog properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUpdate'
      operationId: Catalogs_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '202':
          description: The request will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: catalogs
      x-stackQL-verb: exec
    delete:
      tags:
        - Catalogs
      description: Deletes a catalog resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: catalogs
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/sync/?api-version=2022-08-01-preview:
    post:
      tags:
        - Catalogs
      description: Syncs templates for a template source.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Sync
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: catalogs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes/?api-version=2022-08-01-preview:
    get:
      tags:
        - Environment Types
      description: Lists environment types for the devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: EnvironmentTypes_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: environment_types
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes/{environmentTypeName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Environment Types
      description: Gets an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: EnvironmentTypes_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: environment_types
      x-stackQL-verb: exec
    put:
      tags:
        - Environment Types
      description: Creates or updates an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Represents an Environment Type.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentType'
      operationId: EnvironmentTypes_CreateOrUpdate
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: environment_types
      x-stackQL-verb: insert
    patch:
      tags:
        - Environment Types
      description: Partially updates an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Updatable environment type properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentTypeUpdate'
      operationId: EnvironmentTypes_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: environment_types
      x-stackQL-verb: exec
    delete:
      tags:
        - Environment Types
      description: Deletes an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: EnvironmentTypes_Delete
      responses:
        '200':
          description: OK. Resource has been deleted
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: environment_types
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/?api-version=2022-08-01-preview:
    get:
      tags:
        - Environment Types
      description: Lists environment types for a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: ProjectEnvironmentTypes_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: project_environment_types
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Environment Types
      description: Gets a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: ProjectEnvironmentTypes_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: project_environment_types
      x-stackQL-verb: exec
    put:
      tags:
        - Environment Types
      description: Creates or updates a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Represents a Project Environment Type.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvironmentType'
      operationId: ProjectEnvironmentTypes_CreateOrUpdate
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: project_environment_types
      x-stackQL-verb: insert
    patch:
      tags:
        - Environment Types
      description: Partially updates a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Updatable project environment type properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvironmentTypeUpdate'
      operationId: ProjectEnvironmentTypes_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: project_environment_types
      x-stackQL-verb: exec
    delete:
      tags:
        - Environment Types
      description: Deletes a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: ProjectEnvironmentTypes_Delete
      responses:
        '200':
          description: OK. Resource has been deleted
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: project_environment_types
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Dev Box Definitions
      description: List Dev Box definitions for a devcenter.
      operationId: DevBoxDefinitions_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/DevBoxDefinitionName'
    get:
      tags:
        - Dev Box Definitions
      description: Gets a Dev Box definition
      operationId: DevBoxDefinitions_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: exec
    put:
      tags:
        - Dev Box Definitions
      description: Creates or updates a Dev Box definition.
      operationId: DevBoxDefinitions_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a Dev Box definition.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevBoxDefinition'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        '201':
          description: Created. The operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: insert
    patch:
      tags:
        - Dev Box Definitions
      description: Partially updates a Dev Box definition.
      operationId: DevBoxDefinitions_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a Dev Box definition.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevBoxDefinitionUpdate'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        '202':
          description: Accepted. The operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: exec
    delete:
      tags:
        - Dev Box Definitions
      description: Deletes a Dev Box definition
      operationId: DevBoxDefinitions_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. Resource has been deleted.
        '202':
          description: Accepted. Operation will complete asynchronously.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Dev Box Definitions
      description: List Dev Box definitions configured for a project.
      operationId: DevBoxDefinitions_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/{devBoxDefinitionName}/?api-version=2022-08-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/DevBoxDefinitionName'
    get:
      tags:
        - Dev Box Definitions
      description: Gets a Dev Box definition configured for a project
      operationId: DevBoxDefinitions_GetByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dev_box_definitions
      x-stackQL-verb: exec
  /providers/Microsoft.DevCenter/operations/?api-version=2022-08-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available resource provider operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}/?api-version=2022-08-01-preview:
    get:
      description: Gets the current status of an async operation.
      operationId: OperationStatuses_Get
      summary: Get Operation Status
      tags:
        - OperationStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: The requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: The requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: operation_statuses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages/?api-version=2022-08-01-preview:
    get:
      operationId: Usages_ListByLocation
      description: Lists the current usages and limits in this location for the provided subscription.
      tags:
        - Usages
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: The request was successful; a list of usages is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: usages
      x-stackQL-verb: select
