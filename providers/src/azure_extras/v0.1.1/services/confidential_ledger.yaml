openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Confidential Ledger (Microsoft.ConfidentialLedger)
  description: Microsoft Azure Confidential Compute Ledger Control Plane REST API version 2020-12-01-preview.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      description: An Azure resource.
      x-ms-azure-resource: true
      type: object
      properties:
        name:
          description: Name of the Resource.
          type: string
          readOnly: true
        id:
          description: Fully qualified resource Id for the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource
          $ref: '#/components/schemas/systemData'
          readOnly: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ResourceLocation:
      description: Location of the ARM Resource
      type: object
      properties:
        location:
          description: The Azure location where the Confidential Ledger is running.
          type: string
          x-ms-mutability:
            - create
            - read
    Tags:
      description: Tags for Confidential Ledger Resource
      type: object
      properties:
        tags:
          type: object
          description: Additional tags for Confidential Ledger
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
    ResourceProviderOperationList:
      description: List containing this Resource Provider's available operations.
      type: object
      properties:
        value:
          description: Resource provider operations list.
          type: array
          items:
            $ref: '#/components/schemas/ResourceProviderOperationDefinition'
          x-ms-identifiers:
            - name
          readOnly: true
        nextLink:
          description: The URI that can be used to request the next page for list of Azure operations.
          type: string
          readOnly: true
    ResourceProviderOperationDefinition:
      description: Describes the Resource Provider Operation.
      type: object
      properties:
        name:
          description: Resource provider operation name.
          type: string
        isDataAction:
          description: Indicates whether the operation is data action or not.
          type: boolean
        display:
          description: Details about the operations
          $ref: '#/components/schemas/ResourceProviderOperationDisplay'
    ResourceProviderOperationDisplay:
      description: Describes the properties of the Operation.
      type: object
      properties:
        provider:
          description: Name of the resource provider.
          type: string
        resource:
          description: Name of the resource type.
          type: string
        operation:
          description: Name of the resource provider operation.
          type: string
        description:
          description: Description of the resource provider operation.
          type: string
    ConfidentialLedgerType:
      type: string
      description: Type of the ledger. Private means transaction data is encrypted.
      enum:
        - Unknown
        - Public
        - Private
      x-ms-enum:
        name: LedgerType
        modelAsString: true
    ProvisioningState:
      type: string
      description: Object representing ProvisioningState for Confidential Ledger.
      enum:
        - Unknown
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Deleting
        - Updating
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    LedgerRoleName:
      description: LedgerRole associated with the Security Principal of Ledger
      type: string
      enum:
        - Reader
        - Contributor
        - Administrator
      x-ms-enum:
        name: LedgerRoleName
        modelAsString: true
    CertBasedSecurityPrincipal:
      type: object
      description: Cert based security principal with Ledger RoleName
      properties:
        cert:
          description: Public key of the user cert (.pem or .cer)
          type: string
        ledgerRoleName:
          $ref: '#/components/schemas/LedgerRoleName'
    AADBasedSecurityPrincipal:
      type: object
      description: AAD based security principal with associated Ledger RoleName
      properties:
        principalId:
          description: UUID/GUID based Principal Id of the Security Principal
          type: string
        tenantId:
          description: UUID/GUID based Tenant Id of the Security Principal
          type: string
        ledgerRoleName:
          $ref: '#/components/schemas/LedgerRoleName'
    LedgerProperties:
      type: object
      description: Additional Confidential Ledger properties.
      title: LedgerProperties
      properties:
        ledgerName:
          readOnly: true
          type: string
          description: Unique name for the Confidential Ledger.
        ledgerUri:
          type: string
          readOnly: true
          description: Endpoint for calling Ledger Service.
        identityServiceUri:
          type: string
          readOnly: true
          description: Endpoint for accessing network identity.
        ledgerInternalNamespace:
          type: string
          readOnly: true
          description: Internal namespace for the Ledger
        ledgerType:
          description: Type of Confidential Ledger
          $ref: '#/components/schemas/ConfidentialLedgerType'
        provisioningState:
          description: Provisioning state of Ledger Resource
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        aadBasedSecurityPrincipals:
          description: Array of all AAD based Security Principals.
          type: array
          items:
            $ref: '#/components/schemas/AADBasedSecurityPrincipal'
          x-ms-identifiers:
            - principalId
        certBasedSecurityPrincipals:
          description: Array of all cert based Security Principals.
          type: array
          items:
            $ref: '#/components/schemas/CertBasedSecurityPrincipal'
          x-ms-identifiers: []
    ConfidentialLedger:
      type: object
      description: Confidential Ledger. Contains the properties of Confidential Ledger Resource.
      allOf:
        - $ref: '#/components/schemas/Resource'
        - $ref: '#/components/schemas/ResourceLocation'
        - $ref: '#/components/schemas/Tags'
      properties:
        properties:
          description: Properties of Confidential Ledger Resource.
          $ref: '#/components/schemas/LedgerProperties'
    ConfidentialLedgerList:
      description: Object that includes an array of Confidential Ledgers and a possible link for next set.
      type: object
      properties:
        value:
          description: List of Confidential Ledgers
          type: array
          items:
            $ref: '#/components/schemas/ConfidentialLedger'
        nextLink:
          description: The URL the client should use to fetch the next page (per server side paging).
          type: string
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 90
        minLength: 3
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LedgerNameParameter:
      name: ledgerName
      in: path
      description: Name of the Confidential Ledger
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]
        type: string
  x-stackQL-resources:
    operations:
      id: azure_extras.confidential_ledger.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ConfidentialLedger~1operations~1?api-version=2022-05-13/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    name_availability:
      id: azure_extras.confidential_ledger.name_availability
      name: name_availability
      title: Name_availability
      methods:
        CheckNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConfidentialLedger~1checkNameAvailability~1?api-version=2022-05-13/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    ledger:
      id: azure_extras.confidential_ledger.ledger
      name: ledger
      title: Ledger
      methods:
        Ledger_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1{ledgerName}~1?api-version=2022-05-13/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Ledger_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1{ledgerName}~1?api-version=2022-05-13/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Ledger_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1{ledgerName}~1?api-version=2022-05-13/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Ledger_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1{ledgerName}~1?api-version=2022-05-13/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Ledger_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1?api-version=2022-05-13/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Ledger_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ConfidentialLedger~1ledgers~1~1?api-version=2022-05-13/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ledger/methods/Ledger_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/ledger/methods/Ledger_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/ledger/methods/Ledger_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ledger/methods/Ledger_Delete'
paths:
  /providers/Microsoft.ConfidentialLedger/operations/?api-version=2022-05-13:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Retrieves a list of available API operations
      summary: Retrieves a list of available API operations under this Resource Provider.
      parameters: []
      responses:
        '200':
          description: The request was successful; response contains the list of operations under Microsoft.ConfidentialLedger resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderOperationList'
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger does not exist.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ConfidentialLedger/checkNameAvailability/?api-version=2022-05-13:
    post:
      tags:
        - NameAvailability
      description: To check whether a resource name is available.
      operationId: CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Name availability request payload.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing the reason for operation failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: name_availability
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConfidentialLedger/ledgers/{ledgerName}/?api-version=2022-05-13:
    get:
      tags:
        - Confidential Ledger
      summary: Retrieves information about a Confidential Ledger resource.
      description: Retrieves the properties of a Confidential Ledger.
      operationId: Ledger_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LedgerNameParameter'
      responses:
        '200':
          description: The request was successful; response contains the Confidential Ledger
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfidentialLedger'
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger does not exist.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ledger
      x-stackQL-verb: exec
    delete:
      tags:
        - Confidential Ledger
      summary: Deletes a Confidential Ledger resource.
      description: Deletes an existing Confidential Ledger.
      operationId: Ledger_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LedgerNameParameter'
      responses:
        '200':
          description: The request was successful; the Confidential Ledger is deleted.
        '202':
          description: The Confidential Ledger resource will be deleted asynchronously
        '204':
          description: The request was successful; Confidential Ledger does not exist.
        default:
          description: Error response describing the reason for operation failure. 409 - Conflict(Confidential Ledger is in a non-terminal state due to an ongoing operation.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ledger
      x-stackQL-verb: delete
    put:
      tags:
        - Confidential Ledger
      summary: Creates a  Confidential Ledger.
      description: Creates a  Confidential Ledger with the specified ledger parameters.
      operationId: Ledger_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LedgerNameParameter'
      requestBody:
        description: Confidential Ledger Create Request Body
        required: true
        x-ms-requestBody-name: confidentialLedger
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfidentialLedger'
      responses:
        '200':
          description: The request was successful and ledger was created; response contains the Confidential Ledger
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfidentialLedger'
        '201':
          description: The Confidential Ledger resource will be created asynchronously
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger could not be created/updated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ledger
      x-stackQL-verb: insert
    patch:
      tags:
        - Confidential Ledger
      summary: Update Confidential Ledger properties
      description: Updates properties of Confidential Ledger
      operationId: Ledger_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/LedgerNameParameter'
      requestBody:
        description: Confidential Ledger request body for Updating Ledger
        required: true
        x-ms-requestBody-name: confidentialLedger
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfidentialLedger'
      responses:
        '200':
          description: The request was successful and ledger was recovered; response contains the Confidential Ledger
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfidentialLedger'
        '201':
          description: The Confidential Ledger resource will be updated asynchronously
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger could not be created/updated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ledger
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConfidentialLedger/ledgers/?api-version=2022-05-13:
    get:
      tags:
        - Confidential Ledger
      summary: Retrieves information about all Confidential Ledger resources under the given subscription and resource group
      description: Retrieves the properties of all Confidential Ledgers.
      operationId: Ledger_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; response contains the Confidential Ledger
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfidentialLedgerList'
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger does not exist.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ledger
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ConfidentialLedger/ledgers//?api-version=2022-05-13:
    get:
      tags:
        - Confidential Ledger
      summary: Retrieves information about all Confidential Ledger resources under the given subscription
      description: Retrieves the properties of all Confidential Ledgers.
      operationId: Ledger_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; response contains the list of Confidential Ledgers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfidentialLedgerList'
        default:
          description: Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger does not exist.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ledger
      x-stackQL-verb: select
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
