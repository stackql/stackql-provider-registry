openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Microsoft SaaS
  description: Microsoft SaaS Management Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: the operation Id parameter.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    SaasResourceIdParameter:
      name: resourceId
      in: path
      description: The Saas resource ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceNameParameter:
      name: resourceName
      in: path
      description: The name of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Result:
      description: Sample result definition
      properties:
        sampleProperty:
          type: string
          description: Sample property of type string
      type: object
    SaasAppOperationsResponseWithContinuation:
      description: saas app operation response with continuation.
      type: object
      properties:
        nextLink:
          description: the next link to query to get the remaining results.
          type: string
        value:
          description: the value of response.
          type: array
          items:
            $ref: '#/components/schemas/SaasAppOperation'
    SaasAppOperation:
      description: saas app operations
      type: object
      properties:
        name:
          description: the operation name
          type: string
        display:
          description: the operation display
          $ref: '#/components/schemas/SaasAppOperationDisplay'
        origin:
          description: the operation origin
          type: string
        isDataAction:
          description: whether the operation is a data action or not.
          type: boolean
    SaasAppOperationDisplay:
      description: Saas app operation display
      type: object
      properties:
        provider:
          description: Name of the provider for display purposes
          type: string
        resource:
          description: Name of the resource type for display purposes
          type: string
        operation:
          description: Name of the operation for display purposes
          type: string
        description:
          description: Description of the operation for display purposes
          type: string
    SaasResource:
      description: SaaS REST API resource definition.
      x-ms-azure-resource: true
      properties:
        properties:
          description: saas properties
          type: object
          allOf:
            - $ref: '#/components/schemas/SaasProperties'
            - $ref: '#/components/schemas/SaasCreationProperties'
        name:
          type: string
          description: The name of the resource
          readOnly: true
        id:
          description: The resource uri
          type: string
          readOnly: true
        type:
          readOnly: true
          type: string
          description: Resource type.
        tags:
          description: the resource tags.
          $ref: '#/components/schemas/Tags'
      type: object
    SaasResourceCreation:
      description: SaaS REST API resource definition for creation.
      properties:
        id:
          description: The resource uri
          type: string
          readOnly: true
        name:
          description: The resource name
          type: string
        type:
          readOnly: true
          type: string
          description: Resource type.
        tags:
          description: the resource tags.
          $ref: '#/components/schemas/Tags'
        location:
          type: string
          description: Resource location. Only value allowed for SaaS is 'global'
        properties:
          $ref: '#/components/schemas/SaasCreationProperties'
          description: Properties of the SaaS resource that are relevant for creation.
      type: object
    SaasProperties:
      type: object
      description: saas resource properties
      properties:
        status:
          type: string
          description: The SaaS Subscription Status.
          enum:
            - NotStarted
            - PendingFulfillmentStart
            - Subscribed
            - Unsubscribed
            - Suspended
          x-ms-enum:
            name: SaasResourceStatus
            modelAsString: true
        term:
          type: object
          description: The current Term object.
          properties:
            termUnit:
              type: string
              description: The unit indicating Monthly / Yearly
            startDate:
              type: string
              description: The start date of the current term
            endDate:
              type: string
              description: The end date of the current term
        isFreeTrial:
          type: boolean
          description: Whether the current term is a Free Trial term
        created:
          type: string
          description: The created date of this resource.
          readOnly: true
        lastModified:
          type: string
          description: The last modifier date if this resource.
    SaasCreationProperties:
      type: object
      description: properties for creation saas
      properties:
        offerId:
          type: string
          description: The offer id.
        publisherId:
          type: string
          description: The publisher id.
        quantity:
          type: number
          description: The seat count.
        skuId:
          type: string
          description: The plan id.
        paymentChannelType:
          type: string
          description: The Payment channel for the SaasSubscription.
          enum:
            - SubscriptionDelegated
            - CustomerDelegated
          x-ms-enum:
            name: paymentChannelType
            modelAsString: true
        paymentChannelMetadata:
          type: object
          description: The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
          additionalProperties:
            type: string
        saasResourceName:
          type: string
          description: The SaaS resource name.
        termId:
          type: string
          description: The current Term id.
        autoRenew:
          type: boolean
          description: Whether the SaaS subscription will auto renew upon term end.
        publisherTestEnvironment:
          type: string
          description: The environment in the publisher side for this resource.
        saasSubscriptionId:
          type: string
          description: The saas subscription id used for tenant to subscription level migration request.
        saasSessionId:
          type: string
          description: The saas session id used for dev service migration request.
    AccessTokenResult:
      description: the ISV access token result response.
      type: object
      properties:
        publisherOfferBaseUri:
          description: The Publisher Offer Base Uri
          type: string
        token:
          description: The generated token
          type: string
    SaasAppResponseWithContinuation:
      description: saas app response with continuation.
      type: object
      properties:
        nextLink:
          description: the next link to query to get the remaining results.
          type: string
        value:
          description: the value of response.
          type: array
          items:
            $ref: '#/components/schemas/SaasApp'
    SaasResourceResponseWithContinuation:
      description: saas resources response with continuation.
      type: object
      properties:
        nextLink:
          description: the next link to query to get the remaining results.
          type: string
        value:
          description: the value of response.
          type: array
          items:
            $ref: '#/components/schemas/SaasResource'
    SaasApp:
      description: the saasApp resource.
      properties:
        id:
          description: the resource Id.
          type: string
          readOnly: true
        location:
          description: the resource location.
          type: string
        name:
          description: the resource name.
          type: string
        type:
          description: the resource type.
          type: string
        properties:
          description: the resource properties.
          $ref: '#/components/schemas/SaasAppProperties'
        tags:
          description: the resource tags.
          $ref: '#/components/schemas/Tags'
      type: object
    SaasAppProperties:
      description: Saas resource properties.
      type: object
      properties:
        status:
          type: string
          description: the Saas resource status.
          enum:
            - Pending
            - Subscribed
            - Unsubscribed
            - Suspended
            - Deactivated
          x-ms-enum:
            name: SaasAppStatus
            modelAsString: true
        saasAppPlan:
          description: the resource plan details.
          $ref: '#/components/schemas/SaasAppPlan'
    SaasAppPlan:
      description: Saas resource plan.
      type: object
      properties:
        publisher:
          description: the publisher id.
          type: string
        product:
          description: the offer id.
          type: string
        name:
          description: the plan id.
          type: string
    Tags:
      description: the resource tags.
      additionalProperties:
        type: string
      properties: {}
      type: object
    deleteOptions:
      description: delete Options
      type: object
      properties:
        unsubscribeOnly:
          type: boolean
          description: whether it is unsubscribeOnly
        reasonCode:
          type: number
          description: The reasonCode
        feedback:
          type: string
          description: the feedback
    moveResource:
      description: Resource Move Options
      type: object
      properties:
        targetResourceGroup:
          type: string
          description: The target resource group uri for the move
        resources:
          description: The resource uris to move
          type: array
          items:
            type: string
            description: A resources uri to move
  x-stackQL-resources:
    operations:
      id: azure_extras.saas.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1operations~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    applications:
      id: azure_extras.saas.applications
      name: applications
      title: applications
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1applications~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/list'
        insert: []
        update: []
        delete: []
    saas:
      id: azure_extras.saas.saas
      name: saas
      title: saas
      methods:
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1{resourceId}~1?api-version=2018-03-01-beta/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saas/methods/delete'
    resource:
      id: azure_extras.saas.resource
      name: resource
      title: resource
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1{resourceId}~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1{resourceId}~1?api-version=2018-03-01-beta/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1?api-version=2018-03-01-beta/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource/methods/create'
        update: []
        delete: []
    resources:
      id: azure_extras.saas.resources
      name: resources
      title: resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        saas_resources:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1saasresources~1{resourceId}~1listAccessToken~1?api-version=2018-03-01-beta/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resources/methods/list'
        insert: []
        update: []
        delete: []
    subscription_level:
      id: azure_extras.saas.subscription_level
      name: subscription_level
      title: subscription_level
      methods:
        list_by_azure_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SaaS~1resources~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1?api-version=2018-03-01-beta/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1?api-version=2018-03-01-beta/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1?api-version=2018-03-01-beta/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_move_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1validateMoveResources~1?api-version=2018-03-01-beta/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1moveResources~1?api-version=2018-03-01-beta/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscription_level/methods/get'
          - $ref: '#/components/x-stackQL-resources/subscription_level/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/subscription_level/methods/list_by_azure_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscription_level/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscription_level/methods/delete'
    subscription_level_to_unsubscribed:
      id: azure_extras.saas.subscription_level_to_unsubscribed
      name: subscription_level_to_unsubscribed
      title: subscription_level_to_unsubscribed
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1unsubscribe~1?api-version=2018-03-01-beta/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    subscription_level_access_token:
      id: azure_extras.saas.subscription_level_access_token
      name: subscription_level_access_token
      title: subscription_level_access_token
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SaaS~1resources~1{resourceName}~1listAccessToken~1?api-version=2018-03-01-beta/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscription_level_access_token/methods/list'
        insert: []
        update: []
        delete: []
    operation:
      id: azure_extras.saas.operation
      name: operation
      title: operation
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SaaS~1operationResults~1{operationId}~1?api-version=2018-03-01-beta/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.SaaS/operations/?api-version=2018-03-01-beta:
    get:
      tags:
        - SaaSResources
      operationId: operations_List
      description: Gets all SaaS app operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasAppOperationsResponseWithContinuation'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SaaS/applications/?api-version=2018-03-01-beta:
    get:
      tags:
        - SaaSResources
      operationId: Applications_List
      description: Gets all SaaS resources by subscription id and resource group name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasAppResponseWithContinuation'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.SaaS/saasresources/{resourceId}/?api-version=2018-03-01-beta:
    delete:
      tags:
        - SaaSResources
      operationId: SaaS_Delete
      description: Deletes the specified SaaS.
      parameters:
        - $ref: '#/components/parameters/SaasResourceIdParameter'
      requestBody:
        description: Parameters supplied to delete saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteOptions'
      responses:
        '200':
          description: Request successful.
        '204':
          description: Request successful.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - SaaSResources
      operationId: SaaS_GetResource
      description: Gets information about the specified SaaS.
      parameters:
        - $ref: '#/components/parameters/SaasResourceIdParameter'
      responses:
        '200':
          description: Request successful. The request returns the resulting SaaS resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SaaSResources
      operationId: SaaS_UpdateResource
      description: Updates a SaaS resource.
      parameters:
        - $ref: '#/components/parameters/SaasResourceIdParameter'
      requestBody:
        description: Parameters supplied to the update saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaasResourceCreation'
      responses:
        '200':
          description: Resource change has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.SaaS/saasresources/?api-version=2018-03-01-beta:
    put:
      tags:
        - SaaSResources
      operationId: SaaS_CreateResource
      description: Creates a SaaS resource.
      parameters: []
      requestBody:
        description: Parameters supplied to the create saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaasResourceCreation'
      responses:
        '200':
          description: SaaS creation completed successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - SaaSResources
      operationId: SaasResources_List
      description: Get All Resources
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResourceResponseWithContinuation'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.SaaS/saasresources/{resourceId}/listAccessToken/?api-version=2018-03-01-beta:
    post:
      tags:
        - SaaSResources
      operationId: SaasResource-listAccessToken
      description: Gets the ISV access token for a SaaS resource.
      parameters:
        - $ref: '#/components/parameters/SaasResourceIdParameter'
      responses:
        '200':
          description: Request successful. The request returns the generated access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResult'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.SaaS/resources/?api-version=2018-03-01-beta:
    get:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_ListByAzureSubscription
      description: Gets information about all the Subscription Level SaaS in a certain Azure subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The request returns the resulting SaaS resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResourceResponseWithContinuation'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SaaS/resources/?api-version=2018-03-01-beta:
    get:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_ListByResourceGroup
      description: Gets information about all the Subscription Level SaaS in a certain resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request successful. The request returns the resulting SaaS resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResourceResponseWithContinuation'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SaaS/resources/{resourceName}/?api-version=2018-03-01-beta:
    get:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_Get
      description: Gets information about the specified Subscription Level SaaS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: Request successful. The request returns the resulting SaaS resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_CreateOrUpdate
      description: Creates or updates a SaaS resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters supplied to the create or update subscription level saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaasResourceCreation'
      responses:
        '200':
          description: Resource creation has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_Update
      description: Updates a SaaS Subscription Level resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters supplied to the update saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaasResourceCreation'
      responses:
        '200':
          description: Resource change has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_Delete
      description: Deletes the specified SaaS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: Delete Operation completed successfully.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        '204':
          description: Delete operation completed successfully.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SaaS/resources/{resourceName}/unsubscribe/?api-version=2018-03-01-beta:
    post:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_UpdateToUnsubscribed
      description: Unsubscribe from a specified Subscription Level SaaS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters supplied to unsubscribe saas operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteOptions'
      responses:
        '200':
          description: Unsubscribe operation completed successfully.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        '204':
          description: Unsubscribe operation completed successfully.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SaaS/resources/{resourceName}/listAccessToken/?api-version=2018-03-01-beta:
    post:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_listAccessToken
      description: Gets the ISV access token for a specified Subscription Level SaaS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: Request successful. The request returns the generated access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResult'
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/validateMoveResources/?api-version=2018-03-01-beta:
    post:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_ValidateMoveResources
      description: Validate whether a specified Subscription Level SaaS can be moved.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      requestBody:
        description: Object that represents the resources to move.
        required: true
        x-ms-requestBody-name: moveResourceParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveResource'
      responses:
        '200':
          description: Validation was successful and resources can be moved
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources/?api-version=2018-03-01-beta:
    post:
      tags:
        - SubscriptionLevelSaaSResources
      operationId: SaasSubscriptionLevel_MoveResources
      description: Move a specified Subscription Level SaaS.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      requestBody:
        description: Object that represents the resources to move.
        required: true
        x-ms-requestBody-name: moveResourceParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveResource'
      responses:
        '200':
          description: Move operation completed successfully.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.SaaS/operationResults/{operationId}/?api-version=2018-03-01-beta:
    get:
      tags:
        - SaaSOperations
      operationId: SaaSOperation_Get
      description: Gets information about the specified operation progress.
      parameters:
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Operation ended successfully. The request returns the updated SaaS resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaasResource'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL to check the status of the asynchronous operation.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
