openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Intelligent Recommendations
  description: Azure Intelligent Recommendations democratizes AI and machine learning recommendations through a codeless and powerful experience powered by the same technology that fuels Xbox, Microsoft 365, and Microsoft Azure. Businesses can now provide relevant discovery for customers with this new, innovative AI for personalization and recommendations.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AccountNameParameter:
      name: accountName
      in: path
      description: The name of the RecommendationsService Account resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ModelingNameParameter:
      name: modelingName
      in: path
      description: The name of the Modeling resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ServiceEndpointNameParameter:
      name: serviceEndpointName
      in: path
      description: The name of the ServiceEndpoint resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Tags:
      description: Resource tags.
      readOnly: false
      additionalProperties:
        type: string
      properties: {}
      type: object
    EndpointAuthentication:
      description: Service endpoints authentication details.
      type: object
      properties:
        aadTenantID:
          description: AAD tenant ID.
          type: string
        principalID:
          description: AAD principal ID.
          type: string
        principalType:
          description: AAD principal type.
          type: string
          enum:
            - Application
            - User
          x-ms-enum:
            name: principalType
            modelAsString: true
    EndpointAuthenticationsList:
      description: The list of service endpoints authentication details.
      type: array
      items:
        $ref: '#/components/schemas/EndpointAuthentication'
      x-ms-identifiers: []
    CorsRule:
      description: CORS details.
      type: object
      required:
        - allowedOrigins
      properties:
        allowedOrigins:
          description: The origin domains that are permitted to make a request against the service via CORS.
          type: array
          items:
            type: string
          minItems: 1
        allowedMethods:
          description: The methods (HTTP request verbs) that the origin domain may use for a CORS request.
          type: array
          items:
            type: string
        allowedHeaders:
          description: The request headers that the origin domain may specify on the CORS request.
          type: array
          items:
            type: string
        exposedHeaders:
          description: The response headers to expose to CORS clients.
          type: array
          items:
            type: string
        maxAgeInSeconds:
          description: The number of seconds that the client/browser should cache a preflight response.
          type: integer
          format: int32
          minimum: 0
    CorsRuleList:
      description: The list of CORS details.
      type: array
      items:
        $ref: '#/components/schemas/CorsRule'
      x-ms-identifiers: []
    AccountResource:
      description: Account resource details.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Account resource properties.
          type: object
          properties:
            configuration:
              description: Account configuration. This can only be set at RecommendationsService Account creation.
              type: string
              x-ms-mutability:
                - read
                - create
              enum:
                - Free
                - Capacity
              x-ms-enum:
                name: AccountConfiguration
                modelAsString: true
            endpointAuthentications:
              description: The list of service endpoints authentication details.
              $ref: '#/components/schemas/EndpointAuthenticationsList'
            cors:
              description: The list of CORS details.
              $ref: '#/components/schemas/CorsRuleList'
            reportsConnectionString:
              description: Connection string to write Accounts reports to.
              type: string
            provisioningState:
              description: The resource provisioning state.
              type: string
              readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          $ref: '#/components/schemas/systemData'
        identity:
          description: The identity used for the resource.
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    AccountResourceList:
      description: The list of RecommendationsService Account resources.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of RecommendationsService Account resources list.
          type: string
        value:
          description: The list of RecommendationsService Account resources.
          type: array
          items:
            $ref: '#/components/schemas/AccountResource'
    AccountPatchResource:
      description: Account resource patch details.
      properties:
        tags:
          description: Resource tags.
          $ref: '#/components/schemas/Tags'
        properties:
          description: Account resource patch properties.
          type: object
          properties:
            endpointAuthentications:
              description: The list of service endpoints authentication details.
              $ref: '#/components/schemas/EndpointAuthenticationsList'
            cors:
              description: The list of CORS details.
              $ref: '#/components/schemas/CorsRuleList'
            reportsConnectionString:
              description: Connection string to write Accounts reports to.
              type: string
        identity:
          description: The identity used for the resource.
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ModelingInputData:
      description: The configuration to raw CDM data to be used as Modeling resource input.
      type: object
      properties:
        connectionString:
          description: Connection string to raw input data.
          type: string
    ModelingResource:
      description: Modeling resource details.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Modeling resource properties.
          type: object
          properties:
            features:
              description: Modeling features controls the set of supported scenarios\models being computed. This can only be set at Modeling creation.
              type: string
              x-ms-mutability:
                - read
                - create
              enum:
                - Basic
                - Standard
                - Premium
              x-ms-enum:
                name: ModelingFeatures
                modelAsString: true
            frequency:
              description: Modeling frequency controls the modeling compute frequency.
              type: string
              x-ms-mutability:
                - read
                - create
              enum:
                - Low
                - Medium
                - High
              x-ms-enum:
                name: ModelingFrequency
                modelAsString: true
            size:
              description: Modeling size controls the maximum supported input data size.
              type: string
              x-ms-mutability:
                - read
                - create
              enum:
                - Small
                - Medium
                - Large
              x-ms-enum:
                name: ModelingSize
                modelAsString: true
            inputData:
              description: The configuration to raw CDM data to be used as Modeling resource input.
              $ref: '#/components/schemas/ModelingInputData'
            provisioningState:
              description: The resource provisioning state.
              type: string
              readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          $ref: '#/components/schemas/systemData'
      type: object
    ModelingResourceList:
      description: The list of Modeling resources.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of Modeling resources list.
          type: string
        value:
          description: The list of Modeling resources.
          type: array
          items:
            $ref: '#/components/schemas/ModelingResource'
    ModelingPatchResource:
      description: Modeling resource patch details.
      properties:
        tags:
          description: Resource tags.
          $ref: '#/components/schemas/Tags'
        properties:
          description: Modeling resource properties to update.
          type: object
          properties:
            inputData:
              description: The configuration to raw CDM data to be used as Modeling resource input.
              $ref: '#/components/schemas/ModelingInputData'
      type: object
    ServiceEndpointResource:
      description: ServiceEndpoint resource details.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: ServiceEndpoint resource properties.
          type: object
          properties:
            preAllocatedCapacity:
              description: ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.
              type: integer
              x-ms-mutability:
                - read
                - create
              format: int32
              minimum: 0
            pairedLocation:
              description: The paired location that will be used by this ServiceEndpoint.
              type: string
              readOnly: true
            url:
              description: The URL where the ServiceEndpoint API is accessible at.
              type: string
              readOnly: true
            provisioningState:
              description: The resource provisioning state.
              type: string
              readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          $ref: '#/components/schemas/systemData'
      type: object
    ServiceEndpointResourceList:
      description: The list of ServiceEndpoint resources.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of ServiceEndpoint resources list.
          type: string
        value:
          description: The list of ServiceEndpoint resources.
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointResource'
    ServiceEndpointPatchResource:
      description: ServiceEndpoint resource patch details.
      type: object
      properties:
        tags:
          description: Resource tags.
          $ref: '#/components/schemas/Tags'
    AccountStatus:
      description: Account status.
      type: object
      properties:
        scopesStatuses:
          description: The list of scopes statuses.
          type: array
          items:
            $ref: '#/components/schemas/ScopeStatuses'
          x-ms-identifiers: []
    ScopeStatuses:
      description: Scope statuses.
      type: object
      properties:
        scope:
          description: The scope that the statuses refers to.
          type: string
        statuses:
          description: Scope stage statuses.
          type: array
          items:
            $ref: '#/components/schemas/StageStatus'
          x-ms-identifiers: []
    StageStatus:
      description: Stage status.
      type: object
      properties:
        stage:
          description: The stage name.
          type: string
        status:
          description: The status of the stage.
          type: string
        time:
          description: The time of the status.
          type: string
          format: date-time
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    accounts:
      id: azure_extras.intelligent_recommendations.accounts
      name: accounts
      title: accounts
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.RecommendationsService~1checkNameAvailability?api-version=2022-03-01-preview/post'
            operationId: Accounts_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.RecommendationsService~1accounts?api-version=2022-03-01-preview/get'
            operationId: Accounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountResourceList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts?api-version=2022-03-01-preview/get'
            operationId: Accounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}?api-version=2022-03-01-preview/get'
            operationId: Accounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}?api-version=2022-03-01-preview/put'
            operationId: Accounts_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}?api-version=2022-03-01-preview/patch'
            operationId: Accounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}?api-version=2022-03-01-preview/delete'
            operationId: Accounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    accounts_status:
      id: azure_extras.intelligent_recommendations.accounts_status
      name: accounts_status
      title: accounts_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1status?api-version=2022-03-01-preview/post'
            operationId: AccountsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    modelings:
      id: azure_extras.intelligent_recommendations.modelings
      name: modelings
      title: modelings
      methods:
        list_by_account_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1modeling?api-version=2022-03-01-preview/get'
            operationId: Modeling_ListByAccountResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ModelingResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1modeling~1{modelingName}?api-version=2022-03-01-preview/get'
            operationId: Modeling_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ModelingResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1modeling~1{modelingName}?api-version=2022-03-01-preview/put'
            operationId: Modeling_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ModelingResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1modeling~1{modelingName}?api-version=2022-03-01-preview/patch'
            operationId: Modeling_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ModelingResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1modeling~1{modelingName}?api-version=2022-03-01-preview/delete'
            operationId: Modeling_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/modelings/methods/get'
          - $ref: '#/components/x-stackQL-resources/modelings/methods/list_by_account_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/modelings/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/modelings/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/modelings/methods/delete'
    service_endpoints:
      id: azure_extras.intelligent_recommendations.service_endpoints
      name: service_endpoints
      title: service_endpoints
      methods:
        list_by_account_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1serviceEndpoints?api-version=2022-03-01-preview/get'
            operationId: ServiceEndpoints_ListByAccountResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceEndpointResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1serviceEndpoints~1{serviceEndpointName}?api-version=2022-03-01-preview/get'
            operationId: ServiceEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceEndpointResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1serviceEndpoints~1{serviceEndpointName}?api-version=2022-03-01-preview/put'
            operationId: ServiceEndpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceEndpointResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1serviceEndpoints~1{serviceEndpointName}?api-version=2022-03-01-preview/patch'
            operationId: ServiceEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceEndpointResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecommendationsService~1accounts~1{accountName}~1serviceEndpoints~1{serviceEndpointName}?api-version=2022-03-01-preview/delete'
            operationId: ServiceEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_endpoints/methods/list_by_account_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_endpoints/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/service_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_endpoints/methods/delete'
    operation_status:
      id: azure_extras.intelligent_recommendations.operation_status
      name: operation_status
      title: operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.RecommendationsService~1locations~1{location}~1operationStatuses~1{operationId}?api-version=2022-03-01-preview/get'
            operationId: OperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_extras.intelligent_recommendations.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.RecommendationsService~1operations?api-version=2022-03-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.RecommendationsService/checkNameAvailability?api-version=2022-03-01-preview:
    post:
      operationId: Accounts_CheckNameAvailability
      description: Checks that the RecommendationsService Account name is valid and is not already in use.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Check name availability request details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Successful. The response describes the name availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.RecommendationsService/accounts?api-version=2022-03-01-preview:
    get:
      operationId: Accounts_ListBySubscription
      description: Returns list of RecommendationsService Account resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Account resources list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts?api-version=2022-03-01-preview:
    get:
      operationId: Accounts_ListByResourceGroup
      description: Returns list of RecommendationsService Account resources.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Account resources list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}?api-version=2022-03-01-preview:
    get:
      operationId: Accounts_Get
      description: Returns RecommendationsService Account resource for a given name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Accounts_CreateOrUpdate
      description: Creates or updates RecommendationsService Account resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Account details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        '201':
          description: RecommendationsService Account resource is being created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      operationId: Accounts_Update
      description: Updates RecommendationsService Account details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Account resource patch details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPatchResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        '202':
          description: RecommendationsService Account resource is being updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      operationId: Accounts_Delete
      description: Deletes RecommendationsService Account resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: RecommendationsService Account resource deleted successfully.
        '202':
          description: RecommendationsService Account resource is being deleted.
        '204':
          description: RecommendationsService Account resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}/status?api-version=2022-03-01-preview:
    post:
      operationId: AccountsStatus_Get
      description: Returns RecommendationsService Account status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The status of the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Accounts_GetStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}/modeling?api-version=2022-03-01-preview:
    get:
      operationId: Modeling_ListByAccountResource
      description: Returns list of Modeling resources for a given Account name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Modeling resources list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}/modeling/{modelingName}?api-version=2022-03-01-preview:
    get:
      operationId: Modeling_Get
      description: Returns Modeling resources for a given name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ModelingNameParameter'
      responses:
        '200':
          description: Modeling resource details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Modeling_CreateOrUpdate
      description: Creates or updates Modeling resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ModelingNameParameter'
      requestBody:
        description: Modeling resource details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResource'
        '201':
          description: Modeling resource is being created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      operationId: Modeling_Update
      description: Updates Modeling resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ModelingNameParameter'
      requestBody:
        description: Modeling resource patch details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingPatchResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResource'
        '202':
          description: Modeling resource is being updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      operationId: Modeling_Delete
      description: Deletes Modeling resources of a given name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ModelingNameParameter'
      responses:
        '200':
          description: Modeling resource deleted successfully.
        '202':
          description: Modeling resource is being deleted.
        '204':
          description: Modeling resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}/serviceEndpoints?api-version=2022-03-01-preview:
    get:
      operationId: ServiceEndpoints_ListByAccountResource
      description: Returns list of ServiceEndpoint resources for a given Account name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: ServiceEndpoint resources list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecommendationsService/accounts/{accountName}/serviceEndpoints/{serviceEndpointName}?api-version=2022-03-01-preview:
    get:
      operationId: ServiceEndpoints_Get
      description: Returns ServiceEndpoint resources for a given name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ServiceEndpointNameParameter'
      responses:
        '200':
          description: ServiceEndpoint resource details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ServiceEndpoints_CreateOrUpdate
      description: Creates or updates ServiceEndpoint resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ServiceEndpointNameParameter'
      requestBody:
        description: ServiceEndpoint resource details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResource'
        '201':
          description: ServiceEndpoint resource is being created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      operationId: ServiceEndpoints_Update
      description: Updates ServiceEndpoint resource details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ServiceEndpointNameParameter'
      requestBody:
        description: ServiceEndpoint resource patch details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointPatchResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResource'
        '202':
          description: ServiceEndpoint resource is being updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      operationId: ServiceEndpoints_Delete
      description: Deletes ServiceEndpoint resources of a given name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ServiceEndpointNameParameter'
      responses:
        '200':
          description: ServiceEndpoint resource deleted successfully.
        '202':
          description: ServiceEndpoint Account resource is being created or updated.
        '204':
          description: ServiceEndpoint resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /providers/Microsoft.RecommendationsService/locations/{location}/operationStatuses/{operationId}?api-version=2022-03-01-preview:
    get:
      operationId: OperationStatuses_Get
      description: Returns the current status of an async operation.
      parameters:
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.RecommendationsService/operations?api-version=2022-03-01-preview:
    get:
      operationId: Operations_List
      description: Returns list of operations.
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
