openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Customer Insights Management Client
  description: The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
  schemas:
    HubBillingInfoFormat:
      properties:
        skuName:
          type: string
          description: The sku name.
        minUnits:
          type: integer
          minimum: 1
          maximum: 10
          description: The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions.
        maxUnits:
          type: integer
          minimum: 1
          maximum: 10
          description: The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions.
      description: Hub billing info.
      type: object
    HubPropertiesFormat:
      properties:
        apiEndpoint:
          type: string
          readOnly: true
          description: API endpoint URL of the hub.
        webEndpoint:
          type: string
          readOnly: true
          description: Web endpoint URL of the hub.
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the hub.
        tenantFeatures:
          type: integer
          description: The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
        hubBillingInfo:
          $ref: '#/components/schemas/HubBillingInfoFormat'
          description: Billing settings of the hub.
      description: Properties of hub.
      type: object
    Hub:
      description: Hub resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HubPropertiesFormat'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    HubListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Hub'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link for next set of results.
      description: Response of list hub operation.
      type: object
    MetadataDefinitionBase:
      properties:
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: The attributes for the Type.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions for the property.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display names for the property.
        localizedAttributes:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
          description: Any custom localized attributes for the Type.
        smallImage:
          type: string
          description: Small Image associated with the Property or EntityType.
        mediumImage:
          type: string
          description: Medium Image associated with the Property or EntityType.
        largeImage:
          type: string
          description: Large Image associated with the Property or EntityType.
      description: The Metadata definition base.
      type: object
    EntityTypeDefinition:
      description: Describes an entity.
      properties:
        apiEntitySetName:
          type: string
          description: The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: Type of entity.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          description: The properties of the Profile.
        instancesCount:
          type: integer
          description: The instance count.
        lastChangedUtc:
          type: string
          readOnly: true
          format: date-time
          description: The last changed time for the type definition.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        schemaItemTypeLink:
          type: string
          description: The schema org link. This helps ACI identify and suggest semantic models.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        timestampFieldName:
          type: string
          description: The timestamp property name. Represents the time when the interaction or profile update happened.
        typeName:
          type: string
          description: The name of the entity.
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: The attributes for the Type.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions for the property.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display names for the property.
        localizedAttributes:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
          description: Any custom localized attributes for the Type.
        smallImage:
          type: string
          description: Small Image associated with the Property or EntityType.
        mediumImage:
          type: string
          description: Medium Image associated with the Property or EntityType.
        largeImage:
          type: string
          description: Large Image associated with the Property or EntityType.
      type: object
    ProfileEnumValidValuesFormat:
      properties:
        value:
          type: integer
          description: The integer value of the enum member.
        localizedValueNames:
          type: object
          additionalProperties:
            type: string
          description: Localized names of the enum member.
      description: Valid enum values in case of an enum property.
      type: object
    PropertyDefinition:
      required:
        - fieldName
        - fieldType
      properties:
        arrayValueSeparator:
          type: string
          description: Array value separator for properties with isArray set.
        enumValidValues:
          type: array
          items:
            $ref: '#/components/schemas/ProfileEnumValidValuesFormat'
          description: Describes valid values for an enum property.
        fieldName:
          type: string
          description: Name of the property.
        fieldType:
          type: string
          description: Type of the property.
        isArray:
          type: boolean
          description: Indicates if the property is actually an array of the fieldType above on the data api.
        isEnum:
          type: boolean
          description: Indicates if the property is an enum.
        isFlagEnum:
          type: boolean
          description: Indicates if the property is an flag enum.
        isImage:
          type: boolean
          description: Whether the property is an Image.
        isLocalizedString:
          type: boolean
          description: Whether the property is a localized string.
        isName:
          type: boolean
          description: Whether the property is a name or a part of name.
        isRequired:
          type: boolean
          description: Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field.
        propertyId:
          type: string
          description: The ID associated with the property.
        schemaItemPropLink:
          type: string
          description: URL encoded schema.org item prop link for the property.
        maxLength:
          type: integer
          description: Max length of string. Used only if type is string.
        isAvailableInGraph:
          type: boolean
          description: Whether property is available in graph or not.
        dataSourcePrecedenceRules:
          type: array
          items:
            $ref: '#/components/schemas/DataSourcePrecedence'
          readOnly: true
          description: This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.
      description: Property definition.
      type: object
    AuthorizationPolicy:
      required:
        - permissions
      properties:
        policyName:
          type: string
          readOnly: true
          description: Name of the policy.
        permissions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PermissionTypes'
          description: The permissions associated with the policy.
        primaryKey:
          type: string
          description: Primary key associated with the policy.
        secondaryKey:
          type: string
          description: Secondary key associated with the policy.
      description: The authorization policy.
      type: object
    SalesforceDiscoverSetting:
      required:
        - salesforceConnectionStringSecretUrl
      properties:
        salesforceConnectionStringSecretUrl:
          type: string
          description: The salesforce connection string secret URL.
      description: Salesforce discover setting.
      type: object
    SalesforceTable:
      required:
        - tableName
        - tableSchema
        - tableCategory
      properties:
        isProfile:
          type: string
          description: Indicating whether this instance is profile.
        tableCategory:
          type: string
          description: The table category.
        tableName:
          type: string
          description: The name of the table.
        tableRemarks:
          type: string
          description: The table remarks.
        tableSchema:
          type: string
          description: The table schema.
      description: Salesforce table.
      type: object
    SalesforceConnectorProperties:
      required:
        - usersetting
        - salesforcetables
      description: The Salesforce connector properties.
      properties:
        usersetting:
          $ref: '#/components/schemas/SalesforceDiscoverSetting'
          description: The user settings.
        salesforcetables:
          type: array
          items:
            $ref: '#/components/schemas/SalesforceTable'
          description: The Salesforce tables.
      type: object
    AzureBlobConnectorProperties:
      required:
        - connectionKeyVaultUrl
      description: The Azure Blob connector properties.
      properties:
        connectionKeyVaultUrl:
          type: string
          description: The connection KeyVault URL.
      type: object
    CrmConnectorProperties:
      required:
        - organizationId
        - organizationUrl
        - entities
      description: The CRM connector properties.
      properties:
        connectionString:
          type: string
          description: The connection string.
        organizationId:
          type: string
          description: The organization ID.
        organizationUrl:
          type: string
          description: The organization URL.
        entities:
          type: array
          items:
            $ref: '#/components/schemas/CrmConnectorEntities'
          description: The entities like account, contact, opportunity.
        accessToken:
          type: string
          description: The access token.
      type: object
    CrmConnectorEntities:
      required:
        - logicalName
      description: The CRM connector entities.
      properties:
        logicalName:
          type: string
          description: The logical name.
        displayName:
          type: string
          description: The display name.
        isProfile:
          type: boolean
          description: Indicating whether this is profile.
      type: object
    Connector:
      required:
        - connectorType
        - connectorProperties
      properties:
        connectorId:
          type: integer
          readOnly: true
          description: ID of the connector.
        connectorName:
          type: string
          description: Name of the connector.
        connectorType:
          $ref: '#/components/schemas/ConnectorType'
          description: Type of connector.
        displayName:
          type: string
          description: Display name of the connector.
        description:
          type: string
          description: Description of the connector.
        connectorProperties:
          type: object
          additionalProperties:
            type: object
          description: The connector properties.
        created:
          type: string
          readOnly: true
          format: date-time
          description: The created time.
        lastModified:
          type: string
          readOnly: true
          format: date-time
          description: The last modified time.
        state:
          type: string
          readOnly: true
          enum:
            - Creating
            - Created
            - Ready
            - Expiring
            - Deleting
            - Failed
          x-ms-enum:
            name: ConnectorStates
            modelAsString: false
          description: State of connector.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        isInternal:
          type: boolean
          description: If this is an internal connector.
      description: Properties of connector.
      type: object
    ConnectorMappingErrorManagement:
      required:
        - errorManagementType
      properties:
        errorManagementType:
          type: string
          enum:
            - RejectAndContinue
            - StopImport
            - RejectUntilLimit
          x-ms-enum:
            name: ErrorManagementTypes
            modelAsString: false
          description: The type of error management to use for the mapping.
        errorLimit:
          type: integer
          description: The error limit allowed while importing data.
      description: The error management.
      type: object
    ConnectorMappingFormat:
      required:
        - formatType
      properties:
        formatType:
          type: string
          enum:
            - TextFormat
          x-ms-enum:
            name: FormatTypes
            modelAsString: false
          description: The type mapping format.
        columnDelimiter:
          type: string
          description: The character that signifies a break between columns.
        acceptLanguage:
          type: string
          description: The oData language.
        quoteCharacter:
          type: string
          description: Quote character, used to indicate enquoted fields.
        quoteEscapeCharacter:
          type: string
          description: Escape character for quotes, can be the same as the quoteCharacter.
        arraySeparator:
          type: string
          description: Character separating array elements.
      description: Connector mapping property format.
      type: object
    ConnectorMappingAvailability:
      required:
        - interval
      properties:
        frequency:
          type: string
          enum:
            - Minute
            - Hour
            - Day
            - Week
            - Month
          x-ms-enum:
            name: FrequencyTypes
            modelAsString: false
          description: The frequency to update.
        interval:
          type: integer
          description: The interval of the given frequency to use.
      description: Connector mapping property availability.
      type: object
    ConnectorMappingStructure:
      required:
        - propertyName
        - columnName
      properties:
        propertyName:
          type: string
          description: The property name of the mapping entity.
        columnName:
          type: string
          description: The column name of the import file.
        customFormatSpecifier:
          type: string
          description: Custom format specifier for input parsing.
        isEncrypted:
          type: boolean
          description: Indicates if the column is encrypted.
      description: Connector mapping property structure.
      type: object
    ConnectorMappingCompleteOperation:
      properties:
        completionOperationType:
          type: string
          enum:
            - DoNothing
            - DeleteFile
            - MoveFile
          x-ms-enum:
            name: CompletionOperationTypes
            modelAsString: false
          description: The type of completion operation.
        destinationFolder:
          type: string
          description: The destination folder where files will be moved to once the import is done.
      description: The complete operation.
      type: object
    ConnectorMappingProperties:
      required:
        - availability
        - completeOperation
        - errorManagement
        - format
        - structure
      properties:
        folderPath:
          type: string
          description: The folder path for the mapping.
        fileFilter:
          type: string
          description: The file filter for the mapping.
        hasHeader:
          type: boolean
          description: If the file contains a header or not.
        errorManagement:
          $ref: '#/components/schemas/ConnectorMappingErrorManagement'
          description: The error management setting for the mapping.
        format:
          $ref: '#/components/schemas/ConnectorMappingFormat'
          description: The format of mapping property.
        availability:
          $ref: '#/components/schemas/ConnectorMappingAvailability'
          description: The availability of mapping property.
        structure:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorMappingStructure'
          description: Ingestion mapping information at property level.
        completeOperation:
          $ref: '#/components/schemas/ConnectorMappingCompleteOperation'
          description: The operation after import is done.
      description: The connector mapping properties.
      type: object
    ConnectorMapping:
      required:
        - entityType
        - entityTypeName
        - mappingProperties
      properties:
        connectorName:
          type: string
          readOnly: true
          description: The connector name.
        connectorType:
          $ref: '#/components/schemas/ConnectorType'
          description: Type of connector.
        created:
          type: string
          readOnly: true
          format: date-time
          description: The created time.
        lastModified:
          type: string
          readOnly: true
          format: date-time
          description: The last modified time.
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: Defines which entity type the file should map to.
        entityTypeName:
          type: string
          description: The mapping entity name.
        connectorMappingName:
          type: string
          readOnly: true
          description: The connector mapping name
        displayName:
          type: string
          description: Display name for the connector mapping.
        description:
          type: string
          description: The description of the connector mapping.
        dataFormatId:
          type: string
          readOnly: true
          description: The DataFormat ID.
        mappingProperties:
          $ref: '#/components/schemas/ConnectorMappingProperties'
          description: The properties of the mapping.
        nextRunTime:
          type: string
          readOnly: true
          format: date-time
          description: The next run time based on customer's settings.
        runId:
          type: string
          readOnly: true
          description: The RunId.
        state:
          type: string
          readOnly: true
          enum:
            - Creating
            - Created
            - Failed
            - Ready
            - Running
            - Stopped
            - Expiring
          x-ms-enum:
            name: ConnectorMappingStates
            modelAsString: false
          description: State of connector mapping.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
      description: The connector mapping definition.
      type: object
    KpiThresholds:
      properties:
        lowerLimit:
          type: number
          format: decimal
          description: The lower threshold limit.
        upperLimit:
          type: number
          format: decimal
          description: The upper threshold limit.
        increasingKpi:
          type: boolean
          description: Whether or not the KPI is an increasing KPI.
      required:
        - lowerLimit
        - upperLimit
        - increasingKpi
      description: Defines the KPI Threshold limits.
      type: object
    KpiDefinition:
      required:
        - entityType
        - entityTypeName
        - calculationWindow
        - function
        - expression
      properties:
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: The mapping entity type.
        entityTypeName:
          type: string
          description: The mapping entity name.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        kpiName:
          type: string
          readOnly: true
          description: The KPI name.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the KPI.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized description for the KPI.
        calculationWindow:
          type: string
          enum:
            - Lifetime
            - Hour
            - Day
            - Week
            - Month
          x-ms-enum:
            name: CalculationWindowTypes
            modelAsString: false
          description: The calculation window.
        calculationWindowFieldName:
          type: string
          description: Name of calculation window field.
        function:
          type: string
          enum:
            - Sum
            - Avg
            - Min
            - Max
            - Last
            - Count
            - None
            - CountDistinct
          x-ms-enum:
            name: KpiFunctions
            modelAsString: false
          description: The computation function for the KPI.
        expression:
          type: string
          description: The computation expression for the KPI.
        unit:
          type: string
          description: The unit of measurement for the KPI.
        filter:
          type: string
          description: The filter expression for the KPI.
        groupBy:
          type: array
          items:
            type: string
          description: the group by properties for the KPI.
        groupByMetadata:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/KpiGroupByMetadata'
          description: The KPI GroupByMetadata.
        participantProfilesMetadata:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/KpiParticipantProfilesMetadata'
          description: The participant profiles.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        thresHolds:
          $ref: '#/components/schemas/KpiThresholds'
          description: The KPI thresholds.
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/KpiAlias'
          description: The aliases.
        extracts:
          type: array
          items:
            $ref: '#/components/schemas/KpiExtract'
          description: The KPI extracts.
      description: Defines the KPI Threshold limits.
      type: object
    KpiAlias:
      required:
        - aliasName
        - expression
      properties:
        aliasName:
          type: string
          description: KPI alias name.
        expression:
          type: string
          description: The expression.
      description: The KPI alias.
      type: object
    KpiExtract:
      required:
        - extractName
        - expression
      properties:
        extractName:
          type: string
          description: KPI extract name.
        expression:
          type: string
          description: The expression.
      description: The KPI extract.
      type: object
    KpiGroupByMetadata:
      properties:
        displayName:
          type: object
          additionalProperties:
            type: string
          description: The display name.
        fieldName:
          type: string
          description: The name of the field.
        fieldType:
          type: string
          description: The type of the field.
      description: The KPI GroupBy field metadata.
      type: object
    KpiParticipantProfilesMetadata:
      required:
        - typeName
      properties:
        typeName:
          type: string
          description: Name of the type.
      description: The KPI participant profile metadata.
      type: object
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      x-ms-azure-resource: true
      description: Common properties of Azure resource.
      type: object
    ProxyResource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      x-ms-azure-resource: true
      description: Common properties of proxy resource.
      type: object
    WidgetType:
      required:
        - definition
      properties:
        widgetTypeName:
          type: string
          readOnly: true
          description: Name of the widget type.
        definition:
          type: string
          description: Definition for widget type.
        description:
          type: string
          description: Description for widget type.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the widget type.
        imageUrl:
          type: string
          description: The image URL.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        widgetVersion:
          type: string
          description: The widget version.
        changed:
          type: string
          readOnly: true
          format: date-time
          description: Date time when widget type was last modified.
        created:
          type: string
          readOnly: true
          format: date-time
          description: Date time when widget type was created.
      description: Definition of WidgetType.
      type: object
    View:
      required:
        - definition
      properties:
        viewName:
          type: string
          readOnly: true
          description: Name of the view.
        userId:
          type: string
          description: the user ID.
        tenantId:
          type: string
          readOnly: true
          description: the hub name.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the view.
        definition:
          type: string
          description: View definition.
        changed:
          type: string
          readOnly: true
          format: date-time
          description: Date time when view was last modified.
        created:
          type: string
          readOnly: true
          format: date-time
          description: Date time when view was created.
      description: The view in Customer 360 web application.
      type: object
    LinkDefinition:
      required:
        - sourceEntityType
        - targetEntityType
        - sourceEntityTypeName
        - targetEntityTypeName
        - participantPropertyReferences
      properties:
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        linkName:
          type: string
          readOnly: true
          description: The link name.
        sourceEntityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityType
            modelAsString: false
          description: Type of source entity.
        targetEntityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityType
            modelAsString: false
          description: Type of target entity.
        sourceEntityTypeName:
          type: string
          description: Name of the source Entity Type.
        targetEntityTypeName:
          type: string
          description: Name of the target Entity Type.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the Link.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions for the Link.
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TypePropertiesMapping'
          description: The set of properties mappings between the source and target Types.
        participantPropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantPropertyReference'
          description: The properties that represent the participating profile.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        referenceOnly:
          type: boolean
          description: Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles.
        operationType:
          type: string
          enum:
            - Upsert
            - Delete
          x-ms-enum:
            name: InstanceOperationType
            modelAsString: false
          description: Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
      description: The definition of Link.
      type: object
    RelationshipTypeFieldMapping:
      required:
        - profileFieldName
        - relatedProfileKeyProperty
      properties:
        profileFieldName:
          type: string
          description: Specifies the fieldName in profile.
        relatedProfileKeyProperty:
          type: string
          description: Specifies the KeyProperty (from StrongId) of the related profile.
      description: Map a field of profile to its corresponding StrongId in Related Profile.
      type: object
    RelationshipTypeMapping:
      required:
        - fieldMappings
      properties:
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipTypeFieldMapping'
          description: Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.
      description: Maps fields in Profile to their corresponding StrongIds in Related Profile.
      type: object
    RelationshipDefinition:
      required:
        - profileType
        - relatedProfileType
      properties:
        cardinality:
          type: string
          enum:
            - OneToOne
            - OneToMany
            - ManyToMany
          x-ms-enum:
            name: CardinalityTypes
            modelAsString: false
          description: The Relationship Cardinality.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the Relationship.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions for the Relationship.
        expiryDateTimeUtc:
          type: string
          format: date-time
          description: The expiry date time in UTC.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          description: The properties of the Relationship.
        lookupMappings:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipTypeMapping'
          description: Optional property to be used to map fields in profile to their strong ids in related profile.
        profileType:
          type: string
          description: Profile type.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        relationshipName:
          type: string
          readOnly: true
          description: The Relationship name.
        relatedProfileType:
          type: string
          description: Related profile being referenced.
        relationshipGuidId:
          type: string
          readOnly: true
          description: The relationship guid id.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
      description: The definition of Relationship.
      type: object
    RelationshipLinkFieldMapping:
      required:
        - interactionFieldName
        - relationshipFieldName
      properties:
        interactionFieldName:
          type: string
          description: The field name on the Interaction Type.
        linkType:
          type: string
          enum:
            - UpdateAlways
            - CopyIfNull
          x-ms-enum:
            name: LinkTypes
            modelAsString: false
          description: Link type.
        relationshipFieldName:
          type: string
          description: The field name on the Relationship metadata.
      description: The fields mapping for Relationships.
      type: object
    RelationshipLinkDefinition:
      required:
        - interactionType
        - profilePropertyReferences
        - relatedProfilePropertyReferences
        - relationshipName
      properties:
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the Relationship Link.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions for the Relationship Link.
        interactionType:
          type: string
          description: The InteractionType associated with the Relationship Link.
        linkName:
          type: string
          readOnly: true
          description: The name of the Relationship Link.
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipLinkFieldMapping'
          description: The mappings between Interaction and Relationship fields.
        profilePropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantProfilePropertyReference'
          description: The property references for the Profile of the Relationship.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        relatedProfilePropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantProfilePropertyReference'
          description: The property references for the Related Profile of the Relationship.
        relationshipName:
          type: string
          description: The Relationship associated with the Link.
        relationshipGuidId:
          type: string
          readOnly: true
          description: The relationship guid id.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
      description: The definition of relationship link.
      type: object
    TypePropertiesMapping:
      required:
        - sourcePropertyName
        - targetPropertyName
      properties:
        sourcePropertyName:
          type: string
          description: ' Property name on the source Entity Type.'
        targetPropertyName:
          type: string
          description: Property name on the target Entity Type.
        linkType:
          type: string
          enum:
            - UpdateAlways
            - CopyIfNull
          x-ms-enum:
            name: LinkTypes
            modelAsString: false
          description: Link type.
      description: Metadata for a Link's property mapping.
      type: object
    Participant:
      required:
        - participantName
        - profileTypeName
        - participantPropertyReferences
      properties:
        profileTypeName:
          type: string
          description: Profile type name.
        participantPropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantPropertyReference'
          description: The property references.
        participantName:
          type: string
          description: Participant name.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions.
        role:
          type: string
          description: The role that the participant is playing in the interaction.
      description: Describes a profile type participating in an interaction.
      type: object
    ParticipantPropertyReference:
      required:
        - sourcePropertyName
        - targetPropertyName
      properties:
        sourcePropertyName:
          type: string
          description: The source property that maps to the target property.
        targetPropertyName:
          type: string
          description: The target property that maps to the source property.
      description: The participant property reference.
      type: object
    ParticipantProfilePropertyReference:
      required:
        - interactionPropertyName
        - profilePropertyName
      properties:
        interactionPropertyName:
          type: string
          description: The source interaction property that maps to the target profile property.
        profilePropertyName:
          type: string
          description: The target profile property that maps to the source interaction property.
      description: The participant profile property reference.
      type: object
    InteractionTypeDefinition:
      description: The Interaction Type Definition
      properties:
        apiEntitySetName:
          type: string
          description: The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: Type of entity.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          description: The properties of the Profile.
        instancesCount:
          type: integer
          description: The instance count.
        lastChangedUtc:
          type: string
          readOnly: true
          format: date-time
          description: The last changed time for the type definition.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        schemaItemTypeLink:
          type: string
          description: The schema org link. This helps ACI identify and suggest semantic models.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        timestampFieldName:
          type: string
          description: The timestamp property name. Represents the time when the interaction or profile update happened.
        typeName:
          type: string
          description: The name of the entity.
        idPropertyNames:
          type: array
          items:
            type: string
          description: The id property names. Properties which uniquely identify an interaction instance.
        participantProfiles:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
          description: Profiles that participated in the interaction.
        primaryParticipantProfilePropertyName:
          type: string
          description: The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName.
        dataSourcePrecedenceRules:
          type: array
          items:
            $ref: '#/components/schemas/DataSourcePrecedence'
          readOnly: true
          description: This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.
        defaultDataSource:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataSource'
          description: Default data source is specifically used in cases where data source is not specified in an instance.
        isActivity:
          type: boolean
          description: An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level.
      type: object
    DataSource:
      properties:
        name:
          type: string
          readOnly: true
          description: The data source name
        dataSourceType:
          type: string
          enum:
            - Connector
            - LinkInteraction
            - SystemDefault
          x-ms-enum:
            name: DataSourceType
            modelAsString: true
          readOnly: true
          description: The data source type.
        status:
          type: string
          enum:
            - None
            - Active
            - Deleted
          x-ms-enum:
            name: Status
            modelAsString: true
          readOnly: true
          description: The data source status.
        id:
          type: integer
          readOnly: true
          description: The data source ID.
        dataSourceReferenceId:
          type: string
          readOnly: true
          description: The data source reference id.
      description: Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules.
      type: object
    DataSourcePrecedence:
      properties:
        dataSource:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataSource'
        precedence:
          type: integer
          description: the precedence value.
      description: The data source precedence is a way to know the precedence of each data source.
      type: object
    StrongId:
      required:
        - keyPropertyNames
        - strongIdName
      properties:
        keyPropertyNames:
          type: array
          items:
            type: string
          description: The properties which make up the unique ID.
        strongIdName:
          type: string
          description: The Name identifying the strong ID.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized descriptions.
      description: Property/Properties which represent a unique ID.
      type: object
    ProfileTypeDefinition:
      description: The profile type definition.
      properties:
        strongIds:
          type: array
          items:
            $ref: '#/components/schemas/StrongId'
          description: The strong IDs.
        apiEntitySetName:
          type: string
          description: The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: Type of entity.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          description: The properties of the Profile.
        instancesCount:
          type: integer
          description: The instance count.
        lastChangedUtc:
          type: string
          readOnly: true
          format: date-time
          description: The last changed time for the type definition.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        schemaItemTypeLink:
          type: string
          description: The schema org link. This helps ACI identify and suggest semantic models.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        timestampFieldName:
          type: string
          description: The timestamp property name. Represents the time when the interaction or profile update happened.
        typeName:
          type: string
          description: The name of the entity.
      type: object
    ProfileResourceFormat:
      description: The profile resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProfileTypeDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ProfileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list profile operation.
      type: object
    InteractionResourceFormat:
      description: The interaction resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/InteractionTypeDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    InteractionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/InteractionResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list interaction operation.
      type: object
    KpiResourceFormat:
      description: The KPI resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/KpiDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    KpiListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/KpiResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list KPI operation.
      type: object
    EnrichingKpi:
      description: The enriching KPI definition.
      properties:
        entityType:
          type: string
          enum:
            - None
            - Profile
            - Interaction
            - Relationship
          x-ms-enum:
            name: EntityTypes
            modelAsString: false
          description: The mapping entity type.
        entityTypeName:
          type: string
          description: The mapping entity name.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        kpiName:
          type: string
          readOnly: true
          description: The KPI name.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display name for the KPI.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized description for the KPI.
        calculationWindow:
          type: string
          enum:
            - Lifetime
            - Hour
            - Day
            - Week
            - Month
          x-ms-enum:
            name: CalculationWindowTypes
            modelAsString: false
          description: The calculation window.
        calculationWindowFieldName:
          type: string
          description: Name of calculation window field.
        function:
          type: string
          enum:
            - Sum
            - Avg
            - Min
            - Max
            - Last
            - Count
            - None
            - CountDistinct
          x-ms-enum:
            name: KpiFunctions
            modelAsString: false
          description: The computation function for the KPI.
        expression:
          type: string
          description: The computation expression for the KPI.
        unit:
          type: string
          description: The unit of measurement for the KPI.
        filter:
          type: string
          description: The filter expression for the KPI.
        groupBy:
          type: array
          items:
            type: string
          description: the group by properties for the KPI.
        groupByMetadata:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/KpiGroupByMetadata'
          description: The KPI GroupByMetadata.
        participantProfilesMetadata:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/KpiParticipantProfilesMetadata'
          description: The participant profiles.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        thresHolds:
          $ref: '#/components/schemas/KpiThresholds'
          description: The KPI thresholds.
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/KpiAlias'
          description: The aliases.
        extracts:
          type: array
          items:
            $ref: '#/components/schemas/KpiExtract'
          description: The KPI extracts.
      type: object
    ConnectorResourceFormat:
      description: The connector resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Connector'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ConnectorListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list connector operation.
      type: object
    ConnectorMappingResourceFormat:
      description: The connector mapping resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectorMapping'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ConnectorMappingListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorMappingResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list connector mapping operation.
      type: object
    AuthorizationPolicyResourceFormat:
      description: The authorization policy resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AuthorizationPolicy'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    AuthorizationPolicyListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationPolicyResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list authorization policy operation.
      type: object
    LinkResourceFormat:
      description: The link resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LinkDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    LinkListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LinkResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list link operation.
      type: object
    RelationshipResourceFormat:
      description: The relationship resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RelationshipDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    RelationshipListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list relationship operation.
      type: object
    RelationshipLinkResourceFormat:
      description: The relationship link resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RelationshipLinkDefinition'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    RelationshipLinkListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipLinkResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list relationship link operation.
      type: object
    ViewResourceFormat:
      description: The view resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/View'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ViewListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ViewResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list view operation.
      type: object
    WidgetTypeResourceFormat:
      description: The WidgetTypeResourceFormat
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WidgetType'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    WidgetTypeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WidgetTypeResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list widget type operation.
      type: object
    RoleAssignment:
      description: The Role Assignment definition.
      required:
        - role
        - principals
      properties:
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        assignmentName:
          type: string
          readOnly: true
          description: The name of the metadata object.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Localized display names for the metadata.
        description:
          type: object
          additionalProperties:
            type: string
          description: Localized description for the metadata.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        role:
          type: string
          enum:
            - Admin
            - Reader
            - ManageAdmin
            - ManageReader
            - DataAdmin
            - DataReader
          x-ms-enum:
            name: RoleTypes
            modelAsString: false
          description: Type of roles.
        principals:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentPrincipal'
          description: The principals being assigned to.
        profiles:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Profiles set for the assignment.
        interactions:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Interactions set for the assignment.
        links:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Links set for the assignment.
        kpis:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Kpis set for the assignment.
        sasPolicies:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Sas Policies set for the assignment.
        connectors:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Connectors set for the assignment.
        views:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Views set for the assignment.
        relationshipLinks:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: The Role assignments set for the relationship links.
        relationships:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: The Role assignments set for the relationships.
        widgetTypes:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Widget types set for the assignment.
        roleAssignments:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: The Role assignments set for the assignment.
        conflationPolicies:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: Widget types set for the assignment.
        segments:
          $ref: '#/components/schemas/ResourceSetDescription'
          description: The Role assignments set for the assignment.
      type: object
    RoleAssignmentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignmentResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list role assignment operation.
      type: object
    RoleAssignmentResourceFormat:
      description: The Role Assignment resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignment'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ResourceSetDescription:
      description: The resource set description.
      properties:
        elements:
          type: array
          items:
            type: string
          description: The elements included in the set.
        exceptions:
          type: array
          items:
            type: string
          description: The elements that are not included in the set, in case elements contains '*' indicating 'all'.
      type: object
    AssignmentPrincipal:
      description: The AssignmentPrincipal
      required:
        - principalId
        - principalType
      properties:
        principalId:
          type: string
          description: The principal id being assigned to.
        principalType:
          type: string
          description: The Type of the principal ID.
        principalMetadata:
          type: object
          additionalProperties:
            type: string
          description: Other metadata for the principal.
      type: object
    Role:
      description: The Role definition.
      properties:
        roleName:
          type: string
          description: The role name.
        description:
          type: string
          description: The description of the role.
      type: object
    RoleResourceFormat:
      description: The role resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Role'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    RoleListResult:
      description: The response of list role assignment operation.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      type: object
    GetImageUploadUrlInput:
      properties:
        entityType:
          type: string
          description: Type of entity. Can be Profile or Interaction.
        entityTypeName:
          type: string
          description: Name of the entity type.
        relativePath:
          type: string
          description: Relative path of the image.
      description: Input type for getting image upload url.
      type: object
    ImageDefinition:
      properties:
        imageExists:
          type: boolean
          description: Whether image exists already.
        contentUrl:
          type: string
          description: Content URL for the image blob.
        relativePath:
          type: string
          description: Relative path of the image.
      description: The image definition.
      type: object
    PermissionTypes:
      type: string
      enum:
        - Read
        - Write
        - Manage
      x-ms-enum:
        name: PermissionTypes
        modelAsString: false
      description: Supported permission types.
    ProvisioningState:
      type: string
      enum:
        - Provisioning
        - Succeeded
        - Expiring
        - Deleting
        - HumanIntervention
        - Failed
      x-ms-enum:
        name: ProvisioningStates
        modelAsString: true
      description: Provisioning state.
    ConnectorType:
      type: string
      enum:
        - None
        - CRM
        - AzureBlob
        - Salesforce
        - ExchangeOnline
        - Outbound
      x-ms-enum:
        name: ConnectorTypes
        modelAsString: true
      description: Type of connector.
    SuggestRelationshipLinksResponse:
      properties:
        interactionName:
          type: string
          readOnly: true
          description: The interaction name.
        suggestedRelationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipsLookup'
          readOnly: true
          description: Suggested relationships for the type.
      description: The response of suggest relationship links operation.
      type: object
    RelationshipsLookup:
      properties:
        profileName:
          type: string
          readOnly: true
          description: The relationship profile.
        profilePropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantProfilePropertyReference'
          readOnly: true
          description: The property references for the profile type.
        relatedProfileName:
          type: string
          readOnly: true
          description: The related profile.
        relatedProfilePropertyReferences:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantProfilePropertyReference'
          readOnly: true
          description: The property references for the related profile type.
        existingRelationshipName:
          type: string
          readOnly: true
          description: The name of existing Relationship.
      description: The definition of suggested relationship for the type.
      type: object
    Prediction:
      required:
        - negativeOutcomeExpression
        - positiveOutcomeExpression
        - primaryProfileType
        - scopeExpression
        - autoAnalyze
        - mappings
        - scoreLabel
      description: The prediction definition.
      properties:
        description:
          type: object
          additionalProperties:
            type: string
          description: Description of the prediction.
        displayName:
          type: object
          additionalProperties:
            type: string
          description: Display name of the prediction.
        involvedInteractionTypes:
          type: array
          items:
            type: string
          description: Interaction types involved in the prediction.
        involvedKpiTypes:
          type: array
          items:
            type: string
          description: KPI types involved in the prediction.
        involvedRelationships:
          type: array
          items:
            type: string
          description: Relationships involved in the prediction.
        negativeOutcomeExpression:
          type: string
          description: Negative outcome expression.
        positiveOutcomeExpression:
          type: string
          description: Positive outcome expression.
        primaryProfileType:
          type: string
          description: Primary profile type.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Provisioning state.
        predictionName:
          type: string
          description: Name of the prediction.
        scopeExpression:
          type: string
          description: Scope expression.
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        autoAnalyze:
          type: boolean
          description: Whether do auto analyze.
        mappings:
          required:
            - score
            - grade
            - reason
          type: object
          properties:
            score:
              type: string
              description: The score of the link mapping.
            grade:
              type: string
              description: The grade of the link mapping.
            reason:
              type: string
              description: The reason of the link mapping.
          description: Definition of the link mapping of prediction.
        scoreLabel:
          type: string
          description: Score label.
        grades:
          type: array
          items:
            type: object
            properties:
              gradeName:
                type: string
                description: Name of the grade.
              minScoreThreshold:
                type: integer
                description: Minimum score threshold.
              maxScoreThreshold:
                type: integer
                description: Maximum score threshold.
            description: The definition of a prediction grade.
          description: The prediction grades.
        systemGeneratedEntities:
          readOnly: true
          properties:
            generatedInteractionTypes:
              type: array
              items:
                type: string
              description: Generated interaction types.
            generatedLinks:
              type: array
              items:
                type: string
              description: Generated links.
            generatedKpis:
              type: object
              additionalProperties:
                type: string
              description: Generated KPIs.
          description: System generated entities.
      type: object
    PredictionTrainingResults:
      properties:
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        scoreName:
          type: string
          readOnly: true
          description: Score name.
        predictionDistribution:
          readOnly: true
          $ref: '#/components/schemas/PredictionDistributionDefinition'
          description: Prediction distribution.
        canonicalProfiles:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CanonicalProfileDefinition'
          description: Canonical profiles.
        primaryProfileInstanceCount:
          readOnly: true
          type: integer
          format: int64
          description: Instance count of the primary profile.
      description: The training results of the prediction.
      type: object
    PredictionDistributionDefinition:
      properties:
        totalPositives:
          type: integer
          format: int64
          description: Total positive in the distribution.
        totalNegatives:
          type: integer
          format: int64
          description: Total negatives in the distribution.
        distributions:
          type: array
          items:
            type: object
            properties:
              scoreThreshold:
                type: integer
                description: Score threshold.
              positives:
                type: integer
                format: int64
                description: Number of positives.
              negatives:
                type: integer
                format: int64
                description: Number of negatives.
              positivesAboveThreshold:
                type: integer
                format: int64
                description: Number of positives above threshold.
              negativesAboveThreshold:
                type: integer
                format: int64
                description: Number of negatives above threshold.
            description: The definition of a prediction distribution.
          description: Distributions of the prediction.
      description: The definition of the prediction distribution.
      type: object
    CanonicalProfileDefinition:
      description: Definition of canonical profile.
      properties:
        canonicalProfileId:
          type: integer
          description: Canonical profile ID.
        properties:
          type: array
          items:
            type: object
            properties:
              profileName:
                type: string
                description: Profile name.
              profilePropertyName:
                type: string
                description: Property name of profile.
              rank:
                type: integer
                description: The rank.
              type:
                type: string
                enum:
                  - Numeric
                  - Categorical
                  - DerivedCategorical
                  - DerivedNumeric
                x-ms-enum:
                  name: CanonicalPropertyValueType
                  modelAsString: true
                description: Type of canonical property value.
              value:
                type: string
                description: Value of the canonical property.
            description: The definition of a canonical profile property.
          description: Properties of the canonical profile.
      type: object
    PredictionModelStatus:
      required:
        - status
      description: The prediction model status.
      properties:
        tenantId:
          type: string
          readOnly: true
          description: The hub name.
        predictionName:
          type: string
          readOnly: true
          description: The prediction name.
        predictionGuidId:
          type: string
          readOnly: true
          description: The prediction GUID ID.
        status:
          type: string
          enum:
            - New
            - Provisioning
            - ProvisioningFailed
            - PendingDiscovering
            - Discovering
            - PendingFeaturing
            - Featuring
            - FeaturingFailed
            - PendingTraining
            - Training
            - TrainingFailed
            - Evaluating
            - EvaluatingFailed
            - PendingModelConfirmation
            - Active
            - Deleted
            - HumanIntervention
            - Failed
          x-ms-enum:
            name: PredictionModelLifeCycle
            modelAsString: true
          description: Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API.
        message:
          type: string
          readOnly: true
          description: The model status message.
        trainingSetCount:
          type: integer
          readOnly: true
          description: Count of the training set.
        testSetCount:
          type: integer
          readOnly: true
          description: Count of the test set.
        validationSetCount:
          type: integer
          readOnly: true
          description: Count of the validation set.
        trainingAccuracy:
          type: integer
          format: decimal
          readOnly: true
          description: The training accuracy.
        signalsUsed:
          type: integer
          readOnly: true
          description: The signals used.
        modelVersion:
          type: string
          readOnly: true
          description: Version of the model.
      type: object
    PredictionResourceFormat:
      description: The prediction resource format.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Prediction'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    PredictionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PredictionResourceFormat'
          description: Results of the list operation.
        nextLink:
          type: string
          description: Link to the next set of results.
      description: The response of list predictions operation.
      type: object
    OperationListResult:
      description: Result of the request to list Customer Insights operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          description: List of Customer Insights operations supported by the Microsoft.CustomerInsights resource provider.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Operation'
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: A Customer Insights REST API operation
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {provider}/{resource}/{operation}'
        display:
          description: The object that represents the operation.
          properties:
            provider:
              readOnly: true
              type: string
              description: 'Service provider: Microsoft.CustomerInsights'
            resource:
              readOnly: true
              type: string
              description: 'Resource on which the operation is performed: Invoice, etc.'
            operation:
              readOnly: true
              type: string
              description: 'Operation type: Read, write, delete, etc.'
  x-stackQL-resources:
    operations:
      id: azure_extras.customer_insights.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.CustomerInsights~1operations~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hubs:
      id: azure_extras.customer_insights.hubs
      name: hubs
      title: hubs
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1?api-version=2017-04-26/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CustomerInsights~1hubs~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/get'
          - $ref: '#/components/x-stackQL-resources/hubs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/hubs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/delete'
    profiles:
      id: azure_extras.customer_insights.profiles
      name: profiles
      title: profiles
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1profiles~1{profileName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1profiles~1{profileName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1profiles~1{profileName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1profiles~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/delete'
    profiles_enriching_kpis:
      id: azure_extras.customer_insights.profiles_enriching_kpis
      name: profiles_enriching_kpis
      title: profiles_enriching_kpis
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1profiles~1{profileName}~1getEnrichingKpis~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles_enriching_kpis/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    interactions:
      id: azure_extras.customer_insights.interactions
      name: interactions
      title: interactions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1interactions~1{interactionName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1interactions~1{interactionName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1interactions~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        suggest_relationship_links:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1interactions~1{interactionName}~1suggestRelationshipLinks~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/interactions/methods/get'
          - $ref: '#/components/x-stackQL-resources/interactions/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/interactions/methods/create_or_update'
        update: []
        replace: []
        delete: []
    relationships:
      id: azure_extras.customer_insights.relationships
      name: relationships
      title: relationships
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationships~1{relationshipName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationships~1{relationshipName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationships~1{relationshipName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationships~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relationships/methods/get'
          - $ref: '#/components/x-stackQL-resources/relationships/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/relationships/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/relationships/methods/delete'
    relationship_links:
      id: azure_extras.customer_insights.relationship_links
      name: relationship_links
      title: relationship_links
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationshipLinks~1{relationshipLinkName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationshipLinks~1{relationshipLinkName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationshipLinks~1{relationshipLinkName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1relationshipLinks~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relationship_links/methods/get'
          - $ref: '#/components/x-stackQL-resources/relationship_links/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/relationship_links/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/relationship_links/methods/delete'
    authorization_policies:
      id: azure_extras.customer_insights.authorization_policies
      name: authorization_policies
      title: authorization_policies
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1authorizationPolicies~1{authorizationPolicyName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1authorizationPolicies~1{authorizationPolicyName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1authorizationPolicies~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        regenerate_primary_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1authorizationPolicies~1{authorizationPolicyName}~1regeneratePrimaryKey~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_secondary_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1authorizationPolicies~1{authorizationPolicyName}~1regenerateSecondaryKey~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorization_policies/methods/create_or_update'
        update: []
        replace: []
        delete: []
    connectors:
      id: azure_extras.customer_insights.connectors
      name: connectors
      title: connectors
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/connectors/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete'
    connector_mappings:
      id: azure_extras.customer_insights.connector_mappings
      name: connector_mappings
      title: connector_mappings
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1mappings~1{mappingName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1mappings~1{mappingName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1mappings~1{mappingName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_connector:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1connectors~1{connectorName}~1mappings~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connector_mappings/methods/get'
          - $ref: '#/components/x-stackQL-resources/connector_mappings/methods/list_by_connector'
        insert:
          - $ref: '#/components/x-stackQL-resources/connector_mappings/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connector_mappings/methods/delete'
    kpi:
      id: azure_extras.customer_insights.kpi
      name: kpi
      title: kpi
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1kpi~1{kpiName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1kpi~1{kpiName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1kpi~1{kpiName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reprocess:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1kpi~1{kpiName}~1reprocess~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1kpi~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kpi/methods/get'
          - $ref: '#/components/x-stackQL-resources/kpi/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/kpi/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kpi/methods/delete'
    widget_types:
      id: azure_extras.customer_insights.widget_types
      name: widget_types
      title: widget_types
      methods:
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1widgetTypes~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1widgetTypes~1{widgetTypeName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/widget_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/widget_types/methods/list_by_hub'
        insert: []
        update: []
        replace: []
        delete: []
    views:
      id: azure_extras.customer_insights.views
      name: views
      title: views
      methods:
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1views~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1views~1{viewName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1views~1{viewName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1views~1{viewName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/views/methods/get'
          - $ref: '#/components/x-stackQL-resources/views/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete'
    links:
      id: azure_extras.customer_insights.links
      name: links
      title: links
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1links~1{linkName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1links~1{linkName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1links~1{linkName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1links~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/links/methods/get'
          - $ref: '#/components/x-stackQL-resources/links/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/links/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/links/methods/delete'
    roles:
      id: azure_extras.customer_insights.roles
      name: roles
      title: roles
      methods:
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1roles~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_by_hub'
        insert: []
        update: []
        replace: []
        delete: []
    role_assignments:
      id: azure_extras.customer_insights.role_assignments
      name: role_assignments
      title: role_assignments
      methods:
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1roleAssignments~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1roleAssignments~1{assignmentName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1roleAssignments~1{assignmentName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1roleAssignments~1{assignmentName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/delete'
    images_upload_url_for_entity_type:
      id: azure_extras.customer_insights.images_upload_url_for_entity_type
      name: images_upload_url_for_entity_type
      title: images_upload_url_for_entity_type
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1images~1getEntityTypeImageUploadUrl~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images_upload_url_for_entity_type/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    images_upload_url_for_data:
      id: azure_extras.customer_insights.images_upload_url_for_data
      name: images_upload_url_for_data
      title: images_upload_url_for_data
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1images~1getDataImageUploadUrl~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images_upload_url_for_data/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    predictions:
      id: azure_extras.customer_insights.predictions
      name: predictions
      title: predictions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1?api-version=2017-04-26/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1?api-version=2017-04-26/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        model_status:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1modelStatus~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1?api-version=2017-04-26/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/predictions/methods/get'
          - $ref: '#/components/x-stackQL-resources/predictions/methods/list_by_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/predictions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/predictions/methods/delete'
    predictions_training_results:
      id: azure_extras.customer_insights.predictions_training_results
      name: predictions_training_results
      title: predictions_training_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1getTrainingResults~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/predictions_training_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    predictions_model_status:
      id: azure_extras.customer_insights.predictions_model_status
      name: predictions_model_status
      title: predictions_model_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CustomerInsights~1hubs~1{hubName}~1predictions~1{predictionName}~1getModelStatus~1?api-version=2017-04-26/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/predictions_model_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_hubs:
      id: azure_extras.customer_insights.vw_hubs
      name: vw_hubs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.apiEndpoint') as api_endpoint,
              JSON_EXTRACT(properties, '$.webEndpoint') as web_endpoint,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.tenantFeatures') as tenant_features,
              JSON_EXTRACT(properties, '$.hubBillingInfo') as hub_billing_info,
              subscriptionId,
              resourceGroupName,
              hubName
              FROM azure_extras.customer_insights.hubs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.apiEndpoint') as api_endpoint,
                JSON_EXTRACT(properties, '$.webEndpoint') as web_endpoint,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.tenantFeatures') as tenant_features,
                JSON_EXTRACT(properties, '$.hubBillingInfo') as hub_billing_info,
                subscriptionId,
                resourceGroupName,
                hubName
                FROM azure_extras.customer_insights.hubs
                WHERE subscriptionId = 'replace-me';
    vw_profiles:
      id: azure_extras.customer_insights.vw_profiles
      name: vw_profiles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.strongIds') as strong_ids,
              JSON_EXTRACT(properties, '$.apiEntitySetName') as api_entity_set_name,
              JSON_EXTRACT(properties, '$.entityType') as entity_type,
              JSON_EXTRACT(properties, '$.fields') as fields,
              JSON_EXTRACT(properties, '$.instancesCount') as instances_count,
              JSON_EXTRACT(properties, '$.lastChangedUtc') as last_changed_utc,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.schemaItemTypeLink') as schema_item_type_link,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.timestampFieldName') as timestamp_field_name,
              JSON_EXTRACT(properties, '$.typeName') as type_name,
              subscriptionId,
              resourceGroupName,
              hubName,
              profileName
              FROM azure_extras.customer_insights.profiles
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.strongIds') as strong_ids,
                JSON_EXTRACT(properties, '$.apiEntitySetName') as api_entity_set_name,
                JSON_EXTRACT(properties, '$.entityType') as entity_type,
                JSON_EXTRACT(properties, '$.fields') as fields,
                JSON_EXTRACT(properties, '$.instancesCount') as instances_count,
                JSON_EXTRACT(properties, '$.lastChangedUtc') as last_changed_utc,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.schemaItemTypeLink') as schema_item_type_link,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.timestampFieldName') as timestamp_field_name,
                JSON_EXTRACT(properties, '$.typeName') as type_name,
                subscriptionId,
                resourceGroupName,
                hubName,
                profileName
                FROM azure_extras.customer_insights.profiles
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_interactions:
      id: azure_extras.customer_insights.vw_interactions
      name: vw_interactions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.apiEntitySetName') as api_entity_set_name,
              JSON_EXTRACT(properties, '$.entityType') as entity_type,
              JSON_EXTRACT(properties, '$.fields') as fields,
              JSON_EXTRACT(properties, '$.instancesCount') as instances_count,
              JSON_EXTRACT(properties, '$.lastChangedUtc') as last_changed_utc,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.schemaItemTypeLink') as schema_item_type_link,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.timestampFieldName') as timestamp_field_name,
              JSON_EXTRACT(properties, '$.typeName') as type_name,
              JSON_EXTRACT(properties, '$.idPropertyNames') as id_property_names,
              JSON_EXTRACT(properties, '$.participantProfiles') as participant_profiles,
              JSON_EXTRACT(properties, '$.primaryParticipantProfilePropertyName') as primary_participant_profile_property_name,
              JSON_EXTRACT(properties, '$.dataSourcePrecedenceRules') as data_source_precedence_rules,
              JSON_EXTRACT(properties, '$.defaultDataSource') as default_data_source,
              JSON_EXTRACT(properties, '$.isActivity') as is_activity,
              subscriptionId,
              resourceGroupName,
              hubName,
              interactionName
              FROM azure_extras.customer_insights.interactions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.apiEntitySetName') as api_entity_set_name,
                JSON_EXTRACT(properties, '$.entityType') as entity_type,
                JSON_EXTRACT(properties, '$.fields') as fields,
                JSON_EXTRACT(properties, '$.instancesCount') as instances_count,
                JSON_EXTRACT(properties, '$.lastChangedUtc') as last_changed_utc,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.schemaItemTypeLink') as schema_item_type_link,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.timestampFieldName') as timestamp_field_name,
                JSON_EXTRACT(properties, '$.typeName') as type_name,
                JSON_EXTRACT(properties, '$.idPropertyNames') as id_property_names,
                JSON_EXTRACT(properties, '$.participantProfiles') as participant_profiles,
                JSON_EXTRACT(properties, '$.primaryParticipantProfilePropertyName') as primary_participant_profile_property_name,
                JSON_EXTRACT(properties, '$.dataSourcePrecedenceRules') as data_source_precedence_rules,
                JSON_EXTRACT(properties, '$.defaultDataSource') as default_data_source,
                JSON_EXTRACT(properties, '$.isActivity') as is_activity,
                subscriptionId,
                resourceGroupName,
                hubName,
                interactionName
                FROM azure_extras.customer_insights.interactions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_relationships:
      id: azure_extras.customer_insights.vw_relationships
      name: vw_relationships
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.cardinality') as cardinality,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.expiryDateTimeUtc') as expiry_date_time_utc,
              JSON_EXTRACT(properties, '$.fields') as fields,
              JSON_EXTRACT(properties, '$.lookupMappings') as lookup_mappings,
              JSON_EXTRACT(properties, '$.profileType') as profile_type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.relationshipName') as relationship_name,
              JSON_EXTRACT(properties, '$.relatedProfileType') as related_profile_type,
              JSON_EXTRACT(properties, '$.relationshipGuidId') as relationship_guid_id,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              subscriptionId,
              resourceGroupName,
              hubName,
              relationshipName
              FROM azure_extras.customer_insights.relationships
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.cardinality') as cardinality,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.expiryDateTimeUtc') as expiry_date_time_utc,
                JSON_EXTRACT(properties, '$.fields') as fields,
                JSON_EXTRACT(properties, '$.lookupMappings') as lookup_mappings,
                JSON_EXTRACT(properties, '$.profileType') as profile_type,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.relationshipName') as relationship_name,
                JSON_EXTRACT(properties, '$.relatedProfileType') as related_profile_type,
                JSON_EXTRACT(properties, '$.relationshipGuidId') as relationship_guid_id,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                subscriptionId,
                resourceGroupName,
                hubName,
                relationshipName
                FROM azure_extras.customer_insights.relationships
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_relationship_links:
      id: azure_extras.customer_insights.vw_relationship_links
      name: vw_relationship_links
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.interactionType') as interaction_type,
              JSON_EXTRACT(properties, '$.linkName') as link_name,
              JSON_EXTRACT(properties, '$.mappings') as mappings,
              JSON_EXTRACT(properties, '$.profilePropertyReferences') as profile_property_references,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.relatedProfilePropertyReferences') as related_profile_property_references,
              JSON_EXTRACT(properties, '$.relationshipName') as relationship_name,
              JSON_EXTRACT(properties, '$.relationshipGuidId') as relationship_guid_id,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              subscriptionId,
              resourceGroupName,
              hubName,
              relationshipLinkName
              FROM azure_extras.customer_insights.relationship_links
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.interactionType') as interaction_type,
                JSON_EXTRACT(properties, '$.linkName') as link_name,
                JSON_EXTRACT(properties, '$.mappings') as mappings,
                JSON_EXTRACT(properties, '$.profilePropertyReferences') as profile_property_references,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.relatedProfilePropertyReferences') as related_profile_property_references,
                JSON_EXTRACT(properties, '$.relationshipName') as relationship_name,
                JSON_EXTRACT(properties, '$.relationshipGuidId') as relationship_guid_id,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                subscriptionId,
                resourceGroupName,
                hubName,
                relationshipLinkName
                FROM azure_extras.customer_insights.relationship_links
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_authorization_policies:
      id: azure_extras.customer_insights.vw_authorization_policies
      name: vw_authorization_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.policyName') as policy_name,
              JSON_EXTRACT(properties, '$.permissions') as permissions,
              JSON_EXTRACT(properties, '$.primaryKey') as primary_key,
              JSON_EXTRACT(properties, '$.secondaryKey') as secondary_key,
              subscriptionId,
              resourceGroupName,
              hubName,
              authorizationPolicyName
              FROM azure_extras.customer_insights.authorization_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.policyName') as policy_name,
                JSON_EXTRACT(properties, '$.permissions') as permissions,
                JSON_EXTRACT(properties, '$.primaryKey') as primary_key,
                JSON_EXTRACT(properties, '$.secondaryKey') as secondary_key,
                subscriptionId,
                resourceGroupName,
                hubName,
                authorizationPolicyName
                FROM azure_extras.customer_insights.authorization_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_connectors:
      id: azure_extras.customer_insights.vw_connectors
      name: vw_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.connectorId') as connector_id,
              JSON_EXTRACT(properties, '$.connectorName') as connector_name,
              JSON_EXTRACT(properties, '$.connectorType') as connector_type,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.connectorProperties') as connector_properties,
              JSON_EXTRACT(properties, '$.created') as created,
              JSON_EXTRACT(properties, '$.lastModified') as last_modified,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.isInternal') as is_internal,
              subscriptionId,
              resourceGroupName,
              hubName,
              connectorName
              FROM azure_extras.customer_insights.connectors
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.connectorId') as connector_id,
                JSON_EXTRACT(properties, '$.connectorName') as connector_name,
                JSON_EXTRACT(properties, '$.connectorType') as connector_type,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.connectorProperties') as connector_properties,
                JSON_EXTRACT(properties, '$.created') as created,
                JSON_EXTRACT(properties, '$.lastModified') as last_modified,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.isInternal') as is_internal,
                subscriptionId,
                resourceGroupName,
                hubName,
                connectorName
                FROM azure_extras.customer_insights.connectors
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_connector_mappings:
      id: azure_extras.customer_insights.vw_connector_mappings
      name: vw_connector_mappings
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.connectorName') as connector_name,
              JSON_EXTRACT(properties, '$.connectorType') as connector_type,
              JSON_EXTRACT(properties, '$.created') as created,
              JSON_EXTRACT(properties, '$.lastModified') as last_modified,
              JSON_EXTRACT(properties, '$.entityType') as entity_type,
              JSON_EXTRACT(properties, '$.entityTypeName') as entity_type_name,
              JSON_EXTRACT(properties, '$.connectorMappingName') as connector_mapping_name,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.dataFormatId') as data_format_id,
              JSON_EXTRACT(properties, '$.mappingProperties') as mapping_properties,
              JSON_EXTRACT(properties, '$.nextRunTime') as next_run_time,
              JSON_EXTRACT(properties, '$.runId') as run_id,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              subscriptionId,
              resourceGroupName,
              hubName,
              connectorName,
              mappingName
              FROM azure_extras.customer_insights.connector_mappings
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me' AND connectorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.connectorName') as connector_name,
                JSON_EXTRACT(properties, '$.connectorType') as connector_type,
                JSON_EXTRACT(properties, '$.created') as created,
                JSON_EXTRACT(properties, '$.lastModified') as last_modified,
                JSON_EXTRACT(properties, '$.entityType') as entity_type,
                JSON_EXTRACT(properties, '$.entityTypeName') as entity_type_name,
                JSON_EXTRACT(properties, '$.connectorMappingName') as connector_mapping_name,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.dataFormatId') as data_format_id,
                JSON_EXTRACT(properties, '$.mappingProperties') as mapping_properties,
                JSON_EXTRACT(properties, '$.nextRunTime') as next_run_time,
                JSON_EXTRACT(properties, '$.runId') as run_id,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                subscriptionId,
                resourceGroupName,
                hubName,
                connectorName,
                mappingName
                FROM azure_extras.customer_insights.connector_mappings
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me' AND connectorName = 'replace-me';
    vw_kpi:
      id: azure_extras.customer_insights.vw_kpi
      name: vw_kpi
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.entityType') as entity_type,
              JSON_EXTRACT(properties, '$.entityTypeName') as entity_type_name,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.kpiName') as kpi_name,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.calculationWindow') as calculation_window,
              JSON_EXTRACT(properties, '$.calculationWindowFieldName') as calculation_window_field_name,
              JSON_EXTRACT(properties, '$.function') as function,
              JSON_EXTRACT(properties, '$.expression') as expression,
              JSON_EXTRACT(properties, '$.unit') as unit,
              JSON_EXTRACT(properties, '$.filter') as filter,
              JSON_EXTRACT(properties, '$.groupBy') as group_by,
              JSON_EXTRACT(properties, '$.groupByMetadata') as group_by_metadata,
              JSON_EXTRACT(properties, '$.participantProfilesMetadata') as participant_profiles_metadata,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.thresHolds') as thres_holds,
              JSON_EXTRACT(properties, '$.aliases') as aliases,
              JSON_EXTRACT(properties, '$.extracts') as extracts,
              subscriptionId,
              resourceGroupName,
              hubName,
              kpiName
              FROM azure_extras.customer_insights.kpi
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.entityType') as entity_type,
                JSON_EXTRACT(properties, '$.entityTypeName') as entity_type_name,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.kpiName') as kpi_name,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.calculationWindow') as calculation_window,
                JSON_EXTRACT(properties, '$.calculationWindowFieldName') as calculation_window_field_name,
                JSON_EXTRACT(properties, '$.function') as function,
                JSON_EXTRACT(properties, '$.expression') as expression,
                JSON_EXTRACT(properties, '$.unit') as unit,
                JSON_EXTRACT(properties, '$.filter') as filter,
                JSON_EXTRACT(properties, '$.groupBy') as group_by,
                JSON_EXTRACT(properties, '$.groupByMetadata') as group_by_metadata,
                JSON_EXTRACT(properties, '$.participantProfilesMetadata') as participant_profiles_metadata,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.thresHolds') as thres_holds,
                JSON_EXTRACT(properties, '$.aliases') as aliases,
                JSON_EXTRACT(properties, '$.extracts') as extracts,
                subscriptionId,
                resourceGroupName,
                hubName,
                kpiName
                FROM azure_extras.customer_insights.kpi
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_widget_types:
      id: azure_extras.customer_insights.vw_widget_types
      name: vw_widget_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.widgetTypeName') as widget_type_name,
              JSON_EXTRACT(properties, '$.definition') as definition,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.imageUrl') as image_url,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.widgetVersion') as widget_version,
              JSON_EXTRACT(properties, '$.changed') as changed,
              JSON_EXTRACT(properties, '$.created') as created,
              subscriptionId,
              resourceGroupName,
              hubName,
              widgetTypeName
              FROM azure_extras.customer_insights.widget_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.widgetTypeName') as widget_type_name,
                JSON_EXTRACT(properties, '$.definition') as definition,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.imageUrl') as image_url,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.widgetVersion') as widget_version,
                JSON_EXTRACT(properties, '$.changed') as changed,
                JSON_EXTRACT(properties, '$.created') as created,
                subscriptionId,
                resourceGroupName,
                hubName,
                widgetTypeName
                FROM azure_extras.customer_insights.widget_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_views:
      id: azure_extras.customer_insights.vw_views
      name: vw_views
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.viewName') as view_name,
              JSON_EXTRACT(properties, '$.userId') as user_id,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.definition') as definition,
              JSON_EXTRACT(properties, '$.changed') as changed,
              JSON_EXTRACT(properties, '$.created') as created,
              subscriptionId,
              resourceGroupName,
              hubName,
              viewName
              FROM azure_extras.customer_insights.views
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.viewName') as view_name,
                JSON_EXTRACT(properties, '$.userId') as user_id,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.definition') as definition,
                JSON_EXTRACT(properties, '$.changed') as changed,
                JSON_EXTRACT(properties, '$.created') as created,
                subscriptionId,
                resourceGroupName,
                hubName,
                viewName
                FROM azure_extras.customer_insights.views
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_links:
      id: azure_extras.customer_insights.vw_links
      name: vw_links
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.linkName') as link_name,
              JSON_EXTRACT(properties, '$.sourceEntityType') as source_entity_type,
              JSON_EXTRACT(properties, '$.targetEntityType') as target_entity_type,
              JSON_EXTRACT(properties, '$.sourceEntityTypeName') as source_entity_type_name,
              JSON_EXTRACT(properties, '$.targetEntityTypeName') as target_entity_type_name,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.mappings') as mappings,
              JSON_EXTRACT(properties, '$.participantPropertyReferences') as participant_property_references,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.referenceOnly') as reference_only,
              JSON_EXTRACT(properties, '$.operationType') as operation_type,
              subscriptionId,
              resourceGroupName,
              hubName,
              linkName
              FROM azure_extras.customer_insights.links
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.linkName') as link_name,
                JSON_EXTRACT(properties, '$.sourceEntityType') as source_entity_type,
                JSON_EXTRACT(properties, '$.targetEntityType') as target_entity_type,
                JSON_EXTRACT(properties, '$.sourceEntityTypeName') as source_entity_type_name,
                JSON_EXTRACT(properties, '$.targetEntityTypeName') as target_entity_type_name,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.mappings') as mappings,
                JSON_EXTRACT(properties, '$.participantPropertyReferences') as participant_property_references,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.referenceOnly') as reference_only,
                JSON_EXTRACT(properties, '$.operationType') as operation_type,
                subscriptionId,
                resourceGroupName,
                hubName,
                linkName
                FROM azure_extras.customer_insights.links
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_role_assignments:
      id: azure_extras.customer_insights.vw_role_assignments
      name: vw_role_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.assignmentName') as assignment_name,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.role') as role,
              JSON_EXTRACT(properties, '$.principals') as principals,
              JSON_EXTRACT(properties, '$.profiles') as profiles,
              JSON_EXTRACT(properties, '$.interactions') as interactions,
              JSON_EXTRACT(properties, '$.links') as links,
              JSON_EXTRACT(properties, '$.kpis') as kpis,
              JSON_EXTRACT(properties, '$.sasPolicies') as sas_policies,
              JSON_EXTRACT(properties, '$.connectors') as connectors,
              JSON_EXTRACT(properties, '$.views') as views,
              JSON_EXTRACT(properties, '$.relationshipLinks') as relationship_links,
              JSON_EXTRACT(properties, '$.relationships') as relationships,
              JSON_EXTRACT(properties, '$.widgetTypes') as widget_types,
              JSON_EXTRACT(properties, '$.roleAssignments') as role_assignments,
              JSON_EXTRACT(properties, '$.conflationPolicies') as conflation_policies,
              JSON_EXTRACT(properties, '$.segments') as segments,
              subscriptionId,
              resourceGroupName,
              hubName,
              assignmentName
              FROM azure_extras.customer_insights.role_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.assignmentName') as assignment_name,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.role') as role,
                JSON_EXTRACT(properties, '$.principals') as principals,
                JSON_EXTRACT(properties, '$.profiles') as profiles,
                JSON_EXTRACT(properties, '$.interactions') as interactions,
                JSON_EXTRACT(properties, '$.links') as links,
                JSON_EXTRACT(properties, '$.kpis') as kpis,
                JSON_EXTRACT(properties, '$.sasPolicies') as sas_policies,
                JSON_EXTRACT(properties, '$.connectors') as connectors,
                JSON_EXTRACT(properties, '$.views') as views,
                JSON_EXTRACT(properties, '$.relationshipLinks') as relationship_links,
                JSON_EXTRACT(properties, '$.relationships') as relationships,
                JSON_EXTRACT(properties, '$.widgetTypes') as widget_types,
                JSON_EXTRACT(properties, '$.roleAssignments') as role_assignments,
                JSON_EXTRACT(properties, '$.conflationPolicies') as conflation_policies,
                JSON_EXTRACT(properties, '$.segments') as segments,
                subscriptionId,
                resourceGroupName,
                hubName,
                assignmentName
                FROM azure_extras.customer_insights.role_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
    vw_predictions:
      id: azure_extras.customer_insights.vw_predictions
      name: vw_predictions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.involvedInteractionTypes') as involved_interaction_types,
              JSON_EXTRACT(properties, '$.involvedKpiTypes') as involved_kpi_types,
              JSON_EXTRACT(properties, '$.involvedRelationships') as involved_relationships,
              JSON_EXTRACT(properties, '$.negativeOutcomeExpression') as negative_outcome_expression,
              JSON_EXTRACT(properties, '$.positiveOutcomeExpression') as positive_outcome_expression,
              JSON_EXTRACT(properties, '$.primaryProfileType') as primary_profile_type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.predictionName') as prediction_name,
              JSON_EXTRACT(properties, '$.scopeExpression') as scope_expression,
              JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
              JSON_EXTRACT(properties, '$.autoAnalyze') as auto_analyze,
              JSON_EXTRACT(properties, '$.mappings') as mappings,
              JSON_EXTRACT(properties, '$.scoreLabel') as score_label,
              JSON_EXTRACT(properties, '$.grades') as grades,
              JSON_EXTRACT(properties, '$.systemGeneratedEntities') as system_generated_entities,
              subscriptionId,
              resourceGroupName,
              hubName,
              predictionName
              FROM azure_extras.customer_insights.predictions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.involvedInteractionTypes') as involved_interaction_types,
                JSON_EXTRACT(properties, '$.involvedKpiTypes') as involved_kpi_types,
                JSON_EXTRACT(properties, '$.involvedRelationships') as involved_relationships,
                JSON_EXTRACT(properties, '$.negativeOutcomeExpression') as negative_outcome_expression,
                JSON_EXTRACT(properties, '$.positiveOutcomeExpression') as positive_outcome_expression,
                JSON_EXTRACT(properties, '$.primaryProfileType') as primary_profile_type,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.predictionName') as prediction_name,
                JSON_EXTRACT(properties, '$.scopeExpression') as scope_expression,
                JSON_EXTRACT(properties, '$.tenantId') as tenant_id,
                JSON_EXTRACT(properties, '$.autoAnalyze') as auto_analyze,
                JSON_EXTRACT(properties, '$.mappings') as mappings,
                JSON_EXTRACT(properties, '$.scoreLabel') as score_label,
                JSON_EXTRACT(properties, '$.grades') as grades,
                JSON_EXTRACT(properties, '$.systemGeneratedEntities') as system_generated_entities,
                subscriptionId,
                resourceGroupName,
                hubName,
                predictionName
                FROM azure_extras.customer_insights.predictions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND hubName = 'replace-me';
paths:
  /providers/Microsoft.CustomerInsights/operations/?api-version=2017-04-26:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Customer Insights REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/?api-version=2017-04-26:
    put:
      tags:
        - Hubs
      operationId: Hubs_CreateOrUpdate
      description: Creates a hub, or updates an existing hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the Hub.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9]+$
            minLength: 1
            maxLength: 64
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Hub operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      responses:
        '200':
          description: OK. An existing hub is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
        '201':
          description: Created. A new hub is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
    patch:
      tags:
        - Hubs
      operationId: Hubs_Update
      description: Updates a Hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the Hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Hub operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      responses:
        '200':
          description: OK. The hub is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
    delete:
      tags:
        - Hubs
      operationId: Hubs_Delete
      description: Deletes the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The hub is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
        '204':
          description: NoContent. Successfully requested delete operation, but the response is intentionally empty.
      x-ms-long-running-operation: true
    get:
      tags:
        - Hubs
      operationId: Hubs_Get
      description: Gets information about the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/?api-version=2017-04-26:
    get:
      tags:
        - Hubs
      operationId: Hubs_ListByResourceGroup
      description: Gets all the hubs in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the hubs in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.CustomerInsights/hubs/?api-version=2017-04-26:
    get:
      tags:
        - Hubs
      operationId: Hubs_List
      description: Gets all hubs in the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the hubs in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}/?api-version=2017-04-26:
    put:
      tags:
        - Profiles
      operationId: Profiles_CreateOrUpdate
      description: Creates a profile within a Hub, or updates an existing profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the profile.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create/delete Profile type operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResourceFormat'
        '202':
          description: Accepted. The create profile operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Profiles
      operationId: Profiles_Get
      description: Gets information about the specified profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the profile.
          required: true
          schema:
            type: string
        - name: locale-code
          in: query
          description: Locale of profile to retrieve, default is en-us.
          required: false
          schema:
            default: en-us
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResourceFormat'
    delete:
      tags:
        - Profiles
      operationId: Profiles_Delete
      description: Deletes a profile within a hub
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the profile.
          required: true
          schema:
            type: string
        - name: locale-code
          in: query
          description: Locale of profile to retrieve, default is en-us.
          required: false
          schema:
            default: en-us
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The profile is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
        '204':
          description: NoContent. Successfully requested delete operation, but the response is intentionally empty.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/?api-version=2017-04-26:
    get:
      tags:
        - Profiles
      operationId: Profiles_ListByHub
      description: Gets all profile in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: locale-code
          in: query
          description: Locale of profile to retrieve, default is en-us.
          required: false
          schema:
            default: en-us
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the profiles in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis/?api-version=2017-04-26:
    post:
      tags:
        - Profiles
      operationId: Profiles_GetEnrichingKpis
      description: Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens through participants of the Interaction on an Interaction KPI and through Relationships for Profile KPIs.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the enriching KPIs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KpiDefinition'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/?api-version=2017-04-26:
    put:
      tags:
        - Interactions
      operationId: Interactions_CreateOrUpdate
      description: Creates an interaction or updates an existing interaction within a hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: interactionName
          in: path
          description: The name of the interaction.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Interaction operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the interaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionResourceFormat'
        '202':
          description: Accepted. The create interaction operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Interactions
      operationId: Interactions_Get
      description: Gets information about the specified interaction.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: interactionName
          in: path
          description: The name of the interaction.
          required: true
          schema:
            type: string
        - name: locale-code
          in: query
          description: Locale of interaction to retrieve, default is en-us.
          required: false
          schema:
            default: en-us
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the interaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionResourceFormat'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/?api-version=2017-04-26:
    get:
      tags:
        - Interactions
      operationId: Interactions_ListByHub
      description: Gets all interactions in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: locale-code
          in: query
          description: Locale of interaction to retrieve, default is en-us.
          required: false
          schema:
            default: en-us
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the interactions in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks/?api-version=2017-04-26:
    post:
      tags:
        - Interactions
      operationId: Interactions_SuggestRelationshipLinks
      description: Suggests relationships to create relationship links.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: interactionName
          in: path
          description: The name of the interaction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get suggested Relationship Links.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestRelationshipLinksResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}/?api-version=2017-04-26:
    put:
      tags:
        - Relationships
      operationId: Relationships_CreateOrUpdate
      description: Creates a relationship or updates an existing relationship within a hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipName
          in: path
          description: The name of the Relationship.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Relationship operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the relationship.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipResourceFormat'
        '202':
          description: Accepted. The create relationship operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Relationships
      operationId: Relationships_Get
      description: Gets information about the specified relationship.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipName
          in: path
          description: The name of the relationship.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the relationship.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipResourceFormat'
    delete:
      tags:
        - Relationships
      operationId: Relationships_Delete
      description: Deletes a relationship within a hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipName
          in: path
          description: The name of the relationship.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The relationship is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/?api-version=2017-04-26:
    get:
      tags:
        - Relationships
      operationId: Relationships_ListByHub
      description: Gets all relationships in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the relationships in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}/?api-version=2017-04-26:
    put:
      tags:
        - RelationshipLinks
      operationId: RelationshipLinks_CreateOrUpdate
      description: Creates a relationship link or updates an existing relationship link within a hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipLinkName
          in: path
          description: The name of the relationship link.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate relationship link operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipLinkResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the relationship link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipLinkResourceFormat'
        '202':
          description: Accepted. The create relationship operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - RelationshipLinks
      operationId: RelationshipLinks_Get
      description: Gets information about the specified relationship Link.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipLinkName
          in: path
          description: The name of the relationship link.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the relationship link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipLinkResourceFormat'
    delete:
      tags:
        - RelationshipLinks
      operationId: RelationshipLinks_Delete
      description: Deletes a relationship link within a hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: relationshipLinkName
          in: path
          description: The name of the relationship.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The relationship link is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/?api-version=2017-04-26:
    get:
      tags:
        - RelationshipLinks
      operationId: RelationshipLinks_ListByHub
      description: Gets all relationship links in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the relationship links in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipLinkListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/?api-version=2017-04-26:
    put:
      tags:
        - AuthorizationPolicies
      operationId: AuthorizationPolicies_CreateOrUpdate
      description: Creates an authorization policy or updates an existing authorization policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: authorizationPolicyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]$|^[A-Za-z0-9][\w-\.]*[A-Za-z0-9]$
            minLength: 1
            maxLength: 50
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate authorization policy operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationPolicyResourceFormat'
      responses:
        '200':
          description: OK. Successfully update an existing authorization policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicyResourceFormat'
        '201':
          description: Created. A new authorization policy is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicyResourceFormat'
    get:
      tags:
        - AuthorizationPolicies
      operationId: AuthorizationPolicies_Get
      description: Gets an authorization policy in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: authorizationPolicyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the authorization policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicyResourceFormat'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/?api-version=2017-04-26:
    get:
      tags:
        - AuthorizationPolicies
      operationId: AuthorizationPolicies_ListByHub
      description: Gets all the authorization policies in a specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the authorization policies in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicyListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey/?api-version=2017-04-26:
    post:
      tags:
        - AuthorizationPolicies
      operationId: AuthorizationPolicies_RegeneratePrimaryKey
      description: Regenerates the primary policy key of the specified authorization policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: authorizationPolicyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The primary key of the authorization policy is regenerated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey/?api-version=2017-04-26:
    post:
      tags:
        - AuthorizationPolicies
      operationId: AuthorizationPolicies_RegenerateSecondaryKey
      description: Regenerates the secondary policy key of the specified authorization policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: authorizationPolicyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The secondary key of the authorization policy is regenerated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/?api-version=2017-04-26:
    put:
      tags:
        - Connectors
      operationId: Connectors_CreateOrUpdate
      description: Creates a connector or updates an existing connector in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Connector operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the connector.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResourceFormat'
        '202':
          description: Accepted. The create connector operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Connectors
      operationId: Connectors_Get
      description: Gets a connector in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the connector.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResourceFormat'
    delete:
      tags:
        - Connectors
      operationId: Connectors_Delete
      description: Deletes a connector in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The connector is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
        '204':
          description: NoContent. Successfully requested delete operation, but the response is intentionally empty.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/?api-version=2017-04-26:
    get:
      tags:
        - Connectors
      operationId: Connectors_ListByHub
      description: Gets all the connectors in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the connectors in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}/?api-version=2017-04-26:
    put:
      tags:
        - ConnectorMappings
      operationId: ConnectorMappings_CreateOrUpdate
      description: Creates a connector mapping or updates an existing connector mapping in the connector.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - name: mappingName
          in: path
          description: The name of the connector mapping.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Connector Mapping operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorMappingResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the connector mapping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorMappingResourceFormat'
        '201':
          description: Created. A new connector mapping is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorMappingResourceFormat'
    get:
      tags:
        - ConnectorMappings
      operationId: ConnectorMappings_Get
      description: Gets a connector mapping in the connector.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - name: mappingName
          in: path
          description: The name of the connector mapping.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the connector mapping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorMappingResourceFormat'
    delete:
      tags:
        - ConnectorMappings
      operationId: ConnectorMappings_Delete
      description: Deletes a connector mapping in the connector.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - name: mappingName
          in: path
          description: The name of the connector mapping.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The connector mapping is deleted.
        '204':
          description: NoContent. Successfully requested delete operation, but the response is intentionally empty.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/?api-version=2017-04-26:
    get:
      tags:
        - ConnectorMappings
      operationId: ConnectorMappings_ListByConnector
      description: Gets all the connector mappings in the specified connector.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: connectorName
          in: path
          description: The name of the connector.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the connector mappings in the connector.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorMappingListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/?api-version=2017-04-26:
    put:
      tags:
        - Kpi
      operationId: Kpi_CreateOrUpdate
      description: Creates a KPI or updates an existing KPI in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: kpiName
          in: path
          description: The name of the KPI.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create/update KPI operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KpiResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the KPI.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KpiResourceFormat'
        '202':
          description: Accepted. The create KPI operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Kpi
      operationId: Kpi_Get
      description: Gets a KPI in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: kpiName
          in: path
          description: The name of the KPI.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the KPI.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KpiResourceFormat'
    delete:
      tags:
        - Kpi
      operationId: Kpi_Delete
      description: Deletes a KPI in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: kpiName
          in: path
          description: The name of the KPI.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The KPI is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess/?api-version=2017-04-26:
    post:
      tags:
        - Kpi
      operationId: Kpi_Reprocess
      description: Reprocesses the Kpi values of the specified KPI.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: kpiName
          in: path
          description: The name of the KPI.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Reprocessing Kpi Values operation is accepted.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/?api-version=2017-04-26:
    get:
      tags:
        - Kpi
      operationId: Kpi_ListByHub
      description: Gets all the KPIs in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the KPIs in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KpiListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes/?api-version=2017-04-26:
    get:
      tags:
        - WidgetTypes
      operationId: WidgetTypes_ListByHub
      description: Gets all available widget types in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the widget types in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetTypeListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}/?api-version=2017-04-26:
    get:
      tags:
        - WidgetTypes
      operationId: WidgetTypes_Get
      description: Gets a widget type in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: widgetTypeName
          in: path
          description: The name of the widget type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the widget type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetTypeResourceFormat'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/?api-version=2017-04-26:
    get:
      tags:
        - Views
      operationId: Views_ListByHub
      description: Gets all available views for given user in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: userId
          in: query
          description: The user ID. Use * to retrieve hub level views.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully get all the views in the hub for the given user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}/?api-version=2017-04-26:
    put:
      tags:
        - Views
      operationId: Views_CreateOrUpdate
      description: Creates a view or updates an existing view in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the view.
          required: true
          schema:
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate View operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the view.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResourceFormat'
    get:
      tags:
        - Views
      operationId: Views_Get
      description: Gets a view in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the view.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: userId
          in: query
          description: The user ID. Use * to retrieve hub level view.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully get the view.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewResourceFormat'
    delete:
      tags:
        - Views
      operationId: Views_Delete
      description: Deletes a view in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the view.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: userId
          in: query
          description: The user ID. Use * to retrieve hub level view.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. The view is deleted.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}/?api-version=2017-04-26:
    put:
      tags:
        - Links
      operationId: Links_CreateOrUpdate
      description: Creates a link or updates an existing link in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: linkName
          in: path
          description: The name of the link.
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate Link operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResourceFormat'
        '202':
          description: Accepted. The create link operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Links
      operationId: Links_Get
      description: Gets a link in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: linkName
          in: path
          description: The name of the link.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResourceFormat'
    delete:
      tags:
        - Links
      operationId: Links_Delete
      description: Deletes a link in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: linkName
          in: path
          description: The name of the link.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The link is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/?api-version=2017-04-26:
    get:
      tags:
        - Links
      operationId: Links_ListByHub
      description: Gets all the links in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the links in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles/?api-version=2017-04-26:
    get:
      tags:
        - Roles
      operationId: Roles_ListByHub
      description: Gets all the roles for the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the roles in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/?api-version=2017-04-26:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_ListByHub
      description: Gets all the role assignments for the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the role assignment in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}/?api-version=2017-04-26:
    put:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_CreateOrUpdate
      description: Creates or updates a role assignment in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: assignmentName
          in: path
          description: The assignment name
          required: true
          schema:
            pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate RoleAssignment operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResourceFormat'
        '202':
          description: Accepted. The create role assignment operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_Get
      description: Gets the role assignment in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: assignmentName
          in: path
          description: The name of the role assignment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResourceFormat'
    delete:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_Delete
      description: Deletes the role assignment in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: assignmentName
          in: path
          description: The name of the role assignment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The role assignment is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
        '204':
          description: NoContent. Successfully requested delete operation, but the response is intentionally empty.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl/?api-version=2017-04-26:
    post:
      tags:
        - Images
      operationId: Images_GetUploadUrlForEntityType
      description: Gets entity type (profile or interaction) image upload URL.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the GetUploadUrlForEntityType operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImageUploadUrlInput'
      responses:
        '200':
          description: OK. Successfully get the image upload URL for entity type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinition'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getDataImageUploadUrl/?api-version=2017-04-26:
    post:
      tags:
        - Images
      operationId: Images_GetUploadUrlForData
      description: Gets data image upload URL.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the GetUploadUrlForData operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImageUploadUrlInput'
      responses:
        '200':
          description: OK. Successfully get the image upload URL for data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinition'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/?api-version=2017-04-26:
    put:
      tags:
        - Predictions
      operationId: Predictions_CreateOrUpdate
      description: Creates a Prediction or updates an existing Prediction in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            minLength: 1
            maxLength: 512
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create/update Prediction operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionResourceFormat'
      responses:
        '200':
          description: OK. Successfully created the Prediction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResourceFormat'
        '202':
          description: Accepted. The create Prediction operation is accepted.
      x-ms-long-running-operation: true
    get:
      tags:
        - Predictions
      operationId: Predictions_Get
      description: Gets a Prediction in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the Prediction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResourceFormat'
    delete:
      tags:
        - Predictions
      operationId: Predictions_Delete
      description: Deletes a Prediction in the hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The Prediction is deleted.
        '202':
          description: Accepted. The delete operation is accepted.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults/?api-version=2017-04-26:
    post:
      tags:
        - Predictions
      operationId: Predictions_GetTrainingResults
      description: Gets training results.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the training results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionTrainingResults'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus/?api-version=2017-04-26:
    post:
      tags:
        - Predictions
      operationId: Predictions_GetModelStatus
      description: Gets model status of the prediction.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get the model status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionModelStatus'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus/?api-version=2017-04-26:
    post:
      tags:
        - Predictions
      operationId: Predictions_ModelStatus
      description: Creates or updates the model status of prediction.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - name: predictionName
          in: path
          description: The name of the Prediction.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create/update prediction model status operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionModelStatus'
      responses:
        '200':
          description: OK. Successfully created or updated the prediction model status.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/?api-version=2017-04-26:
    get:
      tags:
        - Predictions
      operationId: Predictions_ListByHub
      description: Gets all the predictions in the specified hub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the hub.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully get all the predictions in the hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionListResult'
      x-ms-pageable:
        nextLinkName: nextLink
