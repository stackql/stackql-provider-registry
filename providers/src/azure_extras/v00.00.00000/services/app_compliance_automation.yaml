openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: App Compliance Automation Tool for Microsoft 365
  description: App Compliance Automation Tool for Microsoft 365 (ACAT) is a service in Azure portal that helps simplify the compliance journey for any app that consumes Microsoft 365 customer data and is published via Partner Center. Its an application-centric compliance automation tool that helps you complete Microsoft 365 Certification with greater ease and convenience
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ExtraParameter.offerGuid:
      name: offerGuid
      in: query
      description: The offerGuid which mapping to the reports.
      required: false
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ExtraParameter.reportCreatorTenantId:
      name: reportCreatorTenantId
      in: query
      description: The tenant id of the report creator.
      required: false
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    QueryParameters.filter:
      name: $filter
      in: query
      description: The filter to apply on the operation.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: filter
      schema:
        minLength: 1
        type: string
    QueryParameters.offerGuid:
      name: offerGuid
      in: query
      description: The offerGuid which mapping to the reports.
      required: false
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    QueryParameters.orderby:
      name: $orderby
      in: query
      description: OData order by query option.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: orderby
      schema:
        minLength: 1
        type: string
    QueryParameters.reportCreatorTenantId:
      name: reportCreatorTenantId
      in: query
      description: The tenant id of the report creator.
      required: false
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    QueryParameters.select:
      name: $select
      in: query
      description: OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: select
      schema:
        minLength: 1
        type: string
    QueryParameters.skipToken:
      name: $skipToken
      in: query
      description: Skip over when retrieving results.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: skipToken
      schema:
        type: string
    QueryParameters.top:
      name: $top
      in: query
      description: Number of elements to return when retrieving results.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: top
      schema:
        format: int32
        minimum: 1
        maximum: 100
        type: integer
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Category:
      type: object
      description: A class represent the compliance category.
      properties:
        categoryName:
          type: string
          description: The name of the compliance category. e.g. "Operational Security"
          readOnly: true
        categoryStatus:
          $ref: '#/components/schemas/CategoryStatus'
          description: Category status.
          readOnly: true
        controlFamilies:
          type: array
          description: List of control families.
          items:
            $ref: '#/components/schemas/ControlFamily'
          readOnly: true
          x-ms-identifiers:
            - controlFamilyName
    CategoryStatus:
      type: string
      description: Indicates the category status.
      enum:
        - Passed
        - Failed
        - NotApplicable
        - PendingApproval
      x-ms-enum:
        name: CategoryStatus
        modelAsString: true
        values:
          - name: Passed
            value: Passed
            description: The category is passed.
          - name: Failed
            value: Failed
            description: The category is failed.
          - name: NotApplicable
            value: NotApplicable
            description: The category is not applicable.
          - name: PendingApproval
            value: PendingApproval
            description: The category is pending for approval.
    CertSyncRecord:
      type: object
      description: A class represent the certification record synchronized from app compliance.
      properties:
        offerGuid:
          type: string
          description: The offerGuid which mapping to the reports.
          minLength: 1
        certificationStatus:
          type: string
          description: Indicates the status of certification process.
        ingestionStatus:
          type: string
          description: Indicates the status of compliance process.
        controls:
          type: array
          description: The control records list to be synchronized.
          items:
            $ref: '#/components/schemas/ControlSyncRecord'
          x-ms-identifiers:
            - controlId
    ComplianceReportItem:
      type: object
      description: Object that includes all the content for single compliance result.
      properties:
        categoryName:
          type: string
          description: The category name.
          readOnly: true
        controlFamilyName:
          type: string
          description: The control family name.
          readOnly: true
        controlId:
          type: string
          description: The control Id - e.g. "1".
          readOnly: true
        controlName:
          type: string
          description: The control name.
          readOnly: true
        controlStatus:
          $ref: '#/components/schemas/ControlStatus'
          description: Control status.
          readOnly: true
        responsibilityTitle:
          type: string
          description: The title of the customer responsibility.
          readOnly: true
        responsibilityDescription:
          type: string
          description: The description of the customer responsibility.
          readOnly: true
        resourceId:
          type: string
          description: The Id of the resource.
          readOnly: true
        resourceType:
          type: string
          description: The type of the resource.  e.g. "Microsoft.SignalRService/SignalR"
          readOnly: true
        resourceOrigin:
          $ref: '#/components/schemas/ResourceOrigin'
          description: Resource origin.
          readOnly: true
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: Resource status.
          readOnly: true
        resourceStatusChangeDate:
          type: string
          format: date-time
          description: The status change date for the resource.
          readOnly: true
    ComplianceResult:
      type: object
      description: A class represent the compliance result.
      properties:
        complianceName:
          type: string
          description: The name of the compliance. e.g. "M365"
          readOnly: true
        categories:
          type: array
          description: List of categories.
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
          x-ms-identifiers:
            - categoryName
    ContentType:
      type: string
      description: content type
      enum:
        - application/json
      x-ms-enum:
        name: ContentType
        modelAsString: true
        values:
          - name: ApplicationJson
            value: application/json
            description: The content type is application/json.
    Control:
      type: object
      description: A class represent the control.
      properties:
        controlId:
          type: string
          description: The Id of the control. e.g. "Operational_Security_10"
          readOnly: true
        controlName:
          type: string
          description: The name of the control. e.g. "Unsupported OS and Software."
          readOnly: true
        controlFullName:
          type: string
          description: The full name of the control. e.g. "Validate that unsupported operating systems and software components are not in use."
          readOnly: true
        controlDescription:
          type: string
          description: The control's description
          readOnly: true
        controlDescriptionHyperLink:
          type: string
          description: The hyper link to the control's description'.
          readOnly: true
        controlStatus:
          $ref: '#/components/schemas/ControlStatus'
          description: Control status.
          readOnly: true
        responsibilities:
          type: array
          description: List of customer responsibility.
          items:
            $ref: '#/components/schemas/Responsibility'
          readOnly: true
          x-ms-identifiers:
            - responsibilityId
    ControlFamily:
      type: object
      description: A class represent the control family.
      properties:
        controlFamilyName:
          type: string
          description: The name of the control family. e.g. "Malware Protection - Anti-Virus"
          readOnly: true
        controlFamilyStatus:
          $ref: '#/components/schemas/ControlFamilyStatus'
          description: The control family status
          readOnly: true
        controls:
          type: array
          description: List of controls.
          items:
            $ref: '#/components/schemas/Control'
          readOnly: true
          x-ms-identifiers:
            - controlId
    ControlFamilyStatus:
      type: string
      description: Indicates the control family status.
      enum:
        - Passed
        - Failed
        - NotApplicable
        - PendingApproval
      x-ms-enum:
        name: ControlFamilyStatus
        modelAsString: true
        values:
          - name: Passed
            value: Passed
            description: The control family is passed.
          - name: Failed
            value: Failed
            description: The control family is failed.
          - name: NotApplicable
            value: NotApplicable
            description: The control family is not applicable.
          - name: PendingApproval
            value: PendingApproval
            description: The control family is pending for approval.
    ControlStatus:
      type: string
      description: Indicates the control status.
      enum:
        - Passed
        - Failed
        - NotApplicable
        - PendingApproval
      x-ms-enum:
        name: ControlStatus
        modelAsString: true
        values:
          - name: Passed
            value: Passed
            description: The control is passed.
          - name: Failed
            value: Failed
            description: The control is failed.
          - name: NotApplicable
            value: NotApplicable
            description: The control is not applicable.
          - name: PendingApproval
            value: PendingApproval
            description: The control is pending for approval.
    ControlSyncRecord:
      type: object
      description: A class represent the control record synchronized from app compliance.
      properties:
        controlId:
          type: string
          description: The Id of the control. e.g. "Operational_Security_10"
        controlStatus:
          type: string
          description: Control status synchronized from app compliance.
    DeliveryStatus:
      type: string
      description: webhook deliveryStatus
      enum:
        - Succeeded
        - Failed
        - NotStarted
      x-ms-enum:
        name: DeliveryStatus
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: The webhook is delivered successfully.
          - name: Failed
            value: Failed
            description: The webhook is failed to deliver.
          - name: NotStarted
            value: NotStarted
            description: The webhook is not delivered.
      readOnly: true
    DownloadResponse:
      type: object
      description: Object that includes all the possible response for the download operation.
      properties:
        resourceList:
          type: array
          description: Resource list of the report
          items:
            $ref: '#/components/schemas/ResourceItem'
          readOnly: true
          x-ms-identifiers:
            - resourceId
        complianceReport:
          type: array
          description: List of the compliance result
          items:
            $ref: '#/components/schemas/ComplianceReportItem'
          readOnly: true
          x-ms-identifiers:
            - controlId
        compliancePdfReport:
          $ref: '#/components/schemas/DownloadResponseCompliancePdfReport'
          description: Compliance pdf report
          readOnly: true
        complianceDetailedPdfReport:
          $ref: '#/components/schemas/DownloadResponseComplianceDetailedPdfReport'
          description: The detailed compliance pdf report
          readOnly: true
    DownloadResponseComplianceDetailedPdfReport:
      type: object
      description: The detailed compliance pdf report
      properties:
        sasUri:
          type: string
          description: The uri of detailed compliance pdf report
          readOnly: true
    DownloadResponseCompliancePdfReport:
      type: object
      description: Compliance pdf report
      properties:
        sasUri:
          type: string
          description: The uri of compliance pdf report
          readOnly: true
    DownloadType:
      type: string
      description: Indicates the download type.
      enum:
        - ComplianceReport
        - CompliancePdfReport
        - ComplianceDetailedPdfReport
        - ResourceList
      x-ms-enum:
        name: DownloadType
        modelAsString: true
        values:
          - name: ComplianceReport
            value: ComplianceReport
            description: Download the compliance report.
          - name: CompliancePdfReport
            value: CompliancePdfReport
            description: Download the compliance pdf report.
          - name: ComplianceDetailedPdfReport
            value: ComplianceDetailedPdfReport
            description: Download the detailed compliance pdf report.
          - name: ResourceList
            value: ResourceList
            description: Download the resource list of the report.
    EnableSslVerification:
      type: string
      description: whether to enable ssl verification
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: EnableSslVerification
        modelAsString: true
        values:
          - name: 'True'
            value: 'true'
            description: The ssl verification is enabled.
          - name: 'False'
            value: 'false'
            description: The ssl verification is not enabled.
    EvidenceFileDownloadRequest:
      type: object
      description: Evidence file's download request.
      properties:
        reportCreatorTenantId:
          type: string
          description: Tenant id.
        offerGuid:
          type: string
          description: The offerGuid which mapping to the reports.
          minLength: 1
    EvidenceFileDownloadResponse:
      type: object
      description: Object that includes all the possible response for the evidence file download operation.
      properties:
        evidenceFile:
          $ref: '#/components/schemas/EvidenceFileDownloadResponseEvidenceFile'
          description: The uri of evidence file
          readOnly: true
    EvidenceFileDownloadResponseEvidenceFile:
      type: object
      description: The uri of evidence file
      properties:
        url:
          type: string
          description: The url of evidence file
          readOnly: true
    EvidenceProperties:
      type: object
      description: Evidence's properties.
      properties:
        evidenceType:
          $ref: '#/components/schemas/EvidenceType'
          description: Evidence type.
        filePath:
          type: string
          description: The path of the file in storage.
        extraData:
          type: string
          description: Extra data considered as evidence.
        controlId:
          type: string
          description: Control id.
        responsibilityId:
          type: string
          description: Responsibility id.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure lifecycle management
          readOnly: true
      required:
        - filePath
    EvidenceResource:
      description: A class represent an AppComplianceAutomation evidence resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/EvidenceProperties'
          description: Evidence property.
          x-ms-client-flatten: true
      type: object
    EvidenceResourceListResult:
      type: object
      description: The response of a EvidenceResource list operation.
      properties:
        value:
          type: array
          description: The EvidenceResource items on this page
          items:
            $ref: '#/components/schemas/EvidenceResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    EvidenceType:
      type: string
      description: Evidence type
      enum:
        - File
        - AutoCollectedEvidence
        - Data
      x-ms-enum:
        name: EvidenceType
        modelAsString: true
        values:
          - name: File
            value: File
            description: The evidence is a file.
          - name: AutoCollectedEvidence
            value: AutoCollectedEvidence
            description: The evidence auto collected by App Compliance Automation.
          - name: Data
            value: Data
            description: The evidence is data.
    GetCollectionCountRequest:
      type: object
      description: Get collection count's request object.
      properties:
        type:
          type: string
          description: The resource type.
    GetCollectionCountResponse:
      type: object
      description: The get collection count response.
      properties:
        count:
          type: integer
          format: int32
          description: The count of the specified resource.
    GetOverviewStatusRequest:
      type: object
      description: Get overview status request object.
      properties:
        type:
          type: string
          description: The resource type.
    GetOverviewStatusResponse:
      type: object
      description: The get overview status response.
      properties:
        statusList:
          type: array
          description: List of different status items.
          items:
            $ref: '#/components/schemas/StatusItem'
          x-ms-identifiers:
            - statusName
    InputType:
      type: string
      description: Question input type.
      enum:
        - None
        - Text
        - Email
        - MultilineText
        - Url
        - Number
        - Boolean
        - Telephone
        - YesNoNa
        - Date
        - YearPicker
        - SingleSelection
        - SingleSelectDropdown
        - MultiSelectCheckbox
        - MultiSelectDropdown
        - MultiSelectDropdownCustom
        - Group
        - Upload
      x-ms-enum:
        name: InputType
        modelAsString: true
        values:
          - name: None
            value: None
            description: The input type is a text box.
          - name: Text
            value: Text
            description: The input content is text string.
          - name: Email
            value: Email
            description: The input content should be an email address.
          - name: MultilineText
            value: MultilineText
            description: The input content should be multiline text.
          - name: Url
            value: Url
            description: The input content should be a URL.
          - name: Number
            value: Number
            description: The input content should be a number.
          - name: Boolean
            value: Boolean
            description: The input content should be a boolean.
          - name: Telephone
            value: Telephone
            description: The input content should be a telephone number.
          - name: YesNoNa
            value: YesNoNa
            description: The input content should be Yes, No or Na.
          - name: Date
            value: Date
            description: The input content should be a date.
          - name: YearPicker
            value: YearPicker
            description: The input content is a Year, pick from the dropdown list.
          - name: SingleSelection
            value: SingleSelection
            description: The input content is a single result seleted from the options.
          - name: SingleSelectDropdown
            value: SingleSelectDropdown
            description: The input content is a single result seleted from the dropdown options.
          - name: MultiSelectCheckbox
            value: MultiSelectCheckbox
            description: The input content are multiple results seleted from the checkboxes.
          - name: MultiSelectDropdown
            value: MultiSelectDropdown
            description: The input content are multiple results seleted from the dropdown options.
          - name: MultiSelectDropdownCustom
            value: MultiSelectDropdownCustom
            description: The input content are result seleted from the custom dropdown options.
          - name: Group
            value: Group
            description: The input content is a group of answers.
          - name: Upload
            value: Upload
            description: The input content is a uploaded file.
    IsRecommendSolution:
      type: string
      description: Indicates whether this solution is the recommended.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: IsRecommendSolution
        modelAsString: true
        values:
          - name: 'True'
            value: 'true'
            description: This solution is the recommended.
          - name: 'False'
            value: 'false'
            description: This solution is not the recommended.
    ListInUseStorageAccountsRequest:
      type: object
      description: Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.
      properties:
        subscriptionIds:
          type: array
          description: List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
          items:
            type: string
    ListInUseStorageAccountsResponse:
      type: object
      description: Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.
      properties:
        storageAccountList:
          type: array
          description: The storage account list which in use in related reports.
          items:
            $ref: '#/components/schemas/StorageInfo'
          x-ms-identifiers:
            - accountName
    NotificationEvent:
      type: string
      description: notification event.
      enum:
        - generate_snapshot_success
        - generate_snapshot_failed
        - assessment_failure
        - report_configuration_changes
        - report_deletion
      x-ms-enum:
        name: NotificationEvent
        modelAsString: true
        values:
          - name: generate_snapshot_success
            value: generate_snapshot_success
            description: The subscribed report's snapshot is successfully generated.
          - name: generate_snapshot_failed
            value: generate_snapshot_failed
            description: The subscribed report's snapshot is failed to generate.
          - name: assessment_failure
            value: assessment_failure
            description: The subscribed report failed while collecting the assessments.
          - name: report_configuration_changes
            value: report_configuration_changes
            description: The subscribed report's configuration is changed.
          - name: report_deletion
            value: report_deletion
            description: The subscribed report is deleted.
    OnboardRequest:
      type: object
      description: Parameters for onboard operation
      properties:
        subscriptionIds:
          type: array
          description: List of subscription ids to be onboarded
          items:
            type: string
      required:
        - subscriptionIds
    OnboardResponse:
      type: object
      description: Success. The response indicates given subscriptions has been onboarded.
      properties:
        subscriptionIds:
          type: array
          description: List of subscription ids that are onboarded
          items:
            type: string
    OverviewStatus:
      type: object
      description: The overview of the compliance result for one report.
      properties:
        passedCount:
          type: integer
          format: int32
          description: The count of all passed control.
          readOnly: true
        failedCount:
          type: integer
          format: int32
          description: The count of all failed control.
          readOnly: true
        manualCount:
          type: integer
          format: int32
          description: The count of all manual control.
          readOnly: true
        notApplicableCount:
          type: integer
          format: int32
          description: The count of all not applicable control.
          readOnly: true
        pendingCount:
          type: integer
          format: int32
          description: The count of all pending for approval control.
          readOnly: true
    ProvisioningState:
      type: string
      description: Resource provisioning states.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Deleting
        - Fixing
        - Verifying
        - Updating
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: The provision is succeeded.
          - name: Failed
            value: Failed
            description: The provision is failed.
          - name: Canceled
            value: Canceled
            description: The provision is canceled.
          - name: Creating
            value: Creating
            description: The creation is in progress.
          - name: Deleting
            value: Deleting
            description: The deletion is in progress.
          - name: Fixing
            value: Fixing
            description: The fix of the resource in progress.
          - name: Verifying
            value: Verifying
            description: The verification of the resource in progress.
          - name: Updating
            value: Updating
            description: The update of the resource in progress.
      readOnly: true
    QuickAssessment:
      type: object
      description: A class represent the quick assessment.
      properties:
        resourceId:
          type: string
          description: Resource id.
          readOnly: true
        responsibilityId:
          type: string
          description: Responsibility id.
          readOnly: true
        timestamp:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
          readOnly: true
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: Quick assessment status.
          readOnly: true
        displayName:
          type: string
          description: Quick assessment display name.
          readOnly: true
        description:
          type: string
          description: Quick assessment display name.
          readOnly: true
        remediationLink:
          type: string
          description: Link to remediation steps for this quick assessment.
          readOnly: true
    Recommendation:
      type: object
      description: A class represent the recommendation.
      properties:
        recommendationId:
          type: string
          description: The Id of the recommendation.
          readOnly: true
        recommendationShortName:
          type: string
          description: The short name of the recommendation. e.g. "Invalid TLS config"
          readOnly: true
        recommendationSolutions:
          type: array
          description: List of recommendation solutions.
          items:
            $ref: '#/components/schemas/RecommendationSolution'
          readOnly: true
          x-ms-identifiers:
            - recommendationSolutionIndex
    RecommendationSolution:
      type: object
      description: A class represent the recommendation solution.
      properties:
        recommendationSolutionIndex:
          type: string
          description: The index of the recommendation solution.
          readOnly: true
        recommendationSolutionContent:
          type: string
          description: The detail steps of the recommendation solution.
          readOnly: true
        isRecommendSolution:
          $ref: '#/components/schemas/IsRecommendSolution'
          description: Indicates whether this solution is the recommended.
          readOnly: true
    ReportComplianceStatus:
      type: object
      description: A list which includes all the compliance result for one report.
      properties:
        m365:
          $ref: '#/components/schemas/OverviewStatus'
          description: The Microsoft 365 certification name.
          readOnly: true
    ReportFixResult:
      type: object
      description: Report fix result.
      properties:
        result:
          $ref: '#/components/schemas/Result'
          description: Indicates whether the fix action is Succeeded or Failed.
          readOnly: true
        reason:
          type: string
          description: If the report fix action failed, to indicate the detailed failed reason.
          readOnly: true
    ReportPatchProperties:
      type: object
      description: Patch Report's properties.
      properties:
        triggerTime:
          type: string
          format: date-time
          description: Report collection trigger time.
        timeZone:
          type: string
          description: |-
            Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.
            An example of valid timezone id is "Pacific Standard Time".
        resources:
          type: array
          description: List of resource data.
          items:
            $ref: '#/components/schemas/ResourceMetadata'
          x-ms-identifiers:
            - resourceId
        status:
          $ref: '#/components/schemas/ReportStatus'
          description: Report status.
          readOnly: true
        errors:
          type: array
          description: List of report error codes.
          items:
            type: string
          readOnly: true
        tenantId:
          type: string
          description: Report's tenant id.
          readOnly: true
        offerGuid:
          type: string
          description: A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
        nextTriggerTime:
          type: string
          format: date-time
          description: Report next collection trigger time.
          readOnly: true
        lastTriggerTime:
          type: string
          format: date-time
          description: Report last collection trigger time.
          readOnly: true
        subscriptions:
          type: array
          description: List of subscription Ids.
          items:
            type: string
          readOnly: true
        complianceStatus:
          $ref: '#/components/schemas/ReportComplianceStatus'
          description: Report compliance status.
          readOnly: true
        storageInfo:
          $ref: '#/components/schemas/StorageInfo'
          description: The information of 'bring your own storage' binding to the report
        certRecords:
          type: array
          description: List of synchronized certification records.
          items:
            $ref: '#/components/schemas/CertSyncRecord'
          readOnly: true
          x-ms-identifiers:
            - offerGuid
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure lifecycle management
          readOnly: true
    ReportProperties:
      type: object
      description: Create Report's properties.
      properties:
        triggerTime:
          type: string
          format: date-time
          description: Report collection trigger time.
        timeZone:
          type: string
          description: |-
            Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone -ListAvailable" in PowerShell.
            An example of valid timezone id is "Pacific Standard Time".
        resources:
          type: array
          description: List of resource data.
          items:
            $ref: '#/components/schemas/ResourceMetadata'
          x-ms-identifiers:
            - resourceId
        status:
          $ref: '#/components/schemas/ReportStatus'
          description: Report status.
          readOnly: true
        errors:
          type: array
          description: List of report error codes.
          items:
            type: string
          readOnly: true
        tenantId:
          type: string
          description: Report's tenant id.
          readOnly: true
        offerGuid:
          type: string
          description: A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, "00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002" and "00000000-0000-0000-0000-000000000003".
        nextTriggerTime:
          type: string
          format: date-time
          description: Report next collection trigger time.
          readOnly: true
        lastTriggerTime:
          type: string
          format: date-time
          description: Report last collection trigger time.
          readOnly: true
        subscriptions:
          type: array
          description: List of subscription Ids.
          items:
            type: string
          readOnly: true
        complianceStatus:
          $ref: '#/components/schemas/ReportComplianceStatus'
          description: Report compliance status.
          readOnly: true
        storageInfo:
          $ref: '#/components/schemas/StorageInfo'
          description: The information of 'bring your own storage' binding to the report
        certRecords:
          type: array
          description: List of synchronized certification records.
          items:
            $ref: '#/components/schemas/CertSyncRecord'
          readOnly: true
          x-ms-identifiers:
            - offerGuid
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure lifecycle management
          readOnly: true
      required:
        - triggerTime
        - timeZone
        - resources
    ReportResource:
      description: A class represent an AppComplianceAutomation report resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/ReportProperties'
          description: Report property.
          x-ms-client-flatten: true
      type: object
    ReportResourceListResult:
      type: object
      description: The response of a ReportResource list operation.
      properties:
        value:
          type: array
          description: The ReportResource items on this page
          items:
            $ref: '#/components/schemas/ReportResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ReportResourcePatch:
      description: A class represent a AppComplianceAutomation report resource update properties.
      properties:
        properties:
          $ref: '#/components/schemas/ReportPatchProperties'
          description: Report property.
      type: object
    ReportStatus:
      type: string
      description: Report status.
      enum:
        - Active
        - Failed
        - Reviewing
        - Disabled
      x-ms-enum:
        name: ReportStatus
        modelAsString: true
        values:
          - name: Active
            value: Active
            description: The report is active.
          - name: Failed
            value: Failed
            description: The report is failed.
          - name: Reviewing
            value: Reviewing
            description: The report is under reviewing.
          - name: Disabled
            value: Disabled
            description: The report is disabled.
    ReportVerificationResult:
      type: object
      description: Report health status verification result.
      properties:
        result:
          $ref: '#/components/schemas/Result'
          description: Indicates whether the report verification action is Succeeded or Failed.
          readOnly: true
        reason:
          type: string
          description: If the report verification action failed, to indicate the detailed failed reason.
          readOnly: true
    ResourceItem:
      type: object
      description: Resource Id.
      properties:
        subscriptionId:
          type: string
          description: The subscription Id of this resource.
          readOnly: true
        resourceGroup:
          type: string
          description: The resource group name of this resource.
          readOnly: true
        resourceType:
          type: string
          description: The resource type of this resource. e.g. "Microsoft.SignalRService/SignalR"
          readOnly: true
        resourceId:
          type: string
          description: The resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
          readOnly: true
    ResourceMetadata:
      type: object
      description: Single resource Id's metadata.
      properties:
        resourceId:
          type: string
          description: Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
        resourceType:
          type: string
          description: Resource type. e.g. "Microsoft.Compute/virtualMachines"
        resourceKind:
          type: string
          description: Resource kind.
        resourceOrigin:
          $ref: '#/components/schemas/ResourceOrigin'
          description: Resource Origin.
        accountId:
          type: string
          description: Account Id. For example - the AWS account id.
      required:
        - resourceId
    ResourceOrigin:
      type: string
      description: Resource Origin.
      enum:
        - Azure
        - AWS
        - GCP
      x-ms-enum:
        name: ResourceOrigin
        modelAsString: true
        values:
          - name: Azure
            value: Azure
            description: The resource is from Azure.
          - name: AWS
            value: AWS
            description: The resource is from AWS.
          - name: GCP
            value: GCP
            description: The resource is from GCP.
    ResourceStatus:
      type: string
      description: Indicates the resource status.
      enum:
        - Healthy
        - Unhealthy
      x-ms-enum:
        name: ResourceStatus
        modelAsString: true
        values:
          - name: Healthy
            value: Healthy
            description: The resource is healthy.
          - name: Unhealthy
            value: Unhealthy
            description: The resource is unhealthy.
    Responsibility:
      type: object
      description: A class represent the customer responsibility.
      properties:
        responsibilityId:
          type: string
          description: The id of the customer responsibility.
          readOnly: true
        responsibilityTitle:
          type: string
          description: The title of the customer responsibility.
          readOnly: true
        responsibilityDescription:
          type: string
          description: The description of the customer responsibility.
          readOnly: true
        responsibilityType:
          $ref: '#/components/schemas/ResponsibilityType'
          description: The type of customer responsibility.
          readOnly: true
        responsibilitySeverity:
          $ref: '#/components/schemas/ResponsibilitySeverity'
          description: The severity level of this customer responsibility.
          readOnly: true
        responsibilityStatus:
          $ref: '#/components/schemas/ResponsibilityStatus'
          description: The status of this customer responsibility.
          readOnly: true
        responsibilityEnvironment:
          $ref: '#/components/schemas/ResponsibilityEnvironment'
          description: The supported cloud environment of this customer responsibility.
          readOnly: true
        failedResourceCount:
          type: integer
          format: int32
          description: The count of all failed resources.
        totalResourceCount:
          type: integer
          format: int32
          description: The count of all resources.
        resourceList:
          type: array
          description: List of resource.
          items:
            $ref: '#/components/schemas/ResponsibilityResource'
          readOnly: true
          x-ms-identifiers:
            - resourceId
        recommendationList:
          type: array
          description: List of recommendation.
          items:
            $ref: '#/components/schemas/Recommendation'
          readOnly: true
          x-ms-identifiers:
            - recommendationId
        guidance:
          type: string
          description: The evidence upload guidance description.
          readOnly: true
        justification:
          type: string
          description: The justification given by the user to clarify the reason.
          readOnly: true
        evidenceFiles:
          type: array
          description: List of evidence file url.
          items:
            type: string
    ResponsibilityEnvironment:
      type: string
      description: Indicates the customer responsibility supported cloud environment.
      enum:
        - Azure
        - AWS
        - GCP
        - General
      x-ms-enum:
        name: ResponsibilityEnvironment
        modelAsString: true
        values:
          - name: Azure
            value: Azure
            description: The responsibility is supported in Azure.
          - name: AWS
            value: AWS
            description: The responsibility is supported in AWS.
          - name: GCP
            value: GCP
            description: The responsibility is supported in GCP.
          - name: General
            value: General
            description: The responsibility is general requirement of all environment.
    ResponsibilityResource:
      type: object
      description: A class represent the resource.
      properties:
        resourceId:
          type: string
          description: The Id of the resource.
          readOnly: true
        accountId:
          type: string
          description: Account Id. For example - AWS account Id.
          readOnly: true
        resourceType:
          type: string
          description: The type of the resource. e.g. "Microsoft.SignalRService/SignalR"
          readOnly: true
        resourceOrigin:
          $ref: '#/components/schemas/ResourceOrigin'
          description: Resource origin.
          readOnly: true
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: Resource status.
          readOnly: true
        resourceStatusChangeDate:
          type: string
          format: date-time
          description: The status change date for the resource.
          readOnly: true
        recommendationIds:
          type: array
          description: List of recommendation id.
          items:
            type: string
    ResponsibilitySeverity:
      type: string
      description: Indicates the customer responsibility severity.
      enum:
        - High
        - Medium
        - Low
      x-ms-enum:
        name: ResponsibilitySeverity
        modelAsString: true
        values:
          - name: High
            value: High
            description: The responsibility is high severity.
          - name: Medium
            value: Medium
            description: The responsibility is medium severity.
          - name: Low
            value: Low
            description: The responsibility is low severity.
    ResponsibilityStatus:
      type: string
      description: Indicates the customer responsibility status.
      enum:
        - Passed
        - Failed
        - NotApplicable
        - PendingApproval
      x-ms-enum:
        name: ResponsibilityStatus
        modelAsString: true
        values:
          - name: Passed
            value: Passed
            description: The responsibility is passed.
          - name: Failed
            value: Failed
            description: The responsibility is failed.
          - name: NotApplicable
            value: NotApplicable
            description: The responsibility is not applicable.
          - name: PendingApproval
            value: PendingApproval
            description: The responsibility is pending for approval.
    ResponsibilityType:
      type: string
      description: Indicates the customer responsibility type.
      enum:
        - Automated
        - ScopedManual
        - Manual
      x-ms-enum:
        name: ResponsibilityType
        modelAsString: true
        values:
          - name: Automated
            value: Automated
            description: The responsibility is automated.
          - name: ScopedManual
            value: ScopedManual
            description: The responsibility is scoped manual.
          - name: Manual
            value: Manual
            description: The responsibility is manual.
    Result:
      type: string
      description: Indicates whether the fix action is Succeeded or Failed.
      enum:
        - Succeeded
        - Failed
      x-ms-enum:
        name: Result
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: The result is succeeded.
          - name: Failed
            value: Failed
            description: The result is failed.
      readOnly: true
    Rule:
      type: string
      description: Scoping question rule.
      enum:
        - Required
        - CharLength
        - Url
        - Urls
        - Domains
        - USPrivacyShield
        - PublicSOX
        - CreditCardPCI
        - AzureApplication
        - ValidGuid
        - PublisherVerification
        - DynamicDropdown
        - PreventNonEnglishChar
        - ValidEmail
      x-ms-enum:
        name: Rule
        modelAsString: true
        values:
          - name: Required
            value: Required
            description: The question is required to answer.
          - name: CharLength
            value: CharLength
            description: The question answer length is limited.
          - name: Url
            value: Url
            description: The question answer should be an Url.
          - name: Urls
            value: Urls
            description: The question answer should be Urls.
          - name: Domains
            value: Domains
            description: The question answer should be domains.
          - name: USPrivacyShield
            value: USPrivacyShield
            description: The question answer should be a UsPrivacyShield.
          - name: PublicSOX
            value: PublicSOX
            description: The question answer should be a PublicSOX.
          - name: CreditCardPCI
            value: CreditCardPCI
            description: The question answer should be a CreditCardPCI.
          - name: AzureApplication
            value: AzureApplication
            description: The question answer should be an AzureApplication.
          - name: ValidGuid
            value: ValidGuid
            description: The question answer should be a valid guid.
          - name: PublisherVerification
            value: PublisherVerification
            description: The question answer should be publisher verification.
          - name: DynamicDropdown
            value: DynamicDropdown
            description: The question answer should be dynamic dropdown.
          - name: PreventNonEnglishChar
            value: PreventNonEnglishChar
            description: The question answer should prevent non-english char.
          - name: ValidEmail
            value: ValidEmail
            description: The question answer should be a valid email.
    ScopingAnswer:
      type: object
      description: Scoping answer.
      properties:
        questionId:
          type: string
          description: Question id.
          pattern: ^[-a-zA-Z0-9_]{1,50}$
        answers:
          type: array
          description: Question answer value list.
          items:
            type: string
      required:
        - questionId
        - answers
    ScopingConfigurationProperties:
      type: object
      description: ScopingConfiguration's properties.
      properties:
        answers:
          type: array
          description: List of scoping question answers.
          items:
            $ref: '#/components/schemas/ScopingAnswer'
          x-ms-identifiers:
            - questionId
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure lifecycle management
          readOnly: true
    ScopingConfigurationResource:
      description: A class represent an AppComplianceAutomation scoping configuration resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/ScopingConfigurationProperties'
          description: ScopingConfiguration property.
          x-ms-client-flatten: true
      type: object
    ScopingConfigurationResourceListResult:
      type: object
      description: The response of a ScopingConfigurationResource list operation.
      properties:
        value:
          type: array
          description: The ScopingConfigurationResource items on this page
          items:
            $ref: '#/components/schemas/ScopingConfigurationResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ScopingQuestion:
      type: object
      description: The definition of a scoping question.
      properties:
        questionId:
          type: string
          description: Question id.
          readOnly: true
        superiorQuestionId:
          type: string
          description: Superior question id.
          readOnly: true
        inputType:
          $ref: '#/components/schemas/InputType'
          description: Input type of the question answer.
          readOnly: true
        optionIds:
          type: array
          description: Option id list.
          items:
            type: string
          readOnly: true
        rules:
          type: array
          description: The rule of the question.
          items:
            $ref: '#/components/schemas/Rule'
          readOnly: true
        showSubQuestionsValue:
          type: string
          description: The answer value to show the sub questions.
          readOnly: true
      required:
        - questionId
        - inputType
        - optionIds
        - rules
    ScopingQuestions:
      type: object
      description: Scoping question list.
      properties:
        questions:
          type: array
          description: List of scoping questions.
          items:
            $ref: '#/components/schemas/ScopingQuestion'
          x-ms-identifiers:
            - questionId
    SendAllEvents:
      type: string
      description: whether to send notification under any event.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: SendAllEvents
        modelAsString: true
        values:
          - name: 'True'
            value: 'true'
            description: Need send notification under any event.
          - name: 'False'
            value: 'false'
            description: No need to send notification under any event.
    SnapshotDownloadRequest:
      type: object
      description: Snapshot's download request.
      properties:
        reportCreatorTenantId:
          type: string
          description: Tenant id.
        downloadType:
          $ref: '#/components/schemas/DownloadType'
          description: Indicates the download type.
        offerGuid:
          type: string
          description: The offerGuid which mapping to the reports.
          minLength: 1
      required:
        - downloadType
    SnapshotProperties:
      type: object
      description: Snapshot's properties.
      properties:
        snapshotName:
          type: string
          description: Snapshot name.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure lifecycle management
          readOnly: true
        reportProperties:
          $ref: '#/components/schemas/ReportProperties'
          description: The report essential info.
          readOnly: true
        reportSystemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        complianceResults:
          type: array
          description: List of compliance results.
          items:
            $ref: '#/components/schemas/ComplianceResult'
          readOnly: true
          x-ms-identifiers:
            - complianceName
    SnapshotResource:
      description: A class represent a AppComplianceAutomation snapshot resource.
      properties:
        properties:
          $ref: '#/components/schemas/SnapshotProperties'
          description: Snapshot's property.
          x-ms-client-flatten: true
      type: object
    SnapshotResourceListResult:
      type: object
      description: The response of a SnapshotResource list operation.
      properties:
        value:
          type: array
          description: The SnapshotResource items on this page
          items:
            $ref: '#/components/schemas/SnapshotResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    StatusItem:
      type: object
      description: Single status.
      properties:
        statusName:
          type: string
          description: Status name - e.g. "Active", "Failed".
        statusValue:
          type: string
          description: Status value. e.g. "100", or "100%".
    StorageInfo:
      type: object
      description: The information of 'bring your own storage' account binding to the report
      properties:
        subscriptionId:
          type: string
          description: The subscription id which 'bring your own storage' account belongs to
        resourceGroup:
          type: string
          description: The resourceGroup which 'bring your own storage' account belongs to
        accountName:
          type: string
          description: '''bring your own storage'' account name'
        location:
          type: string
          description: The region of 'bring your own storage' account
    SyncCertRecordRequest:
      type: object
      description: Synchronize certification record request.
      properties:
        certRecord:
          $ref: '#/components/schemas/CertSyncRecord'
          description: certification record to be synchronized.
      required:
        - certRecord
    SyncCertRecordResponse:
      type: object
      description: Synchronize certification record response.
      properties:
        certRecord:
          $ref: '#/components/schemas/CertSyncRecord'
          description: certification record synchronized.
    TriggerEvaluationProperty:
      type: object
      description: Trigger evaluation response.
      properties:
        triggerTime:
          type: string
          format: date-time
          description: The time when the evaluation is triggered.
          readOnly: true
        evaluationEndTime:
          type: string
          format: date-time
          description: The time when the evaluation is end.
          readOnly: true
        resourceIds:
          type: array
          description: List of resource ids to be evaluated
          items:
            type: string
          x-ms-identifiers:
            - resourceId
        quickAssessments:
          type: array
          description: List of quick assessments
          items:
            $ref: '#/components/schemas/QuickAssessment'
          x-ms-identifiers:
            - resourceId
    TriggerEvaluationRequest:
      type: object
      description: Trigger evaluation request.
      properties:
        resourceIds:
          type: array
          description: List of resource ids to be evaluated
          items:
            type: string
      required:
        - resourceIds
    TriggerEvaluationResponse:
      description: Trigger evaluation response.
      properties:
        properties:
          $ref: '#/components/schemas/TriggerEvaluationProperty'
          description: trigger evaluation property.
      type: object
    UpdateWebhookKey:
      type: string
      description: whether to update webhookKey.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: UpdateWebhookKey
        modelAsString: true
        values:
          - name: 'True'
            value: 'true'
            description: Need update the webhook key.
          - name: 'False'
            value: 'false'
            description: No need to update the webhook key.
    WebhookKeyEnabled:
      type: string
      description: whether webhookKey is enabled.
      enum:
        - 'true'
        - 'false'
      x-ms-enum:
        name: WebhookKeyEnabled
        modelAsString: true
        values:
          - name: 'True'
            value: 'true'
            description: The webhookKey is enabled.
          - name: 'False'
            value: 'false'
            description: The webhookKey is not enabled.
    WebhookProperties:
      type: object
      description: Webhook properties.
      properties:
        webhookId:
          type: string
          description: Webhook id in database.
          readOnly: true
        status:
          $ref: '#/components/schemas/WebhookStatus'
          description: Webhook status.
        tenantId:
          type: string
          description: Tenant id.
          readOnly: true
        sendAllEvents:
          $ref: '#/components/schemas/SendAllEvents'
          description: whether to send notification under any event.
        events:
          type: array
          description: under which event notification should be sent.
          items:
            $ref: '#/components/schemas/NotificationEvent'
        payloadUrl:
          type: string
          description: webhook payload url
          pattern: ^(http(s)?://)[\S]{0,64994}$
        contentType:
          $ref: '#/components/schemas/ContentType'
          description: content type
        webhookKey:
          type: string
          description: webhook secret token. If not set, this field value is null; otherwise, please set a string value.
          pattern: ^.{0,2048}$
        updateWebhookKey:
          $ref: '#/components/schemas/UpdateWebhookKey'
          description: whether to update webhookKey.
        webhookKeyEnabled:
          $ref: '#/components/schemas/WebhookKeyEnabled'
          description: whether webhookKey is enabled.
          readOnly: true
        enableSslVerification:
          $ref: '#/components/schemas/EnableSslVerification'
          description: whether to enable ssl verification
        deliveryStatus:
          $ref: '#/components/schemas/DeliveryStatus'
          description: webhook deliveryStatus
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Azure Resource Provisioning State
          readOnly: true
    WebhookResource:
      description: A class represent an AppComplianceAutomation webhook resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/WebhookProperties'
          description: Webhook property.
          x-ms-client-flatten: true
      type: object
    WebhookResourceListResult:
      type: object
      description: The response of a WebhookResource list operation.
      properties:
        value:
          type: array
          description: The WebhookResource items on this page
          items:
            $ref: '#/components/schemas/WebhookResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebhookResourcePatch:
      description: A class represent a AppComplianceAutomation webhook resource update properties.
      properties:
        properties:
          $ref: '#/components/schemas/WebhookProperties'
          description: Webhook property.
      type: object
    WebhookStatus:
      type: string
      description: Webhook status.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: WebhookStatus
        modelAsString: true
        values:
          - name: Enabled
            value: Enabled
            description: The webhook is enabled.
          - name: Disabled
            value: Disabled
            description: The webhook is disabled.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    provider_actions:
      id: azure_extras.app_compliance_automation.provider_actions
      name: provider_actions
      title: provider_actions
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1checkNameAvailability?api-version=2024-06-27/post'
            operationId: ProviderActions_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
        list_in_use_storage_accounts:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1listInUseStorageAccounts?api-version=2024-06-27/post'
            operationId: ProviderActions_ListInUseStorageAccounts
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListInUseStorageAccountsResponse
        onboard:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1onboard?api-version=2024-06-27/post'
            operationId: ProviderActions_Onboard
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OnboardResponse
        trigger_evaluation:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1triggerEvaluation?api-version=2024-06-27/post'
            operationId: ProviderActions_TriggerEvaluation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TriggerEvaluationResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_actions/methods/list_in_use_storage_accounts'
        insert: []
        update: []
        replace: []
        delete: []
    provider_actions_collection_counts:
      id: azure_extras.app_compliance_automation.provider_actions_collection_counts
      name: provider_actions_collection_counts
      title: provider_actions_collection_counts
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1getCollectionCount?api-version=2024-06-27/post'
            operationId: ProviderActionsCollectionCount_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GetCollectionCountResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_actions_collection_counts/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    provider_actions_overview_status:
      id: azure_extras.app_compliance_automation.provider_actions_overview_status
      name: provider_actions_overview_status
      title: provider_actions_overview_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1getOverviewStatus?api-version=2024-06-27/post'
            operationId: ProviderActionsOverviewStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GetOverviewStatusResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_actions_overview_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_extras.app_compliance_automation.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1operations?api-version=2024-06-27/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    reports:
      id: azure_extras.app_compliance_automation.reports
      name: reports
      title: reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports?api-version=2024-06-27/get'
            operationId: Report_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}?api-version=2024-06-27/get'
            operationId: Report_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportResource
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}?api-version=2024-06-27/put'
            operationId: Report_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportResource
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}?api-version=2024-06-27/patch'
            operationId: Report_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportResource
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}?api-version=2024-06-27/delete'
            operationId: Report_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        nested_resource_check_name_availability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1checkNameAvailability?api-version=2024-06-27/post'
            operationId: Report_NestedResourceCheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
        fix:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1fix?api-version=2024-06-27/post'
            operationId: Report_Fix
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportFixResult
        sync_cert_record:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1syncCertRecord?api-version=2024-06-27/post'
            operationId: Report_SyncCertRecord
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SyncCertRecordResponse
        verify:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1verify?api-version=2024-06-27/post'
            operationId: Report_Verify
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReportVerificationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/reports/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    evidences:
      id: azure_extras.app_compliance_automation.evidences
      name: evidences
      title: evidences
      methods:
        list_by_report:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1evidences?api-version=2024-06-27/get'
            operationId: Evidence_ListByReport
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EvidenceResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1evidences~1{evidenceName}?api-version=2024-06-27/get'
            operationId: Evidence_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EvidenceResource
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1evidences~1{evidenceName}?api-version=2024-06-27/put'
            operationId: Evidence_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EvidenceResource
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1evidences~1{evidenceName}?api-version=2024-06-27/delete'
            operationId: Evidence_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1evidences~1{evidenceName}~1download?api-version=2024-06-27/post'
            operationId: Evidence_Download
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EvidenceFileDownloadResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evidences/methods/get'
          - $ref: '#/components/x-stackQL-resources/evidences/methods/list_by_report'
        insert:
          - $ref: '#/components/x-stackQL-resources/evidences/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/evidences/methods/delete'
    report_scoping_questions:
      id: azure_extras.app_compliance_automation.report_scoping_questions
      name: report_scoping_questions
      title: report_scoping_questions
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1getScopingQuestions?api-version=2024-06-27/post'
            operationId: ReportScopingQuestions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopingQuestions
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_scoping_questions/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    scoping_configurations:
      id: azure_extras.app_compliance_automation.scoping_configurations
      name: scoping_configurations
      title: scoping_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1scopingConfigurations?api-version=2024-06-27/get'
            operationId: ScopingConfiguration_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopingConfigurationResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1scopingConfigurations~1{scopingConfigurationName}?api-version=2024-06-27/get'
            operationId: ScopingConfiguration_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopingConfigurationResource
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1scopingConfigurations~1{scopingConfigurationName}?api-version=2024-06-27/put'
            operationId: ScopingConfiguration_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ScopingConfigurationResource
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1scopingConfigurations~1{scopingConfigurationName}?api-version=2024-06-27/delete'
            operationId: ScopingConfiguration_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scoping_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/scoping_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scoping_configurations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scoping_configurations/methods/delete'
    snapshots:
      id: azure_extras.app_compliance_automation.snapshots
      name: snapshots
      title: snapshots
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1snapshots?api-version=2024-06-27/get'
            operationId: Snapshot_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SnapshotResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1snapshots~1{snapshotName}?api-version=2024-06-27/get'
            operationId: Snapshot_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SnapshotResource
        download:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1snapshots~1{snapshotName}~1download?api-version=2024-06-27/post'
            operationId: Snapshot_Download
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DownloadResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    webhooks:
      id: azure_extras.app_compliance_automation.webhooks
      name: webhooks
      title: webhooks
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1webhooks?api-version=2024-06-27/get'
            operationId: Webhook_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebhookResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1webhooks~1{webhookName}?api-version=2024-06-27/get'
            operationId: Webhook_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebhookResource
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1webhooks~1{webhookName}?api-version=2024-06-27/put'
            operationId: Webhook_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebhookResource
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1webhooks~1{webhookName}?api-version=2024-06-27/patch'
            operationId: Webhook_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebhookResource
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppComplianceAutomation~1reports~1{reportName}~1webhooks~1{webhookName}?api-version=2024-06-27/delete'
            operationId: Webhook_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get'
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/delete'
    vw_reports:
      id: azure_extras.app_compliance_automation.vw_reports
      name: vw_reports
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.triggerTime') as "trigger_time",
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.resources') as "resources",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              JSON_EXTRACT(properties, '$.offerGuid') as "offer_guid",
              JSON_EXTRACT(properties, '$.nextTriggerTime') as "next_trigger_time",
              JSON_EXTRACT(properties, '$.lastTriggerTime') as "last_trigger_time",
              JSON_EXTRACT(properties, '$.subscriptions') as "subscriptions",
              JSON_EXTRACT(properties, '$.complianceStatus') as "compliance_status",
              JSON_EXTRACT(properties, '$.storageInfo') as "storage_info",
              JSON_EXTRACT(properties, '$.certRecords') as "cert_records",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              reportName
              FROM azure_extras.app_compliance_automation.reports
              WHERE reportName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.triggerTime') as "trigger_time",
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.resources') as "resources",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                json_extract_path_text(properties, '$.offerGuid') as "offer_guid",
                json_extract_path_text(properties, '$.nextTriggerTime') as "next_trigger_time",
                json_extract_path_text(properties, '$.lastTriggerTime') as "last_trigger_time",
                json_extract_path_text(properties, '$.subscriptions') as "subscriptions",
                json_extract_path_text(properties, '$.complianceStatus') as "compliance_status",
                json_extract_path_text(properties, '$.storageInfo') as "storage_info",
                json_extract_path_text(properties, '$.certRecords') as "cert_records",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                reportName
                FROM azure_extras.app_compliance_automation.reports
                WHERE reportName = 'replace-me';
    vw_evidences:
      id: azure_extras.app_compliance_automation.vw_evidences
      name: vw_evidences
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.evidenceType') as "evidence_type",
              JSON_EXTRACT(properties, '$.filePath') as "file_path",
              JSON_EXTRACT(properties, '$.extraData') as "extra_data",
              JSON_EXTRACT(properties, '$.controlId') as "control_id",
              JSON_EXTRACT(properties, '$.responsibilityId') as "responsibility_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              reportName,
              evidenceName
              FROM azure_extras.app_compliance_automation.evidences
              WHERE reportName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.evidenceType') as "evidence_type",
                json_extract_path_text(properties, '$.filePath') as "file_path",
                json_extract_path_text(properties, '$.extraData') as "extra_data",
                json_extract_path_text(properties, '$.controlId') as "control_id",
                json_extract_path_text(properties, '$.responsibilityId') as "responsibility_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                reportName,
                evidenceName
                FROM azure_extras.app_compliance_automation.evidences
                WHERE reportName = 'replace-me';
    vw_scoping_configurations:
      id: azure_extras.app_compliance_automation.vw_scoping_configurations
      name: vw_scoping_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.answers') as "answers",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              reportName,
              scopingConfigurationName
              FROM azure_extras.app_compliance_automation.scoping_configurations
              WHERE reportName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.answers') as "answers",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                reportName,
                scopingConfigurationName
                FROM azure_extras.app_compliance_automation.scoping_configurations
                WHERE reportName = 'replace-me';
    vw_snapshots:
      id: azure_extras.app_compliance_automation.vw_snapshots
      name: vw_snapshots
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.snapshotName') as "snapshot_name",
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.reportProperties') as "report_properties",
              JSON_EXTRACT(properties, '$.reportSystemData') as "report_system_data",
              JSON_EXTRACT(properties, '$.complianceResults') as "compliance_results",
              reportName,
              snapshotName
              FROM azure_extras.app_compliance_automation.snapshots
              WHERE reportName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.snapshotName') as "snapshot_name",
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.reportProperties') as "report_properties",
                json_extract_path_text(properties, '$.reportSystemData') as "report_system_data",
                json_extract_path_text(properties, '$.complianceResults') as "compliance_results",
                reportName,
                snapshotName
                FROM azure_extras.app_compliance_automation.snapshots
                WHERE reportName = 'replace-me';
    vw_webhooks:
      id: azure_extras.app_compliance_automation.vw_webhooks
      name: vw_webhooks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.webhookId') as "webhook_id",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              JSON_EXTRACT(properties, '$.sendAllEvents') as "send_all_events",
              JSON_EXTRACT(properties, '$.events') as "events",
              JSON_EXTRACT(properties, '$.payloadUrl') as "payload_url",
              JSON_EXTRACT(properties, '$.contentType') as "content_type",
              JSON_EXTRACT(properties, '$.webhookKey') as "webhook_key",
              JSON_EXTRACT(properties, '$.updateWebhookKey') as "update_webhook_key",
              JSON_EXTRACT(properties, '$.webhookKeyEnabled') as "webhook_key_enabled",
              JSON_EXTRACT(properties, '$.enableSslVerification') as "enable_ssl_verification",
              JSON_EXTRACT(properties, '$.deliveryStatus') as "delivery_status",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              reportName,
              webhookName
              FROM azure_extras.app_compliance_automation.webhooks
              WHERE reportName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.webhookId') as "webhook_id",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                json_extract_path_text(properties, '$.sendAllEvents') as "send_all_events",
                json_extract_path_text(properties, '$.events') as "events",
                json_extract_path_text(properties, '$.payloadUrl') as "payload_url",
                json_extract_path_text(properties, '$.contentType') as "content_type",
                json_extract_path_text(properties, '$.webhookKey') as "webhook_key",
                json_extract_path_text(properties, '$.updateWebhookKey') as "update_webhook_key",
                json_extract_path_text(properties, '$.webhookKeyEnabled') as "webhook_key_enabled",
                json_extract_path_text(properties, '$.enableSslVerification') as "enable_ssl_verification",
                json_extract_path_text(properties, '$.deliveryStatus') as "delivery_status",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                reportName,
                webhookName
                FROM azure_extras.app_compliance_automation.webhooks
                WHERE reportName = 'replace-me';
paths:
  /providers/Microsoft.AppComplianceAutomation/checkNameAvailability?api-version=2024-06-27:
    post:
      operationId: ProviderActions_CheckNameAvailability
      tags:
        - AppComplianceAutomation
      description: Check if the given name is available for a report.
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/getCollectionCount?api-version=2024-06-27:
    post:
      operationId: ProviderActionsCollectionCount_Get
      tags:
        - AppComplianceAutomation
      description: Get the count of reports.
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCollectionCountRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollectionCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ProviderActions_GetCollectionCount
  /providers/Microsoft.AppComplianceAutomation/getOverviewStatus?api-version=2024-06-27:
    post:
      operationId: ProviderActionsOverviewStatus_Get
      tags:
        - AppComplianceAutomation
      description: Get the resource overview status.
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOverviewStatusRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOverviewStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ProviderActions_GetOverviewStatus
  /providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts?api-version=2024-06-27:
    post:
      operationId: ProviderActions_ListInUseStorageAccounts
      tags:
        - AppComplianceAutomation
      description: List the storage accounts which are in use by related reports
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInUseStorageAccountsRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInUseStorageAccountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/onboard?api-version=2024-06-27:
    post:
      operationId: ProviderActions_Onboard
      tags:
        - AppComplianceAutomation
      description: Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/operations?api-version=2024-06-27:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports?api-version=2024-06-27:
    get:
      operationId: Report_List
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation report list for the tenant.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.skipToken'
        - $ref: '#/components/parameters/QueryParameters.top'
        - $ref: '#/components/parameters/QueryParameters.select'
        - $ref: '#/components/parameters/QueryParameters.filter'
        - $ref: '#/components/parameters/QueryParameters.orderby'
        - $ref: '#/components/parameters/QueryParameters.offerGuid'
        - $ref: '#/components/parameters/QueryParameters.reportCreatorTenantId'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}?api-version=2024-06-27:
    get:
      operationId: Report_Get
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation report and its properties.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Report_CreateOrUpdate
      tags:
        - AppComplianceAutomation
      description: Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportResource'
      responses:
        '200':
          description: Resource 'ReportResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResource'
        '201':
          description: Resource 'ReportResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Report_Update
      tags:
        - AppComplianceAutomation
      description: Update an exiting AppComplianceAutomation report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportResourcePatch'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResource'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Report_Delete
      tags:
        - AppComplianceAutomation
      description: Delete an AppComplianceAutomation report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/checkNameAvailability?api-version=2024-06-27:
    post:
      operationId: Report_NestedResourceCheckNameAvailability
      tags:
        - AppComplianceAutomation
      description: 'Checks the report''s nested resource name availability, e.g: Webhooks, Evidences, Snapshots.'
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: NameAvailabilityRequest object.
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences?api-version=2024-06-27:
    get:
      operationId: Evidence_ListByReport
      tags:
        - AppComplianceAutomation
      description: Returns a paginated list of evidences for a specified report.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.skipToken'
        - $ref: '#/components/parameters/QueryParameters.top'
        - $ref: '#/components/parameters/QueryParameters.select'
        - $ref: '#/components/parameters/QueryParameters.filter'
        - $ref: '#/components/parameters/QueryParameters.orderby'
        - $ref: '#/components/parameters/QueryParameters.offerGuid'
        - $ref: '#/components/parameters/QueryParameters.reportCreatorTenantId'
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}?api-version=2024-06-27:
    get:
      operationId: Evidence_Get
      tags:
        - AppComplianceAutomation
      description: Get the evidence metadata
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: evidenceName
          in: path
          description: The evidence name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_.]+$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Evidence_CreateOrUpdate
      tags:
        - AppComplianceAutomation
      description: Create or Update an evidence a specified report
      parameters:
        - $ref: '#/components/parameters/ExtraParameter.offerGuid'
        - $ref: '#/components/parameters/ExtraParameter.reportCreatorTenantId'
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: evidenceName
          in: path
          description: The evidence name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_.]+$
            type: string
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceResource'
      responses:
        '200':
          description: Resource 'EvidenceResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceResource'
        '201':
          description: Resource 'EvidenceResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Evidence_Delete
      tags:
        - AppComplianceAutomation
      description: Delete an existent evidence from a specified report
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: evidenceName
          in: path
          description: The evidence name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_.]+$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}/download?api-version=2024-06-27:
    post:
      operationId: Evidence_Download
      tags:
        - AppComplianceAutomation
      description: Download evidence file.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: evidenceName
          in: path
          description: The evidence name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_.]+$
            type: string
      requestBody:
        description: Parameters for the query operation
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceFileDownloadRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceFileDownloadResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/fix?api-version=2024-06-27:
    post:
      operationId: Report_Fix
      tags:
        - AppComplianceAutomation
      description: 'Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.'
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFixResult'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/getScopingQuestions?api-version=2024-06-27:
    post:
      operationId: ReportScopingQuestions_Get
      tags:
        - AppComplianceAutomation
      description: 'Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.'
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopingQuestions'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Report_GetScopingQuestions
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations?api-version=2024-06-27:
    get:
      operationId: ScopingConfiguration_List
      tags:
        - AppComplianceAutomation
      description: Returns a list format of the singleton scopingConfiguration for a specified report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopingConfigurationResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations/{scopingConfigurationName}?api-version=2024-06-27:
    get:
      operationId: ScopingConfiguration_Get
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation scoping configuration of the specific report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: scopingConfigurationName
          in: path
          description: The scoping configuration of the specific report.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopingConfigurationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ScopingConfiguration_CreateOrUpdate
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation scoping configuration of the specific report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: scopingConfigurationName
          in: path
          description: The scoping configuration of the specific report.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_]*$
            type: string
      requestBody:
        description: Parameters for the create or update operation, this is a singleton resource, so please make sure you're using 'default' as the name.
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopingConfigurationResource'
      responses:
        '200':
          description: Resource 'ScopingConfigurationResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopingConfigurationResource'
        '201':
          description: Resource 'ScopingConfigurationResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopingConfigurationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ScopingConfiguration_Delete
      tags:
        - AppComplianceAutomation
      description: Clean the AppComplianceAutomation scoping configuration of the specific report.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: scopingConfigurationName
          in: path
          description: The scoping configuration of the specific report.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_]*$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots?api-version=2024-06-27:
    get:
      operationId: Snapshot_List
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation snapshot list.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.skipToken'
        - $ref: '#/components/parameters/QueryParameters.top'
        - $ref: '#/components/parameters/QueryParameters.select'
        - $ref: '#/components/parameters/QueryParameters.filter'
        - $ref: '#/components/parameters/QueryParameters.orderby'
        - $ref: '#/components/parameters/QueryParameters.offerGuid'
        - $ref: '#/components/parameters/QueryParameters.reportCreatorTenantId'
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}?api-version=2024-06-27:
    get:
      operationId: Snapshot_Get
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation snapshot and its properties.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: snapshotName
          in: path
          description: Snapshot Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_]{1,64}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}/download?api-version=2024-06-27:
    post:
      operationId: Snapshot_Download
      tags:
        - AppComplianceAutomation
      description: 'Download compliance needs from snapshot, like: Compliance Report, Resource List.'
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: snapshotName
          in: path
          description: Snapshot Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-_]{1,64}$
            type: string
      requestBody:
        description: Parameters for the query operation
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotDownloadRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/syncCertRecord?api-version=2024-06-27:
    post:
      operationId: Report_SyncCertRecord
      tags:
        - AppComplianceAutomation
      description: Synchronize attestation record from app compliance.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: Parameters for synchronize certification record operation
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncCertRecordRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncCertRecordResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/verify?api-version=2024-06-27:
    post:
      operationId: Report_Verify
      tags:
        - AppComplianceAutomation
      description: Verify the AppComplianceAutomation report health status.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVerificationResult'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks?api-version=2024-06-27:
    get:
      operationId: Webhook_List
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation webhook list.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.skipToken'
        - $ref: '#/components/parameters/QueryParameters.top'
        - $ref: '#/components/parameters/QueryParameters.select'
        - $ref: '#/components/parameters/QueryParameters.filter'
        - $ref: '#/components/parameters/QueryParameters.orderby'
        - $ref: '#/components/parameters/QueryParameters.offerGuid'
        - $ref: '#/components/parameters/QueryParameters.reportCreatorTenantId'
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}?api-version=2024-06-27:
    get:
      operationId: Webhook_Get
      tags:
        - AppComplianceAutomation
      description: Get the AppComplianceAutomation webhook and its properties.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: webhookName
          in: path
          description: Webhook Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Webhook_CreateOrUpdate
      tags:
        - AppComplianceAutomation
      description: Create a new AppComplianceAutomation webhook or update an exiting AppComplianceAutomation webhook.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: webhookName
          in: path
          description: Webhook Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookResource'
      responses:
        '200':
          description: Resource 'WebhookResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResource'
        '201':
          description: Resource 'WebhookResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: Webhook_Update
      tags:
        - AppComplianceAutomation
      description: Update an exiting AppComplianceAutomation webhook.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: webhookName
          in: path
          description: Webhook Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookResourcePatch'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Webhook_Delete
      tags:
        - AppComplianceAutomation
      description: Delete an AppComplianceAutomation webhook.
      parameters:
        - name: reportName
          in: path
          description: Report Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
        - name: webhookName
          in: path
          description: Webhook Name.
          required: true
          schema:
            pattern: ^[-a-zA-Z0-9_]{1,50}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.AppComplianceAutomation/triggerEvaluation?api-version=2024-06-27:
    post:
      operationId: ProviderActions_TriggerEvaluation
      tags:
        - AppComplianceAutomation
      description: Trigger quick evaluation for the given subscriptions.
      parameters: []
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerEvaluationRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerEvaluationResponse'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
